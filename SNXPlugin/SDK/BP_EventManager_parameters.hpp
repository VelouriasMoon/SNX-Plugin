#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FEventPresetData_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "FEventTriggerCommandData_structs.hpp"
#include "UMG_structs.hpp"
#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"
#include "FEventHiddenActorForTagNameData_structs.hpp"
#include "ECharaCapChangeSpeedType_structs.hpp"
#include "ST_ShowDestinationActor_structs.hpp"
#include "ERenderTargetType_structs.hpp"
#include "FMessageIDFacialData_structs.hpp"
#include "S_LoadedLevelInfo_structs.hpp"
#include "FEventCaptureFuncData_structs.hpp"
#include "SEventBindingParameter_structs.hpp"
#include "FEventPlAttachAssetData_structs.hpp"
#include "FEventTriggerCommand_structs.hpp"
#include "CinematicCamera_structs.hpp"
#include "FRenderTargetData_structs.hpp"
#include "FRipSyncData_structs.hpp"
#include "FCapCharaBGData_structs.hpp"
#include "EShadaAnimeType_structs.hpp"
#include "FAnimMontageData_structs.hpp"
#include "FEventMovieTextureData_structs.hpp"
#include "FEventTextureData_structs.hpp"
#include "FEventLightPresetData_structs.hpp"
#include "SEventSpawnParameter_structs.hpp"


namespace SDK::Params
{

// Function BP_EventManager.BP_EventManager_C.OnChangeDestinationActor__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_OnChangeDestinationActor__DelegateSignature final
{
public:
	bool                                          DestinationDispFlag;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnChangeDestinationActor__DelegateSignature) == 0x000001, "Wrong alignment on BP_EventManager_C_OnChangeDestinationActor__DelegateSignature");
static_assert(sizeof(BP_EventManager_C_OnChangeDestinationActor__DelegateSignature) == 0x000001, "Wrong size on BP_EventManager_C_OnChangeDestinationActor__DelegateSignature");
static_assert(offsetof(BP_EventManager_C_OnChangeDestinationActor__DelegateSignature, DestinationDispFlag) == 0x000000, "Member 'BP_EventManager_C_OnChangeDestinationActor__DelegateSignature::DestinationDispFlag' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EventBoardParamCurveTimeline__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   XParamName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   YParamName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            XCurve;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            YCurve;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XParamRate;                                        // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YParamRate;                                        // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature");
static_assert(sizeof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature) == 0x000038, "Wrong size on BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature");
static_assert(offsetof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature, XParamName) == 0x000008, "Member 'BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature::XParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature, YParamName) == 0x000010, "Member 'BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature::YParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature, XCurve) == 0x000018, "Member 'BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature::XCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature, YCurve) == 0x000020, "Member 'BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature::YCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature, Speed) == 0x000028, "Member 'BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature::Speed' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature, XParamRate) == 0x00002C, "Member 'BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature::XParamRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature, YParamRate) == 0x000030, "Member 'BP_EventManager_C_EventBoardParamCurveTimeline__DelegateSignature::YParamRate' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.DispatchHiddenSetoMask__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_DispatchHiddenSetoMask__DelegateSignature final
{
public:
	bool                                          Param_bHidden;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_DispatchHiddenSetoMask__DelegateSignature) == 0x000001, "Wrong alignment on BP_EventManager_C_DispatchHiddenSetoMask__DelegateSignature");
static_assert(sizeof(BP_EventManager_C_DispatchHiddenSetoMask__DelegateSignature) == 0x000001, "Wrong size on BP_EventManager_C_DispatchHiddenSetoMask__DelegateSignature");
static_assert(offsetof(BP_EventManager_C_DispatchHiddenSetoMask__DelegateSignature, Param_bHidden) == 0x000000, "Member 'BP_EventManager_C_DispatchHiddenSetoMask__DelegateSignature::Param_bHidden' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ExecuteUbergraph_BP_EventManager
// 0x1B30 (0x1B30 - 0x0000)
struct BP_EventManager_C_ExecuteUbergraph_BP_EventManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D8[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaySimulate_ReturnValue;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D9[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_BlendTime;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DA[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DB[0xB];                                     // 0x0085(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_RedStringMeshSpawner_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DC[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEventSpawnParameter                  K2Node_CustomEvent_Parameter_1;                    // 0x00E8(0x0020)(HasGetValueTypeHash)
	struct FSEventBindingParameter                K2Node_CustomEvent_Parameter;                      // 0x0108(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DD[0x2];                                     // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_WindowType;                     // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_messageLabel;                   // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Skipable;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DE[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DrawSecond;                     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsVoiceOnlyMessage;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsSkipVoiceEnd;                 // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32DF[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSGameInstanceBP_C*                    K2Node_DynamicCast_AsRSGame_Instance_BP;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E0[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMessageHudManager*                     CallFunc_GetMessageHudManager_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DrawMessage_ReturnValue;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E1[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDataTable>              K2Node_CustomEvent_DataTable;                      // 0x0178(0x0028)(ConstParm, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MessageTableName;               // 0x01A8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E2[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_CutsceneName;                         // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USpringArmComponent*                    K2Node_CustomEvent_SpringArm;                      // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E3[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpringArmComponent*                    K2Node_CustomEvent_SpringArm_1;                    // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E4[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Mesh_C>           K2Node_DynamicCast_AsBPI_Mesh;                     // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E5[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetStaticMesh_StaticMesh;                 // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Mesh_C>           K2Node_DynamicCast_AsBPI_Mesh_1;                   // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E6[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E7[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E8[0x6];                                     // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_AssetPath;                      // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x02A0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isPause;                              // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E9[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventSettings_C*                    CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind;        // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EA[0x3];                                     // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue;   // 0x0304(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EB[0x3];                                     // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EC[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Length;                         // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32ED[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_Event_Sequence;                             // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsSeamlessInGame;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventTriggerCheckType                        K2Node_Event_TriggerType;                          // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32EE[0x6];                                     // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_TriggerCommandPath;                   // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_TriggerWaitTime;                      // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_EventPriority;                        // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_MakeEventPathString;                  // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftClassPath                         CallFunc_MakeSoftClassPath_ReturnValue;            // 0x0370(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue; // 0x0388(0x0028)(HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32EF[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue;                // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsMake_Event_Actor;        // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F0[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommand                  K2Node_MakeStruct_FEventTriggerCommand;            // 0x03D0(0x0068)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F1[0x8];                                     // 0x0438(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0440(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F2[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0488(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F3[0xE];                                     // 0x0492(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x04A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureBG_C*                        CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F4[0x6];                                     // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommand                  K2Node_Event_TriggerCommand;                       // 0x04F8(0x0068)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_progressID_1;                         // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F5[0x8];                                     // 0x0568(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0570(0x0030)(IsPlainOldData, NoDestructor)
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnloadMessage_ReturnValue;                // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F6[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadMessage_ReturnValue;                  // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x05C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F7[0xC];                                     // 0x05C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x05D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPSpecialCaptureActor_C*               CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F8[0x3];                                     // 0x0615(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue_1;                     // 0x0618(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue_2;                     // 0x0620(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F9[0x6];                                     // 0x062A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0630(0x0030)(IsPlainOldData, NoDestructor)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FA[0x7];                                     // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CaptureCineCameraActor_C*           CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FB[0x7];                                     // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_2;             // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FC[0x6];                                     // 0x069A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_bossId;                         // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_locationID;                     // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartTownName_ReturnValue;                // 0x06B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FD[0x3];                                     // 0x06B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_CharaID;                        // 0x06B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_32FE[0x8];                                     // 0x06C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x06D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartCharaName_ReturnValue;               // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FF[0x7];                                     // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8; // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StaticCutSceneMainCamera_C*         CallFunc_FinishSpawningActor_ReturnValue_8;        // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0718(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3300[0x7];                                     // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      K2Node_CustomEvent_CaptureActor;                   // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_XParamName;                     // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_YParamName;                     // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_XCurve;                         // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_YCurve;                         // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Speed;                          // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_XParamRate;                     // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_YParamRate;                     // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3301[0x4];                                     // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x0760(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9; // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_FinishSpawningActor_ReturnValue_9;        // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3302[0x3];                                     // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x07AC(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x07BC(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x07CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3303[0x3];                                     // 0x07CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameTime                             K2Node_MakeStruct_FrameTime;                       // 0x07D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x07DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x07DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3304[0x2];                                     // 0x07DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3305[0x4];                                     // 0x07E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x07E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x07F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3306[0x2];                                     // 0x07F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x07FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3307[0x2];                                     // 0x07FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager;           // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3308[0x3];                                     // 0x0811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue_1;                 // 0x0814(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame_1;          // 0x0824(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate_1;      // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame_1;       // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0834(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3309[0x3];                                     // 0x0835(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameTime                             K2Node_MakeStruct_FrameTime_1;                     // 0x0838(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330A[0x3];                                     // 0x0841(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330B[0x3];                                     // 0x0849(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330C[0xC];                                     // 0x0854(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x0860(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10; // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330D[0x4];                                     // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_10;       // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x08A8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330E[0x3];                                     // 0x08B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_BrainTalkID;                    // 0x08BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrainTalkCategory                            K2Node_CustomEvent_Category;                       // 0x08C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEventCallEnable;              // 0x08C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_SkipVisionSimulator;            // 0x08C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330F[0x1];                                     // 0x08C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x08C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3310[0x4];                                     // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x08E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x08F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0918(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_3;             // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   K2Node_Event_Voice;                                // 0x0930(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3311[0x7];                                     // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCueName_ReturnValue;                   // 0x0940(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3312[0x7];                                     // 0x0951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetMessageVoice_ReturnValue;              // 0x0958(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3313[0x7];                                     // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCueName_ReturnValue_1;                 // 0x0968(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_3314[0x8];                                     // 0x0978(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x0980(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11; // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3315[0x7];                                     // 0x09B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_11;       // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3316[0x7];                                     // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x09D0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x09E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x09E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3317[0x2];                                     // 0x09EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x09EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_1;         // 0x09F0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3318[0xC];                                     // 0x0A04(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_12;             // 0x0A10(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12; // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SC_BG_C*                            CallFunc_FinishSpawningActor_ReturnValue_12;       // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3319[0x3];                                     // 0x0A59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0A60(0x0010)(ZeroConstructor, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0A70(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0AA0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331A[0x7];                                     // 0x0B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue_3;                     // 0x0B30(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Blend_Time;                     // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      K2Node_CustomEvent_Blend_Function;                 // 0x0B3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331B[0x3];                                     // 0x0B3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Blend_Exp;                      // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331C[0x4];                                     // 0x0B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_BrainMes_C*                      K2Node_DynamicCast_AsWB_Ui_Brain_Mes;              // 0x0B48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331D[0x7];                                     // 0x0B51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_2;         // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x0B64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331E[0x3];                                     // 0x0B65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331F[0x4];                                     // 0x0B6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3320[0x7];                                     // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0B88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3321[0x7];                                     // 0x0B89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0B90(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0BC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0BCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0BD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0BE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0C08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0C14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcDefaultCameraLocationRotation_camPos; // 0x0C20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcDefaultCameraLocationRotation_camRot; // 0x0C2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3322[0x3];                                     // 0x0C41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0C44(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReadyStartEvents_IsCanStartEvents;      // 0x0CCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x0CCE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3323[0x1];                                     // 0x0CCF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         K2Node_CustomEvent_LevelList;                      // 0x0CD0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0CE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3324[0x2];                                     // 0x0CEA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0CF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0CF5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3325[0x2];                                     // 0x0CF6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABPCaptureActor_C* CaptureActor, class FName XParamName, class FName YParamName, class UCurveFloat* XCurve, class UCurveFloat* YCurve, float Speed, float XParamRate, float YParamRate)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0CFC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0D0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3326[0x3];                                     // 0x0D0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0D1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3327[0x3];                                     // 0x0D1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0D20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRipSyncJointID_IsRipSync;               // 0x0D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3328[0x7];                                     // 0x0D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      K2Node_DynamicCast_AsBPCapture_Actor;              // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0D49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStartRipSyncCrossFadeChara_Return;      // 0x0D4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x0D4B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3329[0x4];                                     // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0D58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332A[0x4];                                     // 0x0D64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCaptureActorVoiceCharaName_VoiceCharaName; // 0x0D68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332B[0x7];                                     // 0x0D79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0D80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0D92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332C[0x1];                                     // 0x0D93(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_TagName;                        // 0x0D94(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsHiddenInGame;                 // 0x0D9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332D[0x3];                                     // 0x0D9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332E[0x4];                                     // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFRenderTargetData                     CallFunc_GetSequencerRenderTarget_RenderTargetData; // 0x0DA8(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_2;                         // 0x0DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFRenderTargetData                     K2Node_MakeStruct_FRenderTargetData;               // 0x0DC8(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0DE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0DE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332F[0x5];                                     // 0x0DE3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen;           // 0x0DE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3330[0x7];                                     // 0x0DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager_1;            // 0x0E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x0E09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3331[0x2];                                     // 0x0E0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_color;                          // 0x0E0C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isUnderCaption;                 // 0x0E1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3332[0x3];                                     // 0x0E1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_second;                         // 0x0E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3333[0x4];                                     // 0x0E24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_4;             // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x0E31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3334[0x2];                                     // 0x0E32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPhaseActiveMontagePlayLength_ReturnValue; // 0x0E34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SpecialStaticNodeActor_C*           K2Node_DynamicCast_AsBP_Special_Static_Node_Actor; // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3335[0x7];                                     // 0x0E41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_CustomEvent_NewFloatCurve;                  // 0x0E48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x0E59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3336[0x6];                                     // 0x0E5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3337[0x3];                                     // 0x0E69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0E6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x0E71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x0E72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3338[0x1];                                     // 0x0E73(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0E74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3339[0x3];                                     // 0x0E79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0E7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue_1;          // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333A[0x7];                                     // 0x0E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen_1;         // 0x0E88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333B[0x7];                                     // 0x0E99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager_1;         // 0x0EA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_RenderTarget;             // 0x0EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetTextureTarget_ReturnValue;             // 0x0EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen_2;         // 0x0EB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0EC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333C[0x6];                                     // 0x0ECA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen_3;         // 0x0ED0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333D[0x7];                                     // 0x0EE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen_4;         // 0x0EE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0EFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_UseFade;                        // 0x0EFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333E[0x4];                                     // 0x0EFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_VoiceFileName;                  // 0x0F00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x0F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x0F19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x0F1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x0F1B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333F[0x4];                                     // 0x0F1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_5;             // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0F29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3340[0x6];                                     // 0x0F2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_6;             // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x0F38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0F39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3341[0x2];                                     // 0x0F3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0F3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MovieManager_C*                     CallFunc_GetMovieManager_AsBP_Movie_Manager;       // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x0F48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0F49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3342[0x2];                                     // 0x0F4A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0F4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_13;             // 0x0F50(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13; // 0x0F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraFilmbackSettings                K2Node_MakeStruct_CameraFilmbackSettings;          // 0x0F88(0x000C)(NoDestructor)
	uint8                                         Pad_3343[0x4];                                     // 0x0F94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NameWidgetActor_C*                  CallFunc_FinishSpawningActor_ReturnValue_13;       // 0x0F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_8;            // 0x0FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x0FA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3344[0x2];                                     // 0x0FAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0FAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_3;                         // 0x0FB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue_1;        // 0x0FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRipSyncJointID_IsRipSync_1;             // 0x0FD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3345[0x6];                                     // 0x0FDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x0FE0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0FE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3346[0x7];                                     // 0x0FE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine_________1;               // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x0FF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3347[0x6];                                     // 0x0FFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x1000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      K2Node_DynamicCast_AsBPCapture_Actor_1;            // 0x1038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x1040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3348[0x7];                                     // 0x1041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter_1;            // 0x1048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_3;                  // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3349[0x3];                                     // 0x1051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x1054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCaptureActorVoiceCharaName_VoiceCharaName_1; // 0x1060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334A[0x7];                                     // 0x1071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x1078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x1088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x1089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x108A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334B[0x5];                                     // 0x108B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_14;             // 0x1090(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x10C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334C[0x7];                                     // 0x10C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14; // 0x10C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NewStaticNodeActor_C*               CallFunc_FinishSpawningActor_ReturnValue_14;       // 0x10D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x10D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x10D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334D[0x6];                                     // 0x10DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue;            // 0x10E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  K2Node_DynamicCast_AsPost_Process_Component;       // 0x10E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x10F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334E[0x3];                                     // 0x10F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x10F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x10F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334F[0x4];                                     // 0x10FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   K2Node_Event_AtomComp;                             // 0x1100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_RipSyncBoardJointID;                  // 0x1108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   K2Node_CustomEvent_AtomComp;                       // 0x1110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x1118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3350[0x3];                                     // 0x1119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x111C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x1120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x1128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInDisplayScreen_ReturnValue;            // 0x112C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x112D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x112E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x112F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3351[0x3];                                     // 0x1131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x1134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x1138(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x1148(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_progressID;                           // 0x1158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x115C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x1160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x1161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3352[0x6];                                     // 0x1162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_MakeEventPathString;            // 0x1168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x1178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x1188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x1198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFindLoadMakeEvent_IsFind;               // 0x11A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3353[0x7];                                     // 0x11A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_1;         // 0x11B0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x11C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x11D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x11E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3354[0x4];                                     // 0x11E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x11E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x11F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x1208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3355[0x7];                                     // 0x1209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x1210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFindLoadMakeEvent_IsFind_1;             // 0x1221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Find_Loading_Make_Event_IsFind;        // 0x1222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3356[0x5];                                     // 0x1223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Is_Find_Loading_Make_Event_ReturnObjectName; // 0x1228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x1238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x1248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x124C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x1250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3357[0x7];                                     // 0x1251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen_5;         // 0x1258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x1268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue_2;          // 0x1269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3358[0x6];                                     // 0x126A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen_6;         // 0x1270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x1280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_9;            // 0x1281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3359[0x2];                                     // 0x1282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_TextureRowName;                 // 0x1284(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335A[0x4];                                     // 0x128C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_4;                         // 0x1290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x1298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x1299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335B[0x6];                                     // 0x129A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter_2;            // 0x12A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x12A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_SetTexParameterForTexDatatable_AsTexture; // 0x12B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x12B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335C[0x4];                                     // 0x12BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_3;         // 0x12C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x12C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x12CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335D[0x3];                                     // 0x12CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x12D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x12E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x12F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x12F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335E[0x7];                                     // 0x12F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x1300(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x1310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_10;           // 0x1314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335F[0x3];                                     // 0x1315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x1318(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x1328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x132C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x1330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3360[0x7];                                     // 0x1331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_3;                          // 0x1338(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 K2Node_Event_messageLabel;                         // 0x1348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   K2Node_Event_pAtomComponent;                       // 0x1358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x1360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x1368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3361[0x7];                                     // 0x1369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x1370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x1378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3362[0x7];                                     // 0x1379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x1380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCueName_ReturnValue_2;                 // 0x1390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x13A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x13B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x13C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3363[0x7];                                     // 0x13C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_2;                            // 0x13C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_2;                           // 0x13D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_2;                      // 0x13E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3364[0x7];                                     // 0x13E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetVoiceCharaName_VoiceCharaName;         // 0x13F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFMessageIDFacialData                  CallFunc_Get_Message_Label_Facial_Facial;          // 0x1400(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x1418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3365[0x7];                                     // 0x1419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x1420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x1430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x1438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3366[0x7];                                     // 0x1439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_2;            // 0x1440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x1448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x1449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3367[0x6];                                     // 0x144A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen_7;         // 0x1450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x1460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3368[0x7];                                     // 0x1461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x1468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_3;                            // 0x1478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_3;                           // 0x1488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_3;                      // 0x1498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3369[0x7];                                     // 0x1499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Trim_ReturnValue;                         // 0x14A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager_2;         // 0x14B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x14B8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x14D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336A[0x7];                                     // 0x14D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDPlayer_BindingIDs; // 0x14D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDPlayer_IsFind;  // 0x14E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336B[0x3];                                     // 0x14E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x14EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D* NewTarget)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x14F0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x1500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x1504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x1508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x150C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x1510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x1514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x1518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x1519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336C[0x2];                                     // 0x151A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x151C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpEaseInOut_ReturnValue;             // 0x1520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x1524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x1528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpEaseInOut_ReturnValue_1;           // 0x152C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x1530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x1534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x1538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x153C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x1540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCameraYawNormal_IsNormal;               // 0x1544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336D[0x3];                                     // 0x1545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x1548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCameraPitchNormal_IsNormal;             // 0x154C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCameraYawNormal_IsNormal_1;             // 0x154D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336E[0x2];                                     // 0x154E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x1550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x1554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x1558(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCameraPitchNormal_IsNormal_1;           // 0x1564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336F[0x3];                                     // 0x1565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x1568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x156C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x1578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x1580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x158C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_5;                               // 0x1598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x159C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x1624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x1628(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x1638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3370[0x7];                                     // 0x1639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x1640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x1650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x1658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3371[0x4];                                     // 0x165C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_4;                          // 0x1660(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<EEventPostProcessID>                   K2Node_MakeArray_Array_5;                          // 0x1670(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager_1;        // 0x1680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERSGamepadLayoutType                          CallFunc_GetCurrentLayoutType_ReturnValue;         // 0x1688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x1689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3372[0x2];                                     // 0x168A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x168C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x1690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInDisplayScreen_ReturnValue_1;          // 0x1698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3373[0x3];                                     // 0x1699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DelayTime;                      // 0x169C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CaptureActorIndex;              // 0x16A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CapturePresetName;              // 0x16A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CharaAnimationName;             // 0x16AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CharaFaceAnimationName;         // 0x16B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_LightPresetName;                // 0x16BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NpcMeshTableID;                 // 0x16C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NpcMaterialTableID;             // 0x16C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CharaPartsDTRowName;            // 0x16CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaCapChangeSpeedType                      K2Node_CustomEvent_ChangeSpeedType;                // 0x16D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSimpleCrossFade;              // 0x16D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x16D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3374[0x1];                                     // 0x16D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_GetCaptureActor_CaptureActor;             // 0x16D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCaptureActor_IsSuccess;                // 0x16E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x16E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3375[0x2];                                     // 0x16E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x16E4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class URSAtomComponentBase* AtomComp)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x16F4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3376[0xC];                                     // 0x1704(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_15;             // 0x1710(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_16;             // 0x1740(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15; // 0x1770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16; // 0x1778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventPostUpdateTask_C*              CallFunc_FinishSpawningActor_ReturnValue_15;       // 0x1780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureCineCameraActor_C*           CallFunc_FinishSpawningActor_ReturnValue_16;       // 0x1788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_4;         // 0x1790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x1798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3377[0x7];                                     // 0x1799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x17A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x17A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x17B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResetCollisionOverlap_bDummy;             // 0x17B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x17BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x17BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_11;           // 0x17BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3378[0x3];                                     // 0x17BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x17C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_2;     // 0x17C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x17D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x17D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3379[0xE];                                     // 0x17D2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_17;             // 0x17E0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17; // 0x1810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x1818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x181C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337A[0x3];                                     // 0x181D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x1820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_337B[0x4];                                     // 0x1824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CaptureCineCameraActor_C*           CallFunc_FinishSpawningActor_ReturnValue_17;       // 0x1828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x1830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x1834(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337C[0x3];                                     // 0x1835(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_5;                         // 0x1838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SequencerPartyMemberPosition_C*     K2Node_DynamicCast_AsBP_Sequencer_Party_Member_Position; // 0x1840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x1848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337D[0x7];                                     // 0x1849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x1850(0x0030)(IsPlainOldData, NoDestructor)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_2;                  // 0x1880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_64;                   // 0x1888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337E[0x7];                                     // 0x1889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x1890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x1898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337F[0x7];                                     // 0x1899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x18A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x18B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3380[0x7];                                     // 0x18B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x18B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x18C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEventVisible_ReturnValue;              // 0x18C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x18CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3381[0x5];                                     // 0x18CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_3;            // 0x18D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x18D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3382[0x7];                                     // 0x18D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_SetCharacterVisibility_self_CastInput;    // 0x18E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCharacterVisibility_bDummy;            // 0x18F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeaponAttachMode_bBattle;               // 0x18F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3383[0x2];                                     // 0x18F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x18F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x197C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3384[0x3];                                     // 0x197D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MovieManager_C*                     CallFunc_GetMovieManager_AsBP_Movie_Manager_1;     // 0x1980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_1; // 0x1988(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x1998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLooping_ReturnValue;                    // 0x199C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x199D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3385[0x2];                                     // 0x199E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_2; // 0x19A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x19B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3386[0xC];                                     // 0x19B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_18;             // 0x19C0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x19F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3387[0x4];                                     // 0x19F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18; // 0x19F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x1A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3388[0x7];                                     // 0x1A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_18;       // 0x1A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1; // 0x1A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_65;                   // 0x1A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue_1;            // 0x1A19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_12;           // 0x1A1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3389[0x5];                                     // 0x1A1B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_EventObject;                          // 0x1A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsMake_Event_Actor_1;      // 0x1A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x1A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338A[0x7];                                     // 0x1A31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommand                  K2Node_MakeStruct_FEventTriggerCommand_1;          // 0x1A38(0x0068)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   K2Node_DynamicCast_AsBPI_Event_Manager;            // 0x1AA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x1AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338B[0x3];                                     // 0x1AB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x1AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x1AB8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item_6;                         // 0x1AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCapCharaBGData                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x1AD0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x1ADC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338C[0x3];                                     // 0x1ADD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x1AE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_4;                   // 0x1AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_5;                   // 0x1AF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338D[0x2];                                     // 0x1AF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x1AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x1AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x1AFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x1B00(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x1B10(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x1B20(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager) == 0x000010, "Wrong alignment on BP_EventManager_C_ExecuteUbergraph_BP_EventManager");
static_assert(sizeof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager) == 0x001B30, "Wrong size on BP_EventManager_C_ExecuteUbergraph_BP_EventManager");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, EntryPoint) == 0x000000, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayer_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000028, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsRSBattle_Player) == 0x000030, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsPlaySimulate_ReturnValue) == 0x000071, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsPlaySimulate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_BlendTime) == 0x000074, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_1) == 0x000084, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_2) == 0x0000E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Parameter_1) == 0x0000E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Parameter_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Parameter) == 0x000108, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Parameter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValidClass_ReturnValue) == 0x000128, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000129, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_WindowType) == 0x00012C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_WindowType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_messageLabel) == 0x000130, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_messageLabel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Skipable) == 0x000140, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Skipable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_DrawSecond) == 0x000144, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_DrawSecond' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_IsVoiceOnlyMessage) == 0x000148, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_IsVoiceOnlyMessage' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_IsSkipVoiceEnd) == 0x000149, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_IsSkipVoiceEnd' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetGameInstance_ReturnValue) == 0x000150, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsRSGame_Instance_BP) == 0x000158, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsRSGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetMessageHudManager_ReturnValue) == 0x000168, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetMessageHudManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_DrawMessage_ReturnValue) == 0x000170, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_DrawMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_DataTable) == 0x000178, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_DataTable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0001A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_MessageTableName) == 0x0001A8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_MessageTableName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsData_Table) == 0x0001B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_2) == 0x0001C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_CutsceneName) == 0x0001C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_CutsceneName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_SpringArm) == 0x0001D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_SpringArm' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Counter_Variable) == 0x0001E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_SpringArm_1) == 0x0001E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_SpringArm_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue) == 0x0001F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Mesh) == 0x0001F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_3) == 0x000208, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetStaticMesh_StaticMesh) == 0x000210, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetStaticMesh_StaticMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Mesh_1) == 0x000218, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_4) == 0x000228, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000230, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_3) == 0x000238, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_1) == 0x000240, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Loaded_1) == 0x000270, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Get_Item) == 0x000278, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsLevel_Sequence) == 0x000280, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_5) == 0x000288, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000289, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_AssetPath) == 0x000290, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_AssetPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x0002A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralInt_ReturnValue) == 0x0002B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_isPause) == 0x0002BC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_isPause' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_2) == 0x0002C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0002F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0002F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequenceObjectBindingID_IsFind) == 0x000300, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequenceObjectBindingID_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequenceObjectBindingID_ReturnValue) == 0x000304, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequenceObjectBindingID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_4) == 0x00031C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_DeltaSeconds) == 0x000320, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_InputAxisEvent_AxisValue_1) == 0x000324, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_InputAxisEvent_AxisValue) == 0x000328, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_5) == 0x00032C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Length) == 0x000330, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Length' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_Sequence) == 0x000338, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_IsSeamlessInGame) == 0x000340, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_IsSeamlessInGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_TriggerType) == 0x000341, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_TriggerType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_TriggerCommandPath) == 0x000348, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_TriggerCommandPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_TriggerWaitTime) == 0x000358, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_TriggerWaitTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_EventPriority) == 0x00035C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_EventPriority' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_MakeEventPathString) == 0x000360, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_MakeEventPathString' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeSoftClassPath_ReturnValue) == 0x000370, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeSoftClassPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue) == 0x000388, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_EndPlayReason) == 0x0003B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_LoadSoftClass_ReturnValue) == 0x0003B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_LoadSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_ClassDynamicCast_AsMake_Event_Actor) == 0x0003C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_ClassDynamicCast_AsMake_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_ClassDynamicCast_bSuccess) == 0x0003C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeStruct_FEventTriggerCommand) == 0x0003D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeStruct_FEventTriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_3) == 0x000440, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000470, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000478, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_6) == 0x000480, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Create_ReturnValue) == 0x000488, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SetStaticMesh_ReturnValue) == 0x000490, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_7) == 0x000491, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_4) == 0x0004A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x0004D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x0004D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x0004E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x0004E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_8) == 0x0004F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_9) == 0x0004F1, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_TriggerCommand) == 0x0004F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_TriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Add_ReturnValue) == 0x000560, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_progressID_1) == 0x000564, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_progressID_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_5) == 0x000570, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDataBaseManager_Manager) == 0x0005A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x0005A8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_UnloadMessage_ReturnValue) == 0x0005B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_UnloadMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x0005B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_LoadMessage_ReturnValue) == 0x0005C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_LoadMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_10) == 0x0005C1, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_11) == 0x0005C2, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_12) == 0x0005C3, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_6) == 0x0005D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x000600, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x000608, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Add_ReturnValue_1) == 0x000610, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_13) == 0x000614, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Create_ReturnValue_1) == 0x000618, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Create_ReturnValue_2) == 0x000620, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_14) == 0x000628, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_15) == 0x000629, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_7) == 0x000630, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000660, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x000668, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_16) == 0x000670, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x000678, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_17) == 0x000680, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000688, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetHUDMainGame_HUDMainGame_2) == 0x000690, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetHUDMainGame_HUDMainGame_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_18) == 0x000698, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_19) == 0x000699, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_bossId) == 0x0006A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_bossId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_locationID) == 0x0006B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_locationID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_StartTownName_ReturnValue) == 0x0006B4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_StartTownName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_CharaID) == 0x0006B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_CharaID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_8) == 0x0006D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_StartCharaName_ReturnValue) == 0x000700, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_StartCharaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8) == 0x000708, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_8) == 0x000710, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000718, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_20) == 0x000720, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_CaptureActor) == 0x000728, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_XParamName) == 0x000730, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_XParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_YParamName) == 0x000738, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_YParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_XCurve) == 0x000740, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_XCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_YCurve) == 0x000748, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_YCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Speed) == 0x000750, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_XParamRate) == 0x000754, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_XParamRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_YParamRate) == 0x000758, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_YParamRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_9) == 0x000760, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9) == 0x000790, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_9) == 0x000798, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequencePlayer_ReturnValue) == 0x0007A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_21) == 0x0007A8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetEndTime_ReturnValue) == 0x0007AC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakQualifiedFrameTime_Frame) == 0x0007BC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x0007C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x0007C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsPlaying_ReturnValue) == 0x0007CC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeStruct_FrameTime) == 0x0007D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeStruct_FrameTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Add_ReturnValue_2) == 0x0007D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_22) == 0x0007DC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_23) == 0x0007DD, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Array_Index_Variable_1) == 0x0007E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0007E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue) == 0x0007F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue) == 0x0007F4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0007F5, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_1) == 0x0007F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0007FC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Greater_IntInt_ReturnValue) == 0x0007FD, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetRenderTargetManager_Manager) == 0x000800, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetRenderTargetManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000808, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_24) == 0x000810, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetEndTime_ReturnValue_1) == 0x000814, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakQualifiedFrameTime_Frame_1) == 0x000824, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakQualifiedFrameTime_Frame_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakQualifiedFrameTime_FrameRate_1) == 0x000828, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakQualifiedFrameTime_FrameRate_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakQualifiedFrameTime_SubFrame_1) == 0x000830, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakQualifiedFrameTime_SubFrame_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsPlaying_ReturnValue_1) == 0x000834, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeStruct_FrameTime_1) == 0x000838, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeStruct_FrameTime_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_25) == 0x000840, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Variable) == 0x000844, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000848, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x00084C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Counter_Variable_1) == 0x000850, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_10) == 0x000860, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10) == 0x000890, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000898, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_10) == 0x0008A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeArray_Array_1) == 0x0008A8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_26) == 0x0008B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_BrainTalkID) == 0x0008BC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_BrainTalkID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Category) == 0x0008C4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Category' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_IsEventCallEnable) == 0x0008C5, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_IsEventCallEnable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_SkipVisionSimulator) == 0x0008C6, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_SkipVisionSimulator' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0008C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_2) == 0x0008D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_3) == 0x0008DC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_4) == 0x0008E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_IntToString_ReturnValue) == 0x0008E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0008F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000908, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000918, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetHUDMainGame_HUDMainGame_3) == 0x000928, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetHUDMainGame_HUDMainGame_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_Voice) == 0x000930, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_Voice' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_27) == 0x000938, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCueName_ReturnValue) == 0x000940, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_28) == 0x000950, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetMessageVoice_ReturnValue) == 0x000958, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetMessageVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_29) == 0x000960, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCueName_ReturnValue_1) == 0x000968, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCueName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_11) == 0x000980, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11) == 0x0009B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_30) == 0x0009B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_11) == 0x0009C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_31) == 0x0009C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetChildrenComponents_Children) == 0x0009D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_5) == 0x0009E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Counter_Variable_2) == 0x0009E4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_32) == 0x0009E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x0009E9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_3) == 0x0009EC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetChildrenComponents_Children_1) == 0x0009F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetChildrenComponents_Children_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_6) == 0x000A00, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_12) == 0x000A10, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12) == 0x000A40, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_12) == 0x000A48, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDebuggingManager_Manager) == 0x000A50, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_33) == 0x000A58, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Lerp_ReturnValue) == 0x000A5C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate) == 0x000A60, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_TLerp_ReturnValue) == 0x000A70, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000AA0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000B28, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Create_ReturnValue_3) == 0x000B30, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Blend_Time) == 0x000B38, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Blend_Time' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Blend_Function) == 0x000B3C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Blend_Function' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Blend_Exp) == 0x000B40, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Blend_Exp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsWB_Ui_Brain_Mes) == 0x000B48, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsWB_Ui_Brain_Mes' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_6) == 0x000B50, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerManager_PlayerManager_2) == 0x000B58, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerManager_PlayerManager_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Num_Variable) == 0x000B60, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_34) == 0x000B64, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Array_Index_Variable_2) == 0x000B68, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000B70, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000B78, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x000B80, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_7) == 0x000B88, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSocketTransform_ReturnValue) == 0x000B90, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakTransform_Location) == 0x000BC0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakTransform_Rotation) == 0x000BCC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakTransform_Scale) == 0x000BD8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakRotator_Roll) == 0x000BE4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakRotator_Pitch) == 0x000BE8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakRotator_Yaw) == 0x000BEC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakVector_X) == 0x000BF0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakVector_Y) == 0x000BF4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BreakVector_Z) == 0x000BF8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_FloatFloat_ReturnValue) == 0x000BFC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000C00, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000C04, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeVector_ReturnValue) == 0x000C08, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeRotator_ReturnValue) == 0x000C14, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_CalcDefaultCameraLocationRotation_camPos) == 0x000C20, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_CalcDefaultCameraLocationRotation_camPos' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_CalcDefaultCameraLocationRotation_camRot) == 0x000C2C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_CalcDefaultCameraLocationRotation_camRot' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerController_ReturnValue) == 0x000C38, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsEnable_ReturnValue) == 0x000C40, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000C44, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000CCC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsReadyStartEvents_IsCanStartEvents) == 0x000CCD, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsReadyStartEvents_IsCanStartEvents' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Visible) == 0x000CCE, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_LevelList) == 0x000CD0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_LevelList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetLevelManager_LevelManager) == 0x000CE0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_35) == 0x000CE8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000CE9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_7) == 0x000CEC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_8) == 0x000CF0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue_2) == 0x000CF4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000CF5, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Counter_Variable_3) == 0x000CF8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000CFC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue_3) == 0x000D0C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_4) == 0x000D10, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_9) == 0x000D14, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Array_Index_Variable_3) == 0x000D18, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000D1C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Get_Item_1) == 0x000D20, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetAttachSocketName_ReturnValue) == 0x000D28, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetOwner_ReturnValue) == 0x000D30, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsRipSyncJointID_IsRipSync) == 0x000D38, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsRipSyncJointID_IsRipSync' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPCapture_Actor) == 0x000D40, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPCapture_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_8) == 0x000D48, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_NotEqual_NameName_ReturnValue) == 0x000D49, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsStartRipSyncCrossFadeChara_Return) == 0x000D4A, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsStartRipSyncCrossFadeChara_Return' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsPlaying_ReturnValue_2) == 0x000D4B, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetBP_static_pl_AsCharacter) == 0x000D50, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000D58, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCaptureActorVoiceCharaName_VoiceCharaName) == 0x000D68, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCaptureActorVoiceCharaName_VoiceCharaName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000D78, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000D80, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Contains_ReturnValue) == 0x000D90, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000D91, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BooleanOR_ReturnValue) == 0x000D92, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_TagName) == 0x000D94, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_TagName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_IsHiddenInGame) == 0x000D9C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_IsHiddenInGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000DA0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequencerRenderTarget_RenderTargetData) == 0x000DA8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequencerRenderTarget_RenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Get_Item_2) == 0x000DC0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeStruct_FRenderTargetData) == 0x000DC8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeStruct_FRenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_36) == 0x000DE0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000DE1, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000DE2, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_BGScreen) == 0x000DE8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_BGScreen' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_9) == 0x000DF8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDebuggingManager_Manager_1) == 0x000E00, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDebuggingManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_37) == 0x000E08, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_AddToPlayerScreen_ReturnValue) == 0x000E09, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_color) == 0x000E0C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_isUnderCaption) == 0x000E1C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_isUnderCaption' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_second) == 0x000E20, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_second' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetHUDMainGame_HUDMainGame_4) == 0x000E28, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetHUDMainGame_HUDMainGame_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_38) == 0x000E30, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_39) == 0x000E31, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPhaseActiveMontagePlayLength_ReturnValue) == 0x000E34, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPhaseActiveMontagePlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBP_Special_Static_Node_Actor) == 0x000E38, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBP_Special_Static_Node_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_10) == 0x000E40, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_NewFloatCurve) == 0x000E48, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_NewFloatCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetAnimInstance_ReturnValue) == 0x000E50, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_40) == 0x000E58, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_41) == 0x000E59, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000E60, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_42) == 0x000E68, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayLength_ReturnValue) == 0x000E6C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000E70, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_43) == 0x000E71, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_44) == 0x000E72, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Counter_Variable_4) == 0x000E74, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue_4) == 0x000E78, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_5) == 0x000E7C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_AddToPlayerScreen_ReturnValue_1) == 0x000E80, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_AddToPlayerScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_BGScreen_1) == 0x000E88, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_BGScreen_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_11) == 0x000E98, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetRenderTargetManager_Manager_1) == 0x000EA0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetRenderTargetManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetRenderTarget_RenderTarget) == 0x000EA8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetRenderTarget_RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetTextureTarget_ReturnValue) == 0x000EB0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetTextureTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_BGScreen_2) == 0x000EB8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_BGScreen_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_12) == 0x000EC8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000EC9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_BGScreen_3) == 0x000ED0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_BGScreen_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_13) == 0x000EE0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_BGScreen_4) == 0x000EE8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_BGScreen_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_14) == 0x000EF8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000EF9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000EFA, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_UseFade) == 0x000EFB, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_UseFade' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_VoiceFileName) == 0x000F00, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_VoiceFileName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSoundManager_SoundManager) == 0x000F10, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x000F18, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_45) == 0x000F19, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x000F1A, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_46) == 0x000F1B, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetHUDMainGame_HUDMainGame_5) == 0x000F20, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetHUDMainGame_HUDMainGame_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_47) == 0x000F28, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Not_PreBool_ReturnValue) == 0x000F29, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetHUDMainGame_HUDMainGame_6) == 0x000F30, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetHUDMainGame_HUDMainGame_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_48) == 0x000F38, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x000F39, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Variable_1) == 0x000F3C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetMovieManager_AsBP_Movie_Manager) == 0x000F40, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetMovieManager_AsBP_Movie_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_49) == 0x000F48, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000F49, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_6) == 0x000F4C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_13) == 0x000F50, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13) == 0x000F80, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeStruct_CameraFilmbackSettings) == 0x000F88, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeStruct_CameraFilmbackSettings' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_13) == 0x000F98, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetParticleManager_Particle_Manager) == 0x000FA0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_8) == 0x000FA8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_50) == 0x000FA9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Array_Index_Variable_4) == 0x000FAC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerController_ReturnValue_1) == 0x000FB0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Get_Item_3) == 0x000FB8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetViewTarget_ReturnValue) == 0x000FC0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetAttachSocketName_ReturnValue_1) == 0x000FC8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetAttachSocketName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsCine________) == 0x000FD0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_15) == 0x000FD8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsRipSyncJointID_IsRipSync_1) == 0x000FD9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsRipSyncJointID_IsRipSync_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x000FE0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000FE8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsCine_________1) == 0x000FF0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsCine_________1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_16) == 0x000FF8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_51) == 0x000FF9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetTransform_ReturnValue) == 0x001000, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetOwner_ReturnValue_1) == 0x001030, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPCapture_Actor_1) == 0x001038, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPCapture_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_17) == 0x001040, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetBP_static_pl_AsCharacter_1) == 0x001048, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetBP_static_pl_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsPlaying_ReturnValue_3) == 0x001050, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsPlaying_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x001054, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCaptureActorVoiceCharaName_VoiceCharaName_1) == 0x001060, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCaptureActorVoiceCharaName_VoiceCharaName_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x001070, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue_3) == 0x001078, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Contains_ReturnValue_1) == 0x001088, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x001089, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BooleanOR_ReturnValue_1) == 0x00108A, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_14) == 0x001090, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_52) == 0x0010C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14) == 0x0010C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_14) == 0x0010D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_53) == 0x0010D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_54) == 0x0010D9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_AddActorComponent_ReturnValue) == 0x0010E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_AddActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsPost_Process_Component) == 0x0010E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsPost_Process_Component' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_18) == 0x0010F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0010F4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0010F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_AtomComp) == 0x001100, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_AtomComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_RipSyncBoardJointID) == 0x001108, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_RipSyncBoardJointID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_AtomComp) == 0x001110, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_AtomComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Map_Remove_ReturnValue) == 0x001118, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Variable_2) == 0x00111C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerController_ReturnValue_2) == 0x001120, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_7) == 0x001128, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsInDisplayScreen_ReturnValue) == 0x00112C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsInDisplayScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BooleanAND_ReturnValue) == 0x00112D, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_IntToByte_ReturnValue) == 0x00112E, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00112F, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue_5) == 0x001130, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_ByteToInt_ReturnValue) == 0x001134, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x001138, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x001148, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_progressID) == 0x001158, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_progressID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Variable_3) == 0x00115C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x001160, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetValidValue_ReturnValue) == 0x001161, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_MakeEventPathString) == 0x001168, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_MakeEventPathString' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x001178, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue_4) == 0x001188, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Replace_ReturnValue) == 0x001198, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsFindLoadMakeEvent_IsFind) == 0x0011A8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsFindLoadMakeEvent_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeSoftObjectPath_ReturnValue_1) == 0x0011B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeSoftObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_Loaded) == 0x0011C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetObjectName_ReturnValue) == 0x0011D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Counter_Variable_5) == 0x0011E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_LeftS) == 0x0011E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_RightS) == 0x0011F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_ReturnValue) == 0x001208, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_LeftChop_ReturnValue) == 0x001210, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue_6) == 0x001220, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsFindLoadMakeEvent_IsFind_1) == 0x001221, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsFindLoadMakeEvent_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Is_Find_Loading_Make_Event_IsFind) == 0x001222, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Is_Find_Loading_Make_Event_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Is_Find_Loading_Make_Event_ReturnObjectName) == 0x001228, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Is_Find_Loading_Make_Event_ReturnObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue_5) == 0x001238, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_8) == 0x001248, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Add_ReturnValue_3) == 0x00124C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_RemoveItem_ReturnValue) == 0x001250, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_BGScreen_5) == 0x001258, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_BGScreen_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_19) == 0x001268, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_AddToPlayerScreen_ReturnValue_2) == 0x001269, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_AddToPlayerScreen_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_BGScreen_6) == 0x001270, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_BGScreen_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_20) == 0x001280, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_9) == 0x001281, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_TextureRowName) == 0x001284, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_TextureRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Get_Item_4) == 0x001290, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x001298, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_55) == 0x001299, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetBP_static_pl_AsCharacter_2) == 0x0012A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetBP_static_pl_AsCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0012A8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SetTexParameterForTexDatatable_AsTexture) == 0x0012B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SetTexParameterForTexDatatable_AsTexture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Variable_4) == 0x0012B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerManager_PlayerManager_3) == 0x0012C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerManager_PlayerManager_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x0012C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_56) == 0x0012CC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0012D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0012E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_StringToName_ReturnValue) == 0x0012F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0012F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeArray_Array_2) == 0x001300, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_9) == 0x001310, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_10) == 0x001314, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x001318, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_10) == 0x001328, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_11) == 0x00132C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Greater_IntInt_ReturnValue_3) == 0x001330, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeArray_Array_3) == 0x001338, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_messageLabel) == 0x001348, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_messageLabel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_pAtomComponent) == 0x001358, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_pAtomComponent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerPawn_ReturnValue) == 0x001360, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_57) == 0x001368, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x001370, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_58) == 0x001378, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetObjectName_ReturnValue_1) == 0x001380, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCueName_ReturnValue_2) == 0x001390, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCueName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_LeftS_1) == 0x0013A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_RightS_1) == 0x0013B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_ReturnValue_1) == 0x0013C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_LeftS_2) == 0x0013C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_LeftS_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_RightS_2) == 0x0013D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_RightS_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_ReturnValue_2) == 0x0013E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetVoiceCharaName_VoiceCharaName) == 0x0013F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetVoiceCharaName_VoiceCharaName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Get_Message_Label_Facial_Facial) == 0x001400, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Get_Message_Label_Facial_Facial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Contains_ReturnValue_2) == 0x001418, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x001420, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x001430, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Contains_ReturnValue_3) == 0x001438, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsRSBattle_Player_2) == 0x001440, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsRSBattle_Player_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_21) == 0x001448, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_byte_Variable) == 0x001449, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_BGScreen_7) == 0x001450, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_BGScreen_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_22) == 0x001460, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x001468, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_LeftS_3) == 0x001478, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_LeftS_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_RightS_3) == 0x001488, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_RightS_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Split_ReturnValue_3) == 0x001498, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Split_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Trim_ReturnValue) == 0x0014A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Trim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetRenderTargetManager_Manager_2) == 0x0014B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetRenderTargetManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_StringToText_ReturnValue) == 0x0014B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_59) == 0x0014D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequenceObjectBindingIDPlayer_BindingIDs) == 0x0014D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequenceObjectBindingIDPlayer_BindingIDs' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequenceObjectBindingIDPlayer_IsFind) == 0x0014E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequenceObjectBindingIDPlayer_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_12) == 0x0014EC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x0014F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Lerp_ReturnValue_1) == 0x001500, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Lerp_ReturnValue_2) == 0x001504, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x001508, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00150C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FInterpTo_Constant_ReturnValue) == 0x001510, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x001514, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_FloatFloat_ReturnValue) == 0x001518, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x001519, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Abs_ReturnValue) == 0x00151C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FInterpEaseInOut_ReturnValue) == 0x001520, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FInterpEaseInOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Abs_ReturnValue_1) == 0x001524, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x001528, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FInterpEaseInOut_ReturnValue_1) == 0x00152C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FInterpEaseInOut_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SelectFloat_ReturnValue) == 0x001530, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x001534, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x001538, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SelectFloat_ReturnValue_1) == 0x00153C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x001540, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsCameraYawNormal_IsNormal) == 0x001544, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsCameraYawNormal_IsNormal' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SelectFloat_ReturnValue_2) == 0x001548, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsCameraPitchNormal_IsNormal) == 0x00154C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsCameraPitchNormal_IsNormal' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsCameraYawNormal_IsNormal_1) == 0x00154D, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsCameraYawNormal_IsNormal_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SelectFloat_ReturnValue_3) == 0x001550, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SelectFloat_ReturnValue_4) == 0x001554, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeRotator_ReturnValue_1) == 0x001558, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsCameraPitchNormal_IsNormal_1) == 0x001564, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsCameraPitchNormal_IsNormal_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SelectFloat_ReturnValue_5) == 0x001568, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeRotator_ReturnValue_2) == 0x00156C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetInputManager_BP_InputManager) == 0x001578, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_RInterpTo_ReturnValue) == 0x001580, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SelectRotator_ReturnValue) == 0x00158C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Variable_5) == 0x001598, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00159C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x001624, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_IntToString_ReturnValue_3) == 0x001628, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x001638, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue_7) == 0x001640, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_StringToName_ReturnValue_1) == 0x001650, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_10) == 0x001658, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeArray_Array_4) == 0x001660, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeArray_Array_5) == 0x001670, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetInputManager_BP_InputManager_1) == 0x001680, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetInputManager_BP_InputManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCurrentLayoutType_ReturnValue) == 0x001688, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCurrentLayoutType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x001689, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Add_ReturnValue_4) == 0x00168C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerController_ReturnValue_3) == 0x001690, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsInDisplayScreen_ReturnValue_1) == 0x001698, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsInDisplayScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_DelayTime) == 0x00169C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_DelayTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_CaptureActorIndex) == 0x0016A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_CapturePresetName) == 0x0016A4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_CapturePresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_CharaAnimationName) == 0x0016AC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_CharaAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_CharaFaceAnimationName) == 0x0016B4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_CharaFaceAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_LightPresetName) == 0x0016BC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_LightPresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_NpcMeshTableID) == 0x0016C4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_NpcMeshTableID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_NpcMaterialTableID) == 0x0016C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_NpcMaterialTableID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_CharaPartsDTRowName) == 0x0016CC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_CharaPartsDTRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_ChangeSpeedType) == 0x0016D4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_ChangeSpeedType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_IsSimpleCrossFade) == 0x0016D5, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_IsSimpleCrossFade' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BooleanAND_ReturnValue_1) == 0x0016D6, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCaptureActor_CaptureActor) == 0x0016D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCaptureActor_CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCaptureActor_IsSuccess) == 0x0016E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCaptureActor_IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_60) == 0x0016E1, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x0016E4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_6) == 0x0016F4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_15) == 0x001710, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_16) == 0x001740, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15) == 0x001770, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16) == 0x001778, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_15) == 0x001780, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_16) == 0x001788, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerManager_PlayerManager_4) == 0x001790, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerManager_PlayerManager_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_61) == 0x001798, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayer_ReturnValue_1) == 0x0017A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0017A8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_23) == 0x0017B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_ResetCollisionOverlap_bDummy) == 0x0017B9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_ResetCollisionOverlap_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BooleanOR_ReturnValue_2) == 0x0017BA, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BooleanOR_ReturnValue_3) == 0x0017BB, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_11) == 0x0017BC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x0017C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetCineCameraComponent_ReturnValue_2) == 0x0017C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetCineCameraComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_62) == 0x0017D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsMissionActive_ReturnValue) == 0x0017D1, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_17) == 0x0017E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17) == 0x001810, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Counter_Variable_6) == 0x001818, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue_7) == 0x00181C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_11) == 0x001820, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_17) == 0x001828, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Array_Index_Variable_5) == 0x001830, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_63) == 0x001834, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Get_Item_5) == 0x001838, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBP_Sequencer_Party_Member_Position) == 0x001840, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBP_Sequencer_Party_Member_Position' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_24) == 0x001848, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetRelativeTransform_ReturnValue) == 0x001850, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayer_ReturnValue_2) == 0x001880, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_64) == 0x001888, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsRSBattle_Character) == 0x001890, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_25) == 0x001898, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsEvent_Interface) == 0x0018A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_26) == 0x0018B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsPlayer_Interface) == 0x0018B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_27) == 0x0018C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SetEventVisible_ReturnValue) == 0x0018C9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SetEventVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetPlayerID_ReturnValue) == 0x0018CA, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsRSBattle_Player_3) == 0x0018D0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsRSBattle_Player_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_28) == 0x0018D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SetCharacterVisibility_self_CastInput) == 0x0018E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SetCharacterVisibility_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_SetCharacterVisibility_bDummy) == 0x0018F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_SetCharacterVisibility_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsWeaponAttachMode_bBattle) == 0x0018F1, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsWeaponAttachMode_bBattle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x0018F4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x00197C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetMovieManager_AsBP_Movie_Manager_1) == 0x001980, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetMovieManager_AsBP_Movie_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_1) == 0x001988, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_13) == 0x001998, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsLooping_ReturnValue) == 0x00199C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsLooping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsPlaying_IsPlaying) == 0x00199D, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_2) == 0x0019A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue_14) == 0x0019B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeTransform_ReturnValue_18) == 0x0019C0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeTransform_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue_12) == 0x0019F0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18) == 0x0019F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Greater_IntInt_ReturnValue_4) == 0x001A00, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_FinishSpawningActor_ReturnValue_18) == 0x001A08, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_FinishSpawningActor_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1) == 0x001A10, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsValid_ReturnValue_65) == 0x001A18, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsValid_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsMissionActive_ReturnValue_1) == 0x001A19, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsMissionActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_MakeLiteralByte_ReturnValue_12) == 0x001A1A, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_MakeLiteralByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_EventObject) == 0x001A20, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_EventObject' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_ClassDynamicCast_AsMake_Event_Actor_1) == 0x001A28, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_ClassDynamicCast_AsMake_Event_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_ClassDynamicCast_bSuccess_1) == 0x001A30, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_MakeStruct_FEventTriggerCommand_1) == 0x001A38, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_MakeStruct_FEventTriggerCommand_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_AsBPI_Event_Manager) == 0x001AA0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_AsBPI_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_DynamicCast_bSuccess_29) == 0x001AB0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Array_Index_Variable_6) == 0x001AB4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_7) == 0x001AB8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Get_Item_6) == 0x001AC8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDataTableRowFromName_OutRow) == 0x001AD0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x001ADC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_NameToString_ReturnValue) == 0x001AE0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Contains_ReturnValue_4) == 0x001AF0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Contains_ReturnValue_5) == 0x001AF1, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Add_ReturnValue_5) == 0x001AF4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Add_ReturnValue_6) == 0x001AF8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Add_ReturnValue_7) == 0x001AFC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_8) == 0x001B00, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_9) == 0x001B10, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CreateDelegate_OutputDelegate_10) == 0x001B20, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddBattleSimulatorEndEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_AddBattleSimulatorEndEvent final
{
public:
	class UClass*                                 EventObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddBattleSimulatorEndEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_AddBattleSimulatorEndEvent");
static_assert(sizeof(BP_EventManager_C_AddBattleSimulatorEndEvent) == 0x000008, "Wrong size on BP_EventManager_C_AddBattleSimulatorEndEvent");
static_assert(offsetof(BP_EventManager_C_AddBattleSimulatorEndEvent, EventObject) == 0x000000, "Member 'BP_EventManager_C_AddBattleSimulatorEndEvent::EventObject' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetReadyForCrossFadeCharaCapture
// 0x003C (0x003C - 0x0000)
struct BP_EventManager_C_GetReadyForCrossFadeCharaCapture final
{
public:
	float                                         DelayTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CaptureActorIndex;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CapturePresetName;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaAnimationName;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaFaceAnimationName;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LightPresetName;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NpcMeshTableID;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NpcMaterialTableID;                                // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaPartsDTRowName;                               // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaCapChangeSpeedType                      ChangeSpeedType;                                   // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSimpleCrossFade;                                 // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture) == 0x000004, "Wrong alignment on BP_EventManager_C_GetReadyForCrossFadeCharaCapture");
static_assert(sizeof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture) == 0x00003C, "Wrong size on BP_EventManager_C_GetReadyForCrossFadeCharaCapture");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, DelayTime) == 0x000000, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::DelayTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, CaptureActorIndex) == 0x000004, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, CapturePresetName) == 0x000008, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::CapturePresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, CharaAnimationName) == 0x000010, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::CharaAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, CharaFaceAnimationName) == 0x000018, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::CharaFaceAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, LightPresetName) == 0x000020, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::LightPresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, NpcMeshTableID) == 0x000028, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::NpcMeshTableID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, NpcMaterialTableID) == 0x00002C, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::NpcMaterialTableID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, CharaPartsDTRowName) == 0x000030, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::CharaPartsDTRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, ChangeSpeedType) == 0x000038, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::ChangeSpeedType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetReadyForCrossFadeCharaCapture, IsSimpleCrossFade) == 0x000039, "Member 'BP_EventManager_C_GetReadyForCrossFadeCharaCapture::IsSimpleCrossFade' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CheckAndSetTalkEventPlayerRipSync
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync final
{
public:
	class FString                                 MessageLabel;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   PAtomComponent;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync) == 0x000008, "Wrong alignment on BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync");
static_assert(sizeof(BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync) == 0x000018, "Wrong size on BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync");
static_assert(offsetof(BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync, MessageLabel) == 0x000000, "Member 'BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync::MessageLabel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync, PAtomComponent) == 0x000010, "Member 'BP_EventManager_C_CheckAndSetTalkEventPlayerRipSync::PAtomComponent' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupStaticSceneForTexture
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_SetupStaticSceneForTexture final
{
public:
	class FName                                   TextureRowName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetupStaticSceneForTexture) == 0x000004, "Wrong alignment on BP_EventManager_C_SetupStaticSceneForTexture");
static_assert(sizeof(BP_EventManager_C_SetupStaticSceneForTexture) == 0x000008, "Wrong size on BP_EventManager_C_SetupStaticSceneForTexture");
static_assert(offsetof(BP_EventManager_C_SetupStaticSceneForTexture, TextureRowName) == 0x000000, "Member 'BP_EventManager_C_SetupStaticSceneForTexture::TextureRowName' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnLoadedMakeEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_OnLoadedMakeEvent final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_OnLoadedMakeEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_OnLoadedMakeEvent");
static_assert(sizeof(BP_EventManager_C_OnLoadedMakeEvent) == 0x000008, "Wrong size on BP_EventManager_C_OnLoadedMakeEvent");
static_assert(offsetof(BP_EventManager_C_OnLoadedMakeEvent, Loaded) == 0x000000, "Member 'BP_EventManager_C_OnLoadedMakeEvent::Loaded' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.LoadMakeEvent_Internal
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_LoadMakeEvent_Internal final
{
public:
	class FString                                 MakeEventPathString;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_LoadMakeEvent_Internal) == 0x000008, "Wrong alignment on BP_EventManager_C_LoadMakeEvent_Internal");
static_assert(sizeof(BP_EventManager_C_LoadMakeEvent_Internal) == 0x000010, "Wrong size on BP_EventManager_C_LoadMakeEvent_Internal");
static_assert(offsetof(BP_EventManager_C_LoadMakeEvent_Internal, MakeEventPathString) == 0x000000, "Member 'BP_EventManager_C_LoadMakeEvent_Internal::MakeEventPathString' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetProgressIDNative
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_SetProgressIDNative final
{
public:
	int32                                         Param_ProgressId;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetProgressIDNative) == 0x000004, "Wrong alignment on BP_EventManager_C_SetProgressIDNative");
static_assert(sizeof(BP_EventManager_C_SetProgressIDNative) == 0x000004, "Wrong size on BP_EventManager_C_SetProgressIDNative");
static_assert(offsetof(BP_EventManager_C_SetProgressIDNative, Param_ProgressId) == 0x000000, "Member 'BP_EventManager_C_SetProgressIDNative::Param_ProgressId' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SubMessageVoiceRipSyncInfoList
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_SubMessageVoiceRipSyncInfoList final
{
public:
	class URSAtomComponentBase*                   AtomComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SubMessageVoiceRipSyncInfoList) == 0x000008, "Wrong alignment on BP_EventManager_C_SubMessageVoiceRipSyncInfoList");
static_assert(sizeof(BP_EventManager_C_SubMessageVoiceRipSyncInfoList) == 0x000008, "Wrong size on BP_EventManager_C_SubMessageVoiceRipSyncInfoList");
static_assert(offsetof(BP_EventManager_C_SubMessageVoiceRipSyncInfoList, AtomComp) == 0x000000, "Member 'BP_EventManager_C_SubMessageVoiceRipSyncInfoList::AtomComp' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddMessageVoiceRipSyncInfoList
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_AddMessageVoiceRipSyncInfoList final
{
public:
	class URSAtomComponentBase*                   AtomComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RipSyncBoardJointID;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddMessageVoiceRipSyncInfoList) == 0x000008, "Wrong alignment on BP_EventManager_C_AddMessageVoiceRipSyncInfoList");
static_assert(sizeof(BP_EventManager_C_AddMessageVoiceRipSyncInfoList) == 0x000010, "Wrong size on BP_EventManager_C_AddMessageVoiceRipSyncInfoList");
static_assert(offsetof(BP_EventManager_C_AddMessageVoiceRipSyncInfoList, AtomComp) == 0x000000, "Member 'BP_EventManager_C_AddMessageVoiceRipSyncInfoList::AtomComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddMessageVoiceRipSyncInfoList, RipSyncBoardJointID) == 0x000008, "Member 'BP_EventManager_C_AddMessageVoiceRipSyncInfoList::RipSyncBoardJointID' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayVoice
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_PlayVoice final
{
public:
	class FString                                 VoiceFileName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_PlayVoice) == 0x000008, "Wrong alignment on BP_EventManager_C_PlayVoice");
static_assert(sizeof(BP_EventManager_C_PlayVoice) == 0x000010, "Wrong size on BP_EventManager_C_PlayVoice");
static_assert(offsetof(BP_EventManager_C_PlayVoice, VoiceFileName) == 0x000000, "Member 'BP_EventManager_C_PlayVoice::VoiceFileName' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.RemoveBGScreenWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_RemoveBGScreenWidget final
{
public:
	bool                                          UseFade;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_RemoveBGScreenWidget) == 0x000001, "Wrong alignment on BP_EventManager_C_RemoveBGScreenWidget");
static_assert(sizeof(BP_EventManager_C_RemoveBGScreenWidget) == 0x000001, "Wrong size on BP_EventManager_C_RemoveBGScreenWidget");
static_assert(offsetof(BP_EventManager_C_RemoveBGScreenWidget, UseFade) == 0x000000, "Member 'BP_EventManager_C_RemoveBGScreenWidget::UseFade' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StopStreamPP
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_StopStreamPP final
{
public:
	class UCurveFloat*                            NewFloatCurve;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StopStreamPP) == 0x000008, "Wrong alignment on BP_EventManager_C_StopStreamPP");
static_assert(sizeof(BP_EventManager_C_StopStreamPP) == 0x000008, "Wrong size on BP_EventManager_C_StopStreamPP");
static_assert(offsetof(BP_EventManager_C_StopStreamPP, NewFloatCurve) == 0x000000, "Member 'BP_EventManager_C_StopStreamPP::NewFloatCurve' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartEventFadeOut
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_StartEventFadeOut final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnderCaption;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Second;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StartEventFadeOut) == 0x000004, "Wrong alignment on BP_EventManager_C_StartEventFadeOut");
static_assert(sizeof(BP_EventManager_C_StartEventFadeOut) == 0x000018, "Wrong size on BP_EventManager_C_StartEventFadeOut");
static_assert(offsetof(BP_EventManager_C_StartEventFadeOut, Color) == 0x000000, "Member 'BP_EventManager_C_StartEventFadeOut::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventFadeOut, IsUnderCaption) == 0x000010, "Member 'BP_EventManager_C_StartEventFadeOut::IsUnderCaption' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventFadeOut, Second) == 0x000014, "Member 'BP_EventManager_C_StartEventFadeOut::Second' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetHiddenInGameForTagName
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_SetHiddenInGameForTagName final
{
public:
	class FName                                   TagName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHiddenInGame;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetHiddenInGameForTagName) == 0x000004, "Wrong alignment on BP_EventManager_C_SetHiddenInGameForTagName");
static_assert(sizeof(BP_EventManager_C_SetHiddenInGameForTagName) == 0x00000C, "Wrong size on BP_EventManager_C_SetHiddenInGameForTagName");
static_assert(offsetof(BP_EventManager_C_SetHiddenInGameForTagName, TagName) == 0x000000, "Member 'BP_EventManager_C_SetHiddenInGameForTagName::TagName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenInGameForTagName, IsHiddenInGame) == 0x000008, "Member 'BP_EventManager_C_SetHiddenInGameForTagName::IsHiddenInGame' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetLevelVisible
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetLevelVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         LevelList;                                         // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetLevelVisible) == 0x000008, "Wrong alignment on BP_EventManager_C_SetLevelVisible");
static_assert(sizeof(BP_EventManager_C_SetLevelVisible) == 0x000018, "Wrong size on BP_EventManager_C_SetLevelVisible");
static_assert(offsetof(BP_EventManager_C_SetLevelVisible, Visible) == 0x000000, "Member 'BP_EventManager_C_SetLevelVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetLevelVisible, LevelList) == 0x000008, "Member 'BP_EventManager_C_SetLevelVisible::LevelList' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartBlendPlayerCamera
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_StartBlendPlayerCamera final
{
public:
	float                                         Blend_Time;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      Blend_Function;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3390[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Blend_Exp;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StartBlendPlayerCamera) == 0x000004, "Wrong alignment on BP_EventManager_C_StartBlendPlayerCamera");
static_assert(sizeof(BP_EventManager_C_StartBlendPlayerCamera) == 0x00000C, "Wrong size on BP_EventManager_C_StartBlendPlayerCamera");
static_assert(offsetof(BP_EventManager_C_StartBlendPlayerCamera, Blend_Time) == 0x000000, "Member 'BP_EventManager_C_StartBlendPlayerCamera::Blend_Time' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBlendPlayerCamera, Blend_Function) == 0x000004, "Member 'BP_EventManager_C_StartBlendPlayerCamera::Blend_Function' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBlendPlayerCamera, Blend_Exp) == 0x000008, "Member 'BP_EventManager_C_StartBlendPlayerCamera::Blend_Exp' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ChangeSpeakerToVoice
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_ChangeSpeakerToVoice final
{
public:
	class URSAtomComponentBase*                   Voice;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ChangeSpeakerToVoice) == 0x000008, "Wrong alignment on BP_EventManager_C_ChangeSpeakerToVoice");
static_assert(sizeof(BP_EventManager_C_ChangeSpeakerToVoice) == 0x000008, "Wrong size on BP_EventManager_C_ChangeSpeakerToVoice");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerToVoice, Voice) == 0x000000, "Member 'BP_EventManager_C_ChangeSpeakerToVoice::Voice' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SequencerStartBrainTalk
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_SequencerStartBrainTalk final
{
public:
	class FName                                   BrainTalkID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrainTalkCategory                            Category;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEventCallEnable;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipVisionSimulator;                               // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SequencerStartBrainTalk) == 0x000004, "Wrong alignment on BP_EventManager_C_SequencerStartBrainTalk");
static_assert(sizeof(BP_EventManager_C_SequencerStartBrainTalk) == 0x00000C, "Wrong size on BP_EventManager_C_SequencerStartBrainTalk");
static_assert(offsetof(BP_EventManager_C_SequencerStartBrainTalk, BrainTalkID) == 0x000000, "Member 'BP_EventManager_C_SequencerStartBrainTalk::BrainTalkID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStartBrainTalk, Category) == 0x000008, "Member 'BP_EventManager_C_SequencerStartBrainTalk::Category' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStartBrainTalk, IsEventCallEnable) == 0x000009, "Member 'BP_EventManager_C_SequencerStartBrainTalk::IsEventCallEnable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStartBrainTalk, SkipVisionSimulator) == 0x00000A, "Member 'BP_EventManager_C_SequencerStartBrainTalk::SkipVisionSimulator' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EventBoardParamTimeline_Event
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_EventBoardParamTimeline_Event final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   XParamName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   YParamName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            XCurve;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            YCurve;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XParamRate;                                        // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YParamRate;                                        // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_EventBoardParamTimeline_Event) == 0x000008, "Wrong alignment on BP_EventManager_C_EventBoardParamTimeline_Event");
static_assert(sizeof(BP_EventManager_C_EventBoardParamTimeline_Event) == 0x000038, "Wrong size on BP_EventManager_C_EventBoardParamTimeline_Event");
static_assert(offsetof(BP_EventManager_C_EventBoardParamTimeline_Event, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_EventBoardParamTimeline_Event::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamTimeline_Event, XParamName) == 0x000008, "Member 'BP_EventManager_C_EventBoardParamTimeline_Event::XParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamTimeline_Event, YParamName) == 0x000010, "Member 'BP_EventManager_C_EventBoardParamTimeline_Event::YParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamTimeline_Event, XCurve) == 0x000018, "Member 'BP_EventManager_C_EventBoardParamTimeline_Event::XCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamTimeline_Event, YCurve) == 0x000020, "Member 'BP_EventManager_C_EventBoardParamTimeline_Event::YCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamTimeline_Event, Speed) == 0x000028, "Member 'BP_EventManager_C_EventBoardParamTimeline_Event::Speed' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamTimeline_Event, XParamRate) == 0x00002C, "Member 'BP_EventManager_C_EventBoardParamTimeline_Event::XParamRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventBoardParamTimeline_Event, YParamRate) == 0x000030, "Member 'BP_EventManager_C_EventBoardParamTimeline_Event::YParamRate' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SequencerDrawCharaName
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SequencerDrawCharaName final
{
public:
	class FString                                 CharaID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SequencerDrawCharaName) == 0x000008, "Wrong alignment on BP_EventManager_C_SequencerDrawCharaName");
static_assert(sizeof(BP_EventManager_C_SequencerDrawCharaName) == 0x000010, "Wrong size on BP_EventManager_C_SequencerDrawCharaName");
static_assert(offsetof(BP_EventManager_C_SequencerDrawCharaName, CharaID) == 0x000000, "Member 'BP_EventManager_C_SequencerDrawCharaName::CharaID' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SequencerDrawTownName
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_SequencerDrawTownName final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SequencerDrawTownName) == 0x000004, "Wrong alignment on BP_EventManager_C_SequencerDrawTownName");
static_assert(sizeof(BP_EventManager_C_SequencerDrawTownName) == 0x000004, "Wrong size on BP_EventManager_C_SequencerDrawTownName");
static_assert(offsetof(BP_EventManager_C_SequencerDrawTownName, LocationId) == 0x000000, "Member 'BP_EventManager_C_SequencerDrawTownName::LocationId' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SequencerDrawBossName
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SequencerDrawBossName final
{
public:
	class FString                                 bossId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SequencerDrawBossName) == 0x000008, "Wrong alignment on BP_EventManager_C_SequencerDrawBossName");
static_assert(sizeof(BP_EventManager_C_SequencerDrawBossName) == 0x000010, "Wrong size on BP_EventManager_C_SequencerDrawBossName");
static_assert(offsetof(BP_EventManager_C_SequencerDrawBossName, bossId) == 0x000000, "Member 'BP_EventManager_C_SequencerDrawBossName::bossId' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_EventManager_C_ReceiveEndPlay");
static_assert(sizeof(BP_EventManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_EventManager_C_ReceiveEndPlay");
static_assert(offsetof(BP_EventManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_EventManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartDynamicCutsceneFromAsset
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_StartDynamicCutsceneFromAsset final
{
public:
	class ULevelSequence*                         Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSeamlessInGame;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartDynamicCutsceneFromAsset) == 0x000008, "Wrong alignment on BP_EventManager_C_StartDynamicCutsceneFromAsset");
static_assert(sizeof(BP_EventManager_C_StartDynamicCutsceneFromAsset) == 0x000010, "Wrong size on BP_EventManager_C_StartDynamicCutsceneFromAsset");
static_assert(offsetof(BP_EventManager_C_StartDynamicCutsceneFromAsset, Sequence) == 0x000000, "Member 'BP_EventManager_C_StartDynamicCutsceneFromAsset::Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartDynamicCutsceneFromAsset, IsSeamlessInGame) == 0x000008, "Member 'BP_EventManager_C_StartDynamicCutsceneFromAsset::IsSeamlessInGame' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.NearClip
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_NearClip final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_NearClip) == 0x000004, "Wrong alignment on BP_EventManager_C_NearClip");
static_assert(sizeof(BP_EventManager_C_NearClip) == 0x000004, "Wrong size on BP_EventManager_C_NearClip");
static_assert(offsetof(BP_EventManager_C_NearClip, Length) == 0x000000, "Member 'BP_EventManager_C_NearClip::Length' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53) == 0x000004, "Wrong alignment on BP_EventManager_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");
static_assert(sizeof(BP_EventManager_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53) == 0x000004, "Wrong size on BP_EventManager_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");
static_assert(offsetof(BP_EventManager_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53, AxisValue) == 0x000000, "Member 'BP_EventManager_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53::AxisValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38) == 0x000004, "Wrong alignment on BP_EventManager_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");
static_assert(sizeof(BP_EventManager_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38) == 0x000004, "Wrong size on BP_EventManager_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");
static_assert(offsetof(BP_EventManager_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38, AxisValue) == 0x000000, "Member 'BP_EventManager_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38::AxisValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EventManager_C_ReceiveTick");
static_assert(sizeof(BP_EventManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_EventManager_C_ReceiveTick");
static_assert(offsetof(BP_EventManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EventManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartDynamicCutscene
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_StartDynamicCutscene final
{
public:
	class FString                                 CutsceneName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StartDynamicCutscene) == 0x000008, "Wrong alignment on BP_EventManager_C_StartDynamicCutscene");
static_assert(sizeof(BP_EventManager_C_StartDynamicCutscene) == 0x000010, "Wrong size on BP_EventManager_C_StartDynamicCutscene");
static_assert(offsetof(BP_EventManager_C_StartDynamicCutscene, CutsceneName) == 0x000000, "Member 'BP_EventManager_C_StartDynamicCutscene::CutsceneName' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UnloadMessage
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_UnloadMessage final
{
public:
	class FString                                 MessageTableName;                                  // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UnloadMessage) == 0x000008, "Wrong alignment on BP_EventManager_C_UnloadMessage");
static_assert(sizeof(BP_EventManager_C_UnloadMessage) == 0x000010, "Wrong size on BP_EventManager_C_UnloadMessage");
static_assert(offsetof(BP_EventManager_C_UnloadMessage, MessageTableName) == 0x000000, "Member 'BP_EventManager_C_UnloadMessage::MessageTableName' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.LoadMessage
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_LoadMessage final
{
public:
	TSoftObjectPtr<class UDataTable>              DataTable;                                         // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_LoadMessage) == 0x000008, "Wrong alignment on BP_EventManager_C_LoadMessage");
static_assert(sizeof(BP_EventManager_C_LoadMessage) == 0x000028, "Wrong size on BP_EventManager_C_LoadMessage");
static_assert(offsetof(BP_EventManager_C_LoadMessage, DataTable) == 0x000000, "Member 'BP_EventManager_C_LoadMessage::DataTable' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.DrawMessage
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_DrawMessage final
{
public:
	int32                                         WindowType;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3391[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MessageLabel;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Skipable;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3392[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DrawSecond;                                        // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVoiceOnlyMessage;                                // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSkipVoiceEnd;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_DrawMessage) == 0x000008, "Wrong alignment on BP_EventManager_C_DrawMessage");
static_assert(sizeof(BP_EventManager_C_DrawMessage) == 0x000028, "Wrong size on BP_EventManager_C_DrawMessage");
static_assert(offsetof(BP_EventManager_C_DrawMessage, WindowType) == 0x000000, "Member 'BP_EventManager_C_DrawMessage::WindowType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DrawMessage, MessageLabel) == 0x000008, "Member 'BP_EventManager_C_DrawMessage::MessageLabel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DrawMessage, Skipable) == 0x000018, "Member 'BP_EventManager_C_DrawMessage::Skipable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DrawMessage, DrawSecond) == 0x00001C, "Member 'BP_EventManager_C_DrawMessage::DrawSecond' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DrawMessage, IsVoiceOnlyMessage) == 0x000020, "Member 'BP_EventManager_C_DrawMessage::IsVoiceOnlyMessage' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DrawMessage, IsSkipVoiceEnd) == 0x000021, "Member 'BP_EventManager_C_DrawMessage::IsSkipVoiceEnd' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.BindingActor
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_BindingActor final
{
public:
	struct FSEventBindingParameter                Parameter;                                         // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_BindingActor) == 0x000008, "Wrong alignment on BP_EventManager_C_BindingActor");
static_assert(sizeof(BP_EventManager_C_BindingActor) == 0x000020, "Wrong size on BP_EventManager_C_BindingActor");
static_assert(offsetof(BP_EventManager_C_BindingActor, Parameter) == 0x000000, "Member 'BP_EventManager_C_BindingActor::Parameter' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SpawnActor
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_SpawnActor final
{
public:
	struct FSEventSpawnParameter                  Parameter;                                         // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SpawnActor) == 0x000008, "Wrong alignment on BP_EventManager_C_SpawnActor");
static_assert(sizeof(BP_EventManager_C_SpawnActor) == 0x000020, "Wrong size on BP_EventManager_C_SpawnActor");
static_assert(offsetof(BP_EventManager_C_SpawnActor, Parameter) == 0x000000, "Member 'BP_EventManager_C_SpawnActor::Parameter' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Inner_DynamicToInGameInterp
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_Inner_DynamicToInGameInterp final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Inner_DynamicToInGameInterp) == 0x000004, "Wrong alignment on BP_EventManager_C_Inner_DynamicToInGameInterp");
static_assert(sizeof(BP_EventManager_C_Inner_DynamicToInGameInterp) == 0x000004, "Wrong size on BP_EventManager_C_Inner_DynamicToInGameInterp");
static_assert(offsetof(BP_EventManager_C_Inner_DynamicToInGameInterp, BlendTime) == 0x000000, "Member 'BP_EventManager_C_Inner_DynamicToInGameInterp::BlendTime' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Inner_PopCameraRotationLag
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_Inner_PopCameraRotationLag final
{
public:
	class USpringArmComponent*                    SpringArm;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Inner_PopCameraRotationLag) == 0x000008, "Wrong alignment on BP_EventManager_C_Inner_PopCameraRotationLag");
static_assert(sizeof(BP_EventManager_C_Inner_PopCameraRotationLag) == 0x000008, "Wrong size on BP_EventManager_C_Inner_PopCameraRotationLag");
static_assert(offsetof(BP_EventManager_C_Inner_PopCameraRotationLag, SpringArm) == 0x000000, "Member 'BP_EventManager_C_Inner_PopCameraRotationLag::SpringArm' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Inner_PopCameraLag
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_Inner_PopCameraLag final
{
public:
	class USpringArmComponent*                    SpringArm;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Inner_PopCameraLag) == 0x000008, "Wrong alignment on BP_EventManager_C_Inner_PopCameraLag");
static_assert(sizeof(BP_EventManager_C_Inner_PopCameraLag) == 0x000008, "Wrong size on BP_EventManager_C_Inner_PopCameraLag");
static_assert(offsetof(BP_EventManager_C_Inner_PopCameraLag, SpringArm) == 0x000000, "Member 'BP_EventManager_C_Inner_PopCameraLag::SpringArm' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Inner_LoadSequencerFinish
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_Inner_LoadSequencerFinish final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Inner_LoadSequencerFinish) == 0x000008, "Wrong alignment on BP_EventManager_C_Inner_LoadSequencerFinish");
static_assert(sizeof(BP_EventManager_C_Inner_LoadSequencerFinish) == 0x000008, "Wrong size on BP_EventManager_C_Inner_LoadSequencerFinish");
static_assert(offsetof(BP_EventManager_C_Inner_LoadSequencerFinish, Loaded) == 0x000000, "Member 'BP_EventManager_C_Inner_LoadSequencerFinish::Loaded' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Inner_LoadSequencer
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_Inner_LoadSequencer final
{
public:
	class FString                                 AssetPath;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Inner_LoadSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_Inner_LoadSequencer");
static_assert(sizeof(BP_EventManager_C_Inner_LoadSequencer) == 0x000010, "Wrong size on BP_EventManager_C_Inner_LoadSequencer");
static_assert(offsetof(BP_EventManager_C_Inner_LoadSequencer, AssetPath) == 0x000000, "Member 'BP_EventManager_C_Inner_LoadSequencer::AssetPath' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventPause
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_SetEventPause final
{
public:
	bool                                          IsPause;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetEventPause) == 0x000001, "Wrong alignment on BP_EventManager_C_SetEventPause");
static_assert(sizeof(BP_EventManager_C_SetEventPause) == 0x000001, "Wrong size on BP_EventManager_C_SetEventPause");
static_assert(offsetof(BP_EventManager_C_SetEventPause, IsPause) == 0x000000, "Member 'BP_EventManager_C_SetEventPause::IsPause' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddEventTriggerCommandByPath
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_AddEventTriggerCommandByPath final
{
public:
	EEventTriggerCheckType                        TriggerType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3393[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TriggerCommandPath;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         TriggerWaitTime;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EventPriority;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddEventTriggerCommandByPath) == 0x000008, "Wrong alignment on BP_EventManager_C_AddEventTriggerCommandByPath");
static_assert(sizeof(BP_EventManager_C_AddEventTriggerCommandByPath) == 0x000020, "Wrong size on BP_EventManager_C_AddEventTriggerCommandByPath");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandByPath, TriggerType) == 0x000000, "Member 'BP_EventManager_C_AddEventTriggerCommandByPath::TriggerType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandByPath, TriggerCommandPath) == 0x000008, "Member 'BP_EventManager_C_AddEventTriggerCommandByPath::TriggerCommandPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandByPath, TriggerWaitTime) == 0x000018, "Member 'BP_EventManager_C_AddEventTriggerCommandByPath::TriggerWaitTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandByPath, EventPriority) == 0x00001C, "Member 'BP_EventManager_C_AddEventTriggerCommandByPath::EventPriority' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.LoadMakeEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_LoadMakeEvent final
{
public:
	class FString                                 MakeEventPathString;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_LoadMakeEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_LoadMakeEvent");
static_assert(sizeof(BP_EventManager_C_LoadMakeEvent) == 0x000010, "Wrong size on BP_EventManager_C_LoadMakeEvent");
static_assert(offsetof(BP_EventManager_C_LoadMakeEvent, MakeEventPathString) == 0x000000, "Member 'BP_EventManager_C_LoadMakeEvent::MakeEventPathString' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddEventTriggerCommand
// 0x0068 (0x0068 - 0x0000)
struct BP_EventManager_C_AddEventTriggerCommand final
{
public:
	struct FFEventTriggerCommand                  TriggerCommand;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddEventTriggerCommand) == 0x000008, "Wrong alignment on BP_EventManager_C_AddEventTriggerCommand");
static_assert(sizeof(BP_EventManager_C_AddEventTriggerCommand) == 0x000068, "Wrong size on BP_EventManager_C_AddEventTriggerCommand");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand, TriggerCommand) == 0x000000, "Member 'BP_EventManager_C_AddEventTriggerCommand::TriggerCommand' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ISetProgressID
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_ISetProgressID final
{
public:
	int32                                         Param_ProgressId;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ISetProgressID) == 0x000004, "Wrong alignment on BP_EventManager_C_ISetProgressID");
static_assert(sizeof(BP_EventManager_C_ISetProgressID) == 0x000004, "Wrong size on BP_EventManager_C_ISetProgressID");
static_assert(offsetof(BP_EventManager_C_ISetProgressID, Param_ProgressId) == 0x000000, "Member 'BP_EventManager_C_ISetProgressID::Param_ProgressId' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_UserConstructionScript final
{
public:
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_EventManager_C_UserConstructionScript");
static_assert(sizeof(BP_EventManager_C_UserConstructionScript) == 0x000004, "Wrong size on BP_EventManager_C_UserConstructionScript");
static_assert(offsetof(BP_EventManager_C_UserConstructionScript, CallFunc_MakeLiteralInt_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_UserConstructionScript::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartCutScene
// 0x0350 (0x0350 - 0x0000)
struct BP_EventManager_C_StartCutScene final
{
public:
	class FString                                 CutsceneName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsBPEvent;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3394[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LocalMakeEventList;                                // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               TmpPlayerList;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_MovieManager_C*                     CallFunc_GetMovieManager_AsBP_Movie_Manager;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3395[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UManaTexture*                           CallFunc_GetManaTextureNative_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3396[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StageManager_C*                     CallFunc_GetStageManager_Manager;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3397[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3398[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionParam*                           CallFunc_GetOptionParam_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOptionCameraYaw                              CallFunc_GetCameraYaw_ReturnValue;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOptionCameraPitch                            CallFunc_GetCameraPitch_ReturnValue;               // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3399[0x5];                                     // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0018)()
	class UNpcManager*                            CallFunc_GetNpcManager_NpcManager;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339A[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANpcTownPeople*                         K2Node_DynamicCast_AsNpc_Town_People;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339B[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339C[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActionIcon*                            K2Node_DynamicCast_AsAction_Icon;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339D[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue; // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339E[0x2];                                     // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339F[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StageParameterSettingVolumeManager_C* CallFunc_GetStageParameterSettingManager_SettingManager; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A0[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A1[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager_1;   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetMakeEventActorArray_ReturnValue;       // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A2[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBrainMessageParamManager*              CallFunc_GetBrainMessageParamManager_ReturnValue;  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A3[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A4[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventStart_ReturnValue;                   // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A5[0x5];                                     // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseTutoOperation_ReturnValue;           // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MiniTipsStopDraw_ReturnValue;             // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A6[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetMakeEventActorArray_ReturnValue_1;     // 0x01E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A7[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BackGroundEffect_C> CallFunc_CalledAtEventStart_self_CastInput;        // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalledAtEventStart_Dummy;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A8[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A9[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0248(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Mesh_C>           K2Node_DynamicCast_AsBPI_Mesh;                     // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AA[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RedStringMeshSpawner_C*             CallFunc_Array_Get_Item_2;                         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AB[0x1];                                     // 0x028B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AC[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0294(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AD[0x3];                                     // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AE[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MakeEventActorBase_C*               K2Node_DynamicCast_AsBP_Make_Event_Actor_Base;     // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AF[0x3];                                     // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StartCutScene) == 0x000010, "Wrong alignment on BP_EventManager_C_StartCutScene");
static_assert(sizeof(BP_EventManager_C_StartCutScene) == 0x000350, "Wrong size on BP_EventManager_C_StartCutScene");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CutsceneName) == 0x000000, "Member 'BP_EventManager_C_StartCutScene::CutsceneName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, IsBPEvent) == 0x000010, "Member 'BP_EventManager_C_StartCutScene::IsBPEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, LocalMakeEventList) == 0x000018, "Member 'BP_EventManager_C_StartCutScene::LocalMakeEventList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, TmpPlayerList) == 0x000028, "Member 'BP_EventManager_C_StartCutScene::TmpPlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Conv_BoolToString_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetMovieManager_AsBP_Movie_Manager) == 0x000078, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetMovieManager_AsBP_Movie_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_EventManager_C_StartCutScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetManaTextureNative_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetManaTextureNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'BP_EventManager_C_StartCutScene::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetStageManager_Manager) == 0x000098, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetStageManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_3) == 0x0000A1, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetUserParamManager_UserParamManager) == 0x0000A8, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_4) == 0x0000B0, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetOptionParam_ReturnValue) == 0x0000B8, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetOptionParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_5) == 0x0000C0, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetCameraYaw_ReturnValue) == 0x0000C1, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetCameraYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetCameraPitch_ReturnValue) == 0x0000C2, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetCameraPitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetNpcManager_NpcManager) == 0x0000E0, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetNpcManager_NpcManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_6) == 0x0000E8, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_AsNpc_Town_People) == 0x0000F0, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_AsNpc_Town_People' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Greater_IntInt_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_AsAction_Icon) == 0x000108, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_AsAction_Icon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetLevelManager_LevelManager) == 0x000118, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_7) == 0x000120, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue) == 0x000121, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'BP_EventManager_C_StartCutScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_8) == 0x000128, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Add_IntInt_ReturnValue) == 0x00012C, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetStageParameterSettingManager_SettingManager) == 0x000130, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetStageParameterSettingManager_SettingManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, Temp_int_Loop_Counter_Variable_1) == 0x000138, "Member 'BP_EventManager_C_StartCutScene::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_9) == 0x00013C, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Add_IntInt_ReturnValue_1) == 0x000140, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetUserParamManager_UserParamManager_1) == 0x000148, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetUserParamManager_UserParamManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetMakeEventActorArray_ReturnValue) == 0x000150, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetMakeEventActorArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_10) == 0x000160, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Length_ReturnValue_2) == 0x000164, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetBrainMessageParamManager_ReturnValue) == 0x000168, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetBrainMessageParamManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000170, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_11) == 0x000171, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Length_ReturnValue_3) == 0x000180, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_AsEvent_Interface) == 0x000188, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Less_IntInt_ReturnValue) == 0x000199, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_EventStart_ReturnValue) == 0x00019A, "Member 'BP_EventManager_C_StartCutScene::CallFunc_EventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'BP_EventManager_C_StartCutScene::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetHUDMainGame_HUDMainGame) == 0x0001D0, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Not_PreBool_ReturnValue) == 0x0001D8, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_12) == 0x0001D9, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_CloseTutoOperation_ReturnValue) == 0x0001DA, "Member 'BP_EventManager_C_StartCutScene::CallFunc_CloseTutoOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_MiniTipsStopDraw_ReturnValue) == 0x0001DB, "Member 'BP_EventManager_C_StartCutScene::CallFunc_MiniTipsStopDraw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetInputManager_BP_InputManager) == 0x0001E0, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetMakeEventActorArray_ReturnValue_1) == 0x0001E8, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetMakeEventActorArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_13) == 0x0001F8, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Get_Item_1) == 0x000200, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetObjectName_ReturnValue) == 0x000208, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetParticleManager_Particle_Manager) == 0x000218, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_CalledAtEventStart_self_CastInput) == 0x000220, "Member 'BP_EventManager_C_StartCutScene::CallFunc_CalledAtEventStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_CalledAtEventStart_Dummy) == 0x000230, "Member 'BP_EventManager_C_StartCutScene::CallFunc_CalledAtEventStart_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, Temp_int_Variable) == 0x000234, "Member 'BP_EventManager_C_StartCutScene::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetPlayerManager_PlayerManager) == 0x000238, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Add_IntInt_ReturnValue_2) == 0x000240, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetPlayerList_ReturnValue) == 0x000248, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_AsBPI_Mesh) == 0x000258, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_AsBPI_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_bSuccess_3) == 0x000268, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Get_Item_2) == 0x000270, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000278, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Length_ReturnValue_4) == 0x000280, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Length_ReturnValue_5) == 0x000284, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Less_IntInt_ReturnValue_1) == 0x000288, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000289, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_IsValid_ReturnValue_14) == 0x00028A, "Member 'BP_EventManager_C_StartCutScene::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, Temp_int_Loop_Num_Variable) == 0x00028C, "Member 'BP_EventManager_C_StartCutScene::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Less_IntInt_ReturnValue_2) == 0x000290, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000294, "Member 'BP_EventManager_C_StartCutScene::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00031C, "Member 'BP_EventManager_C_StartCutScene::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, Temp_int_Array_Index_Variable_2) == 0x000320, "Member 'BP_EventManager_C_StartCutScene::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, Temp_int_Loop_Counter_Variable_2) == 0x000324, "Member 'BP_EventManager_C_StartCutScene::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Get_Item_3) == 0x000328, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Array_Length_ReturnValue_6) == 0x000330, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Less_IntInt_ReturnValue_3) == 0x000334, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_AsBP_Make_Event_Actor_Base) == 0x000338, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_AsBP_Make_Event_Actor_Base' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, K2Node_DynamicCast_bSuccess_4) == 0x000340, "Member 'BP_EventManager_C_StartCutScene::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_Add_IntInt_ReturnValue_3) == 0x000344, "Member 'BP_EventManager_C_StartCutScene::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutScene, CallFunc_GetPlayerController_ReturnValue) == 0x000348, "Member 'BP_EventManager_C_StartCutScene::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnSequencerFinished
// 0x0158 (0x0158 - 0x0000)
struct BP_EventManager_C_OnSequencerFinished final
{
public:
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B1[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B2[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B3[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B4[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B5[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCharacterVisibility_bDummy;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B6[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B7[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCameraComponent* CameraComponent)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_33B8[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B9[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x00F0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BA[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BB[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BC[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BD[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnSequencerFinished) == 0x000008, "Wrong alignment on BP_EventManager_C_OnSequencerFinished");
static_assert(sizeof(BP_EventManager_C_OnSequencerFinished) == 0x000158, "Wrong size on BP_EventManager_C_OnSequencerFinished");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, PlayerList) == 0x000000, "Member 'BP_EventManager_C_OnSequencerFinished::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventManager_C_OnSequencerFinished::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EventManager_C_OnSequencerFinished::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_BitShiftLeft_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_EventManager_C_OnSequencerFinished::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetSequencePlayer_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000030, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_EventManager_C_OnSequencerFinished::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetSoundManager_SoundManager) == 0x000048, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetAllActorsWithTag_OutActors) == 0x000058, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000080, "Member 'BP_EventManager_C_OnSequencerFinished::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_EventManager_C_OnSequencerFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_SetCharacterVisibility_bDummy) == 0x000092, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_SetCharacterVisibility_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_IsValid_ReturnValue_2) == 0x000093, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Array_Length_ReturnValue_2) == 0x000094, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_EventManager_C_OnSequencerFinished::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_IsInViewport_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000B1, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'BP_EventManager_C_OnSequencerFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'BP_EventManager_C_OnSequencerFinished::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0000D8, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_IsValid_ReturnValue_3) == 0x0000E0, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetPlayerManager_PlayerManager) == 0x0000E8, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetPlayerList_ReturnValue) == 0x0000F0, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetAttachedActors_OutActors) == 0x000100, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Array_Length_ReturnValue_3) == 0x000110, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_GetObjectName_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Array_Length_ReturnValue_4) == 0x000128, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Contains_ReturnValue) == 0x00012C, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, Temp_int_Variable) == 0x000130, "Member 'BP_EventManager_C_OnSequencerFinished::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Add_IntInt_ReturnValue_2) == 0x000134, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Less_IntInt_ReturnValue_1) == 0x000140, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_And_IntInt_ReturnValue) == 0x000144, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000148, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, Temp_int_Loop_Num_Variable) == 0x00014C, "Member 'BP_EventManager_C_OnSequencerFinished::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, K2Node_SwitchEnum_CmpSuccess) == 0x000150, "Member 'BP_EventManager_C_OnSequencerFinished::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSequencerFinished, CallFunc_Less_IntInt_ReturnValue_2) == 0x000151, "Member 'BP_EventManager_C_OnSequencerFinished::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnLoadSequencerFinish
// 0x0120 (0x0120 - 0x0000)
struct BP_EventManager_C_OnLoadSequencerFinish final
{
public:
	class ULevelSequence*                         Level_Sequence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    LocalPlayerManager;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BF[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C0[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C1[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TDelegate<void(class UCameraComponent* CameraComponent)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C2[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList; // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList; // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C3[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C4[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_33C5[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_3;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_4;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetActiveFromShotName_ReturnValue;        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetActiveFromShotName_ReturnValue_1;      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C6[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0110(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_OnLoadSequencerFinish) == 0x000008, "Wrong alignment on BP_EventManager_C_OnLoadSequencerFinish");
static_assert(sizeof(BP_EventManager_C_OnLoadSequencerFinish) == 0x000120, "Wrong size on BP_EventManager_C_OnLoadSequencerFinish");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, Level_Sequence) == 0x000000, "Member 'BP_EventManager_C_OnLoadSequencerFinish::Level_Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, LocalPlayerManager) == 0x000008, "Member 'BP_EventManager_C_OnLoadSequencerFinish::LocalPlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSoundManager_SoundManager) == 0x000018, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetMainPlayer_Player) == 0x000028, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_IsValid_ReturnValue_3) == 0x000038, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetPlayerID_self_CastInput) == 0x000040, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetPlayerID_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000052, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_EventManager_C_OnLoadSequencerFinish::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'BP_EventManager_C_OnLoadSequencerFinish::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x000078, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x000088, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequencePlayer_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList) == 0x000098, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList) == 0x0000A8, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind) == 0x0000B8, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_IsValid_ReturnValue_4) == 0x0000B9, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequence_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_IsValid_ReturnValue_5) == 0x0000C8, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000CC, "Member 'BP_EventManager_C_OnLoadSequencerFinish::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0000E0, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x0000E8, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequencePlayer_ReturnValue_3) == 0x0000F0, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_GetSequencePlayer_ReturnValue_4) == 0x0000F8, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_GetSequencePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_SetActiveFromShotName_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_SetActiveFromShotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_SetActiveFromShotName_ReturnValue_1) == 0x000104, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_SetActiveFromShotName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, CallFunc_NotEqual_NameName_ReturnValue) == 0x000108, "Member 'BP_EventManager_C_OnLoadSequencerFinish::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnLoadSequencerFinish, K2Node_MakeArray_Array_1) == 0x000110, "Member 'BP_EventManager_C_OnLoadSequencerFinish::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnPlayStartStaticCutScene
// 0x01A8 (0x01A8 - 0x0000)
struct BP_EventManager_C_OnPlayStartStaticCutScene final
{
public:
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C7[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C8[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C9[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CA[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StaticEventStart_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CB[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableEventUnControlMgrFlag_ReturnValue;  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CC[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CD[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CE[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StaticEventStart_ReturnValue_1;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CF[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetExtraPlayerList_ReturnValue;           // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0100(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D0[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D1[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_2;            // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StaticEventStart_ReturnValue_2;           // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D2[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D3[0x2];                                     // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D4[0x2];                                     // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D5[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D6[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APostProcessVolume*>             CallFunc_GetWorldPostProcessVolume_ReturnValue;    // 0x0168(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APostProcessVolume*                     CallFunc_Array_Get_Item_2;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D7[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D8[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_3;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D9[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnPlayStartStaticCutScene) == 0x000008, "Wrong alignment on BP_EventManager_C_OnPlayStartStaticCutScene");
static_assert(sizeof(BP_EventManager_C_OnPlayStartStaticCutScene) == 0x0001A8, "Wrong size on BP_EventManager_C_OnPlayStartStaticCutScene");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, LEnemyList) == 0x000000, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, LPlayerList) == 0x000010, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Num_Variable) == 0x000044, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Array_Index_Variable_2) == 0x000054, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Array_Index_Variable_3) == 0x000058, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, K2Node_DynamicCast_AsEvent_Interface) == 0x000060, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Length_ReturnValue_2) == 0x000074, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_StaticEventStart_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_StaticEventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Counter_Variable_3) == 0x00007C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Add_IntInt_ReturnValue_3) == 0x000080, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Array_Index_Variable_4) == 0x000084, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_EnableEventUnControlMgrFlag_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_EnableEventUnControlMgrFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Counter_Variable_4) == 0x00008C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Add_IntInt_ReturnValue_4) == 0x000094, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Length_ReturnValue_3) == 0x00009C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, K2Node_DynamicCast_AsEvent_Interface_1) == 0x0000A0, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_StaticEventStart_ReturnValue_1) == 0x0000B1, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_StaticEventStart_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_GetPlayerManager_PlayerManager) == 0x0000B8, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_GetExtraPlayerList_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_GetExtraPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Num_Variable_1) == 0x0000D0, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Length_ReturnValue_4) == 0x0000D4, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_GetEnemyManager_Manager) == 0x0000D8, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_GetEnemyList_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Num_Variable_2) == 0x0000F0, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Counter_Variable_5) == 0x0000F4, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_GetPlayerManager_PlayerManager_1) == 0x0000F8, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_GetPlayerList_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Less_IntInt_ReturnValue_2) == 0x000110, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Add_IntInt_ReturnValue_5) == 0x000114, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Array_Index_Variable_5) == 0x000118, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, K2Node_DynamicCast_AsEvent_Interface_2) == 0x000120, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::K2Node_DynamicCast_AsEvent_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, K2Node_DynamicCast_bSuccess_2) == 0x000130, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_IsValid_ReturnValue_1) == 0x000131, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_StaticEventStart_ReturnValue_2) == 0x000132, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_StaticEventStart_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_IsValid_ReturnValue_2) == 0x000133, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Get_Item) == 0x000138, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Length_ReturnValue_5) == 0x000140, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_IsValid_ReturnValue_3) == 0x000144, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Less_IntInt_ReturnValue_3) == 0x000145, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Length_ReturnValue_6) == 0x000150, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_IsValid_ReturnValue_4) == 0x000154, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Less_IntInt_ReturnValue_4) == 0x000155, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Loop_Counter_Variable_6) == 0x000158, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_IsValid_ReturnValue_5) == 0x00015C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Less_IntInt_ReturnValue_5) == 0x00015D, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Add_IntInt_ReturnValue_6) == 0x000160, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_GetWorldPostProcessVolume_ReturnValue) == 0x000168, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_GetWorldPostProcessVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Get_Item_2) == 0x000178, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Length_ReturnValue_7) == 0x000180, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Less_IntInt_ReturnValue_6) == 0x000184, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, Temp_int_Array_Index_Variable_6) == 0x000188, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Get_Item_3) == 0x000190, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_IsValid_ReturnValue_6) == 0x000198, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, CallFunc_Array_Add_ReturnValue) == 0x00019C, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartStaticCutScene, K2Node_SwitchEnum_CmpSuccess) == 0x0001A0, "Member 'BP_EventManager_C_OnPlayStartStaticCutScene::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnFinishStaticCutScene
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EventManager_C_OnFinishStaticCutScene final
{
public:
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutSceneEvent_IsCutSceneEvent;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DA[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetMakeEventActorArray_ReturnValue;       // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BackGroundEffect_C> CallFunc_CalledAtEventEnd_self_CastInput;          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalledAtEventEnd_Dummy;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DB[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DC[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DD[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DE[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DF[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E0[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APostProcessVolume*                     CallFunc_Array_Get_Item_3;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E1[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnFinishStaticCutScene) == 0x000008, "Wrong alignment on BP_EventManager_C_OnFinishStaticCutScene");
static_assert(sizeof(BP_EventManager_C_OnFinishStaticCutScene) == 0x0000D8, "Wrong size on BP_EventManager_C_OnFinishStaticCutScene");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, PlayerList) == 0x000000, "Member 'BP_EventManager_C_OnFinishStaticCutScene::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventManager_C_OnFinishStaticCutScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_EventManager_C_OnFinishStaticCutScene::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EventManager_C_OnFinishStaticCutScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_EventManager_C_OnFinishStaticCutScene::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_IsCutSceneEvent_IsCutSceneEvent) == 0x000029, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_IsCutSceneEvent_IsCutSceneEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'BP_EventManager_C_OnFinishStaticCutScene::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_GetMakeEventActorArray_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_GetMakeEventActorArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_GetParticleManager_Particle_Manager) == 0x000040, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_CalledAtEventEnd_self_CastInput) == 0x000060, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_CalledAtEventEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_CalledAtEventEnd_Dummy) == 0x000070, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_CalledAtEventEnd_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000078, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_IsValid_ReturnValue_2) == 0x00009C, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_IsValid_ReturnValue_3) == 0x0000A8, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_IsValid_ReturnValue_4) == 0x0000A9, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, Temp_int_Loop_Counter_Variable_2) == 0x0000B4, "Member 'BP_EventManager_C_OnFinishStaticCutScene::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000BC, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Array_Get_Item_3) == 0x0000C0, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Array_Length_ReturnValue_2) == 0x0000C8, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CC, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Array_Length_ReturnValue_3) == 0x0000D0, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishStaticCutScene, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_EventManager_C_OnFinishStaticCutScene::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnPlayStartDynamicCutScene
// 0x0110 (0x0110 - 0x0000)
struct BP_EventManager_C_OnPlayStartDynamicCutScene final
{
public:
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableEventUnControlMgrFlag_ReturnValue;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E2[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E3[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventStart_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E4[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E5[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E6[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E7[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetExtraPlayerList_ReturnValue;           // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E8[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_2;            // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventStart_ReturnValue_1;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventStart_ReturnValue_2;          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E9[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x00E8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EA[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_Sound_Manager;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnPlayStartDynamicCutScene) == 0x000008, "Wrong alignment on BP_EventManager_C_OnPlayStartDynamicCutScene");
static_assert(sizeof(BP_EventManager_C_OnPlayStartDynamicCutScene) == 0x000110, "Wrong size on BP_EventManager_C_OnPlayStartDynamicCutScene");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, LPlayerList) == 0x000000, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_EnableEventUnControlMgrFlag_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_EnableEventUnControlMgrFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, Temp_int_Loop_Counter_Variable_2) == 0x00002C, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, K2Node_DynamicCast_AsEvent_Interface) == 0x000040, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_DynamicEventStart_ReturnValue) == 0x000051, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_DynamicEventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_GetPostProcessManager_Manager) == 0x000060, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, Temp_int_Loop_Num_Variable) == 0x00006C, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_GetEnemyManager_Manager) == 0x000078, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_GetPlayerManager_PlayerManager) == 0x000080, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_GetEnemyList_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_GetExtraPlayerList_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_GetExtraPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, K2Node_DynamicCast_AsEvent_Interface_1) == 0x0000B0, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, K2Node_DynamicCast_AsEvent_Interface_2) == 0x0000C8, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::K2Node_DynamicCast_AsEvent_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_DynamicEventStart_ReturnValue_1) == 0x0000D9, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_DynamicEventStart_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_DynamicEventStart_ReturnValue_2) == 0x0000DA, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_DynamicEventStart_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_IsValid_ReturnValue_1) == 0x0000DB, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Array_Length_ReturnValue_2) == 0x0000E0, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_GetPlayerList_ReturnValue) == 0x0000E8, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F8, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_GetSoundManager_Sound_Manager) == 0x000100, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_GetSoundManager_Sound_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, CallFunc_IsValid_ReturnValue_2) == 0x000108, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPlayStartDynamicCutScene, K2Node_SwitchEnum_CmpSuccess) == 0x000109, "Member 'BP_EventManager_C_OnPlayStartDynamicCutScene::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnFinishDynamicCutScene
// 0x0208 (0x0208 - 0x0000)
struct BP_EventManager_C_OnFinishDynamicCutScene final
{
public:
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EC[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableEventUnControlMgrFlag_ReturnValue;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33ED[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0068(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EE[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EF[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F0[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue_1;               // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F1[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F2[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventEnd_ReturnValue;              // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F3[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCutSceneEvent_IsCutSceneEvent;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F4[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetMakeEventActorArray_ReturnValue;       // 0x0118(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F5[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F6[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BackGroundEffect_C> CallFunc_CalledAtEventEnd_self_CastInput;          // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalledAtEventEnd_Dummy;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F7[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue_1;              // 0x0178(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetExtraPlayerList_ReturnValue;           // 0x0188(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character_1;         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F8[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventEnd_ReturnValue_1;            // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F9[0x1];                                     // 0x01BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FA[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue_2;              // 0x01C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_3;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FB[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_2;            // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventEnd_ReturnValue_2;            // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FC[0x5];                                     // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_OnFinishDynamicCutScene) == 0x000008, "Wrong alignment on BP_EventManager_C_OnFinishDynamicCutScene");
static_assert(sizeof(BP_EventManager_C_OnFinishDynamicCutScene) == 0x000208, "Wrong size on BP_EventManager_C_OnFinishDynamicCutScene");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, PlayerList) == 0x000000, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Array_Index_Variable_2) == 0x000034, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Counter_Variable_2) == 0x000038, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_bool_Variable) == 0x00003C, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003D, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Num_Variable_2) == 0x000044, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Counter_Variable_3) == 0x000048, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Add_IntInt_ReturnValue_3) == 0x00004C, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Array_Index_Variable_3) == 0x000050, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Array_Index_Variable_4) == 0x000054, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetPlayerManager_PlayerManager) == 0x000058, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_EnableEventUnControlMgrFlag_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_EnableEventUnControlMgrFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetPlayerList_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Array_Index_Variable_5) == 0x00007C, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_AsRSBattle_Player) == 0x000088, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000091, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000092, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Counter_Variable_4) == 0x000094, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Less_IntInt_ReturnValue_2) == 0x000098, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Add_IntInt_ReturnValue_4) == 0x00009C, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_bool_Variable_1) == 0x0000A0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetEnemyManager_Manager) == 0x0000A8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetEnemyList_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetEnemyList_ReturnValue_1) == 0x0000C0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetEnemyList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Contains_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_AsEvent_Interface) == 0x0000E0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Contains_ReturnValue_1) == 0x0000F1, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_AsRSBattle_Character) == 0x0000F8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Not_PreBool_ReturnValue) == 0x000101, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_Select_Default) == 0x000102, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_DynamicEventEnd_ReturnValue) == 0x000103, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_DynamicEventEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Length_ReturnValue_1) == 0x000104, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Less_IntInt_ReturnValue_3) == 0x000108, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Length_ReturnValue_2) == 0x00010C, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_IsCutSceneEvent_IsCutSceneEvent) == 0x000110, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_IsCutSceneEvent_IsCutSceneEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Not_PreBool_ReturnValue_1) == 0x000111, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetMakeEventActorArray_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetMakeEventActorArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, Temp_int_Loop_Counter_Variable_5) == 0x000128, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Get_Item_2) == 0x000130, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetObjectName_ReturnValue) == 0x000138, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Less_IntInt_ReturnValue_4) == 0x000148, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Add_IntInt_ReturnValue_5) == 0x00014C, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetParticleManager_Particle_Manager) == 0x000150, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000158, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_CalledAtEventEnd_self_CastInput) == 0x000160, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_CalledAtEventEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_CalledAtEventEnd_Dummy) == 0x000170, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_CalledAtEventEnd_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetPlayerList_ReturnValue_1) == 0x000178, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetPlayerList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetExtraPlayerList_ReturnValue) == 0x000188, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetExtraPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_AsRSBattle_Character_1) == 0x000198, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_AsRSBattle_Character_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_AsEvent_Interface_1) == 0x0001A8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_bSuccess_4) == 0x0001B8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_DynamicEventEnd_ReturnValue_1) == 0x0001B9, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_DynamicEventEnd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_IsValid_ReturnValue) == 0x0001BA, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Length_ReturnValue_3) == 0x0001BC, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Length_ReturnValue_4) == 0x0001C0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetPlayerList_ReturnValue_2) == 0x0001C8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetPlayerList_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Get_Item_3) == 0x0001D8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Array_Length_ReturnValue_5) == 0x0001E0, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_AsEvent_Interface_2) == 0x0001E8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_AsEvent_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, K2Node_DynamicCast_bSuccess_5) == 0x0001F8, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_Less_IntInt_ReturnValue_5) == 0x0001F9, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_DynamicEventEnd_ReturnValue_2) == 0x0001FA, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_DynamicEventEnd_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnFinishDynamicCutScene, CallFunc_GetPostProcessManager_Manager) == 0x000200, "Member 'BP_EventManager_C_OnFinishDynamicCutScene::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetScreenCaptureTexture
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_GetScreenCaptureTexture final
{
public:
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetScreenCaptureTexture) == 0x000008, "Wrong alignment on BP_EventManager_C_GetScreenCaptureTexture");
static_assert(sizeof(BP_EventManager_C_GetScreenCaptureTexture) == 0x000008, "Wrong size on BP_EventManager_C_GetScreenCaptureTexture");
static_assert(offsetof(BP_EventManager_C_GetScreenCaptureTexture, RenderTarget) == 0x000000, "Member 'BP_EventManager_C_GetScreenCaptureTexture::RenderTarget' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CalcMainScenePostProcess
// 0x16A0 (0x16A0 - 0x0000)
struct BP_EventManager_C_CalcMainScenePostProcess final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   PostProcessSetting;                                // 0x0010(0x0780)(Parm, OutParm)
	struct FPostProcessSettings                   CallFunc_CalcScenePostProcessVolume_ReturnValue;   // 0x0790(0x0780)()
	struct FPostProcessSettings                   CallFunc_CalcPostProcessVolume_ReturnValue;        // 0x0F10(0x0780)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CalcMainScenePostProcess) == 0x000010, "Wrong alignment on BP_EventManager_C_CalcMainScenePostProcess");
static_assert(sizeof(BP_EventManager_C_CalcMainScenePostProcess) == 0x0016A0, "Wrong size on BP_EventManager_C_CalcMainScenePostProcess");
static_assert(offsetof(BP_EventManager_C_CalcMainScenePostProcess, Location) == 0x000000, "Member 'BP_EventManager_C_CalcMainScenePostProcess::Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcMainScenePostProcess, PostProcessSetting) == 0x000010, "Member 'BP_EventManager_C_CalcMainScenePostProcess::PostProcessSetting' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcMainScenePostProcess, CallFunc_CalcScenePostProcessVolume_ReturnValue) == 0x000790, "Member 'BP_EventManager_C_CalcMainScenePostProcess::CallFunc_CalcScenePostProcessVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcMainScenePostProcess, CallFunc_CalcPostProcessVolume_ReturnValue) == 0x000F10, "Member 'BP_EventManager_C_CalcMainScenePostProcess::CallFunc_CalcPostProcessVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcMainScenePostProcess, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001690, "Member 'BP_EventManager_C_CalcMainScenePostProcess::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupBinding
// 0x0240 (0x0240 - 0x0000)
struct BP_EventManager_C_SetupBinding final
{
public:
	bool                                          LightweightBinding;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               EnemyList;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FF[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3400[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3401[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventBeforeBindCharacter_ReturnValue; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3402[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEventVisible_ReturnValue;              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3403[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBattleReady_bDummy;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3404[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBattleReady_bDummy_1;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3405[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3406[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableEventUnControlMgrFlag_ReturnValue;  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3407[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3408[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3409[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340A[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340B[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_2;            // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventBeforeBindCharacter_ReturnValue_1; // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340C[0x2];                                     // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340D[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340E[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_SetupBinding_BindindInGamePlayers;        // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_SetupBinding_NoBindindInGamePlayers;      // 0x0170(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ABP_MenuPlayerBase_C*>           CallFunc_SetupBinding_BindingSpawnInstance;        // 0x0180(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ASkeletalMeshActor*>             CallFunc_SetupBinding_BindingSpawnWeaponInstance;  // 0x0190(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340F[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3410[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventEnemy_IsBinding;              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3411[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x01D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x01E0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3412[0x2];                                     // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue_1;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3413[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3414[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCharacterVisibility_bDummy;            // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3415[0x1];                                     // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupBinding) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupBinding");
static_assert(sizeof(BP_EventManager_C_SetupBinding) == 0x000240, "Wrong size on BP_EventManager_C_SetupBinding");
static_assert(offsetof(BP_EventManager_C_SetupBinding, LightweightBinding) == 0x000000, "Member 'BP_EventManager_C_SetupBinding::LightweightBinding' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, EnemyList) == 0x000008, "Member 'BP_EventManager_C_SetupBinding::EnemyList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, PlayerList) == 0x000018, "Member 'BP_EventManager_C_SetupBinding::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_AsEvent_Interface) == 0x000058, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_DynamicEventBeforeBindCharacter_ReturnValue) == 0x000069, "Member 'BP_EventManager_C_SetupBinding::CallFunc_DynamicEventBeforeBindCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_AsEvent_Interface_1) == 0x000070, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_SetEventVisible_ReturnValue) == 0x000081, "Member 'BP_EventManager_C_SetupBinding::CallFunc_SetEventVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_AsRSBattle_Player) == 0x000088, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_SetBattleReady_bDummy) == 0x000091, "Member 'BP_EventManager_C_SetupBinding::CallFunc_SetBattleReady_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x000098, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_SetBattleReady_bDummy_1) == 0x0000A1, "Member 'BP_EventManager_C_SetupBinding::CallFunc_SetBattleReady_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GetObjectName_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Num_Variable_1) == 0x0000D0, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Counter_Variable_2) == 0x0000D4, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Array_Index_Variable_2) == 0x0000DC, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Array_Index_Variable_3) == 0x0000E0, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_BitShiftLeft_ReturnValue) == 0x0000E4, "Member 'BP_EventManager_C_SetupBinding::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_EnableEventUnControlMgrFlag_ReturnValue) == 0x0000E8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_EnableEventUnControlMgrFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Array_Index_Variable_4) == 0x0000EC, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_BitShiftLeft_ReturnValue_1) == 0x0000F0, "Member 'BP_EventManager_C_SetupBinding::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GetSequence_ReturnValue) == 0x0000F8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GetObjectName_ReturnValue_1) == 0x000100, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_FindSubstring_ReturnValue) == 0x000110, "Member 'BP_EventManager_C_SetupBinding::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000114, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_2) == 0x000118, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_3) == 0x00011C, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Array_Index_Variable_5) == 0x000120, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000124, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_4) == 0x000128, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_AsEvent_Interface_2) == 0x000130, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_AsEvent_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_bSuccess_4) == 0x000140, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_DynamicEventBeforeBindCharacter_ReturnValue_1) == 0x000141, "Member 'BP_EventManager_C_SetupBinding::CallFunc_DynamicEventBeforeBindCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Counter_Variable_3) == 0x000144, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Less_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Add_IntInt_ReturnValue_3) == 0x00014C, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_5) == 0x000154, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_IsValid_ReturnValue_1) == 0x000158, "Member 'BP_EventManager_C_SetupBinding::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Or_IntInt_ReturnValue) == 0x00015C, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_SetupBinding_BindindInGamePlayers) == 0x000160, "Member 'BP_EventManager_C_SetupBinding::CallFunc_SetupBinding_BindindInGamePlayers' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_SetupBinding_NoBindindInGamePlayers) == 0x000170, "Member 'BP_EventManager_C_SetupBinding::CallFunc_SetupBinding_NoBindindInGamePlayers' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_SetupBinding_BindingSpawnInstance) == 0x000180, "Member 'BP_EventManager_C_SetupBinding::CallFunc_SetupBinding_BindingSpawnInstance' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_SetupBinding_BindingSpawnWeaponInstance) == 0x000190, "Member 'BP_EventManager_C_SetupBinding::CallFunc_SetupBinding_BindingSpawnWeaponInstance' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Find_ReturnValue) == 0x0001A0, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0001A4, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_6) == 0x0001A8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_7) == 0x0001AC, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0001B0, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Counter_Variable_4) == 0x0001B4, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_BindingEventEnemy_IsBinding) == 0x0001B8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_BindingEventEnemy_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001BC, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GetEnemyManager_Manager) == 0x0001C0, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GetPlayerManager_PlayerManager) == 0x0001C8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GetEnemyList_ReturnValue) == 0x0001D0, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_GetPlayerList_ReturnValue) == 0x0001E0, "Member 'BP_EventManager_C_SetupBinding::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Counter_Variable_5) == 0x0001F0, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Num_Variable_2) == 0x0001F4, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001F8, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001F9, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001FC, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, Temp_int_Loop_Num_Variable_3) == 0x000200, "Member 'BP_EventManager_C_SetupBinding::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Or_IntInt_ReturnValue_1) == 0x000204, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Or_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Less_IntInt_ReturnValue_4) == 0x000208, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_8) == 0x00020C, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Get_Item) == 0x000210, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000218, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000220, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, K2Node_DynamicCast_bSuccess_5) == 0x000230, "Member 'BP_EventManager_C_SetupBinding::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_SetCharacterVisibility_bDummy) == 0x000231, "Member 'BP_EventManager_C_SetupBinding::CallFunc_SetCharacterVisibility_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_IsValid_ReturnValue_2) == 0x000232, "Member 'BP_EventManager_C_SetupBinding::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Array_Length_ReturnValue_9) == 0x000234, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupBinding, CallFunc_Less_IntInt_ReturnValue_5) == 0x000238, "Member 'BP_EventManager_C_SetupBinding::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SettingCapture
// 0x0088 (0x0088 - 0x0000)
struct BP_EventManager_C_SettingCapture final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BoadMeshIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CapturePresetName;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaAnimationName;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaFaceAnimationName;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NpcMeshTableID;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NpcMaterialTableID;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LightPresetName;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CaptureSequence;                                   // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaptureSequencePosition;                           // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TextureRowName;                                    // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStaticPlType                                 StaticPlType;                                      // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3416[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MovieTextureRowName;                               // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseSaveTexture;                                  // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSeamlessInGameCapture;                           // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHiddenPlFrameEffect;                             // 0x0052(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3417[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CharaEyePresetName;                                // 0x0054(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeXAxisThreshold;                                 // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeYAxisThreshold;                                 // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaPartsDTRowName;                               // 0x0064(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventCaptureRenderType                       RenderType;                                        // 0x006C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3418[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ToneMapCounterValue;                               // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3419[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SettingCapture) == 0x000008, "Wrong alignment on BP_EventManager_C_SettingCapture");
static_assert(sizeof(BP_EventManager_C_SettingCapture) == 0x000088, "Wrong size on BP_EventManager_C_SettingCapture");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SettingCapture::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, BoadMeshIndex) == 0x000004, "Member 'BP_EventManager_C_SettingCapture::BoadMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CapturePresetName) == 0x000008, "Member 'BP_EventManager_C_SettingCapture::CapturePresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CharaAnimationName) == 0x000010, "Member 'BP_EventManager_C_SettingCapture::CharaAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CharaFaceAnimationName) == 0x000018, "Member 'BP_EventManager_C_SettingCapture::CharaFaceAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, NpcMeshTableID) == 0x000020, "Member 'BP_EventManager_C_SettingCapture::NpcMeshTableID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, NpcMaterialTableID) == 0x000024, "Member 'BP_EventManager_C_SettingCapture::NpcMaterialTableID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, LightPresetName) == 0x000028, "Member 'BP_EventManager_C_SettingCapture::LightPresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CaptureSequence) == 0x000030, "Member 'BP_EventManager_C_SettingCapture::CaptureSequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CaptureSequencePosition) == 0x000038, "Member 'BP_EventManager_C_SettingCapture::CaptureSequencePosition' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, TextureRowName) == 0x00003C, "Member 'BP_EventManager_C_SettingCapture::TextureRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, StaticPlType) == 0x000044, "Member 'BP_EventManager_C_SettingCapture::StaticPlType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, MovieTextureRowName) == 0x000048, "Member 'BP_EventManager_C_SettingCapture::MovieTextureRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, IsUseSaveTexture) == 0x000050, "Member 'BP_EventManager_C_SettingCapture::IsUseSaveTexture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, IsSeamlessInGameCapture) == 0x000051, "Member 'BP_EventManager_C_SettingCapture::IsSeamlessInGameCapture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, IsHiddenPlFrameEffect) == 0x000052, "Member 'BP_EventManager_C_SettingCapture::IsHiddenPlFrameEffect' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CharaEyePresetName) == 0x000054, "Member 'BP_EventManager_C_SettingCapture::CharaEyePresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, EyeXAxisThreshold) == 0x00005C, "Member 'BP_EventManager_C_SettingCapture::EyeXAxisThreshold' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, EyeYAxisThreshold) == 0x000060, "Member 'BP_EventManager_C_SettingCapture::EyeYAxisThreshold' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CharaPartsDTRowName) == 0x000064, "Member 'BP_EventManager_C_SettingCapture::CharaPartsDTRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, RenderType) == 0x00006C, "Member 'BP_EventManager_C_SettingCapture::RenderType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, ToneMapCounterValue) == 0x000070, "Member 'BP_EventManager_C_SettingCapture::ToneMapCounterValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000074, "Member 'BP_EventManager_C_SettingCapture::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_EventManager_C_SettingCapture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCapture, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_SettingCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayBoardAnimation
// 0x0140 (0x0140 - 0x0000)
struct BP_EventManager_C_PlayBoardAnimation final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BoardAnimationIndex;                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341B[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             PlayRateCurveData;                                 // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341D[0xF];                                     // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341E[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBoardAnimation_IsSuccess;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341F[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3420[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayBoardAnimation) == 0x000010, "Wrong alignment on BP_EventManager_C_PlayBoardAnimation");
static_assert(sizeof(BP_EventManager_C_PlayBoardAnimation) == 0x000140, "Wrong size on BP_EventManager_C_PlayBoardAnimation");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_PlayBoardAnimation::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, BoardAnimationIndex) == 0x000008, "Member 'BP_EventManager_C_PlayBoardAnimation::BoardAnimationIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, IsLoop) == 0x000018, "Member 'BP_EventManager_C_PlayBoardAnimation::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, SocketName) == 0x00001C, "Member 'BP_EventManager_C_PlayBoardAnimation::SocketName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, PlayRateCurveData) == 0x000028, "Member 'BP_EventManager_C_PlayBoardAnimation::PlayRateCurveData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'BP_EventManager_C_PlayBoardAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_PlayBoardAnimation_IsSuccess) == 0x0000A0, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_PlayBoardAnimation_IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000A4, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00012C, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_GetBP_static_pl_AsCharacter) == 0x000130, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardAnimation, CallFunc_IsValid_ReturnValue_1) == 0x000139, "Member 'BP_EventManager_C_PlayBoardAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndCutScene
// 0x0840 (0x0840 - 0x0000)
struct BP_EventManager_C_EndCutScene final
{
public:
	bool                                          IsEndEvent;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3421[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerCameraBlendTime;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      PlayerCameraBlendFunc;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3422[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerCameraBlendExp;                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkipENPCCamRowName;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipENPCEvent;                                   // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3423[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             L_plyTransform;                                    // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSCharacterBase*                       Character;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LocalSequenceActor;                                // 0x0068(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3424[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3425[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StageManager_C*                     CallFunc_GetStageManager_Manager;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3426[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3427[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3428[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue_1;                     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3429[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342A[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342B[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlatFormConsoleType                          CallFunc_GetPlatformConsoleType_ReturnValue;       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342C[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342D[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSPartyPlayerKind                            CallFunc_GetPartyPlayerKind_ReturnValue;           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342E[0x1];                                     // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERSPartyPlayerKind                            Temp_byte_Variable;                                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342F[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3430[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager_1;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3431[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm, HasGetValueTypeHash)
	uint8                                         Pad_3432[0x8];                                     // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3433[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3434[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNpcManager*                            CallFunc_GetNpcManager_NpcManager;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3435[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANpcTownPeople*                         K2Node_DynamicCast_AsNpc_Town_People;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3436[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3437[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActionIcon*                            K2Node_DynamicCast_AsAction_Icon;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3438[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3439[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343A[0xC];                                     // 0x0244(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343B[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343C[0x5];                                     // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343D[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleCourtMort_IsCourtMort;            // 0x02C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343E[0x1];                                     // 0x02C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343F[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3440[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SpecialStaticNodeActor_C*           K2Node_DynamicCast_AsBP_Special_Static_Node_Actor; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3441[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3442[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_co0300_C*                          K2Node_DynamicCast_AsABP_Co_0300;                  // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3443[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StageParameterSettingVolumeManager_C* CallFunc_GetStageParameterSettingManager_SettingManager; // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3444[0x6];                                     // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3445[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBrainMessageParamManager*              CallFunc_GetBrainMessageParamManager_ReturnValue;  // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3446[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3447[0x3];                                     // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3448[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3449[0x6];                                     // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0398(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	uint8                                         Pad_344A[0x8];                                     // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x03B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344B[0xF];                                     // 0x03E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x03F0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NewStaticNodeActor_C*               CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344C[0x4];                                     // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NewStaticNodeActor_C*               CallFunc_Array_Get_Item;                           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344D[0x3];                                     // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_2;         // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344E[0x3];                                     // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_3;         // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344F[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayTownName_result;                    // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEndAllMessage_IsEnd;                 // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3450[0x4];                                     // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0480(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NameWidgetActor_C*                  CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3451[0x3];                                     // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_4;         // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue_1;              // 0x04D0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3452[0x4];                                     // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x04E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventEnd_ReturnValue;                     // 0x04FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x04FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3453[0x4];                                     // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMessageHudManager*                     CallFunc_GetMessageHudManager_MessageHudManager;   // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Mesh_C>           K2Node_DynamicCast_AsBPI_Mesh;                     // 0x0508(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3454[0x6];                                     // 0x051A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0520(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3455[0x3];                                     // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RedStringMeshSpawner_C*             CallFunc_Array_Get_Item_1;                         // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3456[0x3];                                     // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3457[0x3];                                     // 0x054D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item_2;                         // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3458[0x3];                                     // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3459[0x3];                                     // 0x0565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_3;                         // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345A[0x3];                                     // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345B[0x3];                                     // 0x057D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventAssetPoolComponent*               CallFunc_GetAssetPool_ReturnValue;                 // 0x0580(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345C[0xC];                                     // 0x0594(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x05A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x05D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345D[0x7];                                     // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0660(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0694(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x071C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345E[0x3];                                     // 0x071D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_4;                         // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_5;                         // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345F[0x2];                                     // 0x0732(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x073C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x073D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3460[0x2];                                     // 0x073E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3461[0x3];                                     // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3462[0x3];                                     // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3463[0x3];                                     // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_6;                         // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Mesh_C>           K2Node_DynamicCast_AsBPI_Mesh_1;                   // 0x0768(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3464[0x7];                                     // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh_1;           // 0x0780(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x078C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3465[0x3];                                     // 0x078D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0790(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item_7;                         // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3466[0x3];                                     // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3467[0x3];                                     // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndCutScene) == 0x000010, "Wrong alignment on BP_EventManager_C_EndCutScene");
static_assert(sizeof(BP_EventManager_C_EndCutScene) == 0x000840, "Wrong size on BP_EventManager_C_EndCutScene");
static_assert(offsetof(BP_EventManager_C_EndCutScene, IsEndEvent) == 0x000000, "Member 'BP_EventManager_C_EndCutScene::IsEndEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, PlayerCameraBlendTime) == 0x000004, "Member 'BP_EventManager_C_EndCutScene::PlayerCameraBlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, PlayerCameraBlendFunc) == 0x000008, "Member 'BP_EventManager_C_EndCutScene::PlayerCameraBlendFunc' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, PlayerCameraBlendExp) == 0x00000C, "Member 'BP_EventManager_C_EndCutScene::PlayerCameraBlendExp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, SkipENPCCamRowName) == 0x000010, "Member 'BP_EventManager_C_EndCutScene::SkipENPCCamRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, IsSkipENPCEvent) == 0x000018, "Member 'BP_EventManager_C_EndCutScene::IsSkipENPCEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, L_plyTransform) == 0x000020, "Member 'BP_EventManager_C_EndCutScene::L_plyTransform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, PlayerList) == 0x000050, "Member 'BP_EventManager_C_EndCutScene::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Character) == 0x000060, "Member 'BP_EventManager_C_EndCutScene::Character' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, LocalSequenceActor) == 0x000068, "Member 'BP_EventManager_C_EndCutScene::LocalSequenceActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Conv_BoolToString_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_1) == 0x0000A4, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_1) == 0x0000B0, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Num_Variable) == 0x0000B4, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B9, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_2) == 0x0000BC, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetStageManager_Manager) == 0x0000C0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetStageManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000CA, "Member 'BP_EventManager_C_EndCutScene::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_3) == 0x0000CC, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_2) == 0x0000D0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_2) == 0x0000D4, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Create_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_3) == 0x0000E4, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Create_ReturnValue_1) == 0x0000E8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_4) == 0x0000F0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_5) == 0x0000F1, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_6) == 0x0000F2, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_3) == 0x0000F8, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_3) == 0x000104, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Greater_IntInt_ReturnValue) == 0x00010C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetGameUserSettings_ReturnValue) == 0x000110, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetScreenResolution_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlatformConsoleType_ReturnValue) == 0x000120, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlatformConsoleType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000121, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_SwitchEnum_CmpSuccess) == 0x000122, "Member 'BP_EventManager_C_EndCutScene::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000123, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_BooleanAND_ReturnValue) == 0x000124, "Member 'BP_EventManager_C_EndCutScene::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_4) == 0x000128, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsPlayer_Interface) == 0x000130, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_7) == 0x000141, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPartyPlayerKind_ReturnValue) == 0x000142, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPartyPlayerKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_4) == 0x000144, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_byte_Variable) == 0x000148, "Member 'BP_EventManager_C_EndCutScene::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_5) == 0x00014C, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_4) == 0x000150, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_5) == 0x000154, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerPawn_ReturnValue) == 0x000158, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsRSBattle_Player) == 0x000160, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetInputManager_BP_InputManager) == 0x000170, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetInputManager_BP_InputManager_1) == 0x000178, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetInputManager_BP_InputManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_5) == 0x000180, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_8) == 0x000184, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_MakeArray_Array) == 0x000188, "Member 'BP_EventManager_C_EndCutScene::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_6) == 0x0001D0, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001E0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_9) == 0x0001E8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_10) == 0x0001E9, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetNpcManager_NpcManager) == 0x0001F0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetNpcManager_NpcManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_11) == 0x0001F8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_3) == 0x0001FC, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsNpc_Town_People) == 0x000200, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsNpc_Town_People' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess_2) == 0x000208, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_4) == 0x00020C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000210, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsAction_Icon) == 0x000218, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsAction_Icon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess_3) == 0x000220, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x000228, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_12) == 0x000230, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerManager_PlayerManager) == 0x000238, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_7) == 0x000240, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeTransform_ReturnValue_1) == 0x000250, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000280, "Member 'BP_EventManager_C_EndCutScene::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000288, "Member 'BP_EventManager_C_EndCutScene::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_13) == 0x000290, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_6) == 0x000294, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_7) == 0x000298, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_6) == 0x00029C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_7) == 0x0002A0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Variable) == 0x0002A4, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_14) == 0x0002A8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Conv_IntToByte_ReturnValue) == 0x0002A9, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetValidValue_ReturnValue) == 0x0002AA, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetEnemyManager_Manager) == 0x0002B0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Variable_1) == 0x0002B8, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_15) == 0x0002BC, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_8) == 0x0002C0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0002C4, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x0002C5, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsBattleCourtMort_IsCourtMort) == 0x0002C6, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsBattleCourtMort_IsCourtMort' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0002C8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPostProcessManager_Manager) == 0x0002D0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_16) == 0x0002D8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_17) == 0x0002D9, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsBP_Special_Static_Node_Actor) == 0x0002E0, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsBP_Special_Static_Node_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess_4) == 0x0002E8, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetAnimInstance_ReturnValue) == 0x0002F0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_18) == 0x0002F8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsABP_Co_0300) == 0x000300, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsABP_Co_0300' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess_5) == 0x000308, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetStageParameterSettingManager_SettingManager) == 0x000310, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetStageParameterSettingManager_SettingManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeLiteralByte_ReturnValue) == 0x000318, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_19) == 0x000319, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetUserParamManager_UserParamManager) == 0x000320, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_20) == 0x000328, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetBrainMessageParamManager_ReturnValue) == 0x000330, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetBrainMessageParamManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_21) == 0x000338, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeTransform_ReturnValue_2) == 0x000340, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Variable_2) == 0x000370, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000374, "Member 'BP_EventManager_C_EndCutScene::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_9) == 0x000378, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000380, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Not_PreBool_ReturnValue_2) == 0x000388, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_22) == 0x000389, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetMainPlayer_Player) == 0x000390, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerList_ReturnValue) == 0x000398, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetTransform_ReturnValue) == 0x0003B0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Not_PreBool_ReturnValue_3) == 0x0003E0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeTransform_ReturnValue_3) == 0x0003F0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000420, "Member 'BP_EventManager_C_EndCutScene::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000428, "Member 'BP_EventManager_C_EndCutScene::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Variable_3) == 0x000430, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Add_ReturnValue) == 0x000434, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_10) == 0x000438, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Get_Item) == 0x000440, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_1) == 0x000448, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Variable_4) == 0x00044C, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerManager_PlayerManager_2) == 0x000450, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerManager_PlayerManager_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_11) == 0x000458, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_23) == 0x00045C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerManager_PlayerManager_3) == 0x000460, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerManager_PlayerManager_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_24) == 0x000468, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000470, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Not_PreBool_ReturnValue_4) == 0x000478, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsPlayTownName_result) == 0x000479, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsPlayTownName_result' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_25) == 0x00047A, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_CheckEndAllMessage_IsEnd) == 0x00047B, "Member 'BP_EventManager_C_EndCutScene::CallFunc_CheckEndAllMessage_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeTransform_ReturnValue_4) == 0x000480, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x0004B0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x0004B8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_5) == 0x0004C0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004C4, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerManager_PlayerManager_4) == 0x0004C8, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerManager_PlayerManager_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerList_ReturnValue_1) == 0x0004D0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_6) == 0x0004E0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsEvent_Interface) == 0x0004E8, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess_6) == 0x0004F8, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004F9, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_EventEnd_ReturnValue) == 0x0004FA, "Member 'BP_EventManager_C_EndCutScene::CallFunc_EventEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_26) == 0x0004FB, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetMessageHudManager_MessageHudManager) == 0x000500, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetMessageHudManager_MessageHudManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsBPI_Mesh) == 0x000508, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsBPI_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess_7) == 0x000518, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_27) == 0x000519, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000520, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_28) == 0x000528, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Variable_5) == 0x00052C, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_12) == 0x000530, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeLiteralInt_ReturnValue) == 0x000534, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Get_Item_1) == 0x000538, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_4) == 0x000540, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_7) == 0x000544, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Num_Variable_1) == 0x000548, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_5) == 0x00054C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Get_Item_2) == 0x000550, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_8) == 0x000558, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_6) == 0x00055C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_9) == 0x000560, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000564, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Get_Item_3) == 0x000568, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_10) == 0x000570, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_7) == 0x000574, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_11) == 0x000578, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00057C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetAssetPool_ReturnValue) == 0x000580, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetAssetPool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetPlayerController_ReturnValue) == 0x000588, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Num_Variable_2) == 0x000590, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeTransform_ReturnValue_5) == 0x0005A0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0005D0, "Member 'BP_EventManager_C_EndCutScene::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000658, "Member 'BP_EventManager_C_EndCutScene::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeTransform_ReturnValue_6) == 0x000660, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_8) == 0x000690, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000694, "Member 'BP_EventManager_C_EndCutScene::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x00071C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Get_Item_4) == 0x000720, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Get_Item_5) == 0x000728, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_29) == 0x000730, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_IsValid_ReturnValue_30) == 0x000731, "Member 'BP_EventManager_C_EndCutScene::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_12) == 0x000734, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_13) == 0x000738, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_8) == 0x00073C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_9) == 0x00073D, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_8) == 0x000740, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Array_Index_Variable_9) == 0x000744, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_10) == 0x000748, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_13) == 0x00074C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000750, "Member 'BP_EventManager_C_EndCutScene::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, Temp_int_Loop_Counter_Variable_9) == 0x000754, "Member 'BP_EventManager_C_EndCutScene::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_11) == 0x000758, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Add_IntInt_ReturnValue_14) == 0x00075C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Get_Item_6) == 0x000760, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_AsBPI_Mesh_1) == 0x000768, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_AsBPI_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, K2Node_DynamicCast_bSuccess_8) == 0x000778, "Member 'BP_EventManager_C_EndCutScene::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_GetSkeletalMesh_SkeletalMesh_1) == 0x000780, "Member 'BP_EventManager_C_EndCutScene::CallFunc_GetSkeletalMesh_SkeletalMesh_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_14) == 0x000788, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_12) == 0x00078C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000790, "Member 'BP_EventManager_C_EndCutScene::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Get_Item_7) == 0x000818, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_15) == 0x000820, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_16) == 0x000824, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000828, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_17) == 0x00082C, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Less_IntInt_ReturnValue_13) == 0x000830, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Array_Length_ReturnValue_18) == 0x000834, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutScene, CallFunc_Greater_IntInt_ReturnValue_5) == 0x000838, "Member 'BP_EventManager_C_EndCutScene::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddBoardAnimation
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_AddBoardAnimation final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3468[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BoardAnimationIndex;                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3469[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AddBoardAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_AddBoardAnimation");
static_assert(sizeof(BP_EventManager_C_AddBoardAnimation) == 0x000030, "Wrong size on BP_EventManager_C_AddBoardAnimation");
static_assert(offsetof(BP_EventManager_C_AddBoardAnimation, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_AddBoardAnimation::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddBoardAnimation, BoardAnimationIndex) == 0x000008, "Member 'BP_EventManager_C_AddBoardAnimation::BoardAnimationIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddBoardAnimation, IsLoop) == 0x000018, "Member 'BP_EventManager_C_AddBoardAnimation::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddBoardAnimation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000019, "Member 'BP_EventManager_C_AddBoardAnimation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddBoardAnimation, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventManager_C_AddBoardAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddBoardAnimation, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_AddBoardAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CameraAnimation
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_CameraAnimation final
{
public:
	int32                                         CamAnimIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimInst*                        CallFunc_PlayCameraAnim_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_CameraAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_CameraAnimation");
static_assert(sizeof(BP_EventManager_C_CameraAnimation) == 0x000018, "Wrong size on BP_EventManager_C_CameraAnimation");
static_assert(offsetof(BP_EventManager_C_CameraAnimation, CamAnimIndex) == 0x000000, "Member 'BP_EventManager_C_CameraAnimation::CamAnimIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CameraAnimation, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_CameraAnimation::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CameraAnimation, CallFunc_PlayCameraAnim_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_CameraAnimation::CallFunc_PlayCameraAnim_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CaptureScene
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_CaptureScene final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CaptureScene) == 0x000008, "Wrong alignment on BP_EventManager_C_CaptureScene");
static_assert(sizeof(BP_EventManager_C_CaptureScene) == 0x000018, "Wrong size on BP_EventManager_C_CaptureScene");
static_assert(offsetof(BP_EventManager_C_CaptureScene, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_CaptureScene::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureScene, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_CaptureScene::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureScene, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EventManager_C_CaptureScene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureScene, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_CaptureScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetCaptureActor
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_GetCaptureActor final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      ReturnCaptureActor;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      LocalCaptureActor;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventCaptureActorBase*                 CallFunc_GetCaptureActorBase_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      K2Node_DynamicCast_AsBPCapture_Actor;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetCaptureActor) == 0x000008, "Wrong alignment on BP_EventManager_C_GetCaptureActor");
static_assert(sizeof(BP_EventManager_C_GetCaptureActor) == 0x000030, "Wrong size on BP_EventManager_C_GetCaptureActor");
static_assert(offsetof(BP_EventManager_C_GetCaptureActor, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_GetCaptureActor::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActor, ReturnCaptureActor) == 0x000008, "Member 'BP_EventManager_C_GetCaptureActor::ReturnCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActor, LocalCaptureActor) == 0x000010, "Member 'BP_EventManager_C_GetCaptureActor::LocalCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActor, CallFunc_GetCaptureActorBase_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_GetCaptureActor::CallFunc_GetCaptureActorBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActor, K2Node_DynamicCast_AsBPCapture_Actor) == 0x000020, "Member 'BP_EventManager_C_GetCaptureActor::K2Node_DynamicCast_AsBPCapture_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventManager_C_GetCaptureActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.isEndDynamicCutscene
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_IsEndDynamicCutscene final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsEndDynamicCutscene) == 0x000008, "Wrong alignment on BP_EventManager_C_IsEndDynamicCutscene");
static_assert(sizeof(BP_EventManager_C_IsEndDynamicCutscene) == 0x000018, "Wrong size on BP_EventManager_C_IsEndDynamicCutscene");
static_assert(offsetof(BP_EventManager_C_IsEndDynamicCutscene, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsEndDynamicCutscene::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndDynamicCutscene, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsEndDynamicCutscene::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndDynamicCutscene, CallFunc_IsPlaying_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_IsEndDynamicCutscene::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndDynamicCutscene, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_IsEndDynamicCutscene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndDynamicCutscene, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_EventManager_C_IsEndDynamicCutscene::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndDynamicCutscene, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_EventManager_C_IsEndDynamicCutscene::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndDynamicCutscene, CallFunc_IsValid_ReturnValue_1) == 0x000014, "Member 'BP_EventManager_C_IsEndDynamicCutscene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SettingSpecialCapture
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_SettingSpecialCapture final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BoadMeshIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_346E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SettingSpecialCapture) == 0x000008, "Wrong alignment on BP_EventManager_C_SettingSpecialCapture");
static_assert(sizeof(BP_EventManager_C_SettingSpecialCapture) == 0x000028, "Wrong size on BP_EventManager_C_SettingSpecialCapture");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCapture, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SettingSpecialCapture::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCapture, BoadMeshIndex) == 0x000004, "Member 'BP_EventManager_C_SettingSpecialCapture::BoadMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCapture, Player) == 0x000008, "Member 'BP_EventManager_C_SettingSpecialCapture::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCapture, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_SettingSpecialCapture::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCapture, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EventManager_C_SettingSpecialCapture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCapture, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_SettingSpecialCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SettingSpecialCamera
// 0x0810 (0x0810 - 0x0000)
struct BP_EventManager_C_SettingSpecialCamera final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346F[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CameraTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         CameraFov;                                         // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3470[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3471[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   CallFunc_CalcSceneCapturePostProcessSettings_Settings; // 0x0080(0x0780)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SettingSpecialCamera) == 0x000010, "Wrong alignment on BP_EventManager_C_SettingSpecialCamera");
static_assert(sizeof(BP_EventManager_C_SettingSpecialCamera) == 0x000810, "Wrong size on BP_EventManager_C_SettingSpecialCamera");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SettingSpecialCamera::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CameraTransform) == 0x000010, "Member 'BP_EventManager_C_SettingSpecialCamera::CameraTransform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CameraFov) == 0x000040, "Member 'BP_EventManager_C_SettingSpecialCamera::CameraFov' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CallFunc_BreakTransform_Location) == 0x000044, "Member 'BP_EventManager_C_SettingSpecialCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'BP_EventManager_C_SettingSpecialCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'BP_EventManager_C_SettingSpecialCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_SettingSpecialCamera::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EventManager_C_SettingSpecialCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CallFunc_CalcSceneCapturePostProcessSettings_Settings) == 0x000080, "Member 'BP_EventManager_C_SettingSpecialCamera::CallFunc_CalcSceneCapturePostProcessSettings_Settings' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingSpecialCamera, CallFunc_IsValid_ReturnValue) == 0x000800, "Member 'BP_EventManager_C_SettingSpecialCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CaptureSceneSpecial
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_CaptureSceneSpecial final
{
public:
	int32                                         SpecialCaptureActorIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3472[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3473[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CaptureSceneSpecial) == 0x000010, "Wrong alignment on BP_EventManager_C_CaptureSceneSpecial");
static_assert(sizeof(BP_EventManager_C_CaptureSceneSpecial) == 0x000090, "Wrong size on BP_EventManager_C_CaptureSceneSpecial");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, SpecialCaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_CaptureSceneSpecial::SpecialCaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, Player) == 0x000008, "Member 'BP_EventManager_C_CaptureSceneSpecial::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_EventManager_C_CaptureSceneSpecial::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_CaptureSceneSpecial::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_CaptureSceneSpecial::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EventManager_C_CaptureSceneSpecial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_CaptureSceneSpecial::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_EventManager_C_CaptureSceneSpecial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, CallFunc_IsValid_ReturnValue_1) == 0x00005A, "Member 'BP_EventManager_C_CaptureSceneSpecial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneSpecial, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_CaptureSceneSpecial::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AttachToSpecialCaptureActor
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EventManager_C_AttachToSpecialCaptureActor final
{
public:
	int32                                         SpecialCaptureActorIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3474[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3475[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AttachToSpecialCaptureActor) == 0x000010, "Wrong alignment on BP_EventManager_C_AttachToSpecialCaptureActor");
static_assert(sizeof(BP_EventManager_C_AttachToSpecialCaptureActor) == 0x0000F0, "Wrong size on BP_EventManager_C_AttachToSpecialCaptureActor");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, SpecialCaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::SpecialCaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, AttachPointName) == 0x000004, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, CallFunc_GetBP_static_pl_AsCharacter) == 0x000050, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x000058, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToSpecialCaptureActor, CallFunc_IsValid_ReturnValue_1) == 0x0000E0, "Member 'BP_EventManager_C_AttachToSpecialCaptureActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlaySpecialNodeAnimation
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_PlaySpecialNodeAnimation final
{
public:
	class FString                                 SpecialNodeAnimNamePath;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3476[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultPath;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3477[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SpecialStaticNodeActor_C> K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlaySpecialNodeAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_PlaySpecialNodeAnimation");
static_assert(sizeof(BP_EventManager_C_PlaySpecialNodeAnimation) == 0x000048, "Wrong size on BP_EventManager_C_PlaySpecialNodeAnimation");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimation, SpecialNodeAnimNamePath) == 0x000000, "Member 'BP_EventManager_C_PlaySpecialNodeAnimation::SpecialNodeAnimNamePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimation, IsLoop) == 0x000010, "Member 'BP_EventManager_C_PlaySpecialNodeAnimation::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimation, DefaultPath) == 0x000018, "Member 'BP_EventManager_C_PlaySpecialNodeAnimation::DefaultPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimation, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_PlaySpecialNodeAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimation, K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor) == 0x000030, "Member 'BP_EventManager_C_PlaySpecialNodeAnimation::K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimation, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventManager_C_PlaySpecialNodeAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddSpecialNodeAnimation
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_AddSpecialNodeAnimation final
{
public:
	class FString                                 SpecialNodeAnimNamePath;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3478[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultPath;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3479[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SpecialStaticNodeActor_C> K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AddSpecialNodeAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_AddSpecialNodeAnimation");
static_assert(sizeof(BP_EventManager_C_AddSpecialNodeAnimation) == 0x000048, "Wrong size on BP_EventManager_C_AddSpecialNodeAnimation");
static_assert(offsetof(BP_EventManager_C_AddSpecialNodeAnimation, SpecialNodeAnimNamePath) == 0x000000, "Member 'BP_EventManager_C_AddSpecialNodeAnimation::SpecialNodeAnimNamePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddSpecialNodeAnimation, IsLoop) == 0x000010, "Member 'BP_EventManager_C_AddSpecialNodeAnimation::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddSpecialNodeAnimation, DefaultPath) == 0x000018, "Member 'BP_EventManager_C_AddSpecialNodeAnimation::DefaultPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddSpecialNodeAnimation, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_AddSpecialNodeAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddSpecialNodeAnimation, K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor) == 0x000030, "Member 'BP_EventManager_C_AddSpecialNodeAnimation::K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddSpecialNodeAnimation, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventManager_C_AddSpecialNodeAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetSpecialStaticNodeActor
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_GetSpecialStaticNodeActor final
{
public:
	class AActor*                                 ReturnSpecialStaticNodeActor;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LocalSpecialStaticNodeActor;                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetSpecialStaticNodeActor) == 0x000008, "Wrong alignment on BP_EventManager_C_GetSpecialStaticNodeActor");
static_assert(sizeof(BP_EventManager_C_GetSpecialStaticNodeActor) == 0x000018, "Wrong size on BP_EventManager_C_GetSpecialStaticNodeActor");
static_assert(offsetof(BP_EventManager_C_GetSpecialStaticNodeActor, ReturnSpecialStaticNodeActor) == 0x000000, "Member 'BP_EventManager_C_GetSpecialStaticNodeActor::ReturnSpecialStaticNodeActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetSpecialStaticNodeActor, LocalSpecialStaticNodeActor) == 0x000008, "Member 'BP_EventManager_C_GetSpecialStaticNodeActor::LocalSpecialStaticNodeActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetSpecialStaticNodeActor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_GetSpecialStaticNodeActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.InitializePostProcess
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_InitializePostProcess final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_347A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_347B[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_347C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_GetPerformPostProcess_PostProcess;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_InitializePostProcess) == 0x000008, "Wrong alignment on BP_EventManager_C_InitializePostProcess");
static_assert(sizeof(BP_EventManager_C_InitializePostProcess) == 0x000048, "Wrong size on BP_EventManager_C_InitializePostProcess");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, Temp_int_Variable) == 0x000000, "Member 'BP_EventManager_C_InitializePostProcess::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, Temp_int_Variable_1) == 0x000004, "Member 'BP_EventManager_C_InitializePostProcess::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_GetValidValue_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000011, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000012, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_MakeLiteralInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_GetPostProcessManager_Manager) == 0x000030, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializePostProcess, CallFunc_GetPerformPostProcess_PostProcess) == 0x000040, "Member 'BP_EventManager_C_InitializePostProcess::CallFunc_GetPerformPostProcess_PostProcess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupDynamicPostProcess
// 0x0088 (0x0088 - 0x0000)
struct BP_EventManager_C_SetupDynamicPostProcess final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_347F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EEventPostProcessID>                   ControllList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3480[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EEventPostProcessID>                   K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3481[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMDynamic_ReturnValue;          // 0x0058(0x0010)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3482[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupDynamicPostProcess) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupDynamicPostProcess");
static_assert(sizeof(BP_EventManager_C_SetupDynamicPostProcess) == 0x000088, "Wrong size on BP_EventManager_C_SetupDynamicPostProcess");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, Enable) == 0x000000, "Member 'BP_EventManager_C_SetupDynamicPostProcess::Enable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, ControllList) == 0x000008, "Member 'BP_EventManager_C_SetupDynamicPostProcess::ControllList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, Weight) == 0x000018, "Member 'BP_EventManager_C_SetupDynamicPostProcess::Weight' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EventManager_C_SetupDynamicPostProcess::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EventManager_C_SetupDynamicPostProcess::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_EventManager_C_SetupDynamicPostProcess::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_EventManager_C_SetupDynamicPostProcess::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_EventManager_C_SetupDynamicPostProcess::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_EventManager_C_SetupDynamicPostProcess::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'BP_EventManager_C_SetupDynamicPostProcess::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_SelectFloat_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_GetOrLoadPPMDynamic_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_GetOrLoadPPMDynamic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000070, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicPostProcess, CallFunc_IsValid_ReturnValue_1) == 0x000084, "Member 'BP_EventManager_C_SetupDynamicPostProcess::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EffectNoise
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_EffectNoise final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3483[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3484[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3485[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EffectNoise) == 0x000008, "Wrong alignment on BP_EventManager_C_EffectNoise");
static_assert(sizeof(BP_EventManager_C_EffectNoise) == 0x000038, "Wrong size on BP_EventManager_C_EffectNoise");
static_assert(offsetof(BP_EventManager_C_EffectNoise, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_EffectNoise::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectNoise, Curve) == 0x000008, "Member 'BP_EventManager_C_EffectNoise::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectNoise, IsLoop) == 0x000010, "Member 'BP_EventManager_C_EffectNoise::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectNoise, Target) == 0x000018, "Member 'BP_EventManager_C_EffectNoise::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectNoise, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_EffectNoise::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectNoise, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_EffectNoise::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectNoise, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_EffectNoise::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SpecialEffectNoise
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_SpecialEffectNoise final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3486[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3487[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3488[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SpecialEffectNoise) == 0x000008, "Wrong alignment on BP_EventManager_C_SpecialEffectNoise");
static_assert(sizeof(BP_EventManager_C_SpecialEffectNoise) == 0x000038, "Wrong size on BP_EventManager_C_SpecialEffectNoise");
static_assert(offsetof(BP_EventManager_C_SpecialEffectNoise, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SpecialEffectNoise::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialEffectNoise, Curve) == 0x000008, "Member 'BP_EventManager_C_SpecialEffectNoise::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialEffectNoise, IsLoop) == 0x000010, "Member 'BP_EventManager_C_SpecialEffectNoise::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialEffectNoise, Target) == 0x000018, "Member 'BP_EventManager_C_SpecialEffectNoise::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialEffectNoise, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_SpecialEffectNoise::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialEffectNoise, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_SpecialEffectNoise::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialEffectNoise, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SpecialEffectNoise::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.LuaStartStatic
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_LuaStartStatic final
{
public:
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlatFormConsoleType                          CallFunc_GetPlatformConsoleType_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3489[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetMakeEventActorArray_ReturnValue;       // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BackGroundEffect_C> CallFunc_CalledAtEventStart_self_CastInput;        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalledAtEventStart_Dummy;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_LuaStartStatic) == 0x000008, "Wrong alignment on BP_EventManager_C_LuaStartStatic");
static_assert(sizeof(BP_EventManager_C_LuaStartStatic) == 0x000060, "Wrong size on BP_EventManager_C_LuaStartStatic");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_GetGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_GetScreenResolution_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_GetPlatformConsoleType_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_GetPlatformConsoleType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_EventManager_C_LuaStartStatic::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000012, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000013, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_GetMakeEventActorArray_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_GetMakeEventActorArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_GetParticleManager_Particle_Manager) == 0x000028, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_CalledAtEventStart_self_CastInput) == 0x000048, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_CalledAtEventStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaStartStatic, CallFunc_CalledAtEventStart_Dummy) == 0x000058, "Member 'BP_EventManager_C_LuaStartStatic::CallFunc_CalledAtEventStart_Dummy' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.LuaEndStatic
// 0x0120 (0x0120 - 0x0000)
struct BP_EventManager_C_LuaEndStatic final
{
public:
	bool                                          IsRestoreTransform;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348B[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348C[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableEventUnControlMgrFlag_ReturnValue;  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348F[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlatFormConsoleType                          CallFunc_GetPlatformConsoleType_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3490[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3491[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3492[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StaticEventEnd_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StaticEventEnd_ReturnValue_1;             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3493[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetExtraPlayerList_ReturnValue;           // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_2;            // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StaticEventEnd_ReturnValue_2;             // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3494[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0108(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_LuaEndStatic) == 0x000008, "Wrong alignment on BP_EventManager_C_LuaEndStatic");
static_assert(sizeof(BP_EventManager_C_LuaEndStatic) == 0x000120, "Wrong size on BP_EventManager_C_LuaEndStatic");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, IsRestoreTransform) == 0x000000, "Member 'BP_EventManager_C_LuaEndStatic::IsRestoreTransform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, LPlayerList) == 0x000008, "Member 'BP_EventManager_C_LuaEndStatic::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, LEnemyList) == 0x000018, "Member 'BP_EventManager_C_LuaEndStatic::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Loop_Num_Variable_1) == 0x000048, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Loop_Counter_Variable_2) == 0x00004C, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Loop_Num_Variable_2) == 0x00005C, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Less_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, Temp_int_Array_Index_Variable_2) == 0x000064, "Member 'BP_EventManager_C_LuaEndStatic::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_EnableEventUnControlMgrFlag_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_EnableEventUnControlMgrFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GetGameUserSettings_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GetScreenResolution_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GetPlatformConsoleType_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GetPlatformConsoleType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, K2Node_SwitchEnum_CmpSuccess) == 0x000081, "Member 'BP_EventManager_C_LuaEndStatic::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000082, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000083, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_BooleanAND_ReturnValue) == 0x000084, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, K2Node_DynamicCast_AsEvent_Interface) == 0x000088, "Member 'BP_EventManager_C_LuaEndStatic::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_EventManager_C_LuaEndStatic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, K2Node_DynamicCast_AsEvent_Interface_1) == 0x0000A0, "Member 'BP_EventManager_C_LuaEndStatic::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_EventManager_C_LuaEndStatic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_StaticEventEnd_ReturnValue) == 0x0000BC, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_StaticEventEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_StaticEventEnd_ReturnValue_1) == 0x0000BD, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_StaticEventEnd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GetPlayerManager_PlayerManager) == 0x0000C0, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GetEnemyManager_Manager) == 0x0000C8, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GetExtraPlayerList_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GetExtraPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GetEnemyList_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, K2Node_DynamicCast_AsEvent_Interface_2) == 0x0000F0, "Member 'BP_EventManager_C_LuaEndStatic::K2Node_DynamicCast_AsEvent_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BP_EventManager_C_LuaEndStatic::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_StaticEventEnd_ReturnValue_2) == 0x000102, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_StaticEventEnd_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Array_Length_ReturnValue_2) == 0x000104, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_GetPlayerList_ReturnValue) == 0x000108, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Not_PreBool_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LuaEndStatic, CallFunc_Not_PreBool_ReturnValue_1) == 0x000119, "Member 'BP_EventManager_C_LuaEndStatic::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CaptureSceneBG
// 0x0003 (0x0003 - 0x0000)
struct BP_EventManager_C_CaptureSceneBG final
{
public:
	bool                                          IsSuccess;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalIsSuccess;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CaptureSceneBG) == 0x000001, "Wrong alignment on BP_EventManager_C_CaptureSceneBG");
static_assert(sizeof(BP_EventManager_C_CaptureSceneBG) == 0x000003, "Wrong size on BP_EventManager_C_CaptureSceneBG");
static_assert(offsetof(BP_EventManager_C_CaptureSceneBG, IsSuccess) == 0x000000, "Member 'BP_EventManager_C_CaptureSceneBG::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneBG, LocalIsSuccess) == 0x000001, "Member 'BP_EventManager_C_CaptureSceneBG::LocalIsSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneBG, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_EventManager_C_CaptureSceneBG::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetTransformCaptureBG
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EventManager_C_SetTransformCaptureBG final
{
public:
	struct FTransform                             PlaneTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3495[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetTransformCaptureBG) == 0x000010, "Wrong alignment on BP_EventManager_C_SetTransformCaptureBG");
static_assert(sizeof(BP_EventManager_C_SetTransformCaptureBG) == 0x0000C0, "Wrong size on BP_EventManager_C_SetTransformCaptureBG");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBG, PlaneTransform) == 0x000000, "Member 'BP_EventManager_C_SetTransformCaptureBG::PlaneTransform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBG, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetTransformCaptureBG::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBG, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000034, "Member 'BP_EventManager_C_SetTransformCaptureBG::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBG, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000BC, "Member 'BP_EventManager_C_SetTransformCaptureBG::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetTransformCaptureBGCamera
// 0x0870 (0x0870 - 0x0000)
struct BP_EventManager_C_SetTransformCaptureBGCamera final
{
public:
	struct FTransform                             CameraTransform;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3496[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3497[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   CallFunc_CalcSceneCapturePostProcessSettings_ReturnValue; // 0x0060(0x0780)()
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x07E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EventManager_C_SetTransformCaptureBGCamera) == 0x000010, "Wrong alignment on BP_EventManager_C_SetTransformCaptureBGCamera");
static_assert(sizeof(BP_EventManager_C_SetTransformCaptureBGCamera) == 0x000870, "Wrong size on BP_EventManager_C_SetTransformCaptureBGCamera");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBGCamera, CameraTransform) == 0x000000, "Member 'BP_EventManager_C_SetTransformCaptureBGCamera::CameraTransform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBGCamera, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetTransformCaptureBGCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBGCamera, CallFunc_BreakTransform_Location) == 0x000034, "Member 'BP_EventManager_C_SetTransformCaptureBGCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBGCamera, CallFunc_BreakTransform_Rotation) == 0x000040, "Member 'BP_EventManager_C_SetTransformCaptureBGCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBGCamera, CallFunc_BreakTransform_Scale) == 0x00004C, "Member 'BP_EventManager_C_SetTransformCaptureBGCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBGCamera, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_EventManager_C_SetTransformCaptureBGCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBGCamera, CallFunc_CalcSceneCapturePostProcessSettings_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_SetTransformCaptureBGCamera::CallFunc_CalcSceneCapturePostProcessSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetTransformCaptureBGCamera, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0007E0, "Member 'BP_EventManager_C_SetTransformCaptureBGCamera::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetLocationInGameCamera
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_SetLocationInGameCamera final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetLocationInGameCamera) == 0x000004, "Wrong alignment on BP_EventManager_C_SetLocationInGameCamera");
static_assert(sizeof(BP_EventManager_C_SetLocationInGameCamera) == 0x00000C, "Wrong size on BP_EventManager_C_SetLocationInGameCamera");
static_assert(offsetof(BP_EventManager_C_SetLocationInGameCamera, Location) == 0x000000, "Member 'BP_EventManager_C_SetLocationInGameCamera::Location' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetTransformInGamePlayer
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_SetTransformInGamePlayer final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetTransformInGamePlayer) == 0x000010, "Wrong alignment on BP_EventManager_C_SetTransformInGamePlayer");
static_assert(sizeof(BP_EventManager_C_SetTransformInGamePlayer) == 0x000030, "Wrong size on BP_EventManager_C_SetTransformInGamePlayer");
static_assert(offsetof(BP_EventManager_C_SetTransformInGamePlayer, Transform) == 0x000000, "Member 'BP_EventManager_C_SetTransformInGamePlayer::Transform' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.BGEffectNoise
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_BGEffectNoise final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3498[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_BGEffectNoise) == 0x000008, "Wrong alignment on BP_EventManager_C_BGEffectNoise");
static_assert(sizeof(BP_EventManager_C_BGEffectNoise) == 0x000020, "Wrong size on BP_EventManager_C_BGEffectNoise");
static_assert(offsetof(BP_EventManager_C_BGEffectNoise, Curve) == 0x000000, "Member 'BP_EventManager_C_BGEffectNoise::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectNoise, IsLoop) == 0x000008, "Member 'BP_EventManager_C_BGEffectNoise::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectNoise, Target) == 0x000010, "Member 'BP_EventManager_C_BGEffectNoise::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectNoise, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_BGEffectNoise::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.TransitionStaticToInGame
// 0x0450 (0x0450 - 0x0000)
struct BP_EventManager_C_TransitionStaticToInGame final
{
public:
	class USpringArmComponent*                    SpringArm;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_IntInt_ReturnValue_1;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3499[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue_2;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349A[0xB];                                     // 0x0035(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTeleportTransformAndSweepLocation_outTransform; // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetTeleportTransformAndSweepLocation_outSweepLocation; // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x007C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349B[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349C[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x01B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349D[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349E[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349F[0x2];                                     // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue_3;             // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A0[0x3];                                     // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A1[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A2[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A3[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldRotation_SweepHitResult;  // 0x0330(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x03C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_TransitionStaticToInGame) == 0x000010, "Wrong alignment on BP_EventManager_C_TransitionStaticToInGame");
static_assert(sizeof(BP_EventManager_C_TransitionStaticToInGame) == 0x000450, "Wrong size on BP_EventManager_C_TransitionStaticToInGame");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, SpringArm) == 0x000000, "Member 'BP_EventManager_C_TransitionStaticToInGame::SpringArm' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, Player) == 0x000008, "Member 'BP_EventManager_C_TransitionStaticToInGame::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00001C, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_InRange_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_InRange_IntInt_ReturnValue_1) == 0x000022, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_InRange_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000030, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_InRange_IntInt_ReturnValue_2) == 0x000034, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_InRange_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_GetTeleportTransformAndSweepLocation_outTransform) == 0x000040, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_GetTeleportTransformAndSweepLocation_outTransform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_GetTeleportTransformAndSweepLocation_outSweepLocation) == 0x000070, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_GetTeleportTransformAndSweepLocation_outSweepLocation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00007C, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000104, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000108, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000190, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Location) == 0x000194, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Rotation) == 0x0001A0, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Scale) == 0x0001AC, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0001B8, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000240, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_GetController_ReturnValue) == 0x000248, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, K2Node_DynamicCast_AsRSBattle_Player) == 0x000250, "Member 'BP_EventManager_C_TransitionStaticToInGame::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'BP_EventManager_C_TransitionStaticToInGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000260, "Member 'BP_EventManager_C_TransitionStaticToInGame::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, K2Node_DynamicCast_bSuccess_1) == 0x000270, "Member 'BP_EventManager_C_TransitionStaticToInGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_PlayerCameraReset_Dummy) == 0x000271, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000274, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000280, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_InRange_IntInt_ReturnValue_3) == 0x000284, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_InRange_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_FindLookAtRotation_ReturnValue) == 0x000288, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_GetPlayerManager_PlayerManager) == 0x000298, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_GetPlayer_ReturnValue) == 0x0002A0, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_IsValid_ReturnValue) == 0x0002A8, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x0002B0, "Member 'BP_EventManager_C_TransitionStaticToInGame::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, K2Node_DynamicCast_bSuccess_2) == 0x0002B8, "Member 'BP_EventManager_C_TransitionStaticToInGame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Location_1) == 0x0002BC, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Rotation_1) == 0x0002C8, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Scale_1) == 0x0002D4, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakRotator_Roll) == 0x0002E0, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakRotator_Pitch) == 0x0002E4, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakRotator_Yaw) == 0x0002E8, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_MakeRotator_ReturnValue) == 0x0002EC, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_GetController_ReturnValue_1) == 0x0002F8, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_NegateRotator_ReturnValue) == 0x000300, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Location_2) == 0x00030C, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Rotation_2) == 0x000318, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_BreakTransform_Scale_2) == 0x000324, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_AddActorWorldRotation_SweepHitResult) == 0x000330, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_AddActorWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003B8, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x0003C4, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_TransitionStaticToInGame, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x00044C, "Member 'BP_EventManager_C_TransitionStaticToInGame::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetFinalSpecialIDInGame
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_SetFinalSpecialIDInGame final
{
public:
	int32                                         SpecialCaptureActorIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetFinalSpecialIDInGame) == 0x000004, "Wrong alignment on BP_EventManager_C_SetFinalSpecialIDInGame");
static_assert(sizeof(BP_EventManager_C_SetFinalSpecialIDInGame) == 0x000004, "Wrong size on BP_EventManager_C_SetFinalSpecialIDInGame");
static_assert(offsetof(BP_EventManager_C_SetFinalSpecialIDInGame, SpecialCaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SetFinalSpecialIDInGame::SpecialCaptureActorIndex' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetUseTransitionInGame
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_SetUseTransitionInGame final
{
public:
	bool                                          UseTransition;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetUseTransitionInGame) == 0x000001, "Wrong alignment on BP_EventManager_C_SetUseTransitionInGame");
static_assert(sizeof(BP_EventManager_C_SetUseTransitionInGame) == 0x000001, "Wrong size on BP_EventManager_C_SetUseTransitionInGame");
static_assert(offsetof(BP_EventManager_C_SetUseTransitionInGame, UseTransition) == 0x000000, "Member 'BP_EventManager_C_SetUseTransitionInGame::UseTransition' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayBoardBGAnimation
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_PlayBoardBGAnimation final
{
public:
	class FString                                 BoardAnimNamePath;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayBoardBGAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_PlayBoardBGAnimation");
static_assert(sizeof(BP_EventManager_C_PlayBoardBGAnimation) == 0x000018, "Wrong size on BP_EventManager_C_PlayBoardBGAnimation");
static_assert(offsetof(BP_EventManager_C_PlayBoardBGAnimation, BoardAnimNamePath) == 0x000000, "Member 'BP_EventManager_C_PlayBoardBGAnimation::BoardAnimNamePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardBGAnimation, IsLoop) == 0x000010, "Member 'BP_EventManager_C_PlayBoardBGAnimation::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayBoardBGAnimation, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_PlayBoardBGAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddBoardBGAnimation
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_AddBoardBGAnimation final
{
public:
	class FString                                 BoardAnimNamePath;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AddBoardBGAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_AddBoardBGAnimation");
static_assert(sizeof(BP_EventManager_C_AddBoardBGAnimation) == 0x000018, "Wrong size on BP_EventManager_C_AddBoardBGAnimation");
static_assert(offsetof(BP_EventManager_C_AddBoardBGAnimation, BoardAnimNamePath) == 0x000000, "Member 'BP_EventManager_C_AddBoardBGAnimation::BoardAnimNamePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddBoardBGAnimation, IsLoop) == 0x000010, "Member 'BP_EventManager_C_AddBoardBGAnimation::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddBoardBGAnimation, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_AddBoardBGAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetCaptureBGActor
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_GetCaptureBGActor final
{
public:
	class ABP_CaptureBG_C*                        ReturnLocalCaptureBG;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureBG_C*                        LocalCaptureBG;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetCaptureBGActor) == 0x000008, "Wrong alignment on BP_EventManager_C_GetCaptureBGActor");
static_assert(sizeof(BP_EventManager_C_GetCaptureBGActor) == 0x000018, "Wrong size on BP_EventManager_C_GetCaptureBGActor");
static_assert(offsetof(BP_EventManager_C_GetCaptureBGActor, ReturnLocalCaptureBG) == 0x000000, "Member 'BP_EventManager_C_GetCaptureBGActor::ReturnLocalCaptureBG' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureBGActor, LocalCaptureBG) == 0x000008, "Member 'BP_EventManager_C_GetCaptureBGActor::LocalCaptureBG' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureBGActor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_GetCaptureBGActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetDirectionalLight
// 0x0110 (0x0110 - 0x0000)
struct BP_EventManager_C_SetDirectionalLight final
{
public:
	class FName                                   LightPresetName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFEventLightPresetData                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A4[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A5[0xC];                                     // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EventManager_C_SetDirectionalLight) == 0x000010, "Wrong alignment on BP_EventManager_C_SetDirectionalLight");
static_assert(sizeof(BP_EventManager_C_SetDirectionalLight) == 0x000110, "Wrong size on BP_EventManager_C_SetDirectionalLight");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, LightPresetName) == 0x000000, "Member 'BP_EventManager_C_SetDirectionalLight::LightPresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetDirectionalLight, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000080, "Member 'BP_EventManager_C_SetDirectionalLight::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.BGEffectGlitch
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_BGEffectGlitch final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_BGEffectGlitch) == 0x000008, "Wrong alignment on BP_EventManager_C_BGEffectGlitch");
static_assert(sizeof(BP_EventManager_C_BGEffectGlitch) == 0x000020, "Wrong size on BP_EventManager_C_BGEffectGlitch");
static_assert(offsetof(BP_EventManager_C_BGEffectGlitch, Curve) == 0x000000, "Member 'BP_EventManager_C_BGEffectGlitch::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectGlitch, IsLoop) == 0x000008, "Member 'BP_EventManager_C_BGEffectGlitch::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectGlitch, Target) == 0x000010, "Member 'BP_EventManager_C_BGEffectGlitch::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectGlitch, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_BGEffectGlitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.BGEffectFringe
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_BGEffectFringe final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_BGEffectFringe) == 0x000008, "Wrong alignment on BP_EventManager_C_BGEffectFringe");
static_assert(sizeof(BP_EventManager_C_BGEffectFringe) == 0x000020, "Wrong size on BP_EventManager_C_BGEffectFringe");
static_assert(offsetof(BP_EventManager_C_BGEffectFringe, Curve) == 0x000000, "Member 'BP_EventManager_C_BGEffectFringe::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectFringe, IsLoop) == 0x000008, "Member 'BP_EventManager_C_BGEffectFringe::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectFringe, Target) == 0x000010, "Member 'BP_EventManager_C_BGEffectFringe::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectFringe, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_BGEffectFringe::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.BGEffectScanline
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_BGEffectScanline final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_BGEffectScanline) == 0x000008, "Wrong alignment on BP_EventManager_C_BGEffectScanline");
static_assert(sizeof(BP_EventManager_C_BGEffectScanline) == 0x000020, "Wrong size on BP_EventManager_C_BGEffectScanline");
static_assert(offsetof(BP_EventManager_C_BGEffectScanline, Curve) == 0x000000, "Member 'BP_EventManager_C_BGEffectScanline::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectScanline, IsLoop) == 0x000008, "Member 'BP_EventManager_C_BGEffectScanline::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectScanline, Target) == 0x000010, "Member 'BP_EventManager_C_BGEffectScanline::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BGEffectScanline, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_BGEffectScanline::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetCaptureActorBase
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_GetCaptureActorBase final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEventCaptureActorBase*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      LocalCaptureActor;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetCaptureActorBase) == 0x000008, "Wrong alignment on BP_EventManager_C_GetCaptureActorBase");
static_assert(sizeof(BP_EventManager_C_GetCaptureActorBase) == 0x000028, "Wrong size on BP_EventManager_C_GetCaptureActorBase");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorBase, Param_Index) == 0x000000, "Member 'BP_EventManager_C_GetCaptureActorBase::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorBase, ReturnValue) == 0x000008, "Member 'BP_EventManager_C_GetCaptureActorBase::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorBase, LocalCaptureActor) == 0x000010, "Member 'BP_EventManager_C_GetCaptureActorBase::LocalCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorBase, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EventManager_C_GetCaptureActorBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorBase, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_GetCaptureActorBase::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorBase, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_EventManager_C_GetCaptureActorBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartFade
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_StartFade final
{
public:
	struct FVector                                Color;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSGameModeBP_C*                        CallFunc_GetRSGameMode_GameMode;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Fade_C*                             CallFunc_GetFader_Fader;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartFade) == 0x000008, "Wrong alignment on BP_EventManager_C_StartFade");
static_assert(sizeof(BP_EventManager_C_StartFade) == 0x000038, "Wrong size on BP_EventManager_C_StartFade");
static_assert(offsetof(BP_EventManager_C_StartFade, Color) == 0x000000, "Member 'BP_EventManager_C_StartFade::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartFade, Time) == 0x00000C, "Member 'BP_EventManager_C_StartFade::Time' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartFade, CallFunc_GetRSGameMode_GameMode) == 0x000010, "Member 'BP_EventManager_C_StartFade::CallFunc_GetRSGameMode_GameMode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartFade, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_StartFade::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartFade, CallFunc_GetFader_Fader) == 0x000028, "Member 'BP_EventManager_C_StartFade::CallFunc_GetFader_Fader' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartFade, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_StartFade::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndFade
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_EndFade final
{
public:
	struct FVector                                Color;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSGameModeBP_C*                        CallFunc_GetRSGameMode_GameMode;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Fade_C*                             CallFunc_GetFader_Fader;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndFade) == 0x000008, "Wrong alignment on BP_EventManager_C_EndFade");
static_assert(sizeof(BP_EventManager_C_EndFade) == 0x000038, "Wrong size on BP_EventManager_C_EndFade");
static_assert(offsetof(BP_EventManager_C_EndFade, Color) == 0x000000, "Member 'BP_EventManager_C_EndFade::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndFade, Time) == 0x00000C, "Member 'BP_EventManager_C_EndFade::Time' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndFade, CallFunc_GetRSGameMode_GameMode) == 0x000010, "Member 'BP_EventManager_C_EndFade::CallFunc_GetRSGameMode_GameMode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndFade, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_EndFade::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndFade, CallFunc_GetFader_Fader) == 0x000028, "Member 'BP_EventManager_C_EndFade::CallFunc_GetFader_Fader' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndFade, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_EndFade::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsFadeAnimation
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_IsFadeAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSGameModeBP_C*                        CallFunc_GetRSGameMode_GameMode;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Fade_C*                             CallFunc_GetFader_Fader;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimation_Active;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsFadeAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_IsFadeAnimation");
static_assert(sizeof(BP_EventManager_C_IsFadeAnimation) == 0x000020, "Wrong size on BP_EventManager_C_IsFadeAnimation");
static_assert(offsetof(BP_EventManager_C_IsFadeAnimation, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsFadeAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFadeAnimation, CallFunc_GetRSGameMode_GameMode) == 0x000008, "Member 'BP_EventManager_C_IsFadeAnimation::CallFunc_GetRSGameMode_GameMode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFadeAnimation, CallFunc_GetFader_Fader) == 0x000010, "Member 'BP_EventManager_C_IsFadeAnimation::CallFunc_GetFader_Fader' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFadeAnimation, CallFunc_IsAnimation_Active) == 0x000018, "Member 'BP_EventManager_C_IsFadeAnimation::CallFunc_IsAnimation_Active' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFadeAnimation, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_EventManager_C_IsFadeAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartupCutscene
// 0x0088 (0x0088 - 0x0000)
struct BP_EventManager_C_StartupCutscene final
{
public:
	bool                                          IsPartyPlayerBattleReady;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsENPCBattleReady;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0010(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AC[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AD[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AE[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AF[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B0[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBattleReady_bDummy;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBattleReady_bDummy_1;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B1[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StartupCutscene) == 0x000008, "Wrong alignment on BP_EventManager_C_StartupCutscene");
static_assert(sizeof(BP_EventManager_C_StartupCutscene) == 0x000088, "Wrong size on BP_EventManager_C_StartupCutscene");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, IsPartyPlayerBattleReady) == 0x000000, "Member 'BP_EventManager_C_StartupCutscene::IsPartyPlayerBattleReady' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, IsENPCBattleReady) == 0x000001, "Member 'BP_EventManager_C_StartupCutscene::IsENPCBattleReady' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_GetPlayerList_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_GetBattleManager_BattleManager) == 0x000030, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_EventManager_C_StartupCutscene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x000048, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_EventManager_C_StartupCutscene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, K2Node_DynamicCast_AsRSBattle_Player) == 0x000060, "Member 'BP_EventManager_C_StartupCutscene::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_EventManager_C_StartupCutscene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x000070, "Member 'BP_EventManager_C_StartupCutscene::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_EventManager_C_StartupCutscene::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_SetBattleReady_bDummy) == 0x000079, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_SetBattleReady_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_SetBattleReady_bDummy_1) == 0x00007A, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_SetBattleReady_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartupCutscene, CallFunc_GetPlayerController_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_StartupCutscene::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetAssetPool
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_GetAssetPool final
{
public:
	class UEventAssetPoolComponent*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetAssetPool) == 0x000008, "Wrong alignment on BP_EventManager_C_GetAssetPool");
static_assert(sizeof(BP_EventManager_C_GetAssetPool) == 0x000008, "Wrong size on BP_EventManager_C_GetAssetPool");
static_assert(offsetof(BP_EventManager_C_GetAssetPool, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_GetAssetPool::ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsCutSceneEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_IsCutSceneEvent final
{
public:
	bool                                          Param_IsCutSceneEvent;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsCutSceneEvent) == 0x000001, "Wrong alignment on BP_EventManager_C_IsCutSceneEvent");
static_assert(sizeof(BP_EventManager_C_IsCutSceneEvent) == 0x000001, "Wrong size on BP_EventManager_C_IsCutSceneEvent");
static_assert(offsetof(BP_EventManager_C_IsCutSceneEvent, Param_IsCutSceneEvent) == 0x000000, "Member 'BP_EventManager_C_IsCutSceneEvent::Param_IsCutSceneEvent' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdatePostProcessMaterial
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_UpdatePostProcessMaterial final
{
public:
	bool                                          ForceUpdate;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B3[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_UpdatePostProcessMaterial) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdatePostProcessMaterial");
static_assert(sizeof(BP_EventManager_C_UpdatePostProcessMaterial) == 0x000020, "Wrong size on BP_EventManager_C_UpdatePostProcessMaterial");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, ForceUpdate) == 0x000000, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::ForceUpdate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, CallFunc_IsValid_ReturnValue_2) == 0x000011, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, CallFunc_IsPlaying_ReturnValue) == 0x000012, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'BP_EventManager_C_UpdatePostProcessMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetVignetteMaskTexture
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SetVignetteMaskTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetVignetteMaskTexture) == 0x000008, "Wrong alignment on BP_EventManager_C_SetVignetteMaskTexture");
static_assert(sizeof(BP_EventManager_C_SetVignetteMaskTexture) == 0x000010, "Wrong size on BP_EventManager_C_SetVignetteMaskTexture");
static_assert(offsetof(BP_EventManager_C_SetVignetteMaskTexture, Texture) == 0x000000, "Member 'BP_EventManager_C_SetVignetteMaskTexture::Texture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVignetteMaskTexture, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM) == 0x000008, "Member 'BP_EventManager_C_SetVignetteMaskTexture::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.NotifyFinishWaitMode
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_NotifyFinishWaitMode final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B4[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_NotifyFinishWaitMode) == 0x000008, "Wrong alignment on BP_EventManager_C_NotifyFinishWaitMode");
static_assert(sizeof(BP_EventManager_C_NotifyFinishWaitMode) == 0x000020, "Wrong size on BP_EventManager_C_NotifyFinishWaitMode");
static_assert(offsetof(BP_EventManager_C_NotifyFinishWaitMode, Temp_int_Variable) == 0x000000, "Member 'BP_EventManager_C_NotifyFinishWaitMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_NotifyFinishWaitMode, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_NotifyFinishWaitMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_NotifyFinishWaitMode, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EventManager_C_NotifyFinishWaitMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_NotifyFinishWaitMode, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_NotifyFinishWaitMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_NotifyFinishWaitMode, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_NotifyFinishWaitMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_NotifyFinishWaitMode, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'BP_EventManager_C_NotifyFinishWaitMode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_NotifyFinishWaitMode, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_NotifyFinishWaitMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartAutoBoardAnimation
// 0x0070 (0x0070 - 0x0000)
struct BP_EventManager_C_StartAutoBoardAnimation final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 boardAnimationName;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UAnimMontage*                           AddBordAnimMontage;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStaticPlType                                 StaticPlType;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B6[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             PlayRateCurveData;                                 // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B7[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartAutoBoardAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_StartAutoBoardAnimation");
static_assert(sizeof(BP_EventManager_C_StartAutoBoardAnimation) == 0x000070, "Wrong size on BP_EventManager_C_StartAutoBoardAnimation");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_StartAutoBoardAnimation::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, boardAnimationName) == 0x000008, "Member 'BP_EventManager_C_StartAutoBoardAnimation::boardAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, AddBordAnimMontage) == 0x000018, "Member 'BP_EventManager_C_StartAutoBoardAnimation::AddBordAnimMontage' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, StaticPlType) == 0x000020, "Member 'BP_EventManager_C_StartAutoBoardAnimation::StaticPlType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, PlayRateCurveData) == 0x000028, "Member 'BP_EventManager_C_StartAutoBoardAnimation::PlayRateCurveData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'BP_EventManager_C_StartAutoBoardAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000051, "Member 'BP_EventManager_C_StartAutoBoardAnimation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_EventManager_C_StartAutoBoardAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, CallFunc_GetBP_static_pl_AsCharacter) == 0x000060, "Member 'BP_EventManager_C_StartAutoBoardAnimation::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartAutoBoardAnimation, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_StartAutoBoardAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.LoadAsset
// 0x0140 (0x0140 - 0x0000)
struct BP_EventManager_C_LoadAsset final
{
public:
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BA[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue_2;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget_2;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BB[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BC[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BD[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_3;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue_1;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BE[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue_2;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_4;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BF[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_5;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C0[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_6;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C1[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue_3;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue_3;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget_3;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_LoadAsset) == 0x000008, "Wrong alignment on BP_EventManager_C_LoadAsset");
static_assert(sizeof(BP_EventManager_C_LoadAsset) == 0x000140, "Wrong size on BP_EventManager_C_LoadAsset");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftClass_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftClassActor_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_ClassDynamicCast_AsUser_Widget) == 0x000010, "Member 'BP_EventManager_C_LoadAsset::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_ClassDynamicCast_bSuccess) == 0x000018, "Member 'BP_EventManager_C_LoadAsset::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_AsTexture_2D) == 0x000028, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftClass_ReturnValue_1) == 0x000038, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_ClassDynamicCast_AsUser_Widget_1) == 0x000040, "Member 'BP_EventManager_C_LoadAsset::K2Node_ClassDynamicCast_AsUser_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_ClassDynamicCast_bSuccess_1) == 0x000048, "Member 'BP_EventManager_C_LoadAsset::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftClass_ReturnValue_2) == 0x000050, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_ClassDynamicCast_AsUser_Widget_2) == 0x000058, "Member 'BP_EventManager_C_LoadAsset::K2Node_ClassDynamicCast_AsUser_Widget_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_ClassDynamicCast_bSuccess_2) == 0x000060, "Member 'BP_EventManager_C_LoadAsset::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_GetSoundManager_SoundManager) == 0x000068, "Member 'BP_EventManager_C_LoadAsset::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000070, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface) == 0x000078, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_2) == 0x000088, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x000090, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x0000A0, "Member 'BP_EventManager_C_LoadAsset::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_3) == 0x0000B0, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftClassActor_ReturnValue_1) == 0x0000B8, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftClassActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_AsAnim_Sequence) == 0x0000C0, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_AsAnim_Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftClassActor_ReturnValue_2) == 0x0000D0, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftClassActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_4) == 0x0000D8, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_AsTexture_2D_1) == 0x0000E0, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_4) == 0x0000E8, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_5) == 0x0000F0, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_AsStatic_Mesh) == 0x0000F8, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_5) == 0x000100, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_6) == 0x000108, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_AsParticle_System) == 0x000110, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_6) == 0x000118, "Member 'BP_EventManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftClass_ReturnValue_3) == 0x000120, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, CallFunc_LoadSoftClassActor_ReturnValue_3) == 0x000128, "Member 'BP_EventManager_C_LoadAsset::CallFunc_LoadSoftClassActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_ClassDynamicCast_AsUser_Widget_3) == 0x000130, "Member 'BP_EventManager_C_LoadAsset::K2Node_ClassDynamicCast_AsUser_Widget_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadAsset, K2Node_ClassDynamicCast_bSuccess_3) == 0x000138, "Member 'BP_EventManager_C_LoadAsset::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddEventTriggerCommand_Internal
// 0x0108 (0x0108 - 0x0000)
struct BP_EventManager_C_AddEventTriggerCommand_Internal final
{
public:
	struct FFEventTriggerCommand                  TriggerCommand;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_1;        // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C2[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F0(0x0018)()
};
static_assert(alignof(BP_EventManager_C_AddEventTriggerCommand_Internal) == 0x000008, "Wrong alignment on BP_EventManager_C_AddEventTriggerCommand_Internal");
static_assert(sizeof(BP_EventManager_C_AddEventTriggerCommand_Internal) == 0x000108, "Wrong size on BP_EventManager_C_AddEventTriggerCommand_Internal");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, TriggerCommand) == 0x000000, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::TriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_GetClassDisplayName_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_GetClassDisplayName_ReturnValue_1) == 0x000088, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_GetClassDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B8, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, K2Node_SwitchEnum_CmpSuccess) == 0x0000C8, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D0, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E0, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommand_Internal, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F0, "Member 'BP_EventManager_C_AddEventTriggerCommand_Internal::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProccessTime
// 0x0118 (0x0118 - 0x0000)
struct BP_EventManager_C_ProccessTime final
{
public:
	struct FFEventTriggerCommandData              EventTriggerComandData;                            // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartEvent;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistMakeEventActor_ReturnValue;        // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidEventCommandType_IsValid;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C3[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              CallFunc_IsValidEventCommandType_EventTriggerCommandData; // 0x0080(0x0078)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Performance_Sequencer_IsPerform;       // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C4[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isTutoTips_ReturnValue;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProccessTime) == 0x000008, "Wrong alignment on BP_EventManager_C_ProccessTime");
static_assert(sizeof(BP_EventManager_C_ProccessTime) == 0x000118, "Wrong size on BP_EventManager_C_ProccessTime");
static_assert(offsetof(BP_EventManager_C_ProccessTime, EventTriggerComandData) == 0x000000, "Member 'BP_EventManager_C_ProccessTime::EventTriggerComandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, IsStartEvent) == 0x000078, "Member 'BP_EventManager_C_ProccessTime::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_IsOver_ReturnValue) == 0x000079, "Member 'BP_EventManager_C_ProccessTime::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_IsEnable_ReturnValue) == 0x00007A, "Member 'BP_EventManager_C_ProccessTime::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_IsExistMakeEventActor_ReturnValue) == 0x00007B, "Member 'BP_EventManager_C_ProccessTime::CallFunc_IsExistMakeEventActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_IsValidEventCommandType_IsValid) == 0x00007C, "Member 'BP_EventManager_C_ProccessTime::CallFunc_IsValidEventCommandType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_IsValidEventCommandType_EventTriggerCommandData) == 0x000080, "Member 'BP_EventManager_C_ProccessTime::CallFunc_IsValidEventCommandType_EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_GetBrainFieldManager_Manager) == 0x0000F8, "Member 'BP_EventManager_C_ProccessTime::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_ProccessTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000101, "Member 'BP_EventManager_C_ProccessTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000102, "Member 'BP_EventManager_C_ProccessTime::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_Is_Performance_Sequencer_IsPerform) == 0x000103, "Member 'BP_EventManager_C_ProccessTime::CallFunc_Is_Performance_Sequencer_IsPerform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000108, "Member 'BP_EventManager_C_ProccessTime::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTime, CallFunc_isTutoTips_ReturnValue) == 0x000110, "Member 'BP_EventManager_C_ProccessTime::CallFunc_isTutoTips_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProccessEnemyAllDie
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_ProccessEnemyAllDie final
{
public:
	bool                                          IsStartEvent;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventStartup_IsEvent;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProccessEnemyAllDie) == 0x000008, "Wrong alignment on BP_EventManager_C_ProccessEnemyAllDie");
static_assert(sizeof(BP_EventManager_C_ProccessEnemyAllDie) == 0x000038, "Wrong size on BP_EventManager_C_ProccessEnemyAllDie");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyAllDie, IsStartEvent) == 0x000000, "Member 'BP_EventManager_C_ProccessEnemyAllDie::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyAllDie, CallFunc_GetBrainFieldManager_Manager) == 0x000008, "Member 'BP_EventManager_C_ProccessEnemyAllDie::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyAllDie, CallFunc_GetEnemyManager_Manager) == 0x000010, "Member 'BP_EventManager_C_ProccessEnemyAllDie::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyAllDie, CallFunc_IsEventStartup_IsEvent) == 0x000018, "Member 'BP_EventManager_C_ProccessEnemyAllDie::CallFunc_IsEventStartup_IsEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyAllDie, CallFunc_GetEnemyList_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_ProccessEnemyAllDie::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyAllDie, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_ProccessEnemyAllDie::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyAllDie, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000034, "Member 'BP_EventManager_C_ProccessEnemyAllDie::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyAllDie, CallFunc_Greater_IntInt_ReturnValue) == 0x000035, "Member 'BP_EventManager_C_ProccessEnemyAllDie::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartBPEvent
// 0x0100 (0x0100 - 0x0000)
struct BP_EventManager_C_StartBPEvent final
{
public:
	bool                                          IsStartSubBPEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              EventTriggerCommandData;                           // 0x0008(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 MakeEventActorClass;                               // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C8[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C9[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMakeEventActor*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MakeEventActorBase_C*               K2Node_DynamicCast_AsBP_Make_Event_Actor_Base;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CA[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GeneralPresentEvent_C*              K2Node_DynamicCast_AsBP_General_Present_Event;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAjitoTVEvent_Return;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartBPEvent) == 0x000010, "Wrong alignment on BP_EventManager_C_StartBPEvent");
static_assert(sizeof(BP_EventManager_C_StartBPEvent) == 0x000100, "Wrong size on BP_EventManager_C_StartBPEvent");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, IsStartSubBPEvent) == 0x000000, "Member 'BP_EventManager_C_StartBPEvent::IsStartSubBPEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, EventTriggerCommandData) == 0x000008, "Member 'BP_EventManager_C_StartBPEvent::EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, MakeEventActorClass) == 0x000080, "Member 'BP_EventManager_C_StartBPEvent::MakeEventActorClass' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_StartBPEvent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_StartBPEvent::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C8, "Member 'BP_EventManager_C_StartBPEvent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_StartBPEvent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, K2Node_DynamicCast_AsBP_Make_Event_Actor_Base) == 0x0000D8, "Member 'BP_EventManager_C_StartBPEvent::K2Node_DynamicCast_AsBP_Make_Event_Actor_Base' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_EventManager_C_StartBPEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, K2Node_DynamicCast_AsBP_General_Present_Event) == 0x0000E8, "Member 'BP_EventManager_C_StartBPEvent::K2Node_DynamicCast_AsBP_General_Present_Event' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BP_EventManager_C_StartBPEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartBPEvent, CallFunc_IsAjitoTVEvent_Return) == 0x0000F1, "Member 'BP_EventManager_C_StartBPEvent::CallFunc_IsAjitoTVEvent_Return' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetProgressID_Internal
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_GetProgressID_Internal final
{
public:
	int32                                         Param_ProgressId;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetProgressID_Internal) == 0x000004, "Wrong alignment on BP_EventManager_C_GetProgressID_Internal");
static_assert(sizeof(BP_EventManager_C_GetProgressID_Internal) == 0x000004, "Wrong size on BP_EventManager_C_GetProgressID_Internal");
static_assert(offsetof(BP_EventManager_C_GetProgressID_Internal, Param_ProgressId) == 0x000000, "Member 'BP_EventManager_C_GetProgressID_Internal::Param_ProgressId' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetProgressID
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EventManager_C_SetProgressID final
{
public:
	int32                                         Param_ProgressId;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOffWireEvent;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          CallFunc_IsWireVisibleOffEvent_IsOffWireEvent;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CD[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0098(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CE[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CF[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetProgressID) == 0x000008, "Wrong alignment on BP_EventManager_C_SetProgressID");
static_assert(sizeof(BP_EventManager_C_SetProgressID) == 0x0000D8, "Wrong size on BP_EventManager_C_SetProgressID");
static_assert(offsetof(BP_EventManager_C_SetProgressID, Param_ProgressId) == 0x000000, "Member 'BP_EventManager_C_SetProgressID::Param_ProgressId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, IsOffWireEvent) == 0x000004, "Member 'BP_EventManager_C_SetProgressID::IsOffWireEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, PlayerList) == 0x000008, "Member 'BP_EventManager_C_SetProgressID::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_IsWireVisibleOffEvent_IsOffWireEvent) == 0x000018, "Member 'BP_EventManager_C_SetProgressID::CallFunc_IsWireVisibleOffEvent_IsOffWireEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_EventManager_C_SetProgressID::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_EventManager_C_SetProgressID::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_Format_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_SetProgressID::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_SetProgressID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_GetPlayerManager_PlayerManager) == 0x000090, "Member 'BP_EventManager_C_SetProgressID::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_GetPlayerList_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_SetProgressID::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'BP_EventManager_C_SetProgressID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BP_EventManager_C_SetProgressID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_SetProgressID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_GetUserParamManager_UserParamManager) == 0x0000B8, "Member 'BP_EventManager_C_SetProgressID::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_EventManager_C_SetProgressID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_EventManager_C_SetProgressID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BP_EventManager_C_SetProgressID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BP_EventManager_C_SetProgressID::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_EventManager_C_SetProgressID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetProgressID, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D5, "Member 'BP_EventManager_C_SetProgressID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AttachRedStringMeshs
// 0x0050 (0x0050 - 0x0000)
struct BP_EventManager_C_AttachRedStringMeshs final
{
public:
	class AActor*                                 ParentActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DefaultSocket;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalSpawnLocation;                                // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NullActor;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D1[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AttachRedStringMeshs) == 0x000008, "Wrong alignment on BP_EventManager_C_AttachRedStringMeshs");
static_assert(sizeof(BP_EventManager_C_AttachRedStringMeshs) == 0x000050, "Wrong size on BP_EventManager_C_AttachRedStringMeshs");
static_assert(offsetof(BP_EventManager_C_AttachRedStringMeshs, ParentActor) == 0x000000, "Member 'BP_EventManager_C_AttachRedStringMeshs::ParentActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachRedStringMeshs, SocketName) == 0x000008, "Member 'BP_EventManager_C_AttachRedStringMeshs::SocketName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachRedStringMeshs, DefaultSocket) == 0x000010, "Member 'BP_EventManager_C_AttachRedStringMeshs::DefaultSocket' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachRedStringMeshs, LocalSpawnLocation) == 0x000018, "Member 'BP_EventManager_C_AttachRedStringMeshs::LocalSpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachRedStringMeshs, NullActor) == 0x000028, "Member 'BP_EventManager_C_AttachRedStringMeshs::NullActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachRedStringMeshs, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_AttachRedStringMeshs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachRedStringMeshs, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_AttachRedStringMeshs::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachRedStringMeshs, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_AttachRedStringMeshs::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayGeneralBoardAnimation
// 0x01E0 (0x01E0 - 0x0000)
struct BP_EventManager_C_PlayGeneralBoardAnimation final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BoardAnimationIndex;                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D3[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AttachBoardIndex;                                  // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AddAnimMontage;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UCurveFloat>             PlayRateCurveData;                                 // 0x0030(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	uint8                                         Pad_34D4[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D5[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBoardAnimation_IsSuccess;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D6[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D7[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D8[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D9[0x2];                                     // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_static_pl_C*                        K2Node_DynamicCast_AsBP_Static_Pl;                 // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayGeneralBoardAnimation) == 0x000010, "Wrong alignment on BP_EventManager_C_PlayGeneralBoardAnimation");
static_assert(sizeof(BP_EventManager_C_PlayGeneralBoardAnimation) == 0x0001E0, "Wrong size on BP_EventManager_C_PlayGeneralBoardAnimation");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, BoardAnimationIndex) == 0x000008, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::BoardAnimationIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, IsLoop) == 0x000018, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, SocketName) == 0x00001C, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::SocketName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, AttachBoardIndex) == 0x000024, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::AttachBoardIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, AddAnimMontage) == 0x000028, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::AddAnimMontage' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, PlayRateCurveData) == 0x000030, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::PlayRateCurveData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_PlayBoardAnimation_IsSuccess) == 0x0000A0, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_PlayBoardAnimation_IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_GetBP_static_pl_AsCharacter) == 0x0000A8, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_PlayAnimMontage_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000B4, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000B8, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000140, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000144, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001CC, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_IsValid_ReturnValue_1) == 0x0001CD, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, K2Node_DynamicCast_AsBP_Static_Pl) == 0x0001D0, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::K2Node_DynamicCast_AsBP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayGeneralBoardAnimation, CallFunc_IsValid_ReturnValue_2) == 0x0001D9, "Member 'BP_EventManager_C_PlayGeneralBoardAnimation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetAnimMontageTransform
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_SetAnimMontageTransform final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BoardAnimName;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetAnimMontageTransform) == 0x000008, "Wrong alignment on BP_EventManager_C_SetAnimMontageTransform");
static_assert(sizeof(BP_EventManager_C_SetAnimMontageTransform) == 0x000030, "Wrong size on BP_EventManager_C_SetAnimMontageTransform");
static_assert(offsetof(BP_EventManager_C_SetAnimMontageTransform, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SetAnimMontageTransform::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetAnimMontageTransform, BoardAnimName) == 0x000008, "Member 'BP_EventManager_C_SetAnimMontageTransform::BoardAnimName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetAnimMontageTransform, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_SetAnimMontageTransform::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetAnimMontageTransform, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventManager_C_SetAnimMontageTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetAnimMontageTransform, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetAnimMontageTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AttachToBoadActor
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_AttachToBoadActor final
{
public:
	int32                                         AttachBoardNum;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34DC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ParentActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DD[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AttachToBoadActor) == 0x000008, "Wrong alignment on BP_EventManager_C_AttachToBoadActor");
static_assert(sizeof(BP_EventManager_C_AttachToBoadActor) == 0x000038, "Wrong size on BP_EventManager_C_AttachToBoadActor");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, AttachBoardNum) == 0x000000, "Member 'BP_EventManager_C_AttachToBoadActor::AttachBoardNum' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, ParentActor) == 0x000008, "Member 'BP_EventManager_C_AttachToBoadActor::ParentActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_AttachToBoadActor::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, CallFunc_Array_LastIndex_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_AttachToBoadActor::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EventManager_C_AttachToBoadActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_AttachToBoadActor::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, CallFunc_GetBP_static_pl_AsCharacter) == 0x000028, "Member 'BP_EventManager_C_AttachToBoadActor::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_AttachToBoadActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachToBoadActor, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000031, "Member 'BP_EventManager_C_AttachToBoadActor::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProccessEnemyNumCheck
// 0x01A0 (0x01A0 - 0x0000)
struct BP_EventManager_C_ProccessEnemyNumCheck final
{
public:
	struct FFEventTriggerCommandData              EventTriggerComandData;                            // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartEvent;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34DF[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         EnemyList;                                         // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         RepopEnemyNum;                                     // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnemyNum;                                          // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 EnemyLevelName;                                    // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FS_LoadedLevelInfo>             LLoadedLevelInfoArray;                             // 0x00A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          IsCheck;                                           // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E0[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E1[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E2[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E3[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E4[0x1];                                     // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E5[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E6[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyRepop_Repop;                       // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E7[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E8[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E9[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetEnemyListByLevelName_ReturnValue;      // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EA[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EB[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EC[0x6];                                     // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventStartup_IsEvent;                   // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProccessEnemyNumCheck) == 0x000008, "Wrong alignment on BP_EventManager_C_ProccessEnemyNumCheck");
static_assert(sizeof(BP_EventManager_C_ProccessEnemyNumCheck) == 0x0001A0, "Wrong size on BP_EventManager_C_ProccessEnemyNumCheck");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, EventTriggerComandData) == 0x000000, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::EventTriggerComandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, IsStartEvent) == 0x000078, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, EnemyList) == 0x000080, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::EnemyList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, RepopEnemyNum) == 0x000090, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::RepopEnemyNum' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, EnemyNum) == 0x000094, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::EnemyNum' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, EnemyLevelName) == 0x000098, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::EnemyLevelName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, LLoadedLevelInfoArray) == 0x0000A8, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::LLoadedLevelInfoArray' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, IsCheck) == 0x0000B8, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::IsCheck' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C4, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Not_PreBool_ReturnValue) == 0x0000CC, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, Temp_int_Variable) == 0x0000D4, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Max_ReturnValue) == 0x0000E8, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000EC, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000ED, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_BooleanAND_ReturnValue) == 0x0000EE, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000108, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000119, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_IsEnemyRepop_Repop) == 0x00011A, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_IsEnemyRepop_Repop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x00011B, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_DoesImplementInterface_ReturnValue) == 0x00011C, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_GetEnemyManager_Manager) == 0x000120, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_GetLevelManager_LevelManager) == 0x000128, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Conv_NameToString_ReturnValue) == 0x000138, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, Temp_int_Array_Index_Variable_1) == 0x000148, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_GetEnemyListByLevelName_ReturnValue) == 0x000150, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_GetEnemyListByLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000160, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000164, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_BooleanAND_ReturnValue_2) == 0x00016C, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000170, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Array_Length_ReturnValue_2) == 0x000180, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Contains_ReturnValue) == 0x000184, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_BooleanAND_ReturnValue_3) == 0x000185, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x000186, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_BooleanOR_ReturnValue) == 0x000187, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000188, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000189, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_GetBrainFieldManager_Manager) == 0x000190, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000198, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnemyNumCheck, CallFunc_IsEventStartup_IsEvent) == 0x000199, "Member 'BP_EventManager_C_ProccessEnemyNumCheck::CallFunc_IsEventStartup_IsEvent' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SettingEasyStaticForGeneralStatic
// 0x0148 (0x0148 - 0x0000)
struct BP_EventManager_C_SettingEasyStaticForGeneralStatic final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoardAnimationInfo                    K2Node_MakeStruct_BoardAnimationInfo;              // 0x0008(0x0048)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34ED[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoardAnimationInfo                    K2Node_MakeStruct_BoardAnimationInfo_1;            // 0x0058(0x0048)()
	struct FBoardAnimationInfo                    K2Node_MakeStruct_BoardAnimationInfo_2;            // 0x00A0(0x0048)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EE[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EF[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F0[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetParentComponents_Parents;              // 0x0118(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F1[0x2];                                     // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SettingEasyStaticForGeneralStatic) == 0x000008, "Wrong alignment on BP_EventManager_C_SettingEasyStaticForGeneralStatic");
static_assert(sizeof(BP_EventManager_C_SettingEasyStaticForGeneralStatic) == 0x000148, "Wrong size on BP_EventManager_C_SettingEasyStaticForGeneralStatic");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, K2Node_MakeStruct_BoardAnimationInfo) == 0x000008, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::K2Node_MakeStruct_BoardAnimationInfo' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, K2Node_MakeStruct_BoardAnimationInfo_1) == 0x000058, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::K2Node_MakeStruct_BoardAnimationInfo_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, K2Node_MakeStruct_BoardAnimationInfo_2) == 0x0000A0, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::K2Node_MakeStruct_BoardAnimationInfo_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Array_Add_ReturnValue_1) == 0x000104, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Array_Add_ReturnValue_2) == 0x000108, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_GetBP_static_pl_AsCharacter) == 0x000110, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_GetParentComponents_Parents) == 0x000118, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_GetParentComponents_Parents' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_GetAttachParentActor_ReturnValue) == 0x000128, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Array_Find_ReturnValue) == 0x000130, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_IsValid_ReturnValue) == 0x000134, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Less_IntInt_ReturnValue_1) == 0x000135, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingEasyStaticForGeneralStatic, CallFunc_Greater_IntInt_ReturnValue) == 0x000140, "Member 'BP_EventManager_C_SettingEasyStaticForGeneralStatic::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetVisibleShowDestinationActor
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_SetVisibleShowDestinationActor final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ShowDestinationActor_C*             LShowDestinationActor;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F3[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ShowDestinationActor_C*             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F4[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetVisibleShowDestinationActor) == 0x000008, "Wrong alignment on BP_EventManager_C_SetVisibleShowDestinationActor");
static_assert(sizeof(BP_EventManager_C_SetVisibleShowDestinationActor) == 0x000038, "Wrong size on BP_EventManager_C_SetVisibleShowDestinationActor");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, IsVisible) == 0x000000, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::IsVisible' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, LShowDestinationActor) == 0x000008, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::LShowDestinationActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetVisibleShowDestinationActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_SetVisibleShowDestinationActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventPause_Internal
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_SetEventPause_Internal final
{
public:
	bool                                          IsPause;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UXGameStreamingManager*                 CallFunc_GetXGameStreamingManager_XGameStreamingManager; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASManager_C*                       CallFunc_GetSASManager_SAS_Manager;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F7[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeSoundState_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeSoundState_ReturnValue_1;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F8[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manater;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F9[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34FA[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FB[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_static_pl_C*                        K2Node_DynamicCast_AsBP_Static_Pl;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FC[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetEventPause_Internal) == 0x000008, "Wrong alignment on BP_EventManager_C_SetEventPause_Internal");
static_assert(sizeof(BP_EventManager_C_SetEventPause_Internal) == 0x000090, "Wrong size on BP_EventManager_C_SetEventPause_Internal");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, IsPause) == 0x000000, "Member 'BP_EventManager_C_SetEventPause_Internal::IsPause' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_GetXGameStreamingManager_XGameStreamingManager) == 0x000008, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_GetXGameStreamingManager_XGameStreamingManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000010, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_GetSASManager_SAS_Manager) == 0x000020, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_GetSASManager_SAS_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_GetSoundManager_SoundManager) == 0x000030, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_ChangeSoundState_ReturnValue) == 0x000039, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_ChangeSoundState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_ChangeSoundState_ReturnValue_1) == 0x00003A, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_ChangeSoundState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EventManager_C_SetEventPause_Internal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_EventManager_C_SetEventPause_Internal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_GetGameSystemManager_Manater) == 0x000048, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_GetGameSystemManager_Manater' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000050, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000054, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_GetBP_static_pl_AsCharacter) == 0x000070, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, K2Node_DynamicCast_AsBP_Static_Pl) == 0x000078, "Member 'BP_EventManager_C_SetEventPause_Internal::K2Node_DynamicCast_AsBP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_EventManager_C_SetEventPause_Internal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventPause_Internal, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_SetEventPause_Internal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventEnableUIMenu
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetEventEnableUIMenu final
{
public:
	bool                                          EnableFlag;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetEventEnableUIMenu) == 0x000008, "Wrong alignment on BP_EventManager_C_SetEventEnableUIMenu");
static_assert(sizeof(BP_EventManager_C_SetEventEnableUIMenu) == 0x000018, "Wrong size on BP_EventManager_C_SetEventEnableUIMenu");
static_assert(offsetof(BP_EventManager_C_SetEventEnableUIMenu, EnableFlag) == 0x000000, "Member 'BP_EventManager_C_SetEventEnableUIMenu::EnableFlag' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventEnableUIMenu, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_EventManager_C_SetEventEnableUIMenu::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventEnableUIMenu, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_SetEventEnableUIMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProccessEndBrainTalk
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_ProccessEndBrainTalk final
{
public:
	bool                                          IsStartEvent;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSGameInstance*                        K2Node_DynamicCast_AsRSGame_Instance;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FF[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinishBrainTalk_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExecuteBrainTalkWidget_IsExecute;       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProccessEndBrainTalk) == 0x000008, "Wrong alignment on BP_EventManager_C_ProccessEndBrainTalk");
static_assert(sizeof(BP_EventManager_C_ProccessEndBrainTalk) == 0x000038, "Wrong size on BP_EventManager_C_ProccessEndBrainTalk");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, IsStartEvent) == 0x000000, "Member 'BP_EventManager_C_ProccessEndBrainTalk::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000010, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, K2Node_DynamicCast_AsRSGame_Instance) == 0x000018, "Member 'BP_EventManager_C_ProccessEndBrainTalk::K2Node_DynamicCast_AsRSGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventManager_C_ProccessEndBrainTalk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_GetBrainTalkManager_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_GetBrainTalkManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_IsFinishBrainTalk_ReturnValue) == 0x000031, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_IsFinishBrainTalk_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_IsExecuteBrainTalkWidget_IsExecute) == 0x000032, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_IsExecuteBrainTalkWidget_IsExecute' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_IsValid_ReturnValue_2) == 0x000033, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEndBrainTalk, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_ProccessEndBrainTalk::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartPPMMoveBlur
// 0x0170 (0x0170 - 0x0000)
struct BP_EventManager_C_StartPPMMoveBlur final
{
public:
	struct FVector2D                              Vector;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UCurveFloat>             TimelineCurve;                                     // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_DynamicCast_AsCurve_Float;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3500[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_DynamicCast_AsCurve_Float_1;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3501[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3502[0xC];                                     // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3503[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_RenderTarget;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartPPMMoveBlur) == 0x000010, "Wrong alignment on BP_EventManager_C_StartPPMMoveBlur");
static_assert(sizeof(BP_EventManager_C_StartPPMMoveBlur) == 0x000170, "Wrong size on BP_EventManager_C_StartPPMMoveBlur");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, Vector) == 0x000000, "Member 'BP_EventManager_C_StartPPMMoveBlur::Vector' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, TimelineCurve) == 0x000008, "Member 'BP_EventManager_C_StartPPMMoveBlur::TimelineCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_MakeColor_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_LoadSoftObject_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, K2Node_DynamicCast_AsCurve_Float) == 0x000058, "Member 'BP_EventManager_C_StartPPMMoveBlur::K2Node_DynamicCast_AsCurve_Float' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_EventManager_C_StartPPMMoveBlur::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, K2Node_DynamicCast_AsCurve_Float_1) == 0x000068, "Member 'BP_EventManager_C_StartPPMMoveBlur::K2Node_DynamicCast_AsCurve_Float_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_EventManager_C_StartPPMMoveBlur::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000072, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_GetFOVAngle_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000C0, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_GetRenderTargetManager_Manager) == 0x000148, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_GetRenderTargetManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_IsValid_ReturnValue_1) == 0x000150, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_GetRenderTarget_RenderTarget) == 0x000158, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_GetRenderTarget_RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPPMMoveBlur, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000160, "Member 'BP_EventManager_C_StartPPMMoveBlur::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.LoadEventAsset
// 0x03F0 (0x03F0 - 0x0000)
struct BP_EventManager_C_LoadEventAsset final
{
public:
	TArray<class FName>                           AllMovieTextureRowNameList;                        // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           AllTextureRowNameList;                             // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           AllPresetNameList;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3504[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3505[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventMovieTextureData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3506[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3507[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManaTexture*                           K2Node_DynamicCast_AsMana_Texture;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3508[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3509[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTextureData                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0100(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350A[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350B[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350C[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350D[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventPresetData                      CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0160(0x0190)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350E[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350F[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3510[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3511[0x6];                                     // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_EventTriggerBox_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0320(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_EventTriggerBox_C*                  CallFunc_Array_Get_Item;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventTriggerBox_C*                  CallFunc_Array_Get_Item_1;                         // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetMovieTextureNameListFromMakeEventActor_ReturnValue; // 0x0340(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetTextureNameListFromMakeEventActor_ReturnValue; // 0x0350(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3512[0x2];                                     // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3513[0x2];                                     // 0x0386(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3514[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventTriggerBox_C*                  CallFunc_Array_Get_Item_4;                         // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3515[0x3];                                     // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetPresetNameListFromMakeEventActor_ReturnValue; // 0x03A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_5;                         // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3516[0x2];                                     // 0x03CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3517[0x2];                                     // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x03DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3518[0x2];                                     // 0x03DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_LoadEventAsset) == 0x000010, "Wrong alignment on BP_EventManager_C_LoadEventAsset");
static_assert(sizeof(BP_EventManager_C_LoadEventAsset) == 0x0003F0, "Wrong size on BP_EventManager_C_LoadEventAsset");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, AllMovieTextureRowNameList) == 0x000000, "Member 'BP_EventManager_C_LoadEventAsset::AllMovieTextureRowNameList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, AllTextureRowNameList) == 0x000010, "Member 'BP_EventManager_C_LoadEventAsset::AllTextureRowNameList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, AllPresetNameList) == 0x000020, "Member 'BP_EventManager_C_LoadEventAsset::AllPresetNameList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable_3) == 0x00004C, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable_2) == 0x000050, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable_4) == 0x000058, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Num_Variable) == 0x00005C, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable_3) == 0x000060, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue_3) == 0x000068, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable_4) == 0x00006C, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue_4) == 0x000070, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable_5) == 0x000074, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable_6) == 0x000078, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable_5) == 0x00007C, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue_5) == 0x000080, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable_7) == 0x000084, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable_6) == 0x000088, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue_6) == 0x00008C, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, K2Node_DynamicCast_AsMana_Texture) == 0x0000D8, "Member 'BP_EventManager_C_LoadEventAsset::K2Node_DynamicCast_AsMana_Texture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_EventManager_C_LoadEventAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable_7) == 0x0000E4, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000E8, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_2) == 0x0000EC, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_3) == 0x0000F0, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Array_Index_Variable_8) == 0x0000F4, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000100, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000128, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000130, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Counter_Variable_8) == 0x000138, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, K2Node_DynamicCast_AsTexture) == 0x000140, "Member 'BP_EventManager_C_LoadEventAsset::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'BP_EventManager_C_LoadEventAsset::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Add_IntInt_ReturnValue_8) == 0x00014C, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_4) == 0x000150, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_5) == 0x000154, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000158, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000160, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0002F0, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Num_Variable_1) == 0x0002F4, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F8, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_LoadSoftObject_ReturnValue_2) == 0x000300, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, Temp_int_Loop_Num_Variable_2) == 0x000308, "Member 'BP_EventManager_C_LoadEventAsset::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000310, "Member 'BP_EventManager_C_LoadEventAsset::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, K2Node_DynamicCast_bSuccess_2) == 0x000318, "Member 'BP_EventManager_C_LoadEventAsset::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue_2) == 0x000319, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetAllActorsOfClass_OutActors) == 0x000320, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Get_Item) == 0x000330, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Get_Item_1) == 0x000338, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetMovieTextureNameListFromMakeEventActor_ReturnValue) == 0x000340, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetMovieTextureNameListFromMakeEventActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetTextureNameListFromMakeEventActor_ReturnValue) == 0x000350, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetTextureNameListFromMakeEventActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Get_Item_2) == 0x000360, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Get_Item_3) == 0x000368, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Add_ReturnValue) == 0x000370, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Add_ReturnValue_1) == 0x000374, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Contains_ReturnValue) == 0x000378, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Contains_ReturnValue_1) == 0x000379, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_6) == 0x00037C, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_7) == 0x000380, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue_3) == 0x000384, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000385, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_8) == 0x000388, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_9) == 0x00038C, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue_4) == 0x000390, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000391, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_IsValidClass_ReturnValue) == 0x000392, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_IsValidClass_ReturnValue_1) == 0x000393, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Get_Item_4) == 0x000398, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_10) == 0x0003A0, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue_5) == 0x0003A4, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_GetPresetNameListFromMakeEventActor_ReturnValue) == 0x0003A8, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_GetPresetNameListFromMakeEventActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Get_Item_5) == 0x0003B8, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_11) == 0x0003C0, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Add_ReturnValue_2) == 0x0003C4, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue_6) == 0x0003C8, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Contains_ReturnValue_2) == 0x0003C9, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_12) == 0x0003CC, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_IsValidClass_ReturnValue_2) == 0x0003D0, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0003D1, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_13) == 0x0003D4, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_14) == 0x0003D8, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue_7) == 0x0003DC, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Less_IntInt_ReturnValue_8) == 0x0003DD, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Array_Length_ReturnValue_15) == 0x0003E0, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_LoadEventAsset, CallFunc_Greater_IntInt_ReturnValue_6) == 0x0003E4, "Member 'BP_EventManager_C_LoadEventAsset::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsLoadedEventAsset
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EventManager_C_IsLoadedEventAsset final
{
public:
	bool                                          IsLoaded;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BoolReturn;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3519[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351B[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351C[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UManaTexture*>                   CallFunc_Map_Values_Values;                        // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UManaTexture*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351D[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture*>                       CallFunc_Map_Values_Values_1;                      // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351E[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351F[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3520[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  CallFunc_Map_Values_Values_2;                      // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3521[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3522[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsLoadedEventAsset) == 0x000008, "Wrong alignment on BP_EventManager_C_IsLoadedEventAsset");
static_assert(sizeof(BP_EventManager_C_IsLoadedEventAsset) == 0x0000C0, "Wrong size on BP_EventManager_C_IsLoadedEventAsset");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, IsLoaded) == 0x000000, "Member 'BP_EventManager_C_IsLoadedEventAsset::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, BoolReturn) == 0x000001, "Member 'BP_EventManager_C_IsLoadedEventAsset::BoolReturn' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000025, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002D, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Map_Values_Values) == 0x000030, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Map_Length_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000055, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Not_PreBool_ReturnValue_2) == 0x000056, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_BooleanAND_ReturnValue) == 0x000057, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, Temp_int_Loop_Counter_Variable_2) == 0x000058, "Member 'BP_EventManager_C_IsLoadedEventAsset::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Map_Values_Values_1) == 0x000060, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Map_Length_ReturnValue_1) == 0x000070, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Array_Length_ReturnValue_2) == 0x000084, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_BooleanAND_ReturnValue_1) == 0x000089, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_BooleanAND_ReturnValue_2) == 0x00008A, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Map_Length_ReturnValue_2) == 0x00008C, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Map_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Map_Values_Values_2) == 0x000090, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Map_Values_Values_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Array_Length_ReturnValue_3) == 0x0000B4, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadedEventAsset, CallFunc_BooleanAND_ReturnValue_3) == 0x0000B9, "Member 'BP_EventManager_C_IsLoadedEventAsset::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsPlayBeforeBoardAnimation
// 0x0058 (0x0058 - 0x0000)
struct BP_EventManager_C_IsPlayBeforeBoardAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          ReturnIsPlay;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3523[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3524[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3525[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3526[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Static_Pl_C>      K2Node_DynamicCast_AsBPI_Static_Pl;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayBeforeAnimation_IsPlay;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsPlayBeforeBoardAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_IsPlayBeforeBoardAnimation");
static_assert(sizeof(BP_EventManager_C_IsPlayBeforeBoardAnimation) == 0x000058, "Wrong size on BP_EventManager_C_IsPlayBeforeBoardAnimation");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, ReturnIsPlay) == 0x000001, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::ReturnIsPlay' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_GetBP_static_pl_AsCharacter) == 0x000028, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, K2Node_DynamicCast_AsBPI_Static_Pl) == 0x000038, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::K2Node_DynamicCast_AsBPI_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_IsPlayBeforeAnimation_IsPlay) == 0x00004A, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_IsPlayBeforeAnimation_IsPlay' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_IsValid_ReturnValue) == 0x00004B, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayBeforeBoardAnimation, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_IsPlayBeforeBoardAnimation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartEventBossName
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_StartEventBossName final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSpecialCaptureIndex;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3527[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 bossId;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBossNameMode                                 Mode;                                              // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3528[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FreeFixedDrawSecond;                               // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3529[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      LocalCaptureActor;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartEventBossName) == 0x000008, "Wrong alignment on BP_EventManager_C_StartEventBossName");
static_assert(sizeof(BP_EventManager_C_StartEventBossName) == 0x000060, "Wrong size on BP_EventManager_C_StartEventBossName");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_StartEventBossName::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, IsSpecialCaptureIndex) == 0x000004, "Member 'BP_EventManager_C_StartEventBossName::IsSpecialCaptureIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, SocketName) == 0x000008, "Member 'BP_EventManager_C_StartEventBossName::SocketName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, bossId) == 0x000010, "Member 'BP_EventManager_C_StartEventBossName::bossId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, Scale) == 0x000020, "Member 'BP_EventManager_C_StartEventBossName::Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, Mode) == 0x00002C, "Member 'BP_EventManager_C_StartEventBossName::Mode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, FreeFixedDrawSecond) == 0x000030, "Member 'BP_EventManager_C_StartEventBossName::FreeFixedDrawSecond' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, LocalCaptureActor) == 0x000038, "Member 'BP_EventManager_C_StartEventBossName::LocalCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_StartEventBossName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_EventManager_C_StartEventBossName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_EventManager_C_StartEventBossName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_EventManager_C_StartEventBossName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, CallFunc_IsValid_ReturnValue_2) == 0x000059, "Member 'BP_EventManager_C_StartEventBossName::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00005A, "Member 'BP_EventManager_C_StartEventBossName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventBossName, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00005B, "Member 'BP_EventManager_C_StartEventBossName::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartEventCharaName
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_StartEventCharaName final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSpecialCaptureIndex;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CharaID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352C[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      LocalCaptureActor;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352E[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartEventCharaName) == 0x000008, "Wrong alignment on BP_EventManager_C_StartEventCharaName");
static_assert(sizeof(BP_EventManager_C_StartEventCharaName) == 0x000060, "Wrong size on BP_EventManager_C_StartEventCharaName");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_StartEventCharaName::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, IsSpecialCaptureIndex) == 0x000004, "Member 'BP_EventManager_C_StartEventCharaName::IsSpecialCaptureIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, SocketName) == 0x000008, "Member 'BP_EventManager_C_StartEventCharaName::SocketName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CharaID) == 0x000010, "Member 'BP_EventManager_C_StartEventCharaName::CharaID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, Scale) == 0x000020, "Member 'BP_EventManager_C_StartEventCharaName::Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, LocalCaptureActor) == 0x000030, "Member 'BP_EventManager_C_StartEventCharaName::LocalCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_StartEventCharaName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventManager_C_StartEventCharaName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_StartEventCharaName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_EventManager_C_StartEventCharaName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_EventManager_C_StartEventCharaName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000058, "Member 'BP_EventManager_C_StartEventCharaName::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartEventCharaName, CallFunc_IsValid_ReturnValue_2) == 0x000059, "Member 'BP_EventManager_C_StartEventCharaName::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CalcSceneCapturePostProcessSettings
// 0x1E50 (0x1E50 - 0x0000)
struct BP_EventManager_C_CalcSceneCapturePostProcessSettings final
{
public:
	class USceneCaptureComponent2D*               SceneCapture;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352F[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   Settings;                                          // 0x0020(0x0780)(Parm, OutParm)
	struct FPostProcessSettings                   Setting;                                           // 0x07A0(0x0780)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0F20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0F24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0F28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3530[0x4];                                     // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   CallFunc_RemovePostProcessMaterialFromPPS_ReturnValue; // 0x0F30(0x0780)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x16B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3531[0xC];                                     // 0x16B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   CallFunc_CalcStaticCapturePostProcessSettings_ReturnValue; // 0x16C0(0x0780)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3532[0x3];                                     // 0x1E41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x1E44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_CalcSceneCapturePostProcessSettings) == 0x000010, "Wrong alignment on BP_EventManager_C_CalcSceneCapturePostProcessSettings");
static_assert(sizeof(BP_EventManager_C_CalcSceneCapturePostProcessSettings) == 0x001E50, "Wrong size on BP_EventManager_C_CalcSceneCapturePostProcessSettings");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, SceneCapture) == 0x000000, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::SceneCapture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, Location) == 0x000008, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, Settings) == 0x000020, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::Settings' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, Setting) == 0x0007A0, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::Setting' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, Temp_int_Array_Index_Variable) == 0x000F20, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, Temp_int_Loop_Num_Variable) == 0x000F24, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, CallFunc_Array_Length_ReturnValue) == 0x000F28, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, CallFunc_RemovePostProcessMaterialFromPPS_ReturnValue) == 0x000F30, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::CallFunc_RemovePostProcessMaterialFromPPS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, Temp_int_Loop_Counter_Variable) == 0x0016B0, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, CallFunc_CalcStaticCapturePostProcessSettings_ReturnValue) == 0x0016C0, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::CallFunc_CalcStaticCapturePostProcessSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, CallFunc_Less_IntInt_ReturnValue) == 0x001E40, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CalcSceneCapturePostProcessSettings, CallFunc_Add_IntInt_ReturnValue) == 0x001E44, "Member 'BP_EventManager_C_CalcSceneCapturePostProcessSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetDefaultSceneCapturePostProcessSetting
// 0x0780 (0x0780 - 0x0000)
struct BP_EventManager_C_GetDefaultSceneCapturePostProcessSetting final
{
public:
	struct FPostProcessSettings                   PPS;                                               // 0x0000(0x0780)(Parm, OutParm)
};
static_assert(alignof(BP_EventManager_C_GetDefaultSceneCapturePostProcessSetting) == 0x000010, "Wrong alignment on BP_EventManager_C_GetDefaultSceneCapturePostProcessSetting");
static_assert(sizeof(BP_EventManager_C_GetDefaultSceneCapturePostProcessSetting) == 0x000780, "Wrong size on BP_EventManager_C_GetDefaultSceneCapturePostProcessSetting");
static_assert(offsetof(BP_EventManager_C_GetDefaultSceneCapturePostProcessSetting, PPS) == 0x000000, "Member 'BP_EventManager_C_GetDefaultSceneCapturePostProcessSetting::PPS' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetInGameBeforeCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_SetInGameBeforeCamera final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UCurveFloat*                            InGameCurve;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraFov;                                         // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetInGameBeforeCamera) == 0x000010, "Wrong alignment on BP_EventManager_C_SetInGameBeforeCamera");
static_assert(sizeof(BP_EventManager_C_SetInGameBeforeCamera) == 0x000040, "Wrong size on BP_EventManager_C_SetInGameBeforeCamera");
static_assert(offsetof(BP_EventManager_C_SetInGameBeforeCamera, Transform) == 0x000000, "Member 'BP_EventManager_C_SetInGameBeforeCamera::Transform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetInGameBeforeCamera, InGameCurve) == 0x000030, "Member 'BP_EventManager_C_SetInGameBeforeCamera::InGameCurve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetInGameBeforeCamera, CameraFov) == 0x000038, "Member 'BP_EventManager_C_SetInGameBeforeCamera::CameraFov' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetInGameBeforeCamera, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_SetInGameBeforeCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartCameraCutDynamic
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_StartCameraCutDynamic final
{
public:
	class ULevelSequence*                         Level_Sequence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      BlendFunc;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3533[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendExp;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEndCameraBlendPlayerCamera;                      // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3534[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3535[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3536[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StartCameraCutDynamic) == 0x000008, "Wrong alignment on BP_EventManager_C_StartCameraCutDynamic");
static_assert(sizeof(BP_EventManager_C_StartCameraCutDynamic) == 0x000048, "Wrong size on BP_EventManager_C_StartCameraCutDynamic");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, Level_Sequence) == 0x000000, "Member 'BP_EventManager_C_StartCameraCutDynamic::Level_Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, BlendTime) == 0x000008, "Member 'BP_EventManager_C_StartCameraCutDynamic::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, BlendFunc) == 0x00000C, "Member 'BP_EventManager_C_StartCameraCutDynamic::BlendFunc' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, BlendExp) == 0x000010, "Member 'BP_EventManager_C_StartCameraCutDynamic::BlendExp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, IsEndCameraBlendPlayerCamera) == 0x000014, "Member 'BP_EventManager_C_StartCameraCutDynamic::IsEndCameraBlendPlayerCamera' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, CallFunc_GetSoundManager_SoundManager) == 0x000018, "Member 'BP_EventManager_C_StartCameraCutDynamic::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_StartCameraCutDynamic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_EventManager_C_StartCameraCutDynamic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'BP_EventManager_C_StartCameraCutDynamic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, CallFunc_GetSequencePlayer_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_StartCameraCutDynamic::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCameraCutDynamic, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000040, "Member 'BP_EventManager_C_StartCameraCutDynamic::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnCameraCutFinishd
// 0x0110 (0x0110 - 0x0000)
struct BP_EventManager_C_OnCameraCutFinishd final
{
public:
	struct FCameraFilmbackSettings                K2Node_MakeStruct_CameraFilmbackSettings;          // 0x0000(0x000C)(NoDestructor)
	uint8                                         Pad_3537[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureCineCameraActor_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3538[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3539[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnCameraCutFinishd) == 0x000010, "Wrong alignment on BP_EventManager_C_OnCameraCutFinishd");
static_assert(sizeof(BP_EventManager_C_OnCameraCutFinishd) == 0x000110, "Wrong size on BP_EventManager_C_OnCameraCutFinishd");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, K2Node_MakeStruct_CameraFilmbackSettings) == 0x000000, "Member 'BP_EventManager_C_OnCameraCutFinishd::K2Node_MakeStruct_CameraFilmbackSettings' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_GetPlayerController_ReturnValue_1) == 0x000060, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000068, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000F0, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_GetCineCameraComponent_ReturnValue) == 0x0000F8, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutFinishd, CallFunc_IsValid_ReturnValue_1) == 0x000100, "Member 'BP_EventManager_C_OnCameraCutFinishd::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetEventType
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_GetEventType final
{
public:
	EEventType                                    Param_EventType;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetEventType) == 0x000001, "Wrong alignment on BP_EventManager_C_GetEventType");
static_assert(sizeof(BP_EventManager_C_GetEventType) == 0x000001, "Wrong size on BP_EventManager_C_GetEventType");
static_assert(offsetof(BP_EventManager_C_GetEventType, Param_EventType) == 0x000000, "Member 'BP_EventManager_C_GetEventType::Param_EventType' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AppendSceneCapturePostProcess
// 0x0050 (0x0050 - 0x0000)
struct BP_EventManager_C_AppendSceneCapturePostProcess final
{
public:
	class USceneCaptureComponent2D*               SceneCapture;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353A[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353B[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PrivateIsStaticCaturePPMActive_Active;    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353C[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353D[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AppendSceneCapturePostProcess) == 0x000008, "Wrong alignment on BP_EventManager_C_AppendSceneCapturePostProcess");
static_assert(sizeof(BP_EventManager_C_AppendSceneCapturePostProcess) == 0x000050, "Wrong size on BP_EventManager_C_AppendSceneCapturePostProcess");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, SceneCapture) == 0x000000, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::SceneCapture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, Active) == 0x000008, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::Active' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, Temp_int_Variable) == 0x00000C, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, Temp_int_Variable_1) == 0x000014, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_PrivateIsStaticCaturePPMActive_Active) == 0x00001C, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_PrivateIsStaticCaturePPMActive_Active' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00001D, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001E, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_MakeLiteralInt_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000030, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcess, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000040, "Member 'BP_EventManager_C_AppendSceneCapturePostProcess::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticCapturePPMAccelerator
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_SetStaticCapturePPMAccelerator final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurCenter;                                        // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetStaticCapturePPMAccelerator) == 0x000008, "Wrong alignment on BP_EventManager_C_SetStaticCapturePPMAccelerator");
static_assert(sizeof(BP_EventManager_C_SetStaticCapturePPMAccelerator) == 0x000028, "Wrong size on BP_EventManager_C_SetStaticCapturePPMAccelerator");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMAccelerator, Rate) == 0x000000, "Member 'BP_EventManager_C_SetStaticCapturePPMAccelerator::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMAccelerator, BlurCenter) == 0x000004, "Member 'BP_EventManager_C_SetStaticCapturePPMAccelerator::BlurCenter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMAccelerator, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000010, "Member 'BP_EventManager_C_SetStaticCapturePPMAccelerator::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMAccelerator, CallFunc_GetPostProcessManager_Manager) == 0x000018, "Member 'BP_EventManager_C_SetStaticCapturePPMAccelerator::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMAccelerator, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_SetStaticCapturePPMAccelerator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMAccelerator, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_EventManager_C_SetStaticCapturePPMAccelerator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticCapturePPMSeeThrough
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_SetStaticCapturePPMSeeThrough final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurPower;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetStaticCapturePPMSeeThrough) == 0x000008, "Wrong alignment on BP_EventManager_C_SetStaticCapturePPMSeeThrough");
static_assert(sizeof(BP_EventManager_C_SetStaticCapturePPMSeeThrough) == 0x000020, "Wrong size on BP_EventManager_C_SetStaticCapturePPMSeeThrough");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMSeeThrough, Rate) == 0x000000, "Member 'BP_EventManager_C_SetStaticCapturePPMSeeThrough::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMSeeThrough, BlurPower) == 0x000004, "Member 'BP_EventManager_C_SetStaticCapturePPMSeeThrough::BlurPower' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMSeeThrough, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000008, "Member 'BP_EventManager_C_SetStaticCapturePPMSeeThrough::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMSeeThrough, CallFunc_GetPostProcessManager_Manager) == 0x000010, "Member 'BP_EventManager_C_SetStaticCapturePPMSeeThrough::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMSeeThrough, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_SetStaticCapturePPMSeeThrough::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMSeeThrough, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_EventManager_C_SetStaticCapturePPMSeeThrough::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticCapturePPMVisionFog
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_SetStaticCapturePPMVisionFog final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogNear;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogFar;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CenterLocation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetStaticCapturePPMVisionFog) == 0x000008, "Wrong alignment on BP_EventManager_C_SetStaticCapturePPMVisionFog");
static_assert(sizeof(BP_EventManager_C_SetStaticCapturePPMVisionFog) == 0x000030, "Wrong size on BP_EventManager_C_SetStaticCapturePPMVisionFog");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMVisionFog, Rate) == 0x000000, "Member 'BP_EventManager_C_SetStaticCapturePPMVisionFog::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMVisionFog, FogNear) == 0x000004, "Member 'BP_EventManager_C_SetStaticCapturePPMVisionFog::FogNear' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMVisionFog, FogFar) == 0x000008, "Member 'BP_EventManager_C_SetStaticCapturePPMVisionFog::FogFar' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMVisionFog, CenterLocation) == 0x00000C, "Member 'BP_EventManager_C_SetStaticCapturePPMVisionFog::CenterLocation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMVisionFog, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000018, "Member 'BP_EventManager_C_SetStaticCapturePPMVisionFog::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMVisionFog, CallFunc_GetPostProcessManager_Manager) == 0x000020, "Member 'BP_EventManager_C_SetStaticCapturePPMVisionFog::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMVisionFog, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetStaticCapturePPMVisionFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMVisionFog, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_EventManager_C_SetStaticCapturePPMVisionFog::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticCapturePPMRadialBlur
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_SetStaticCapturePPMRadialBlur final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurSize;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurCenter;                                        // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurColor;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetStaticCapturePPMRadialBlur) == 0x000008, "Wrong alignment on BP_EventManager_C_SetStaticCapturePPMRadialBlur");
static_assert(sizeof(BP_EventManager_C_SetStaticCapturePPMRadialBlur) == 0x000038, "Wrong size on BP_EventManager_C_SetStaticCapturePPMRadialBlur");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMRadialBlur, Rate) == 0x000000, "Member 'BP_EventManager_C_SetStaticCapturePPMRadialBlur::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMRadialBlur, BlurSize) == 0x000004, "Member 'BP_EventManager_C_SetStaticCapturePPMRadialBlur::BlurSize' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMRadialBlur, BlurCenter) == 0x000008, "Member 'BP_EventManager_C_SetStaticCapturePPMRadialBlur::BlurCenter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMRadialBlur, BlurColor) == 0x000014, "Member 'BP_EventManager_C_SetStaticCapturePPMRadialBlur::BlurColor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMRadialBlur, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000020, "Member 'BP_EventManager_C_SetStaticCapturePPMRadialBlur::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMRadialBlur, CallFunc_GetPostProcessManager_Manager) == 0x000028, "Member 'BP_EventManager_C_SetStaticCapturePPMRadialBlur::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMRadialBlur, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetStaticCapturePPMRadialBlur::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMRadialBlur, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_SetStaticCapturePPMRadialBlur::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SettingCaptureCrossFade
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_SettingCaptureCrossFade final
{
public:
	int32                                         BoadMeshIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CapturePresetName;                                 // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaAnimationName;                                // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaFaceAnimationName;                            // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NpcMeshTableID;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NpcMaterialTableID;                                // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LightPresetName;                                   // 0x0024(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CaptureSequence;                                   // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaptureSequencePosition;                           // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TextureRowName;                                    // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStaticPlType                                 StaticPlType;                                      // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3540[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MovieTextureRowName;                               // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSeamlessInGameCapture;                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3541[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CharaEyePresetName;                                // 0x005C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeXAxisThreshold;                                 // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeYAxisThreshold;                                 // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaPartsDTRowName;                               // 0x006C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSimpleCrossFade;                                 // 0x0074(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3542[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      BeforeCapActor;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      LocalCaptureActor;                                 // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SettingCaptureCrossFade) == 0x000008, "Wrong alignment on BP_EventManager_C_SettingCaptureCrossFade");
static_assert(sizeof(BP_EventManager_C_SettingCaptureCrossFade) == 0x000090, "Wrong size on BP_EventManager_C_SettingCaptureCrossFade");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, BoadMeshIndex) == 0x000000, "Member 'BP_EventManager_C_SettingCaptureCrossFade::BoadMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CapturePresetName) == 0x000004, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CapturePresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CharaAnimationName) == 0x00000C, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CharaAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CharaFaceAnimationName) == 0x000014, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CharaFaceAnimationName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, NpcMeshTableID) == 0x00001C, "Member 'BP_EventManager_C_SettingCaptureCrossFade::NpcMeshTableID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, NpcMaterialTableID) == 0x000020, "Member 'BP_EventManager_C_SettingCaptureCrossFade::NpcMaterialTableID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, LightPresetName) == 0x000024, "Member 'BP_EventManager_C_SettingCaptureCrossFade::LightPresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CaptureSequence) == 0x000030, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CaptureSequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CaptureSequencePosition) == 0x000038, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CaptureSequencePosition' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, TextureRowName) == 0x00003C, "Member 'BP_EventManager_C_SettingCaptureCrossFade::TextureRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, StaticPlType) == 0x000044, "Member 'BP_EventManager_C_SettingCaptureCrossFade::StaticPlType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, MovieTextureRowName) == 0x000048, "Member 'BP_EventManager_C_SettingCaptureCrossFade::MovieTextureRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CaptureActor) == 0x000050, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, IsSeamlessInGameCapture) == 0x000058, "Member 'BP_EventManager_C_SettingCaptureCrossFade::IsSeamlessInGameCapture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CharaEyePresetName) == 0x00005C, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CharaEyePresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, EyeXAxisThreshold) == 0x000064, "Member 'BP_EventManager_C_SettingCaptureCrossFade::EyeXAxisThreshold' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, EyeYAxisThreshold) == 0x000068, "Member 'BP_EventManager_C_SettingCaptureCrossFade::EyeYAxisThreshold' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CharaPartsDTRowName) == 0x00006C, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CharaPartsDTRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, IsSimpleCrossFade) == 0x000074, "Member 'BP_EventManager_C_SettingCaptureCrossFade::IsSimpleCrossFade' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, BeforeCapActor) == 0x000078, "Member 'BP_EventManager_C_SettingCaptureCrossFade::BeforeCapActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, LocalCaptureActor) == 0x000080, "Member 'BP_EventManager_C_SettingCaptureCrossFade::LocalCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CallFunc_IsValid_ReturnValue_1) == 0x00008A, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingCaptureCrossFade, CallFunc_IsValid_ReturnValue_2) == 0x00008B, "Member 'BP_EventManager_C_SettingCaptureCrossFade::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SaveCaptureActorTexture
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SaveCaptureActorTexture final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3543[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_GetCaptureActor_CaptureActor;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCaptureActor_IsSuccess;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SaveCaptureActorTexture) == 0x000008, "Wrong alignment on BP_EventManager_C_SaveCaptureActorTexture");
static_assert(sizeof(BP_EventManager_C_SaveCaptureActorTexture) == 0x000018, "Wrong size on BP_EventManager_C_SaveCaptureActorTexture");
static_assert(offsetof(BP_EventManager_C_SaveCaptureActorTexture, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SaveCaptureActorTexture::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SaveCaptureActorTexture, CallFunc_GetCaptureActor_CaptureActor) == 0x000008, "Member 'BP_EventManager_C_SaveCaptureActorTexture::CallFunc_GetCaptureActor_CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SaveCaptureActorTexture, CallFunc_GetCaptureActor_IsSuccess) == 0x000010, "Member 'BP_EventManager_C_SaveCaptureActorTexture::CallFunc_GetCaptureActor_IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SaveCaptureActorTexture, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_SaveCaptureActorTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsValidChangeLevelAfterEventComand
// 0x0080 (0x0080 - 0x0000)
struct BP_EventManager_C_IsValidChangeLevelAfterEventComand final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidEventCommandType_IsValid;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3544[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              CallFunc_IsValidEventCommandType_EventTriggerCommandData; // 0x0008(0x0078)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_IsValidChangeLevelAfterEventComand) == 0x000008, "Wrong alignment on BP_EventManager_C_IsValidChangeLevelAfterEventComand");
static_assert(sizeof(BP_EventManager_C_IsValidChangeLevelAfterEventComand) == 0x000080, "Wrong size on BP_EventManager_C_IsValidChangeLevelAfterEventComand");
static_assert(offsetof(BP_EventManager_C_IsValidChangeLevelAfterEventComand, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsValidChangeLevelAfterEventComand::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidChangeLevelAfterEventComand, CallFunc_IsValidEventCommandType_IsValid) == 0x000001, "Member 'BP_EventManager_C_IsValidChangeLevelAfterEventComand::CallFunc_IsValidEventCommandType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidChangeLevelAfterEventComand, CallFunc_IsValidEventCommandType_EventTriggerCommandData) == 0x000008, "Member 'BP_EventManager_C_IsValidChangeLevelAfterEventComand::CallFunc_IsValidEventCommandType_EventTriggerCommandData' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetFaceRenderTarget
// 0x0058 (0x0058 - 0x0000)
struct BP_EventManager_C_GetFaceRenderTarget final
{
public:
	struct FFRenderTargetData                     RenderTargetData;                                  // 0x0000(0x0018)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFRenderTargetData                     RTData;                                            // 0x0018(0x0018)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 LocalRenderTarget;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFRenderTargetData                     CallFunc_Array_Get_Item;                           // 0x0038(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetFaceRenderTarget) == 0x000008, "Wrong alignment on BP_EventManager_C_GetFaceRenderTarget");
static_assert(sizeof(BP_EventManager_C_GetFaceRenderTarget) == 0x000058, "Wrong size on BP_EventManager_C_GetFaceRenderTarget");
static_assert(offsetof(BP_EventManager_C_GetFaceRenderTarget, RenderTargetData) == 0x000000, "Member 'BP_EventManager_C_GetFaceRenderTarget::RenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetFaceRenderTarget, RTData) == 0x000018, "Member 'BP_EventManager_C_GetFaceRenderTarget::RTData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetFaceRenderTarget, LocalRenderTarget) == 0x000030, "Member 'BP_EventManager_C_GetFaceRenderTarget::LocalRenderTarget' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetFaceRenderTarget, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EventManager_C_GetFaceRenderTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetFaceRenderTarget, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_GetFaceRenderTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetFaceRenderTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_GetFaceRenderTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetSequencerRenderTarget
// 0x0050 (0x0050 - 0x0000)
struct BP_EventManager_C_GetSequencerRenderTarget final
{
public:
	struct FFRenderTargetData                     RenderTargetData;                                  // 0x0000(0x0018)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFRenderTargetData                     RTData;                                            // 0x0018(0x0018)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFRenderTargetData                     CallFunc_Array_Get_Item;                           // 0x0030(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetSequencerRenderTarget) == 0x000008, "Wrong alignment on BP_EventManager_C_GetSequencerRenderTarget");
static_assert(sizeof(BP_EventManager_C_GetSequencerRenderTarget) == 0x000050, "Wrong size on BP_EventManager_C_GetSequencerRenderTarget");
static_assert(offsetof(BP_EventManager_C_GetSequencerRenderTarget, RenderTargetData) == 0x000000, "Member 'BP_EventManager_C_GetSequencerRenderTarget::RenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetSequencerRenderTarget, RTData) == 0x000018, "Member 'BP_EventManager_C_GetSequencerRenderTarget::RTData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetSequencerRenderTarget, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventManager_C_GetSequencerRenderTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetSequencerRenderTarget, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_GetSequencerRenderTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetSequencerRenderTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_GetSequencerRenderTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetRenderTargetForArray
// 0x0068 (0x0068 - 0x0000)
struct BP_EventManager_C_GetRenderTargetForArray final
{
public:
	TArray<struct FFRenderTargetData>             RenderTargetArray;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FFRenderTargetData                     RenderTargetData;                                  // 0x0010(0x0018)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFRenderTargetData                     LocalRenderTargetData;                             // 0x0028(0x0018)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3545[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFRenderTargetData                     CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3546[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetRenderTargetForArray) == 0x000008, "Wrong alignment on BP_EventManager_C_GetRenderTargetForArray");
static_assert(sizeof(BP_EventManager_C_GetRenderTargetForArray) == 0x000068, "Wrong size on BP_EventManager_C_GetRenderTargetForArray");
static_assert(offsetof(BP_EventManager_C_GetRenderTargetForArray, RenderTargetArray) == 0x000000, "Member 'BP_EventManager_C_GetRenderTargetForArray::RenderTargetArray' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetRenderTargetForArray, RenderTargetData) == 0x000010, "Member 'BP_EventManager_C_GetRenderTargetForArray::RenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetRenderTargetForArray, LocalRenderTargetData) == 0x000028, "Member 'BP_EventManager_C_GetRenderTargetForArray::LocalRenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetRenderTargetForArray, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_GetRenderTargetForArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetRenderTargetForArray, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_EventManager_C_GetRenderTargetForArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetRenderTargetForArray, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_GetRenderTargetForArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetRenderTargetForArray, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BP_EventManager_C_GetRenderTargetForArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.InitEventRenderTarget
// 0x0098 (0x0098 - 0x0000)
struct BP_EventManager_C_InitEventRenderTarget final
{
public:
	int32                                         SequenceRenderTargetMax;                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceRenderTargetMax;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RenderTargetManager_C*              LocalRenderTargetManager;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D* NewTarget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetSpecialCutSceneRenderTarget_RenderTarget; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERenderTargetType                             CallFunc_GetSpecialCutSceneRenderTarget_UsedRenderTargetType; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3547[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFRenderTargetData                     K2Node_MakeStruct_FRenderTargetData;               // 0x0038(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3548[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetCutSceneFaceRenderTarget_RenderTarget; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERenderTargetType                             CallFunc_GetCutSceneFaceRenderTarget_UsedRenderTargetType; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3549[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFRenderTargetData                     K2Node_MakeStruct_FRenderTargetData_1;             // 0x0078(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354A[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_InitEventRenderTarget) == 0x000008, "Wrong alignment on BP_EventManager_C_InitEventRenderTarget");
static_assert(sizeof(BP_EventManager_C_InitEventRenderTarget) == 0x000098, "Wrong size on BP_EventManager_C_InitEventRenderTarget");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, SequenceRenderTargetMax) == 0x000000, "Member 'BP_EventManager_C_InitEventRenderTarget::SequenceRenderTargetMax' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, FaceRenderTargetMax) == 0x000004, "Member 'BP_EventManager_C_InitEventRenderTarget::FaceRenderTargetMax' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, LocalRenderTargetManager) == 0x000008, "Member 'BP_EventManager_C_InitEventRenderTarget::LocalRenderTargetManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_EventManager_C_InitEventRenderTarget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, Temp_int_Variable) == 0x000020, "Member 'BP_EventManager_C_InitEventRenderTarget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_GetSpecialCutSceneRenderTarget_RenderTarget) == 0x000028, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_GetSpecialCutSceneRenderTarget_RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_GetSpecialCutSceneRenderTarget_UsedRenderTargetType) == 0x000030, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_GetSpecialCutSceneRenderTarget_UsedRenderTargetType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, K2Node_MakeStruct_FRenderTargetData) == 0x000038, "Member 'BP_EventManager_C_InitEventRenderTarget::K2Node_MakeStruct_FRenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, Temp_int_Variable_1) == 0x000054, "Member 'BP_EventManager_C_InitEventRenderTarget::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000059, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_GetCutSceneFaceRenderTarget_RenderTarget) == 0x000060, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_GetCutSceneFaceRenderTarget_RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_GetCutSceneFaceRenderTarget_UsedRenderTargetType) == 0x000068, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_GetCutSceneFaceRenderTarget_UsedRenderTargetType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_GetRenderTargetManager_Manager) == 0x000070, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_GetRenderTargetManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, K2Node_MakeStruct_FRenderTargetData_1) == 0x000078, "Member 'BP_EventManager_C_InitEventRenderTarget::K2Node_MakeStruct_FRenderTargetData_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitEventRenderTarget, CallFunc_Array_Add_ReturnValue_1) == 0x000094, "Member 'BP_EventManager_C_InitEventRenderTarget::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearEventRenderTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_ClearEventRenderTarget final
{
public:
	int32                                         SequenceRenderTargetMax;                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceRenderTargetMax;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RenderTargetManager_C*              LocalRenderTargetManager;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ClearEventRenderTarget) == 0x000008, "Wrong alignment on BP_EventManager_C_ClearEventRenderTarget");
static_assert(sizeof(BP_EventManager_C_ClearEventRenderTarget) == 0x000010, "Wrong size on BP_EventManager_C_ClearEventRenderTarget");
static_assert(offsetof(BP_EventManager_C_ClearEventRenderTarget, SequenceRenderTargetMax) == 0x000000, "Member 'BP_EventManager_C_ClearEventRenderTarget::SequenceRenderTargetMax' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventRenderTarget, FaceRenderTargetMax) == 0x000004, "Member 'BP_EventManager_C_ClearEventRenderTarget::FaceRenderTargetMax' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventRenderTarget, LocalRenderTargetManager) == 0x000008, "Member 'BP_EventManager_C_ClearEventRenderTarget::LocalRenderTargetManager' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Private Get Static Cature PPM Once
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_Private_Get_Static_Cature_PPM_Once final
{
public:
	EEventPostProcessID                           EventPostProcessID;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Load;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PPM;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMStatic_ReturnValue;           // 0x0010(0x0010)(ConstParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Private_Get_Static_Cature_PPM_Once) == 0x000008, "Wrong alignment on BP_EventManager_C_Private_Get_Static_Cature_PPM_Once");
static_assert(sizeof(BP_EventManager_C_Private_Get_Static_Cature_PPM_Once) == 0x000030, "Wrong size on BP_EventManager_C_Private_Get_Static_Cature_PPM_Once");
static_assert(offsetof(BP_EventManager_C_Private_Get_Static_Cature_PPM_Once, EventPostProcessID) == 0x000000, "Member 'BP_EventManager_C_Private_Get_Static_Cature_PPM_Once::EventPostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Static_Cature_PPM_Once, Load) == 0x000001, "Member 'BP_EventManager_C_Private_Get_Static_Cature_PPM_Once::Load' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Static_Cature_PPM_Once, PPM) == 0x000008, "Member 'BP_EventManager_C_Private_Get_Static_Cature_PPM_Once::PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Static_Cature_PPM_Once, CallFunc_GetOrLoadPPMStatic_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_Private_Get_Static_Cature_PPM_Once::CallFunc_GetOrLoadPPMStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Static_Cature_PPM_Once, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_Private_Get_Static_Cature_PPM_Once::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Static_Cature_PPM_Once, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_Private_Get_Static_Cature_PPM_Once::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetActiveStaticCapturePPM
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_SetActiveStaticCapturePPM final
{
public:
	EEventPostProcessID                           EventPostProcessID;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetActiveStaticCapturePPM) == 0x000004, "Wrong alignment on BP_EventManager_C_SetActiveStaticCapturePPM");
static_assert(sizeof(BP_EventManager_C_SetActiveStaticCapturePPM) == 0x00000C, "Wrong size on BP_EventManager_C_SetActiveStaticCapturePPM");
static_assert(offsetof(BP_EventManager_C_SetActiveStaticCapturePPM, EventPostProcessID) == 0x000000, "Member 'BP_EventManager_C_SetActiveStaticCapturePPM::EventPostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetActiveStaticCapturePPM, Activate) == 0x000001, "Member 'BP_EventManager_C_SetActiveStaticCapturePPM::Activate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetActiveStaticCapturePPM, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_SetActiveStaticCapturePPM::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetActiveStaticCapturePPM, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SetActiveStaticCapturePPM::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateActivateStaticCaturePPM
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_PrivateActivateStaticCaturePPM final
{
public:
	EEventPostProcessID                           EventPostProcessID;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            PPMs;                                              // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UMaterialInstanceDynamic*               TargetMaterial;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMStatic_ReturnValue;           // 0x0020(0x0010)(ConstParm)
};
static_assert(alignof(BP_EventManager_C_PrivateActivateStaticCaturePPM) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateActivateStaticCaturePPM");
static_assert(sizeof(BP_EventManager_C_PrivateActivateStaticCaturePPM) == 0x000030, "Wrong size on BP_EventManager_C_PrivateActivateStaticCaturePPM");
static_assert(offsetof(BP_EventManager_C_PrivateActivateStaticCaturePPM, EventPostProcessID) == 0x000000, "Member 'BP_EventManager_C_PrivateActivateStaticCaturePPM::EventPostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateActivateStaticCaturePPM, PPMs) == 0x000008, "Member 'BP_EventManager_C_PrivateActivateStaticCaturePPM::PPMs' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateActivateStaticCaturePPM, TargetMaterial) == 0x000018, "Member 'BP_EventManager_C_PrivateActivateStaticCaturePPM::TargetMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateActivateStaticCaturePPM, CallFunc_GetOrLoadPPMStatic_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_PrivateActivateStaticCaturePPM::CallFunc_GetOrLoadPPMStatic_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateDeactivateStaticCaturePPM
// 0x0058 (0x0058 - 0x0000)
struct BP_EventManager_C_PrivateDeactivateStaticCaturePPM final
{
public:
	EEventPostProcessID                           EventPostProcessID;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               TargetPPM;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3550[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3551[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager_2;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3552[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager_3;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateDeactivateStaticCaturePPM");
static_assert(sizeof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM) == 0x000058, "Wrong size on BP_EventManager_C_PrivateDeactivateStaticCaturePPM");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, EventPostProcessID) == 0x000000, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::EventPostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, TargetPPM) == 0x000008, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::TargetPPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000018, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_GetPostProcessManager_Manager) == 0x000020, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_GetPostProcessManager_Manager_1) == 0x000028, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_GetPostProcessManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_GetPostProcessManager_Manager_2) == 0x000038, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_GetPostProcessManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_IsValid_ReturnValue_3) == 0x000041, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_GetPostProcessManager_Manager_3) == 0x000048, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_GetPostProcessManager_Manager_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateDeactivateStaticCaturePPM, CallFunc_IsValid_ReturnValue_4) == 0x000050, "Member 'BP_EventManager_C_PrivateDeactivateStaticCaturePPM::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateIsStaticCaturePPMActive
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_PrivateIsStaticCaturePPMActive final
{
public:
	EEventPostProcessID                           EventPostProcessID;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3553[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PrivateIsStaticCaturePPMActive) == 0x000004, "Wrong alignment on BP_EventManager_C_PrivateIsStaticCaturePPMActive");
static_assert(sizeof(BP_EventManager_C_PrivateIsStaticCaturePPMActive) == 0x00000C, "Wrong size on BP_EventManager_C_PrivateIsStaticCaturePPMActive");
static_assert(offsetof(BP_EventManager_C_PrivateIsStaticCaturePPMActive, EventPostProcessID) == 0x000000, "Member 'BP_EventManager_C_PrivateIsStaticCaturePPMActive::EventPostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateIsStaticCaturePPMActive, Active) == 0x000001, "Member 'BP_EventManager_C_PrivateIsStaticCaturePPMActive::Active' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateIsStaticCaturePPMActive, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_PrivateIsStaticCaturePPMActive::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateIsStaticCaturePPMActive, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_PrivateIsStaticCaturePPMActive::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AppendSceneCapturePostProcessPPC
// 0x0050 (0x0050 - 0x0000)
struct BP_EventManager_C_AppendSceneCapturePostProcessPPC final
{
public:
	class UPostProcessComponent*                  PostProcessComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3554[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3555[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PrivateIsStaticCaturePPMActive_Active;    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3556[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3557[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3558[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AppendSceneCapturePostProcessPPC) == 0x000008, "Wrong alignment on BP_EventManager_C_AppendSceneCapturePostProcessPPC");
static_assert(sizeof(BP_EventManager_C_AppendSceneCapturePostProcessPPC) == 0x000050, "Wrong size on BP_EventManager_C_AppendSceneCapturePostProcessPPC");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, PostProcessComponent) == 0x000000, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::PostProcessComponent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, Active) == 0x000008, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::Active' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, Temp_int_Variable) == 0x00000C, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, Temp_int_Variable_1) == 0x000014, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_PrivateIsStaticCaturePPMActive_Active) == 0x00001C, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_PrivateIsStaticCaturePPMActive_Active' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00001D, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001E, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_MakeLiteralInt_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000030, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AppendSceneCapturePostProcessPPC, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000040, "Member 'BP_EventManager_C_AppendSceneCapturePostProcessPPC::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupStaticCapturePPMVignetteMask
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetupStaticCapturePPMVignetteMask final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupStaticCapturePPMVignetteMask) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupStaticCapturePPMVignetteMask");
static_assert(sizeof(BP_EventManager_C_SetupStaticCapturePPMVignetteMask) == 0x000018, "Wrong size on BP_EventManager_C_SetupStaticCapturePPMVignetteMask");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMVignetteMask, Texture) == 0x000000, "Member 'BP_EventManager_C_SetupStaticCapturePPMVignetteMask::Texture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMVignetteMask, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000008, "Member 'BP_EventManager_C_SetupStaticCapturePPMVignetteMask::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMVignetteMask, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_SetupStaticCapturePPMVignetteMask::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateSetVignetteMaskTexture
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_PrivateSetVignetteMaskTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PrivateSetVignetteMaskTexture) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateSetVignetteMaskTexture");
static_assert(sizeof(BP_EventManager_C_PrivateSetVignetteMaskTexture) == 0x000018, "Wrong size on BP_EventManager_C_PrivateSetVignetteMaskTexture");
static_assert(offsetof(BP_EventManager_C_PrivateSetVignetteMaskTexture, Texture) == 0x000000, "Member 'BP_EventManager_C_PrivateSetVignetteMaskTexture::Texture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSetVignetteMaskTexture, Material) == 0x000008, "Member 'BP_EventManager_C_PrivateSetVignetteMaskTexture::Material' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSetVignetteMaskTexture, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_PrivateSetVignetteMaskTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetStaticCapturePPMVignetteMask
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_ResetStaticCapturePPMVignetteMask final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ResetStaticCapturePPMVignetteMask) == 0x000008, "Wrong alignment on BP_EventManager_C_ResetStaticCapturePPMVignetteMask");
static_assert(sizeof(BP_EventManager_C_ResetStaticCapturePPMVignetteMask) == 0x000010, "Wrong size on BP_EventManager_C_ResetStaticCapturePPMVignetteMask");
static_assert(offsetof(BP_EventManager_C_ResetStaticCapturePPMVignetteMask, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000000, "Member 'BP_EventManager_C_ResetStaticCapturePPMVignetteMask::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticCapturePPMVignetteMask, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_ResetStaticCapturePPMVignetteMask::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateSetGlitchPatternTexture
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_PrivateSetGlitchPatternTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PrivateSetGlitchPatternTexture) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateSetGlitchPatternTexture");
static_assert(sizeof(BP_EventManager_C_PrivateSetGlitchPatternTexture) == 0x000018, "Wrong size on BP_EventManager_C_PrivateSetGlitchPatternTexture");
static_assert(offsetof(BP_EventManager_C_PrivateSetGlitchPatternTexture, Texture) == 0x000000, "Member 'BP_EventManager_C_PrivateSetGlitchPatternTexture::Texture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSetGlitchPatternTexture, Material) == 0x000008, "Member 'BP_EventManager_C_PrivateSetGlitchPatternTexture::Material' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSetGlitchPatternTexture, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_PrivateSetGlitchPatternTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupStaticCapturePPMGlitch
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetupStaticCapturePPMGlitch final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupStaticCapturePPMGlitch) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupStaticCapturePPMGlitch");
static_assert(sizeof(BP_EventManager_C_SetupStaticCapturePPMGlitch) == 0x000018, "Wrong size on BP_EventManager_C_SetupStaticCapturePPMGlitch");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGlitch, Texture) == 0x000000, "Member 'BP_EventManager_C_SetupStaticCapturePPMGlitch::Texture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGlitch, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000008, "Member 'BP_EventManager_C_SetupStaticCapturePPMGlitch::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGlitch, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_SetupStaticCapturePPMGlitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetStaticCapturePPMGlitch
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_ResetStaticCapturePPMGlitch final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ResetStaticCapturePPMGlitch) == 0x000008, "Wrong alignment on BP_EventManager_C_ResetStaticCapturePPMGlitch");
static_assert(sizeof(BP_EventManager_C_ResetStaticCapturePPMGlitch) == 0x000010, "Wrong size on BP_EventManager_C_ResetStaticCapturePPMGlitch");
static_assert(offsetof(BP_EventManager_C_ResetStaticCapturePPMGlitch, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000000, "Member 'BP_EventManager_C_ResetStaticCapturePPMGlitch::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticCapturePPMGlitch, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_ResetStaticCapturePPMGlitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetGlitchTexture
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SetGlitchTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetGlitchTexture) == 0x000008, "Wrong alignment on BP_EventManager_C_SetGlitchTexture");
static_assert(sizeof(BP_EventManager_C_SetGlitchTexture) == 0x000010, "Wrong size on BP_EventManager_C_SetGlitchTexture");
static_assert(offsetof(BP_EventManager_C_SetGlitchTexture, Texture) == 0x000000, "Member 'BP_EventManager_C_SetGlitchTexture::Texture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGlitchTexture, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM) == 0x000008, "Member 'BP_EventManager_C_SetGlitchTexture::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetGlitchTexture
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_ResetGlitchTexture final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ResetGlitchTexture) == 0x000008, "Wrong alignment on BP_EventManager_C_ResetGlitchTexture");
static_assert(sizeof(BP_EventManager_C_ResetGlitchTexture) == 0x000008, "Wrong size on BP_EventManager_C_ResetGlitchTexture");
static_assert(offsetof(BP_EventManager_C_ResetGlitchTexture, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM) == 0x000000, "Member 'BP_EventManager_C_ResetGlitchTexture::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddEventRenderTarget
// 0x0058 (0x0058 - 0x0000)
struct BP_EventManager_C_AddEventRenderTarget final
{
public:
	struct FFRenderTargetData                     AddRenderTargetData;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SequenceRenderTargetMax;                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceRenderTargetMax;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RenderTargetManager_C*              LocalRenderTargetManager;                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3559[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355A[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddEventRenderTarget) == 0x000008, "Wrong alignment on BP_EventManager_C_AddEventRenderTarget");
static_assert(sizeof(BP_EventManager_C_AddEventRenderTarget) == 0x000058, "Wrong size on BP_EventManager_C_AddEventRenderTarget");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, AddRenderTargetData) == 0x000000, "Member 'BP_EventManager_C_AddEventRenderTarget::AddRenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, SequenceRenderTargetMax) == 0x000018, "Member 'BP_EventManager_C_AddEventRenderTarget::SequenceRenderTargetMax' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, FaceRenderTargetMax) == 0x00001C, "Member 'BP_EventManager_C_AddEventRenderTarget::FaceRenderTargetMax' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, LocalRenderTargetManager) == 0x000020, "Member 'BP_EventManager_C_AddEventRenderTarget::LocalRenderTargetManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_GetDebuggingManager_Manager) == 0x000028, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_Contains_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_Array_Contains_ReturnValue) == 0x000049, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_Array_Contains_ReturnValue_1) == 0x00004A, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventRenderTarget, CallFunc_Array_Add_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_AddEventRenderTarget::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SettingChangeSpecialStatic
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EventManager_C_SettingChangeSpecialStatic final
{
public:
	class FName                                   BeforeStaticAttachJointName;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                NewLocalVar_0;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Mesh_C>           K2Node_DynamicCast_AsBPI_Mesh;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355C[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SettingChangeSpecialStatic) == 0x000008, "Wrong alignment on BP_EventManager_C_SettingChangeSpecialStatic");
static_assert(sizeof(BP_EventManager_C_SettingChangeSpecialStatic) == 0x0000E0, "Wrong size on BP_EventManager_C_SettingChangeSpecialStatic");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, BeforeStaticAttachJointName) == 0x000000, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::BeforeStaticAttachJointName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, NewLocalVar_0) == 0x000008, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, K2Node_DynamicCast_AsBPI_Mesh) == 0x000018, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::K2Node_DynamicCast_AsBPI_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000038, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, CallFunc_GetBP_static_pl_AsCharacter) == 0x000040, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000048, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, CallFunc_DoesSocketExist_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingChangeSpecialStatic, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_SettingChangeSpecialStatic::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsWorldMapShowDestinationForAreaName
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EventManager_C_IsWorldMapShowDestinationForAreaName final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShow;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355D[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3560[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ShowDestinationActor               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3561[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlagList_ReturnBool;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3562[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProgressID_ReturnEnable1;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3563[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName) == 0x000008, "Wrong alignment on BP_EventManager_C_IsWorldMapShowDestinationForAreaName");
static_assert(sizeof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName) == 0x0000A8, "Wrong size on BP_EventManager_C_IsWorldMapShowDestinationForAreaName");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, LocationId) == 0x000000, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::LocationId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, AreaId) == 0x000004, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::AreaId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, IsShow) == 0x000008, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::IsShow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, Temp_bool_True_if_break_was_hit_Variable) == 0x000009, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Conv_StringToInt_ReturnValue) == 0x00008C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_CheckScenarioFlagList_ReturnBool) == 0x000090, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_CheckScenarioFlagList_ReturnBool' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000091, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_CheckProgressID_ReturnEnable1) == 0x000098, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_CheckProgressID_ReturnEnable1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Greater_IntInt_ReturnValue) == 0x000099, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, K2Node_SwitchEnum_CmpSuccess) == 0x00009A, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x00009C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsWorldMapShowDestinationForLocationName
// 0x0098 (0x0098 - 0x0000)
struct BP_EventManager_C_IsWorldMapShowDestinationForLocationName final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShow;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3564[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3565[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3566[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ShowDestinationActor               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3567[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlagList_ReturnBool;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3568[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProgressID_ReturnEnable1;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName) == 0x000008, "Wrong alignment on BP_EventManager_C_IsWorldMapShowDestinationForLocationName");
static_assert(sizeof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName) == 0x000098, "Wrong size on BP_EventManager_C_IsWorldMapShowDestinationForLocationName");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, LocationId) == 0x000000, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::LocationId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, IsShow) == 0x000004, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::IsShow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, Temp_bool_True_if_break_was_hit_Variable) == 0x000005, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_Conv_StringToInt_ReturnValue) == 0x000084, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_CheckScenarioFlagList_ReturnBool) == 0x000088, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_CheckScenarioFlagList_ReturnBool' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000089, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_CheckProgressID_ReturnEnable1) == 0x000090, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_CheckProgressID_ReturnEnable1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, CallFunc_Greater_IntInt_ReturnValue) == 0x000091, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForLocationName, K2Node_SwitchEnum_CmpSuccess) == 0x000092, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForLocationName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticCapturePPMScreenLight
// 0x0068 (0x0068 - 0x0000)
struct BP_EventManager_C_SetStaticCapturePPMScreenLight final
{
public:
	struct FLinearColor                           _1__Color;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _1__CenterU;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _1__CenterV;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _1__Size;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _1__Intensity;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _1_method;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _1_ReverceEffect;                                  // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           _2__Color;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _2__CenterU;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _2__CenterV;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _2__Size;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _2__Intensity;                                     // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _2_method;                                         // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _2_ReverceEffect;                                  // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GradationPower;                                    // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlobalRate;                                        // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetStaticCapturePPMScreenLight) == 0x000008, "Wrong alignment on BP_EventManager_C_SetStaticCapturePPMScreenLight");
static_assert(sizeof(BP_EventManager_C_SetStaticCapturePPMScreenLight) == 0x000068, "Wrong size on BP_EventManager_C_SetStaticCapturePPMScreenLight");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _1__Color) == 0x000000, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_1__Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _1__CenterU) == 0x000010, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_1__CenterU' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _1__CenterV) == 0x000014, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_1__CenterV' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _1__Size) == 0x000018, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_1__Size' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _1__Intensity) == 0x00001C, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_1__Intensity' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _1_method) == 0x000020, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_1_method' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _1_ReverceEffect) == 0x000024, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_1_ReverceEffect' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _2__Color) == 0x000028, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_2__Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _2__CenterU) == 0x000038, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_2__CenterU' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _2__CenterV) == 0x00003C, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_2__CenterV' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _2__Size) == 0x000040, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_2__Size' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _2__Intensity) == 0x000044, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_2__Intensity' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _2_method) == 0x000048, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_2_method' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, _2_ReverceEffect) == 0x00004C, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::_2_ReverceEffect' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, GradationPower) == 0x000050, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::GradationPower' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, GlobalRate) == 0x000054, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::GlobalRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000058, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticCapturePPMScreenLight, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_SetStaticCapturePPMScreenLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AttachCapActorForSpecialNodeActor
// 0x01B0 (0x01B0 - 0x0000)
struct BP_EventManager_C_AttachCapActorForSpecialNodeActor final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3569[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356A[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356B[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356C[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AttachCapActorForSpecialNodeActor) == 0x000010, "Wrong alignment on BP_EventManager_C_AttachCapActorForSpecialNodeActor");
static_assert(sizeof(BP_EventManager_C_AttachCapActorForSpecialNodeActor) == 0x0001B0, "Wrong size on BP_EventManager_C_AttachCapActorForSpecialNodeActor");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, AttachPointName) == 0x000004, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_MakeTransform_ReturnValue_1) == 0x000040, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_GetBP_static_pl_AsCharacter) == 0x000080, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x00008C, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_IsValid_ReturnValue_1) == 0x000114, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000118, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForSpecialNodeActor, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001A0, "Member 'BP_EventManager_C_AttachCapActorForSpecialNodeActor::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetAttachSPCapActorToNodeActor
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_ResetAttachSPCapActorToNodeActor final
{
public:
	int32                                         ParentSPCapActorIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ResetAttachSPCapActorToNodeActor) == 0x000008, "Wrong alignment on BP_EventManager_C_ResetAttachSPCapActorToNodeActor");
static_assert(sizeof(BP_EventManager_C_ResetAttachSPCapActorToNodeActor) == 0x000018, "Wrong size on BP_EventManager_C_ResetAttachSPCapActorToNodeActor");
static_assert(offsetof(BP_EventManager_C_ResetAttachSPCapActorToNodeActor, ParentSPCapActorIndex) == 0x000000, "Member 'BP_EventManager_C_ResetAttachSPCapActorToNodeActor::ParentSPCapActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachSPCapActorToNodeActor, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_ResetAttachSPCapActorToNodeActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachSPCapActorToNodeActor, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EventManager_C_ResetAttachSPCapActorToNodeActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachSPCapActorToNodeActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_ResetAttachSPCapActorToNodeActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlaySpecialNodeAnimMontage
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_PlaySpecialNodeAnimMontage final
{
public:
	class FString                                 SpecialNodeAnimNamePath;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DefaultPath;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SpecialStaticNodeActor_C> K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlaySpecialNodeAnimMontage) == 0x000008, "Wrong alignment on BP_EventManager_C_PlaySpecialNodeAnimMontage");
static_assert(sizeof(BP_EventManager_C_PlaySpecialNodeAnimMontage) == 0x000040, "Wrong size on BP_EventManager_C_PlaySpecialNodeAnimMontage");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimMontage, SpecialNodeAnimNamePath) == 0x000000, "Member 'BP_EventManager_C_PlaySpecialNodeAnimMontage::SpecialNodeAnimNamePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimMontage, DefaultPath) == 0x000010, "Member 'BP_EventManager_C_PlaySpecialNodeAnimMontage::DefaultPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimMontage, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_PlaySpecialNodeAnimMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimMontage, K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor) == 0x000028, "Member 'BP_EventManager_C_PlaySpecialNodeAnimMontage::K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlaySpecialNodeAnimMontage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EventManager_C_PlaySpecialNodeAnimMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearSpecialStatic
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EventManager_C_ClearSpecialStatic final
{
public:
	int32                                         SpecialCaptureActorIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               SpecialCapActor;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsParentActor;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_356F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultPath;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3570[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3571[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3572[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3573[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      K2Node_DynamicCast_AsBPCapture_Actor;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3574[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_static_pl_C*                        K2Node_DynamicCast_AsBP_Static_Pl;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3575[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_static_pl_C*                        K2Node_DynamicCast_AsBP_Static_Pl_1;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3576[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               K2Node_DynamicCast_AsBPSpecial_Capture_Actor;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3577[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ClearSpecialStatic) == 0x000008, "Wrong alignment on BP_EventManager_C_ClearSpecialStatic");
static_assert(sizeof(BP_EventManager_C_ClearSpecialStatic) == 0x0000C8, "Wrong size on BP_EventManager_C_ClearSpecialStatic");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, SpecialCaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_ClearSpecialStatic::SpecialCaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, SpecialCapActor) == 0x000008, "Member 'BP_EventManager_C_ClearSpecialStatic::SpecialCapActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, IsParentActor) == 0x000010, "Member 'BP_EventManager_C_ClearSpecialStatic::IsParentActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, DefaultPath) == 0x000018, "Member 'BP_EventManager_C_ClearSpecialStatic::DefaultPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EventManager_C_ClearSpecialStatic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_EventManager_C_ClearSpecialStatic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000035, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_GetBP_static_pl_AsCharacter) == 0x000048, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_GetChildrenComponents_Children) == 0x000050, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, K2Node_DynamicCast_AsBPCapture_Actor) == 0x000080, "Member 'BP_EventManager_C_ClearSpecialStatic::K2Node_DynamicCast_AsBPCapture_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_EventManager_C_ClearSpecialStatic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, K2Node_DynamicCast_AsBP_Static_Pl) == 0x000090, "Member 'BP_EventManager_C_ClearSpecialStatic::K2Node_DynamicCast_AsBP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_EventManager_C_ClearSpecialStatic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, K2Node_DynamicCast_AsBP_Static_Pl_1) == 0x0000A0, "Member 'BP_EventManager_C_ClearSpecialStatic::K2Node_DynamicCast_AsBP_Static_Pl_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_EventManager_C_ClearSpecialStatic::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_IsValid_ReturnValue_1) == 0x0000A9, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, K2Node_DynamicCast_AsBPSpecial_Capture_Actor) == 0x0000B0, "Member 'BP_EventManager_C_ClearSpecialStatic::K2Node_DynamicCast_AsBPSpecial_Capture_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'BP_EventManager_C_ClearSpecialStatic::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B9, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearSpecialStatic, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_ClearSpecialStatic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ChangeSpeakerStaticPl
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_ChangeSpeakerStaticPl final
{
public:
	TArray<class FName>                           FrontCharaPlBoneNameList;                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      LocalCaptureActor;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                ChildrenComponents;                                // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayBoardAnimation_IsSuccess;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayBoardAnimation_IsSuccess_1;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3578[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3579[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357A[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357B[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      K2Node_DynamicCast_AsBPCapture_Actor;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357C[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ChangeSpeakerStaticPl) == 0x000008, "Wrong alignment on BP_EventManager_C_ChangeSpeakerStaticPl");
static_assert(sizeof(BP_EventManager_C_ChangeSpeakerStaticPl) == 0x000090, "Wrong size on BP_EventManager_C_ChangeSpeakerStaticPl");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, FrontCharaPlBoneNameList) == 0x000000, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::FrontCharaPlBoneNameList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, LocalCaptureActor) == 0x000010, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::LocalCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, ChildrenComponents) == 0x000018, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::ChildrenComponents' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_PlayBoardAnimation_IsSuccess) == 0x00002D, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_PlayBoardAnimation_IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x00002E, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002F, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_PlayBoardAnimation_IsSuccess_1) == 0x000030, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_PlayBoardAnimation_IsSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_GetAttachSocketName_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_NotEqual_NameName_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_GetAttachSocketName_ReturnValue_1) == 0x000058, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_GetAttachSocketName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, K2Node_DynamicCast_AsBPCapture_Actor) == 0x000068, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::K2Node_DynamicCast_AsBPCapture_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_GetChildrenComponents_Children) == 0x000078, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeSpeakerStaticPl, CallFunc_Array_Contains_ReturnValue) == 0x00008D, "Member 'BP_EventManager_C_ChangeSpeakerStaticPl::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetAttachAllCapActor
// 0x0150 (0x0150 - 0x0000)
struct BP_EventManager_C_ResetAttachAllCapActor final
{
public:
	class ABPCaptureActor_C*                      ParentActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      ParentCapActor;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                ChildrenComponents;                                // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357D[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357E[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357F[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3580[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Mesh_C>           K2Node_DynamicCast_AsBPI_Mesh;                     // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3581[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMesh_SkeletalMesh;             // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0140(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ResetAttachAllCapActor) == 0x000010, "Wrong alignment on BP_EventManager_C_ResetAttachAllCapActor");
static_assert(sizeof(BP_EventManager_C_ResetAttachAllCapActor) == 0x000150, "Wrong size on BP_EventManager_C_ResetAttachAllCapActor");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, ParentActor) == 0x000000, "Member 'BP_EventManager_C_ResetAttachAllCapActor::ParentActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, ParentCapActor) == 0x000008, "Member 'BP_EventManager_C_ResetAttachAllCapActor::ParentCapActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, ChildrenComponents) == 0x000010, "Member 'BP_EventManager_C_ResetAttachAllCapActor::ChildrenComponents' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EventManager_C_ResetAttachAllCapActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_GetAttachSocketName_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_EventManager_C_ResetAttachAllCapActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_NotEqual_NameName_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_GetBP_static_pl_AsCharacter) == 0x000080, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_GetBP_static_pl_AsCharacter_1) == 0x000088, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_GetBP_static_pl_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000090, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000119, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, K2Node_DynamicCast_AsBPI_Mesh) == 0x000120, "Member 'BP_EventManager_C_ResetAttachAllCapActor::K2Node_DynamicCast_AsBPI_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_EventManager_C_ResetAttachAllCapActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_GetSkeletalMesh_SkeletalMesh) == 0x000138, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_GetSkeletalMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachAllCapActor, CallFunc_GetChildrenComponents_Children) == 0x000140, "Member 'BP_EventManager_C_ResetAttachAllCapActor::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetAttachCapActorToNodeActor
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_ResetAttachCapActorToNodeActor final
{
public:
	int32                                         ParentSPCapActorIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ResetAttachCapActorToNodeActor) == 0x000008, "Wrong alignment on BP_EventManager_C_ResetAttachCapActorToNodeActor");
static_assert(sizeof(BP_EventManager_C_ResetAttachCapActorToNodeActor) == 0x000018, "Wrong size on BP_EventManager_C_ResetAttachCapActorToNodeActor");
static_assert(offsetof(BP_EventManager_C_ResetAttachCapActorToNodeActor, ParentSPCapActorIndex) == 0x000000, "Member 'BP_EventManager_C_ResetAttachCapActorToNodeActor::ParentSPCapActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachCapActorToNodeActor, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_ResetAttachCapActorToNodeActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachCapActorToNodeActor, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EventManager_C_ResetAttachCapActorToNodeActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetAttachCapActorToNodeActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_ResetAttachCapActorToNodeActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AttachCapActorForCapActor
// 0x01D0 (0x01D0 - 0x0000)
struct BP_EventManager_C_AttachCapActorForCapActor final
{
public:
	int32                                         ParentCapActorIndex;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChildCapActorIndex;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      ParentCapActor;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      ChildCapActor;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3582[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3583[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3584[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3585[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AttachCapActorForCapActor) == 0x000010, "Wrong alignment on BP_EventManager_C_AttachCapActorForCapActor");
static_assert(sizeof(BP_EventManager_C_AttachCapActorForCapActor) == 0x0001D0, "Wrong size on BP_EventManager_C_AttachCapActorForCapActor");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, ParentCapActorIndex) == 0x000000, "Member 'BP_EventManager_C_AttachCapActorForCapActor::ParentCapActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, ChildCapActorIndex) == 0x000004, "Member 'BP_EventManager_C_AttachCapActorForCapActor::ChildCapActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, AttachPointName) == 0x000008, "Member 'BP_EventManager_C_AttachCapActorForCapActor::AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, ParentCapActor) == 0x000010, "Member 'BP_EventManager_C_AttachCapActorForCapActor::ParentCapActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, ChildCapActor) == 0x000018, "Member 'BP_EventManager_C_AttachCapActorForCapActor::ChildCapActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_GetBP_static_pl_AsCharacter) == 0x000020, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_MakeTransform_ReturnValue_1) == 0x000060, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000090, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x00011C, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001A4, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001C0, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForCapActor, CallFunc_IsValid_ReturnValue_2) == 0x0001C1, "Member 'BP_EventManager_C_AttachCapActorForCapActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartNewStaticInGeneral
// 0x0070 (0x0070 - 0x0000)
struct BP_EventManager_C_StartNewStaticInGeneral final
{
public:
	class FString                                 InAnimMontagePath;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EShadaAnimeType                               ShaderAnimType;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3586[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SelectShaderAnimeDTRowName;                        // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoPlaySE;                                          // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3587[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LocalShaderAnimMontage;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3588[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFAnimMontageData                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3589[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFAnimMontageData                      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartNewStaticInGeneral) == 0x000008, "Wrong alignment on BP_EventManager_C_StartNewStaticInGeneral");
static_assert(sizeof(BP_EventManager_C_StartNewStaticInGeneral) == 0x000070, "Wrong size on BP_EventManager_C_StartNewStaticInGeneral");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, InAnimMontagePath) == 0x000000, "Member 'BP_EventManager_C_StartNewStaticInGeneral::InAnimMontagePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, ShaderAnimType) == 0x000010, "Member 'BP_EventManager_C_StartNewStaticInGeneral::ShaderAnimType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, SelectShaderAnimeDTRowName) == 0x000014, "Member 'BP_EventManager_C_StartNewStaticInGeneral::SelectShaderAnimeDTRowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, NoPlaySE) == 0x00001C, "Member 'BP_EventManager_C_StartNewStaticInGeneral::NoPlaySE' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, LocalShaderAnimMontage) == 0x000020, "Member 'BP_EventManager_C_StartNewStaticInGeneral::LocalShaderAnimMontage' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_GetSoundManager_SoundManager) == 0x000028, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'BP_EventManager_C_StartNewStaticInGeneral::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000048, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_RandomInteger_ReturnValue) == 0x00005C, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000060, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000068, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartNewStaticInGeneral, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_EventManager_C_StartNewStaticInGeneral::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AttachCapActorForPhaseNodeMesh
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_AttachCapActorForPhaseNodeMesh final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVisibility;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      LocalCaptureActor;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358C[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventPlAnimationCurveParam            CallFunc_Array_Get_Item_1;                         // 0x0034(0x0014)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358D[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh) == 0x000008, "Wrong alignment on BP_EventManager_C_AttachCapActorForPhaseNodeMesh");
static_assert(sizeof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh) == 0x000060, "Wrong size on BP_EventManager_C_AttachCapActorForPhaseNodeMesh");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, SocketName) == 0x000004, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::SocketName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, NewVisibility) == 0x00000C, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::NewVisibility' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, LocalCaptureActor) == 0x000010, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::LocalCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000032, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Array_Get_Item_1) == 0x000034, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AttachCapActorForPhaseNodeMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_AttachCapActorForPhaseNodeMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayPhaseNodeAnimation
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_PlayPhaseNodeAnimation final
{
public:
	class FString                                 AnimMontagePath;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayPhaseNodeAnimation) == 0x000008, "Wrong alignment on BP_EventManager_C_PlayPhaseNodeAnimation");
static_assert(sizeof(BP_EventManager_C_PlayPhaseNodeAnimation) == 0x000018, "Wrong size on BP_EventManager_C_PlayPhaseNodeAnimation");
static_assert(offsetof(BP_EventManager_C_PlayPhaseNodeAnimation, AnimMontagePath) == 0x000000, "Member 'BP_EventManager_C_PlayPhaseNodeAnimation::AnimMontagePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPhaseNodeAnimation, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_PlayPhaseNodeAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetNextNewStaticNode
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetNextNewStaticNode final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NewStaticNodeActor_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetNextNewStaticNode) == 0x000008, "Wrong alignment on BP_EventManager_C_SetNextNewStaticNode");
static_assert(sizeof(BP_EventManager_C_SetNextNewStaticNode) == 0x000018, "Wrong size on BP_EventManager_C_SetNextNewStaticNode");
static_assert(offsetof(BP_EventManager_C_SetNextNewStaticNode, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_SetNextNewStaticNode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetNextNewStaticNode, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EventManager_C_SetNextNewStaticNode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetNextNewStaticNode, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_SetNextNewStaticNode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetNextNewStaticNode, CallFunc_IsValid_ReturnValue_1) == 0x000014, "Member 'BP_EventManager_C_SetNextNewStaticNode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearChildCapActor
// 0x0002 (0x0002 - 0x0000)
struct BP_EventManager_C_ClearChildCapActor final
{
public:
	EPhaseAlphaCurveType                          AlphaFadeType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ClearChildCapActor) == 0x000001, "Wrong alignment on BP_EventManager_C_ClearChildCapActor");
static_assert(sizeof(BP_EventManager_C_ClearChildCapActor) == 0x000002, "Wrong size on BP_EventManager_C_ClearChildCapActor");
static_assert(offsetof(BP_EventManager_C_ClearChildCapActor, AlphaFadeType) == 0x000000, "Member 'BP_EventManager_C_ClearChildCapActor::AlphaFadeType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearChildCapActor, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EventManager_C_ClearChildCapActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayPostProcessSequencer
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EventManager_C_PlayPostProcessSequencer final
{
public:
	class ULevelSequence*                         Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLockOpenMenu;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358F[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     EventSettingBindingIDs;                            // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3590[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3591[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_2;                          // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3592[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3593[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFrameDuration_ReturnValue;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime;           // 0x00CC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayPostProcessSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_PlayPostProcessSequencer");
static_assert(sizeof(BP_EventManager_C_PlayPostProcessSequencer) == 0x0000D8, "Wrong size on BP_EventManager_C_PlayPostProcessSequencer");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, Sequence) == 0x000000, "Member 'BP_EventManager_C_PlayPostProcessSequencer::Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, IsLoop) == 0x000008, "Member 'BP_EventManager_C_PlayPostProcessSequencer::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, IsLockOpenMenu) == 0x000009, "Member 'BP_EventManager_C_PlayPostProcessSequencer::IsLockOpenMenu' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, EventSettingBindingIDs) == 0x000010, "Member 'BP_EventManager_C_PlayPostProcessSequencer::EventSettingBindingIDs' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_EventManager_C_PlayPostProcessSequencer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'BP_EventManager_C_PlayPostProcessSequencer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_EventManager_C_PlayPostProcessSequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_EventManager_C_PlayPostProcessSequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_EventManager_C_PlayPostProcessSequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, K2Node_MakeArray_Array_1) == 0x000060, "Member 'BP_EventManager_C_PlayPostProcessSequencer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, K2Node_MakeArray_Array_2) == 0x000090, "Member 'BP_EventManager_C_PlayPostProcessSequencer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x0000A8, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x0000B8, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_GetFrameDuration_ReturnValue) == 0x0000C8, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_GetFrameDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_GetMarkedFrameByLabel_MarkTime) == 0x0000CC, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_GetMarkedFrameByLabel_MarkTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPostProcessSequencer, CallFunc_GetMarkedFrameByLabel_ReturnValue) == 0x0000D4, "Member 'BP_EventManager_C_PlayPostProcessSequencer::CallFunc_GetMarkedFrameByLabel_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EffectBokeh
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_EffectBokeh final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3594[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CurveReverse;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3595[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3596[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EffectBokeh) == 0x000008, "Wrong alignment on BP_EventManager_C_EffectBokeh");
static_assert(sizeof(BP_EventManager_C_EffectBokeh) == 0x000038, "Wrong size on BP_EventManager_C_EffectBokeh");
static_assert(offsetof(BP_EventManager_C_EffectBokeh, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_EffectBokeh::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectBokeh, Curve) == 0x000008, "Member 'BP_EventManager_C_EffectBokeh::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectBokeh, CurveReverse) == 0x000010, "Member 'BP_EventManager_C_EffectBokeh::CurveReverse' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectBokeh, Target) == 0x000018, "Member 'BP_EventManager_C_EffectBokeh::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectBokeh, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_EffectBokeh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectBokeh, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_EffectBokeh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EffectBokeh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_EffectBokeh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddEveryFrameCapActorList
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_AddEveryFrameCapActorList final
{
public:
	const class ABPCaptureActor_C*                CaptureActor;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3597[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddEveryFrameCapActorList) == 0x000008, "Wrong alignment on BP_EventManager_C_AddEveryFrameCapActorList");
static_assert(sizeof(BP_EventManager_C_AddEveryFrameCapActorList) == 0x000010, "Wrong size on BP_EventManager_C_AddEveryFrameCapActorList");
static_assert(offsetof(BP_EventManager_C_AddEveryFrameCapActorList, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_AddEveryFrameCapActorList::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEveryFrameCapActorList, CallFunc_Array_Contains_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_AddEveryFrameCapActorList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEveryFrameCapActorList, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_AddEveryFrameCapActorList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SubEveryFrameCapActorList
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SubEveryFrameCapActorList final
{
public:
	const class ABPCaptureActor_C*                CaptureActor;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRemove;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SubEveryFrameCapActorList) == 0x000008, "Wrong alignment on BP_EventManager_C_SubEveryFrameCapActorList");
static_assert(sizeof(BP_EventManager_C_SubEveryFrameCapActorList) == 0x000010, "Wrong size on BP_EventManager_C_SubEveryFrameCapActorList");
static_assert(offsetof(BP_EventManager_C_SubEveryFrameCapActorList, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_SubEveryFrameCapActorList::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SubEveryFrameCapActorList, IsRemove) == 0x000008, "Member 'BP_EventManager_C_SubEveryFrameCapActorList::IsRemove' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SubEveryFrameCapActorList, CallFunc_Array_Contains_ReturnValue) == 0x000009, "Member 'BP_EventManager_C_SubEveryFrameCapActorList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SubEveryFrameCapActorList, CallFunc_Array_RemoveItem_ReturnValue) == 0x00000A, "Member 'BP_EventManager_C_SubEveryFrameCapActorList::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateEveryCapture
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_UpdateEveryCapture final
{
public:
	class ABPCaptureActor_C*                      LocalCapActor;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3598[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3599[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UpdateEveryCapture) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdateEveryCapture");
static_assert(sizeof(BP_EventManager_C_UpdateEveryCapture) == 0x000028, "Wrong size on BP_EventManager_C_UpdateEveryCapture");
static_assert(offsetof(BP_EventManager_C_UpdateEveryCapture, LocalCapActor) == 0x000000, "Member 'BP_EventManager_C_UpdateEveryCapture::LocalCapActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateEveryCapture, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EventManager_C_UpdateEveryCapture::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateEveryCapture, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_UpdateEveryCapture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateEveryCapture, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_UpdateEveryCapture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateEveryCapture, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_UpdateEveryCapture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateEveryCapture, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'BP_EventManager_C_UpdateEveryCapture::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateEveryCapture, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_UpdateEveryCapture::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateEveryCapture, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EventManager_C_UpdateEveryCapture::Temp_int_Array_Index_Variable' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetCharaBGDataToCharaPresetName
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_GetCharaBGDataToCharaPresetName final
{
public:
	class FName                                   CharaPresetName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCapCharaBGData                       CharaBGData;                                       // 0x0008(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCapCharaBGData                       LocalCharaBGData;                                  // 0x0014(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359A[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetCharaBGDataToCharaPresetName) == 0x000008, "Wrong alignment on BP_EventManager_C_GetCharaBGDataToCharaPresetName");
static_assert(sizeof(BP_EventManager_C_GetCharaBGDataToCharaPresetName) == 0x000040, "Wrong size on BP_EventManager_C_GetCharaBGDataToCharaPresetName");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, CharaPresetName) == 0x000000, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::CharaPresetName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, CharaBGData) == 0x000008, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::CharaBGData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, LocalCharaBGData) == 0x000014, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::LocalCharaBGData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, CallFunc_Contains_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, CallFunc_Contains_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, CallFunc_Array_Add_ReturnValue_1) == 0x000038, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCharaBGDataToCharaPresetName, CallFunc_Array_Add_ReturnValue_2) == 0x00003C, "Member 'BP_EventManager_C_GetCharaBGDataToCharaPresetName::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetShowDestCheckListForActorName
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EventManager_C_GetShowDestCheckListForActorName final
{
public:
	class FName                                   ActorName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FShowDestinationDBDataCell>     ReturnShowCheckList;                               // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FShowDestinationDBDataCell>     ShowCheckList;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FShowDestinationDBDataCell>     CallFunc_Map_Values_Values;                        // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FShowDestinationDBDataCell             CallFunc_Array_Get_Item;                           // 0x0060(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359D[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetShowDestCheckListForActorName) == 0x000008, "Wrong alignment on BP_EventManager_C_GetShowDestCheckListForActorName");
static_assert(sizeof(BP_EventManager_C_GetShowDestCheckListForActorName) == 0x0000A8, "Wrong size on BP_EventManager_C_GetShowDestCheckListForActorName");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, ActorName) == 0x000000, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::ActorName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, ReturnShowCheckList) == 0x000008, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::ReturnShowCheckList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, ShowCheckList) == 0x000018, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::ShowCheckList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Map_Values_Values) == 0x000050, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000090, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetShowDestCheckListForActorName, CallFunc_Contains_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_GetShowDestCheckListForActorName::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupStaticCapturePPMScreenMask
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_SetupStaticCapturePPMScreenMask final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaskPlayer;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskEnemy;                                         // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskParticle;                                      // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskBG;                                            // 0x0017(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AfterDOF;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventPostProcessID                           Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359E[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359F[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventPostProcessID                           K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A0[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupStaticCapturePPMScreenMask) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupStaticCapturePPMScreenMask");
static_assert(sizeof(BP_EventManager_C_SetupStaticCapturePPMScreenMask) == 0x000048, "Wrong size on BP_EventManager_C_SetupStaticCapturePPMScreenMask");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, Rate) == 0x000000, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, Color) == 0x000004, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, MaskPlayer) == 0x000014, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::MaskPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, MaskEnemy) == 0x000015, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::MaskEnemy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, MaskParticle) == 0x000016, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::MaskParticle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, MaskBG) == 0x000017, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::MaskBG' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, AfterDOF) == 0x000018, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::AfterDOF' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, Temp_byte_Variable) == 0x000019, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000024, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, Temp_byte_Variable_1) == 0x000028, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x00002C, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, Temp_bool_Variable) == 0x000030, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, K2Node_Select_Default) == 0x000031, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000038, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMScreenMask, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_SetupStaticCapturePPMScreenMask::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetScreenMaskParameter
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_SetScreenMaskParameter final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaskPlayer;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskEnemy;                                         // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskParticle;                                      // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskBG;                                            // 0x0017(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AfterDOF;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               TargetMaterial;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventPostProcessID                           Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventPostProcessID                           K2Node_Select_Default;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A2[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetScreenMaskParameter) == 0x000008, "Wrong alignment on BP_EventManager_C_SetScreenMaskParameter");
static_assert(sizeof(BP_EventManager_C_SetScreenMaskParameter) == 0x000048, "Wrong size on BP_EventManager_C_SetScreenMaskParameter");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, Rate) == 0x000000, "Member 'BP_EventManager_C_SetScreenMaskParameter::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, Color) == 0x000004, "Member 'BP_EventManager_C_SetScreenMaskParameter::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, MaskPlayer) == 0x000014, "Member 'BP_EventManager_C_SetScreenMaskParameter::MaskPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, MaskEnemy) == 0x000015, "Member 'BP_EventManager_C_SetScreenMaskParameter::MaskEnemy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, MaskParticle) == 0x000016, "Member 'BP_EventManager_C_SetScreenMaskParameter::MaskParticle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, MaskBG) == 0x000017, "Member 'BP_EventManager_C_SetScreenMaskParameter::MaskBG' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, AfterDOF) == 0x000018, "Member 'BP_EventManager_C_SetScreenMaskParameter::AfterDOF' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, TargetMaterial) == 0x000020, "Member 'BP_EventManager_C_SetScreenMaskParameter::TargetMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetScreenMaskParameter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00002C, "Member 'BP_EventManager_C_SetScreenMaskParameter::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000030, "Member 'BP_EventManager_C_SetScreenMaskParameter::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x000034, "Member 'BP_EventManager_C_SetScreenMaskParameter::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, Temp_byte_Variable) == 0x000038, "Member 'BP_EventManager_C_SetScreenMaskParameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EventManager_C_SetScreenMaskParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, Temp_byte_Variable_1) == 0x00003A, "Member 'BP_EventManager_C_SetScreenMaskParameter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, Temp_bool_Variable) == 0x00003B, "Member 'BP_EventManager_C_SetScreenMaskParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, K2Node_Select_Default) == 0x00003C, "Member 'BP_EventManager_C_SetScreenMaskParameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenMaskParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM) == 0x000040, "Member 'BP_EventManager_C_SetScreenMaskParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetUseSequencerStaticInGame
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_SetUseSequencerStaticInGame final
{
public:
	bool                                          UseInGame;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetUseSequencerStaticInGame) == 0x000001, "Wrong alignment on BP_EventManager_C_SetUseSequencerStaticInGame");
static_assert(sizeof(BP_EventManager_C_SetUseSequencerStaticInGame) == 0x000001, "Wrong size on BP_EventManager_C_SetUseSequencerStaticInGame");
static_assert(offsetof(BP_EventManager_C_SetUseSequencerStaticInGame, UseInGame) == 0x000000, "Member 'BP_EventManager_C_SetUseSequencerStaticInGame::UseInGame' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SequencerStaticToInGame
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EventManager_C_SequencerStaticToInGame final
{
public:
	class USpringArmComponent*                    SpringArm;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SequencerStaticToInGame) == 0x000008, "Wrong alignment on BP_EventManager_C_SequencerStaticToInGame");
static_assert(sizeof(BP_EventManager_C_SequencerStaticToInGame) == 0x0000B8, "Wrong size on BP_EventManager_C_SequencerStaticToInGame");
static_assert(offsetof(BP_EventManager_C_SequencerStaticToInGame, SpringArm) == 0x000000, "Member 'BP_EventManager_C_SequencerStaticToInGame::SpringArm' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStaticToInGame, Player) == 0x000008, "Member 'BP_EventManager_C_SequencerStaticToInGame::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStaticToInGame, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_EventManager_C_SequencerStaticToInGame::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStaticToInGame, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_SequencerStaticToInGame::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStaticToInGame, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_SequencerStaticToInGame::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStaticToInGame, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000028, "Member 'BP_EventManager_C_SequencerStaticToInGame::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStaticToInGame, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_SequencerStaticToInGame::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SequencerStaticToInGame, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'BP_EventManager_C_SequencerStaticToInGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetVoiceCharaName
// 0x0138 (0x0138 - 0x0000)
struct BP_EventManager_C_GetVoiceCharaName final
{
public:
	class FString                                 CharaID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VoiceCharaName;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ObjectName;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LocalVoiceCharaName;                               // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            CharaVoiceNameList;                                // 0x0040(0x0050)(Edit, BlueprintVisible)
	TMap<class FString, class FString>            K2Node_MakeVariable_MakeVariableOutput;            // 0x0090(0x0050)()
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A3[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A4[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFRipSyncData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0110(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetVoiceCharaName) == 0x000008, "Wrong alignment on BP_EventManager_C_GetVoiceCharaName");
static_assert(sizeof(BP_EventManager_C_GetVoiceCharaName) == 0x000138, "Wrong size on BP_EventManager_C_GetVoiceCharaName");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, CharaID) == 0x000000, "Member 'BP_EventManager_C_GetVoiceCharaName::CharaID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, VoiceCharaName) == 0x000010, "Member 'BP_EventManager_C_GetVoiceCharaName::VoiceCharaName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, ObjectName) == 0x000020, "Member 'BP_EventManager_C_GetVoiceCharaName::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, LocalVoiceCharaName) == 0x000030, "Member 'BP_EventManager_C_GetVoiceCharaName::LocalVoiceCharaName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, CharaVoiceNameList) == 0x000040, "Member 'BP_EventManager_C_GetVoiceCharaName::CharaVoiceNameList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, K2Node_MakeVariable_MakeVariableOutput) == 0x000090, "Member 'BP_EventManager_C_GetVoiceCharaName::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, CallFunc_LeftChop_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_GetVoiceCharaName::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_EventManager_C_GetVoiceCharaName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, CallFunc_Contains_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_GetVoiceCharaName::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, CallFunc_Conv_StringToName_ReturnValue) == 0x000104, "Member 'BP_EventManager_C_GetVoiceCharaName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000110, "Member 'BP_EventManager_C_GetVoiceCharaName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetVoiceCharaName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BP_EventManager_C_GetVoiceCharaName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SettingNoRipSync
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SettingNoRipSync final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDefaultCapture;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SubEveryFrameCapActorList_IsRemove;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SettingNoRipSync) == 0x000008, "Wrong alignment on BP_EventManager_C_SettingNoRipSync");
static_assert(sizeof(BP_EventManager_C_SettingNoRipSync) == 0x000010, "Wrong size on BP_EventManager_C_SettingNoRipSync");
static_assert(offsetof(BP_EventManager_C_SettingNoRipSync, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_SettingNoRipSync::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingNoRipSync, IsDefaultCapture) == 0x000008, "Member 'BP_EventManager_C_SettingNoRipSync::IsDefaultCapture' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingNoRipSync, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EventManager_C_SettingNoRipSync::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingNoRipSync, CallFunc_SubEveryFrameCapActorList_IsRemove) == 0x00000A, "Member 'BP_EventManager_C_SettingNoRipSync::CallFunc_SubEveryFrameCapActorList_IsRemove' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingNoRipSync, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'BP_EventManager_C_SettingNoRipSync::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SettingRipSync
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SettingRipSync final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SettingRipSync) == 0x000008, "Wrong alignment on BP_EventManager_C_SettingRipSync");
static_assert(sizeof(BP_EventManager_C_SettingRipSync) == 0x000010, "Wrong size on BP_EventManager_C_SettingRipSync");
static_assert(offsetof(BP_EventManager_C_SettingRipSync, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_SettingRipSync::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingRipSync, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SettingRipSync::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SettingRipSync, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_EventManager_C_SettingRipSync::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateRipSync
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_UpdateRipSync final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A5[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetAnimationComponent_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A6[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_1; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_2; // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_3; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A7[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A8[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A9[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_UpdateRipSync) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdateRipSync");
static_assert(sizeof(BP_EventManager_C_UpdateRipSync) == 0x000060, "Wrong size on BP_EventManager_C_UpdateRipSync");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_UpdateRipSync::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_IsValid_ReturnValue_1) == 0x00000D, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_IsValid_ReturnValue_2) == 0x00000E, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_GetAnimationComponent_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_GetAnimationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_IsValid_ReturnValue_3) == 0x000020, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000028, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_2) == 0x000032, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_IsValid_ReturnValue_4) == 0x000033, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_3) == 0x000034, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Is_Play_Enable_Rip_Sync_Montage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00003D, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000040, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000048, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_GetEventManager_EventManager) == 0x000050, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateRipSync, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000058, "Member 'BP_EventManager_C_UpdateRipSync::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsPlayingNewStaticPhaseAnimation
// 0x0003 (0x0003 - 0x0000)
struct BP_EventManager_C_IsPlayingNewStaticPhaseAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingPhaseAnimation_IsPlaying;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsPlayingNewStaticPhaseAnimation) == 0x000001, "Wrong alignment on BP_EventManager_C_IsPlayingNewStaticPhaseAnimation");
static_assert(sizeof(BP_EventManager_C_IsPlayingNewStaticPhaseAnimation) == 0x000003, "Wrong size on BP_EventManager_C_IsPlayingNewStaticPhaseAnimation");
static_assert(offsetof(BP_EventManager_C_IsPlayingNewStaticPhaseAnimation, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsPlayingNewStaticPhaseAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayingNewStaticPhaseAnimation, CallFunc_IsPlayingPhaseAnimation_IsPlaying) == 0x000001, "Member 'BP_EventManager_C_IsPlayingNewStaticPhaseAnimation::CallFunc_IsPlayingPhaseAnimation_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayingNewStaticPhaseAnimation, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_EventManager_C_IsPlayingNewStaticPhaseAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsPlayingNewStaticBaseAnimation
// 0x0003 (0x0003 - 0x0000)
struct BP_EventManager_C_IsPlayingNewStaticBaseAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingBaseAnimation_IsPlaying;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsPlayingNewStaticBaseAnimation) == 0x000001, "Wrong alignment on BP_EventManager_C_IsPlayingNewStaticBaseAnimation");
static_assert(sizeof(BP_EventManager_C_IsPlayingNewStaticBaseAnimation) == 0x000003, "Wrong size on BP_EventManager_C_IsPlayingNewStaticBaseAnimation");
static_assert(offsetof(BP_EventManager_C_IsPlayingNewStaticBaseAnimation, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsPlayingNewStaticBaseAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayingNewStaticBaseAnimation, CallFunc_IsPlayingBaseAnimation_IsPlaying) == 0x000001, "Member 'BP_EventManager_C_IsPlayingNewStaticBaseAnimation::CallFunc_IsPlayingBaseAnimation_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayingNewStaticBaseAnimation, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_EventManager_C_IsPlayingNewStaticBaseAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetPhaseAnimCurveInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetPhaseAnimCurveInfo final
{
public:
	TArray<struct FEventPlAnimationCurveParam>    CurrentPlAnimationCurveDataList;                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetPhaseAnimCurveInfo) == 0x000008, "Wrong alignment on BP_EventManager_C_SetPhaseAnimCurveInfo");
static_assert(sizeof(BP_EventManager_C_SetPhaseAnimCurveInfo) == 0x000018, "Wrong size on BP_EventManager_C_SetPhaseAnimCurveInfo");
static_assert(offsetof(BP_EventManager_C_SetPhaseAnimCurveInfo, CurrentPlAnimationCurveDataList) == 0x000000, "Member 'BP_EventManager_C_SetPhaseAnimCurveInfo::CurrentPlAnimationCurveDataList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPhaseAnimCurveInfo, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_SetPhaseAnimCurveInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetCurrentStaticNodeCurveValueToCurveName
// 0x0014 (0x0014 - 0x0000)
struct BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName final
{
public:
	class FName                                   CurveName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveValue;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPhaseAnimCurveValueToCurveName_CurveValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName) == 0x000004, "Wrong alignment on BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName");
static_assert(sizeof(BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName) == 0x000014, "Wrong size on BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName");
static_assert(offsetof(BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName, CurveName) == 0x000000, "Member 'BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName::CurveName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName, CurveValue) == 0x000008, "Member 'BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName::CurveValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName, CallFunc_GetPhaseAnimCurveValueToCurveName_CurveValue) == 0x00000C, "Member 'BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName::CallFunc_GetPhaseAnimCurveValueToCurveName_CurveValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_GetCurrentStaticNodeCurveValueToCurveName::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateCheckSequenceCapFunc
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_UpdateCheckSequenceCapFunc final
{
public:
	struct FFEventCaptureFuncData                 SequenceFuncCommand;                               // 0x0000(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_UpdateCheckSequenceCapFunc) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdateCheckSequenceCapFunc");
static_assert(sizeof(BP_EventManager_C_UpdateCheckSequenceCapFunc) == 0x000030, "Wrong size on BP_EventManager_C_UpdateCheckSequenceCapFunc");
static_assert(offsetof(BP_EventManager_C_UpdateCheckSequenceCapFunc, SequenceFuncCommand) == 0x000000, "Member 'BP_EventManager_C_UpdateCheckSequenceCapFunc::SequenceFuncCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCheckSequenceCapFunc, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_UpdateCheckSequenceCapFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCheckSequenceCapFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_UpdateCheckSequenceCapFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CaptureEventBeforeInGame
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_CaptureEventBeforeInGame final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFRenderTargetData                     K2Node_MakeStruct_FRenderTargetData;               // 0x0028(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AC[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventBGScreen_C>  K2Node_DynamicCast_AsBPI_Event_BGScreen_1;         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AD[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFRenderTargetData                     CallFunc_GetSequencerRenderTarget_RenderTargetData; // 0x0068(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CaptureEventBeforeInGame) == 0x000008, "Wrong alignment on BP_EventManager_C_CaptureEventBeforeInGame");
static_assert(sizeof(BP_EventManager_C_CaptureEventBeforeInGame) == 0x000090, "Wrong size on BP_EventManager_C_CaptureEventBeforeInGame");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, K2Node_DynamicCast_AsBPI_Event_BGScreen) == 0x000010, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::K2Node_DynamicCast_AsBPI_Event_BGScreen' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, K2Node_MakeStruct_FRenderTargetData) == 0x000028, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::K2Node_MakeStruct_FRenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CallFunc_GetDebuggingManager_Manager) == 0x000040, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CallFunc_AddToPlayerScreen_ReturnValue) == 0x000049, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, K2Node_DynamicCast_AsBPI_Event_BGScreen_1) == 0x000050, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::K2Node_DynamicCast_AsBPI_Event_BGScreen_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CallFunc_GetSequencerRenderTarget_RenderTargetData) == 0x000068, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CallFunc_GetSequencerRenderTarget_RenderTargetData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureEventBeforeInGame, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'BP_EventManager_C_CaptureEventBeforeInGame::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsEmptySeqCaptureFuncList
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_IsEmptySeqCaptureFuncList final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsEmptySeqCaptureFuncList) == 0x000004, "Wrong alignment on BP_EventManager_C_IsEmptySeqCaptureFuncList");
static_assert(sizeof(BP_EventManager_C_IsEmptySeqCaptureFuncList) == 0x00000C, "Wrong size on BP_EventManager_C_IsEmptySeqCaptureFuncList");
static_assert(offsetof(BP_EventManager_C_IsEmptySeqCaptureFuncList, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsEmptySeqCaptureFuncList::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEmptySeqCaptureFuncList, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_IsEmptySeqCaptureFuncList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEmptySeqCaptureFuncList, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsEmptySeqCaptureFuncList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsWorldMapShowDestinationForAreaName2
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_IsWorldMapShowDestinationForAreaName2 final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShowDestinationApplicationType               ApplicationType;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShow;                                            // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AF[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         VisibleWeight;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FShowDestinationDBDataCell>     DBValuesTemp;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetIsProgressBondsEpisode_playerID;       // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetIsProgressBondsEpisode_targetID;       // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsProgressBondsEpisode_ReturnValue;    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWorldMapShowDestinationForAreaName2Native_IsShow; // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B1[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsWorldMapShowDestinationForAreaName2Native_VisibleWeight; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2) == 0x000008, "Wrong alignment on BP_EventManager_C_IsWorldMapShowDestinationForAreaName2");
static_assert(sizeof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2) == 0x000048, "Wrong size on BP_EventManager_C_IsWorldMapShowDestinationForAreaName2");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, LocationId) == 0x000000, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::LocationId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, AreaId) == 0x000004, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::AreaId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, PortalID) == 0x000008, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::PortalID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, ApplicationType) == 0x00000C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::ApplicationType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, IsShow) == 0x00000D, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::IsShow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, VisibleWeight) == 0x000010, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::VisibleWeight' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, DBValuesTemp) == 0x000018, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::DBValuesTemp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_GetUserParamManager_UserParamManager) == 0x000028, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_GetDataBaseManager_Manager) == 0x000030, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_GetIsProgressBondsEpisode_playerID) == 0x00003A, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_GetIsProgressBondsEpisode_playerID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_GetIsProgressBondsEpisode_targetID) == 0x00003B, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_GetIsProgressBondsEpisode_targetID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_GetIsProgressBondsEpisode_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_GetIsProgressBondsEpisode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_IsWorldMapShowDestinationForAreaName2Native_IsShow) == 0x00003D, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_IsWorldMapShowDestinationForAreaName2Native_IsShow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDestinationForAreaName2, CallFunc_IsWorldMapShowDestinationForAreaName2Native_VisibleWeight) == 0x000040, "Member 'BP_EventManager_C_IsWorldMapShowDestinationForAreaName2::CallFunc_IsWorldMapShowDestinationForAreaName2Native_VisibleWeight' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayPresentSequencer
// 0x0420 (0x0420 - 0x0000)
struct BP_EventManager_C_PlayPresentSequencer final
{
public:
	class ULevelSequence*                         Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAjitoMember*                           BindForCharaActor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         SeqSpawnActorList;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FName                                   PlayerSeqTagName;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B3[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B4[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B5[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B6[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEventVisible_ReturnValue;              // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B7[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_1;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_2;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventPlayer_IsBinding;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer;       // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode;      // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode;    // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B8[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon;       // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_3;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B9[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BA[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventStart_ReturnValue;            // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BB[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BC[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BD[0x5];                                     // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BE[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BF[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0210(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C0[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0228(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0240(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0280(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x02D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02E0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0310(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C1[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0358(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C2[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0370(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C3[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_5;                          // 0x0390(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x03A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C4[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             CallFunc_Array_Get_Item_2;                         // 0x03C0(0x0018)(NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x03D8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C5[0x4];                                     // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C6[0x4];                                     // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue_1;              // 0x0400(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C7[0x3];                                     // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayPresentSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_PlayPresentSequencer");
static_assert(sizeof(BP_EventManager_C_PlayPresentSequencer) == 0x000420, "Wrong size on BP_EventManager_C_PlayPresentSequencer");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Sequence) == 0x000000, "Member 'BP_EventManager_C_PlayPresentSequencer::Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, BindForCharaActor) == 0x000008, "Member 'BP_EventManager_C_PlayPresentSequencer::BindForCharaActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, PlayRate) == 0x000010, "Member 'BP_EventManager_C_PlayPresentSequencer::PlayRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, SeqSpawnActorList) == 0x000018, "Member 'BP_EventManager_C_PlayPresentSequencer::SeqSpawnActorList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, PlayerSeqTagName) == 0x000028, "Member 'BP_EventManager_C_PlayPresentSequencer::PlayerSeqTagName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, PlayerList) == 0x000030, "Member 'BP_EventManager_C_PlayPresentSequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Array_Index_Variable_2) == 0x000060, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Array_Index_Variable_3) == 0x000070, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_byte_Variable) == 0x000074, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_DynamicCast_AsEvent_Interface) == 0x000080, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_SetEventVisible_ReturnValue) == 0x000092, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_SetEventVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_SwitchEnum_CmpSuccess) == 0x000093, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000094, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPresentSequencer_PresentSequencer) == 0x000098, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPresentSequencer_PresentSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPresentSequencer_PresentSequencer_1) == 0x0000A0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPresentSequencer_PresentSequencer_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPresentSequencer_PresentSequencer_2) == 0x0000B8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPresentSequencer_PresentSequencer_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_BindingEventPlayer_IsBinding) == 0x0000C0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_BindingEventPlayer_IsBindingPlayer) == 0x0000C1, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_BindingEventPlayer_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_BindingEventPlayer_IsBindingSASCode) == 0x0000C2, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_BindingEventPlayer_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_BindingEventPlayer_IsBindingBrainCode) == 0x0000C3, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_BindingEventPlayer_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_BindingEventPlayer_IsBindingWeapon) == 0x0000C8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_BindingEventPlayer_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPresentSequencer_PresentSequencer_3) == 0x0000D8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPresentSequencer_PresentSequencer_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Length_ReturnValue_2) == 0x0000F8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_DynamicCast_AsEvent_Interface_1) == 0x000100, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000111, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_DynamicEventStart_ReturnValue) == 0x000112, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_DynamicEventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_IsValid_ReturnValue_3) == 0x000113, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Length_ReturnValue_3) == 0x000114, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000120, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000128, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_DynamicCast_AsPlayer_Interface) == 0x000130, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_DynamicCast_AsRSBattle_Player) == 0x000148, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_DynamicCast_bSuccess_3) == 0x000150, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPlayerID_ReturnValue) == 0x000151, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_IsValid_ReturnValue_4) == 0x000152, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Loop_Counter_Variable_2) == 0x000168, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetObjectName_ReturnValue) == 0x000170, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000180, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_RightChop_ReturnValue) == 0x000188, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_LeftChop_ReturnValue) == 0x000198, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Concat_StrStr_ReturnValue) == 0x0001A8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Conv_StringToText_ReturnValue) == 0x0001B8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeStruct_FormatArgumentData) == 0x0001D0, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeArray_Array_1) == 0x000210, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_ActorHasTag_ReturnValue) == 0x000220, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Format_ReturnValue) == 0x000228, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000240, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeStruct_FormatArgumentData_2) == 0x000280, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeArray_Array_2) == 0x0002C0, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeArray_Array_3) == 0x0002D0, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Format_ReturnValue_1) == 0x0002E0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Format_ReturnValue_2) == 0x0002F8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeStruct_FormatArgumentData_3) == 0x000310, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Length_ReturnValue_4) == 0x000350, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeArray_Array_4) == 0x000358, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Length_ReturnValue_5) == 0x000368, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Format_ReturnValue_3) == 0x000370, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000388, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, K2Node_MakeArray_Array_5) == 0x000390, "Member 'BP_EventManager_C_PlayPresentSequencer::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x0003A0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x0003B0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPlayerManager_PlayerManager) == 0x0003B8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Get_Item_2) == 0x0003C0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPlayerList_ReturnValue) == 0x0003D8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Array_Length_ReturnValue_6) == 0x0003E8, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPlayerManager_PlayerManager_1) == 0x0003F0, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Loop_Counter_Variable_3) == 0x0003F8, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_GetPlayerList_ReturnValue_1) == 0x000400, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_GetPlayerList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Less_IntInt_ReturnValue_2) == 0x000410, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Add_IntInt_ReturnValue_3) == 0x000414, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, Temp_int_Loop_Num_Variable) == 0x000418, "Member 'BP_EventManager_C_PlayPresentSequencer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayPresentSequencer, CallFunc_Less_IntInt_ReturnValue_3) == 0x00041C, "Member 'BP_EventManager_C_PlayPresentSequencer::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnPresentSequencerFinished
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_OnPresentSequencerFinished final
{
public:
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C8[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventEnd_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C9[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnPresentSequencerFinished) == 0x000008, "Wrong alignment on BP_EventManager_C_OnPresentSequencerFinished");
static_assert(sizeof(BP_EventManager_C_OnPresentSequencerFinished) == 0x000060, "Wrong size on BP_EventManager_C_OnPresentSequencerFinished");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, PlayerList) == 0x000000, "Member 'BP_EventManager_C_OnPresentSequencerFinished::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventManager_C_OnPresentSequencerFinished::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EventManager_C_OnPresentSequencerFinished::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_GetPlayerList_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, K2Node_DynamicCast_AsEvent_Interface) == 0x000040, "Member 'BP_EventManager_C_OnPresentSequencerFinished::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EventManager_C_OnPresentSequencerFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_DynamicEventEnd_ReturnValue) == 0x000051, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_DynamicEventEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnPresentSequencerFinished, CallFunc_Greater_IntInt_ReturnValue) == 0x00005D, "Member 'BP_EventManager_C_OnPresentSequencerFinished::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndPresentSequencer
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_EndPresentSequencer final
{
public:
	class AAjitoMember*                           BindForCharaActor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndPresentSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_EndPresentSequencer");
static_assert(sizeof(BP_EventManager_C_EndPresentSequencer) == 0x000030, "Wrong size on BP_EventManager_C_EndPresentSequencer");
static_assert(offsetof(BP_EventManager_C_EndPresentSequencer, BindForCharaActor) == 0x000000, "Member 'BP_EventManager_C_EndPresentSequencer::BindForCharaActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndPresentSequencer, PlayerList) == 0x000008, "Member 'BP_EventManager_C_EndPresentSequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndPresentSequencer, CallFunc_GetPresentSequencer_PresentSequencer) == 0x000018, "Member 'BP_EventManager_C_EndPresentSequencer::CallFunc_GetPresentSequencer_PresentSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndPresentSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_EndPresentSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndPresentSequencer, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_EndPresentSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndPresentSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_EventManager_C_EndPresentSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddStaticCapturePPS
// 0x07A0 (0x07A0 - 0x0000)
struct BP_EventManager_C_AddStaticCapturePPS final
{
public:
	struct FPostProcessSettings                   PPS;                                               // 0x0000(0x0780)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Handle;                                            // 0x0780(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x078C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CA[0x3];                                     // 0x078D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddStaticCapturePPS) == 0x000010, "Wrong alignment on BP_EventManager_C_AddStaticCapturePPS");
static_assert(sizeof(BP_EventManager_C_AddStaticCapturePPS) == 0x0007A0, "Wrong size on BP_EventManager_C_AddStaticCapturePPS");
static_assert(offsetof(BP_EventManager_C_AddStaticCapturePPS, PPS) == 0x000000, "Member 'BP_EventManager_C_AddStaticCapturePPS::PPS' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddStaticCapturePPS, Handle) == 0x000780, "Member 'BP_EventManager_C_AddStaticCapturePPS::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddStaticCapturePPS, CallFunc_Array_Add_ReturnValue) == 0x000784, "Member 'BP_EventManager_C_AddStaticCapturePPS::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddStaticCapturePPS, CallFunc_Array_Add_ReturnValue_1) == 0x000788, "Member 'BP_EventManager_C_AddStaticCapturePPS::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddStaticCapturePPS, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00078C, "Member 'BP_EventManager_C_AddStaticCapturePPS::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddStaticCapturePPS, CallFunc_Add_IntInt_ReturnValue) == 0x000790, "Member 'BP_EventManager_C_AddStaticCapturePPS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.RemoveStaticCapturePPS
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_RemoveStaticCapturePPS final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CC[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CD[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CE[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_RemoveStaticCapturePPS) == 0x000004, "Wrong alignment on BP_EventManager_C_RemoveStaticCapturePPS");
static_assert(sizeof(BP_EventManager_C_RemoveStaticCapturePPS) == 0x000030, "Wrong size on BP_EventManager_C_RemoveStaticCapturePPS");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, Handle) == 0x000000, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, Param_Index) == 0x000004, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000025, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveStaticCapturePPS, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_RemoveStaticCapturePPS::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateStaticCapturePPS
// 0x07C0 (0x07C0 - 0x0000)
struct BP_EventManager_C_UpdateStaticCapturePPS final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CF[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   PPS;                                               // 0x0010(0x0780)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D0[0x3];                                     // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D1[0x3];                                     // 0x0799(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D2[0x3];                                     // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x07AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D3[0x3];                                     // 0x07AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_UpdateStaticCapturePPS) == 0x000010, "Wrong alignment on BP_EventManager_C_UpdateStaticCapturePPS");
static_assert(sizeof(BP_EventManager_C_UpdateStaticCapturePPS) == 0x0007C0, "Wrong size on BP_EventManager_C_UpdateStaticCapturePPS");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, Handle) == 0x000000, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, PPS) == 0x000010, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::PPS' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, Temp_bool_True_if_break_was_hit_Variable) == 0x000790, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, Temp_int_Array_Index_Variable) == 0x000794, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, CallFunc_Not_PreBool_ReturnValue) == 0x000798, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, Temp_int_Loop_Num_Variable) == 0x00079C, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, Temp_int_Loop_Counter_Variable) == 0x0007A0, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, CallFunc_Less_IntInt_ReturnValue) == 0x0007A4, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, CallFunc_Add_IntInt_ReturnValue) == 0x0007A8, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, CallFunc_BooleanAND_ReturnValue) == 0x0007AC, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, CallFunc_Array_Length_ReturnValue) == 0x0007B0, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateStaticCapturePPS, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0007B4, "Member 'BP_EventManager_C_UpdateStaticCapturePPS::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.BoardEffectNoise
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_BoardEffectNoise final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D6[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_BoardEffectNoise) == 0x000008, "Wrong alignment on BP_EventManager_C_BoardEffectNoise");
static_assert(sizeof(BP_EventManager_C_BoardEffectNoise) == 0x000038, "Wrong size on BP_EventManager_C_BoardEffectNoise");
static_assert(offsetof(BP_EventManager_C_BoardEffectNoise, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_BoardEffectNoise::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BoardEffectNoise, Curve) == 0x000008, "Member 'BP_EventManager_C_BoardEffectNoise::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BoardEffectNoise, IsLoop) == 0x000010, "Member 'BP_EventManager_C_BoardEffectNoise::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BoardEffectNoise, Target) == 0x000018, "Member 'BP_EventManager_C_BoardEffectNoise::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BoardEffectNoise, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_BoardEffectNoise::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BoardEffectNoise, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_BoardEffectNoise::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BoardEffectNoise, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_BoardEffectNoise::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SpecialBoardEffectNoise
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_SpecialBoardEffectNoise final
{
public:
	int32                                         CaptureActorIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SpecialBoardEffectNoise) == 0x000008, "Wrong alignment on BP_EventManager_C_SpecialBoardEffectNoise");
static_assert(sizeof(BP_EventManager_C_SpecialBoardEffectNoise) == 0x000038, "Wrong size on BP_EventManager_C_SpecialBoardEffectNoise");
static_assert(offsetof(BP_EventManager_C_SpecialBoardEffectNoise, CaptureActorIndex) == 0x000000, "Member 'BP_EventManager_C_SpecialBoardEffectNoise::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialBoardEffectNoise, Curve) == 0x000008, "Member 'BP_EventManager_C_SpecialBoardEffectNoise::Curve' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialBoardEffectNoise, IsLoop) == 0x000010, "Member 'BP_EventManager_C_SpecialBoardEffectNoise::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialBoardEffectNoise, Target) == 0x000018, "Member 'BP_EventManager_C_SpecialBoardEffectNoise::Target' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialBoardEffectNoise, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_SpecialBoardEffectNoise::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialBoardEffectNoise, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_SpecialBoardEffectNoise::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpecialBoardEffectNoise, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SpecialBoardEffectNoise::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateCapturePPM
// 0x0070 (0x0070 - 0x0000)
struct BP_EventManager_C_UpdateCapturePPM final
{
public:
	class AActor*                                 EventActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DA[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DB[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSequencerSpawner_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSequencerSpawner_ReturnValue_1;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DD[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSequencerSpawner_ReturnValue_2;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DE[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_2;     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UpdateCapturePPM) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdateCapturePPM");
static_assert(sizeof(BP_EventManager_C_UpdateCapturePPM) == 0x000070, "Wrong size on BP_EventManager_C_UpdateCapturePPM");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, EventActor) == 0x000000, "Member 'BP_EventManager_C_UpdateCapturePPM::EventActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CaptureActor) == 0x000008, "Member 'BP_EventManager_C_UpdateCapturePPM::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventManager_C_UpdateCapturePPM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_EventManager_C_UpdateCapturePPM::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventManager_C_UpdateCapturePPM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_EventManager_C_UpdateCapturePPM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_EventManager_C_UpdateCapturePPM::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_EventManager_C_UpdateCapturePPM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_Less_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_IsSequencerSpawner_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_IsSequencerSpawner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_IsSequencerSpawner_ReturnValue_1) == 0x000049, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_IsSequencerSpawner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_IsSequencerSpawner_ReturnValue_2) == 0x000058, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_IsSequencerSpawner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_GetCineCameraComponent_ReturnValue_2) == 0x000060, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_GetCineCameraComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateCapturePPM, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'BP_EventManager_C_UpdateCapturePPM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetScreenCapture
// 0x0150 (0x0150 - 0x0000)
struct BP_EventManager_C_SetScreenCapture final
{
public:
	class USceneCaptureComponent2D*               Scene_Capture_Comp;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Save;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DF[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      L_player;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               L_scnCapComp;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      CallFunc_GetPlayerCameraRotation_self_CastInput;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E0[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      CallFunc_GetPlayerCameraLocation_self_CastInput;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E1[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class ICameraInterface>      CallFunc_GetPlayerCameraFieldOfView_self_CastInput; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlayerCameraFieldOfView_ReturnValue;   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_35E2[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetScreenCapture) == 0x000010, "Wrong alignment on BP_EventManager_C_SetScreenCapture");
static_assert(sizeof(BP_EventManager_C_SetScreenCapture) == 0x000150, "Wrong size on BP_EventManager_C_SetScreenCapture");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, Scene_Capture_Comp) == 0x000000, "Member 'BP_EventManager_C_SetScreenCapture::Scene_Capture_Comp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, Save) == 0x000008, "Member 'BP_EventManager_C_SetScreenCapture::Save' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, L_player) == 0x000010, "Member 'BP_EventManager_C_SetScreenCapture::L_player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, L_scnCapComp) == 0x000018, "Member 'BP_EventManager_C_SetScreenCapture::L_scnCapComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_GetPlayerCameraRotation_self_CastInput) == 0x000020, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_GetPlayerCameraRotation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_GetPlayerCameraRotation_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_GetPlayerCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_GetPlayerCameraLocation_self_CastInput) == 0x000040, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_GetPlayerCameraLocation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_GetPlayerCameraLocation_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_GetPlayerCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_GetPlayerCameraFieldOfView_self_CastInput) == 0x000090, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_GetPlayerCameraFieldOfView_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_GetPlayerCameraFieldOfView_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_GetPlayerCameraFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000A4, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_GetPlayerManager_PlayerManager) == 0x000130, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_GetMainPlayer_Player) == 0x000138, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetScreenCapture, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'BP_EventManager_C_SetScreenCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.DebugSetupDynamicPostProcess
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_DebugSetupDynamicPostProcess final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_DebugSetupDynamicPostProcess) == 0x000001, "Wrong alignment on BP_EventManager_C_DebugSetupDynamicPostProcess");
static_assert(sizeof(BP_EventManager_C_DebugSetupDynamicPostProcess) == 0x000001, "Wrong size on BP_EventManager_C_DebugSetupDynamicPostProcess");
static_assert(offsetof(BP_EventManager_C_DebugSetupDynamicPostProcess, Enable) == 0x000000, "Member 'BP_EventManager_C_DebugSetupDynamicPostProcess::Enable' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CaptureSceneBGForLevelSequencer
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_CaptureSceneBGForLevelSequencer final
{
public:
	class ULevelSequence*                         InSequence;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewPlaybackPosition;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CaptureSceneBGForLevelSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_CaptureSceneBGForLevelSequencer");
static_assert(sizeof(BP_EventManager_C_CaptureSceneBGForLevelSequencer) == 0x000010, "Wrong size on BP_EventManager_C_CaptureSceneBGForLevelSequencer");
static_assert(offsetof(BP_EventManager_C_CaptureSceneBGForLevelSequencer, InSequence) == 0x000000, "Member 'BP_EventManager_C_CaptureSceneBGForLevelSequencer::InSequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneBGForLevelSequencer, NewPlaybackPosition) == 0x000008, "Member 'BP_EventManager_C_CaptureSceneBGForLevelSequencer::NewPlaybackPosition' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CaptureSceneBGForLevelSequencer, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_CaptureSceneBGForLevelSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsWaitSequencerCaptureBG
// 0x0002 (0x0002 - 0x0000)
struct BP_EventManager_C_IsWaitSequencerCaptureBG final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsWaitSequencerCaptureBG) == 0x000001, "Wrong alignment on BP_EventManager_C_IsWaitSequencerCaptureBG");
static_assert(sizeof(BP_EventManager_C_IsWaitSequencerCaptureBG) == 0x000002, "Wrong size on BP_EventManager_C_IsWaitSequencerCaptureBG");
static_assert(offsetof(BP_EventManager_C_IsWaitSequencerCaptureBG, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsWaitSequencerCaptureBG::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWaitSequencerCaptureBG, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EventManager_C_IsWaitSequencerCaptureBG::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsNowSettingSeqCaptureBrainMes
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_IsNowSettingSeqCaptureBrainMes final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReadyView_IsReady;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E3[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsNowSettingSeqCaptureBrainMes) == 0x000004, "Wrong alignment on BP_EventManager_C_IsNowSettingSeqCaptureBrainMes");
static_assert(sizeof(BP_EventManager_C_IsNowSettingSeqCaptureBrainMes) == 0x00000C, "Wrong size on BP_EventManager_C_IsNowSettingSeqCaptureBrainMes");
static_assert(offsetof(BP_EventManager_C_IsNowSettingSeqCaptureBrainMes, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsNowSettingSeqCaptureBrainMes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsNowSettingSeqCaptureBrainMes, CallFunc_IsReadyView_IsReady) == 0x000001, "Member 'BP_EventManager_C_IsNowSettingSeqCaptureBrainMes::CallFunc_IsReadyView_IsReady' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsNowSettingSeqCaptureBrainMes, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_IsNowSettingSeqCaptureBrainMes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsNowSettingSeqCaptureBrainMes, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsNowSettingSeqCaptureBrainMes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Update3DWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_Update3DWidget final
{
public:
	float                                         InDeltaTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Update3DWidget) == 0x000004, "Wrong alignment on BP_EventManager_C_Update3DWidget");
static_assert(sizeof(BP_EventManager_C_Update3DWidget) == 0x000010, "Wrong size on BP_EventManager_C_Update3DWidget");
static_assert(offsetof(BP_EventManager_C_Update3DWidget, InDeltaTime) == 0x000000, "Member 'BP_EventManager_C_Update3DWidget::InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Update3DWidget, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_Update3DWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Update3DWidget, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_Update3DWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Update3DWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_Update3DWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupStaticCapturePPMGradScreenMask
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EventManager_C_SetupStaticCapturePPMGradScreenMask final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaskPlayer;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskEnemy;                                         // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskParticle;                                      // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskBG;                                            // 0x0017(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AfterDOF;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BeginColor;                                        // 0x001C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EndColor;                                          // 0x002C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BeginPos;                                          // 0x003C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EndPos;                                            // 0x004C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Center;                                            // 0x005C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x006C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRadiusGrad;                                      // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E6[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlendMode;                                         // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           Temp_byte_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E7[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           Temp_byte_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E8[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventPostProcessID                           K2Node_Select_Default;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E9[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupStaticCapturePPMGradScreenMask");
static_assert(sizeof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask) == 0x0000A8, "Wrong size on BP_EventManager_C_SetupStaticCapturePPMGradScreenMask");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, Rate) == 0x000000, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, Color) == 0x000004, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, MaskPlayer) == 0x000014, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::MaskPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, MaskEnemy) == 0x000015, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::MaskEnemy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, MaskParticle) == 0x000016, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::MaskParticle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, MaskBG) == 0x000017, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::MaskBG' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, AfterDOF) == 0x000018, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::AfterDOF' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, BeginColor) == 0x00001C, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::BeginColor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, EndColor) == 0x00002C, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::EndColor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, BeginPos) == 0x00003C, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::BeginPos' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, EndPos) == 0x00004C, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::EndPos' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, Center) == 0x00005C, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::Center' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, Radius) == 0x00006C, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::Radius' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, IsRadiusGrad) == 0x000070, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::IsRadiusGrad' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, BlendMode) == 0x000074, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::BlendMode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, Temp_byte_Variable) == 0x000078, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00007C, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000080, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000084, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, Temp_byte_Variable_1) == 0x000088, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x00008C, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, Temp_bool_Variable) == 0x000090, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, K2Node_Select_Default) == 0x000091, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000098, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMGradScreenMask, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_SetupStaticCapturePPMGradScreenMask::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetGradScreenMaskParameter
// 0x00B0 (0x00B0 - 0x0000)
struct BP_EventManager_C_SetGradScreenMaskParameter final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaskPlayer;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskEnemy;                                         // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskParticle;                                      // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskBG;                                            // 0x0017(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AfterDOF;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EA[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BeginColor;                                        // 0x001C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EndColor;                                          // 0x002C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BeginPos;                                          // 0x003C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EndPos;                                            // 0x004C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Center;                                            // 0x005C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x006C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRadiusGrad;                                      // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EB[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlendMode;                                         // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TargetMaterial;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventPostProcessID                           Temp_byte_Variable_1;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventPostProcessID                           K2Node_Select_Default;                             // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EC[0x1];                                     // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventPostProcessID                           Temp_byte_Variable_2;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           Temp_byte_Variable_3;                              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           K2Node_Select_Default_1;                           // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35ED[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_1;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetGradScreenMaskParameter) == 0x000008, "Wrong alignment on BP_EventManager_C_SetGradScreenMaskParameter");
static_assert(sizeof(BP_EventManager_C_SetGradScreenMaskParameter) == 0x0000B0, "Wrong size on BP_EventManager_C_SetGradScreenMaskParameter");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Rate) == 0x000000, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Color) == 0x000004, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, MaskPlayer) == 0x000014, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::MaskPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, MaskEnemy) == 0x000015, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::MaskEnemy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, MaskParticle) == 0x000016, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::MaskParticle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, MaskBG) == 0x000017, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::MaskBG' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, AfterDOF) == 0x000018, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::AfterDOF' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, BeginColor) == 0x00001C, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::BeginColor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, EndColor) == 0x00002C, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::EndColor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, BeginPos) == 0x00003C, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::BeginPos' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, EndPos) == 0x00004C, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::EndPos' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Center) == 0x00005C, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Center' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Radius) == 0x00006C, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Radius' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, IsRadiusGrad) == 0x000070, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::IsRadiusGrad' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, BlendMode) == 0x000074, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::BlendMode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, TargetMaterial) == 0x000078, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::TargetMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Temp_byte_Variable) == 0x000080, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Temp_byte_Variable_1) == 0x000082, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_IsValid_ReturnValue) == 0x000083, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Temp_bool_Variable) == 0x000084, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Temp_bool_Variable_1) == 0x000085, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, K2Node_Select_Default) == 0x000086, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM) == 0x000088, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000094, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000098, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x00009C, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Temp_byte_Variable_2) == 0x0000A1, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, Temp_byte_Variable_3) == 0x0000A2, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, K2Node_Select_Default_1) == 0x0000A3, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetGradScreenMaskParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_1) == 0x0000A8, "Member 'BP_EventManager_C_SetGradScreenMaskParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetKaiiFilterParameter
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_SetKaiiFilterParameter final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaskPlayer;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskEnemy;                                         // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskParticle;                                      // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskBG;                                            // 0x0017(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AfterDOF;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               TargetMaterial;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EF[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F0[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetKaiiFilterParameter) == 0x000008, "Wrong alignment on BP_EventManager_C_SetKaiiFilterParameter");
static_assert(sizeof(BP_EventManager_C_SetKaiiFilterParameter) == 0x000048, "Wrong size on BP_EventManager_C_SetKaiiFilterParameter");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, Rate) == 0x000000, "Member 'BP_EventManager_C_SetKaiiFilterParameter::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, Color) == 0x000004, "Member 'BP_EventManager_C_SetKaiiFilterParameter::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, MaskPlayer) == 0x000014, "Member 'BP_EventManager_C_SetKaiiFilterParameter::MaskPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, MaskEnemy) == 0x000015, "Member 'BP_EventManager_C_SetKaiiFilterParameter::MaskEnemy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, MaskParticle) == 0x000016, "Member 'BP_EventManager_C_SetKaiiFilterParameter::MaskParticle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, MaskBG) == 0x000017, "Member 'BP_EventManager_C_SetKaiiFilterParameter::MaskBG' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, AfterDOF) == 0x000018, "Member 'BP_EventManager_C_SetKaiiFilterParameter::AfterDOF' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, TargetMaterial) == 0x000020, "Member 'BP_EventManager_C_SetKaiiFilterParameter::TargetMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetKaiiFilterParameter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00002C, "Member 'BP_EventManager_C_SetKaiiFilterParameter::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000030, "Member 'BP_EventManager_C_SetKaiiFilterParameter::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_SetKaiiFilterParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x000038, "Member 'BP_EventManager_C_SetKaiiFilterParameter::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetKaiiFilterParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM) == 0x000040, "Member 'BP_EventManager_C_SetKaiiFilterParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupStaticCapturePPMKaiiFilter
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_SetupStaticCapturePPMKaiiFilter final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaskPlayer;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskEnemy;                                         // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskParticle;                                      // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MaskBG;                                            // 0x0017(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AfterDOF;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F1[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F2[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupStaticCapturePPMKaiiFilter");
static_assert(sizeof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter) == 0x000040, "Wrong size on BP_EventManager_C_SetupStaticCapturePPMKaiiFilter");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, Rate) == 0x000000, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, Color) == 0x000004, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::Color' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, MaskPlayer) == 0x000014, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::MaskPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, MaskEnemy) == 0x000015, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::MaskEnemy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, MaskParticle) == 0x000016, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::MaskParticle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, MaskBG) == 0x000017, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::MaskBG' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, AfterDOF) == 0x000018, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::AfterDOF' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000024, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x000028, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, CallFunc_MakeLiteralByte_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000030, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMKaiiFilter, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_SetupStaticCapturePPMKaiiFilter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetLevelActorVisible
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_SetLevelActorVisible final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F4[0xB];                                     // 0x0015(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ActorVisibleChangeBase_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetLevelActorVisible) == 0x000010, "Wrong alignment on BP_EventManager_C_SetLevelActorVisible");
static_assert(sizeof(BP_EventManager_C_SetLevelActorVisible) == 0x000060, "Wrong size on BP_EventManager_C_SetLevelActorVisible");
static_assert(offsetof(BP_EventManager_C_SetLevelActorVisible, IsVisible) == 0x000000, "Member 'BP_EventManager_C_SetLevelActorVisible::IsVisible' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetLevelActorVisible, Position) == 0x000004, "Member 'BP_EventManager_C_SetLevelActorVisible::Position' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetLevelActorVisible, Range) == 0x000010, "Member 'BP_EventManager_C_SetLevelActorVisible::Range' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetLevelActorVisible, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_SetLevelActorVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetLevelActorVisible, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_SetLevelActorVisible::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetLevelActorVisible, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_SetLevelActorVisible::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetLevelActorVisible, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_SetLevelActorVisible::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProccessTriggerPlayerAnimMontage
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EventManager_C_ProccessTriggerPlayerAnimMontage final
{
public:
	struct FFEventTriggerCommandData              EventTriggerComandData;                            // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartEvent;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F5[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F6[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F7[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage) == 0x000008, "Wrong alignment on BP_EventManager_C_ProccessTriggerPlayerAnimMontage");
static_assert(sizeof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage) == 0x0000B8, "Wrong size on BP_EventManager_C_ProccessTriggerPlayerAnimMontage");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, EventTriggerComandData) == 0x000000, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::EventTriggerComandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, IsStartEvent) == 0x000078, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, CallFunc_GetPlayerManager_PlayerManager) == 0x000080, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, CallFunc_GetPlayer_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, K2Node_DynamicCast_AsRSBattle_Player) == 0x000098, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, CallFunc_GetCurrentMontage_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessTriggerPlayerAnimMontage, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'BP_EventManager_C_ProccessTriggerPlayerAnimMontage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetTimerByPlayObstructAction
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_SetTimerByPlayObstructAction final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetTimerByPlayObstructAction) == 0x000004, "Wrong alignment on BP_EventManager_C_SetTimerByPlayObstructAction");
static_assert(sizeof(BP_EventManager_C_SetTimerByPlayObstructAction) == 0x000004, "Wrong size on BP_EventManager_C_SetTimerByPlayObstructAction");
static_assert(offsetof(BP_EventManager_C_SetTimerByPlayObstructAction, Time) == 0x000000, "Member 'BP_EventManager_C_SetTimerByPlayObstructAction::Time' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateTimerByPlayObstructAction
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_UpdateTimerByPlayObstructAction final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActionStateObstructPsychic_bDummy;     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_UpdateTimerByPlayObstructAction) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdateTimerByPlayObstructAction");
static_assert(sizeof(BP_EventManager_C_UpdateTimerByPlayObstructAction) == 0x000028, "Wrong size on BP_EventManager_C_UpdateTimerByPlayObstructAction");
static_assert(offsetof(BP_EventManager_C_UpdateTimerByPlayObstructAction, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_EventManager_C_UpdateTimerByPlayObstructAction::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateTimerByPlayObstructAction, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_UpdateTimerByPlayObstructAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateTimerByPlayObstructAction, CallFunc_GetPlayer_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_UpdateTimerByPlayObstructAction::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateTimerByPlayObstructAction, K2Node_DynamicCast_AsRSBattle_Player) == 0x000018, "Member 'BP_EventManager_C_UpdateTimerByPlayObstructAction::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateTimerByPlayObstructAction, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventManager_C_UpdateTimerByPlayObstructAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateTimerByPlayObstructAction, CallFunc_SetActionStateObstructPsychic_bDummy) == 0x000021, "Member 'BP_EventManager_C_UpdateTimerByPlayObstructAction::CallFunc_SetActionStateObstructPsychic_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateTimerByPlayObstructAction, CallFunc_IsOver_ReturnValue) == 0x000022, "Member 'BP_EventManager_C_UpdateTimerByPlayObstructAction::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateTimerByPlayObstructAction, CallFunc_IsEnable_ReturnValue) == 0x000023, "Member 'BP_EventManager_C_UpdateTimerByPlayObstructAction::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProccessObstructActionNumOrTime
// 0x0080 (0x0080 - 0x0000)
struct BP_EventManager_C_ProccessObstructActionNumOrTime final
{
public:
	struct FFEventTriggerCommandData              EventTriggerCommandData;                           // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartEvent;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalIsStartEvent;                                 // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessTime_IsStartEvent;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProccessObstructActionNumOrTime) == 0x000008, "Wrong alignment on BP_EventManager_C_ProccessObstructActionNumOrTime");
static_assert(sizeof(BP_EventManager_C_ProccessObstructActionNumOrTime) == 0x000080, "Wrong size on BP_EventManager_C_ProccessObstructActionNumOrTime");
static_assert(offsetof(BP_EventManager_C_ProccessObstructActionNumOrTime, EventTriggerCommandData) == 0x000000, "Member 'BP_EventManager_C_ProccessObstructActionNumOrTime::EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessObstructActionNumOrTime, IsStartEvent) == 0x000078, "Member 'BP_EventManager_C_ProccessObstructActionNumOrTime::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessObstructActionNumOrTime, LocalIsStartEvent) == 0x000079, "Member 'BP_EventManager_C_ProccessObstructActionNumOrTime::LocalIsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessObstructActionNumOrTime, CallFunc_ProccessTime_IsStartEvent) == 0x00007A, "Member 'BP_EventManager_C_ProccessObstructActionNumOrTime::CallFunc_ProccessTime_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessObstructActionNumOrTime, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00007B, "Member 'BP_EventManager_C_ProccessObstructActionNumOrTime::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessObstructActionNumOrTime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007C, "Member 'BP_EventManager_C_ProccessObstructActionNumOrTime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddObstructActionCount
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_AddObstructActionCount final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddObstructActionCount) == 0x000004, "Wrong alignment on BP_EventManager_C_AddObstructActionCount");
static_assert(sizeof(BP_EventManager_C_AddObstructActionCount) == 0x000004, "Wrong size on BP_EventManager_C_AddObstructActionCount");
static_assert(offsetof(BP_EventManager_C_AddObstructActionCount, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_AddObstructActionCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetRipSync
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_ResetRipSync final
{
public:
	TArray<class ABPCaptureActor_C*>              LocalFrameCaptureActorList;                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F9[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ResetRipSync) == 0x000008, "Wrong alignment on BP_EventManager_C_ResetRipSync");
static_assert(sizeof(BP_EventManager_C_ResetRipSync) == 0x000038, "Wrong size on BP_EventManager_C_ResetRipSync");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, LocalFrameCaptureActorList) == 0x000000, "Member 'BP_EventManager_C_ResetRipSync::LocalFrameCaptureActorList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventManager_C_ResetRipSync::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EventManager_C_ResetRipSync::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_ResetRipSync::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventManager_C_ResetRipSync::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_ResetRipSync::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_EventManager_C_ResetRipSync::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_ResetRipSync::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetRipSync, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BP_EventManager_C_ResetRipSync::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateDynamic
// 0x0820 (0x0820 - 0x0000)
struct BP_EventManager_C_UpdateDynamic final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FA[0xF];                                     // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FCameraFilmbackSettings                K2Node_MakeStruct_CameraFilmbackSettings;          // 0x0050(0x000C)(NoDestructor)
	uint8                                         Pad_35FB[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0060(0x0780)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue_1;              // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventType                                    CallFunc_GetEventType_EventType;                   // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FC[0x7];                                     // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           K2Node_DynamicCast_AsCamera_Actor;                 // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0801(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FD[0x6];                                     // 0x0802(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   K2Node_DynamicCast_AsCine_Camera_Component;        // 0x0808(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FE[0x3];                                     // 0x0811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_UpdateDynamic) == 0x000010, "Wrong alignment on BP_EventManager_C_UpdateDynamic");
static_assert(sizeof(BP_EventManager_C_UpdateDynamic) == 0x000820, "Wrong size on BP_EventManager_C_UpdateDynamic");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, K2Node_MakeStruct_CameraFilmbackSettings) == 0x000050, "Member 'BP_EventManager_C_UpdateDynamic::K2Node_MakeStruct_CameraFilmbackSettings' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, K2Node_MakeStruct_PostProcessSettings) == 0x000060, "Member 'BP_EventManager_C_UpdateDynamic::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_GetPlayerController_ReturnValue_1) == 0x0007E0, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_GetViewTarget_ReturnValue_1) == 0x0007E8, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_GetViewTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_GetEventType_EventType) == 0x0007F0, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_GetEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, K2Node_DynamicCast_AsCamera_Actor) == 0x0007F8, "Member 'BP_EventManager_C_UpdateDynamic::K2Node_DynamicCast_AsCamera_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, K2Node_DynamicCast_bSuccess) == 0x000800, "Member 'BP_EventManager_C_UpdateDynamic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000801, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, K2Node_DynamicCast_AsCine_Camera_Component) == 0x000808, "Member 'BP_EventManager_C_UpdateDynamic::K2Node_DynamicCast_AsCine_Camera_Component' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, K2Node_DynamicCast_bSuccess_1) == 0x000810, "Member 'BP_EventManager_C_UpdateDynamic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_FClamp_ReturnValue) == 0x000814, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateDynamic, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000818, "Member 'BP_EventManager_C_UpdateDynamic::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateFacialNormal
// 0x0098 (0x0098 - 0x0000)
struct BP_EventManager_C_UpdateFacialNormal final
{
public:
	bool                                          UseCache;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SetupDecal;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FF[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         AttachedActors;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     SkeletalMesh;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_UpdateFacialNormalNative_TargetSkelMeshActors; // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3600[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3601[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3602[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3603[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3604[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3605[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventMeshOption_C*                  K2Node_DynamicCast_AsBP_Event_Mesh_Option;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3606[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UpdateFacialNormal) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdateFacialNormal");
static_assert(sizeof(BP_EventManager_C_UpdateFacialNormal) == 0x000098, "Wrong size on BP_EventManager_C_UpdateFacialNormal");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, UseCache) == 0x000000, "Member 'BP_EventManager_C_UpdateFacialNormal::UseCache' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, SetupDecal) == 0x000001, "Member 'BP_EventManager_C_UpdateFacialNormal::SetupDecal' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, AttachedActors) == 0x000008, "Member 'BP_EventManager_C_UpdateFacialNormal::AttachedActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, SkeletalMesh) == 0x000018, "Member 'BP_EventManager_C_UpdateFacialNormal::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_GetAttachedActors_OutActors) == 0x000020, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_UpdateFacialNormalNative_TargetSkelMeshActors) == 0x000030, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_UpdateFacialNormalNative_TargetSkelMeshActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, Temp_int_Loop_Num_Variable) == 0x000044, "Member 'BP_EventManager_C_UpdateFacialNormal::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EventManager_C_UpdateFacialNormal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, K2Node_DynamicCast_AsSkeletal_Mesh_Actor) == 0x000050, "Member 'BP_EventManager_C_UpdateFacialNormal::K2Node_DynamicCast_AsSkeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_EventManager_C_UpdateFacialNormal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_EventManager_C_UpdateFacialNormal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, Temp_bool_True_if_break_was_hit_Variable) == 0x000064, "Member 'BP_EventManager_C_UpdateFacialNormal::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BP_EventManager_C_UpdateFacialNormal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_Not_PreBool_ReturnValue) == 0x000074, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_EventManager_C_UpdateFacialNormal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, Temp_int_Loop_Num_Variable_1) == 0x00007C, "Member 'BP_EventManager_C_UpdateFacialNormal::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, K2Node_DynamicCast_AsBP_Event_Mesh_Option) == 0x000088, "Member 'BP_EventManager_C_UpdateFacialNormal::K2Node_DynamicCast_AsBP_Event_Mesh_Option' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_EventManager_C_UpdateFacialNormal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateFacialNormal, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_EventManager_C_UpdateFacialNormal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsReadyStartEvents
// 0x0088 (0x0088 - 0x0000)
struct BP_EventManager_C_IsReadyStartEvents final
{
public:
	bool                                          IsCanStartEvents;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3607[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3608[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3609[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isTutoTips_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360A[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFinishMoveManager_FinishMove_Manager;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360B[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FinishMoveActorManager_C*           K2Node_DynamicCast_AsBP_Finish_Move_Actor_Manager; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainCrashManager_C*                CallFunc_GetBrainCrashManager_Manager;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingUniqueBrainCrash_IsUnique;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingGeneralBrainCrash_IsGeneral;     // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360D[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStatusInScene_IsInScene;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsReadyStartEvents) == 0x000008, "Wrong alignment on BP_EventManager_C_IsReadyStartEvents");
static_assert(sizeof(BP_EventManager_C_IsReadyStartEvents) == 0x000088, "Wrong size on BP_EventManager_C_IsReadyStartEvents");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, IsCanStartEvents) == 0x000000, "Member 'BP_EventManager_C_IsReadyStartEvents::IsCanStartEvents' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, K2Node_DynamicCast_AsRSBattle_Character) == 0x000020, "Member 'BP_EventManager_C_IsReadyStartEvents::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventManager_C_IsReadyStartEvents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsDead_self_CastInput) == 0x000030, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsDead_bDead) == 0x000040, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_isTutoTips_ReturnValue) == 0x000041, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_isTutoTips_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_GetFinishMoveManager_FinishMove_Manager) == 0x000048, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_GetFinishMoveManager_FinishMove_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, K2Node_DynamicCast_AsBP_Finish_Move_Actor_Manager) == 0x000058, "Member 'BP_EventManager_C_IsReadyStartEvents::K2Node_DynamicCast_AsBP_Finish_Move_Actor_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_EventManager_C_IsReadyStartEvents::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_GetBrainCrashManager_Manager) == 0x000068, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_GetBrainCrashManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsPlayingUniqueBrainCrash_IsUnique) == 0x000071, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsPlayingUniqueBrainCrash_IsUnique' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsPlayingGeneralBrainCrash_IsGeneral) == 0x000072, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsPlayingGeneralBrainCrash_IsGeneral' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_BooleanOR_ReturnValue) == 0x000073, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_GetSceneManager_SceneManager) == 0x000078, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsStatusInScene_IsInScene) == 0x000081, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsStatusInScene_IsInScene' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsReadyStartEvents, CallFunc_IsValid_ReturnValue_3) == 0x000082, "Member 'BP_EventManager_C_IsReadyStartEvents::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CheckStartWinOrLoseEvent
// 0x0100 (0x0100 - 0x0000)
struct BP_EventManager_C_CheckStartWinOrLoseEvent final
{
public:
	bool                                          IsStartEvent;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              LocalEventCommand;                                 // 0x0008(0x0078)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidEventCommandType_IsValid;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360F[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              CallFunc_IsValidEventCommandType_EventTriggerCommandData; // 0x0088(0x0078)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_CheckStartWinOrLoseEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_CheckStartWinOrLoseEvent");
static_assert(sizeof(BP_EventManager_C_CheckStartWinOrLoseEvent) == 0x000100, "Wrong size on BP_EventManager_C_CheckStartWinOrLoseEvent");
static_assert(offsetof(BP_EventManager_C_CheckStartWinOrLoseEvent, IsStartEvent) == 0x000000, "Member 'BP_EventManager_C_CheckStartWinOrLoseEvent::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartWinOrLoseEvent, LocalEventCommand) == 0x000008, "Member 'BP_EventManager_C_CheckStartWinOrLoseEvent::LocalEventCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartWinOrLoseEvent, CallFunc_IsValidEventCommandType_IsValid) == 0x000080, "Member 'BP_EventManager_C_CheckStartWinOrLoseEvent::CallFunc_IsValidEventCommandType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartWinOrLoseEvent, CallFunc_IsValidEventCommandType_EventTriggerCommandData) == 0x000088, "Member 'BP_EventManager_C_CheckStartWinOrLoseEvent::CallFunc_IsValidEventCommandType_EventTriggerCommandData' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddEventTriggerCommandToPriority
// 0x02B8 (0x02B8 - 0x0000)
struct BP_EventManager_C_AddEventTriggerCommandToPriority final
{
public:
	struct FFEventTriggerCommand                  TriggerCommand;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3610[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InsertArrayIndex;                                  // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0080(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromSoftClassReference_ReturnValue; // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3611[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3612[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3613[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0170(0x0018)()
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3614[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3615[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameTimer                             K2Node_MakeStruct_GameTimer;                       // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameTimer                             K2Node_MakeStruct_GameTimer_1;                     // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3616[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              K2Node_MakeStruct_FEventTriggerCommandData;        // 0x01B8(0x0078)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEventTriggerCommandData              K2Node_MakeStruct_FEventTriggerCommandData_1;      // 0x0230(0x0078)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AddEventTriggerCommandToPriority) == 0x000008, "Wrong alignment on BP_EventManager_C_AddEventTriggerCommandToPriority");
static_assert(sizeof(BP_EventManager_C_AddEventTriggerCommandToPriority) == 0x0002B8, "Wrong size on BP_EventManager_C_AddEventTriggerCommandToPriority");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, TriggerCommand) == 0x000000, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::TriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, IsFind) == 0x000068, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, InsertArrayIndex) == 0x00006C, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::InsertArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_GetClassDisplayName_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_GetPrimaryAssetIdFromSoftClassReference_ReturnValue) == 0x0000B8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_GetPrimaryAssetIdFromSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Conv_NameToString_ReturnValue) == 0x0000E8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000F8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000108, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, Temp_bool_True_if_break_was_hit_Variable) == 0x000118, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000120, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000130, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Not_PreBool_ReturnValue) == 0x000140, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000148, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000158, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, Temp_int_Array_Index_Variable) == 0x000168, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Conv_StringToText_ReturnValue) == 0x000170, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, Temp_int_Loop_Num_Variable) == 0x000188, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, Temp_int_Loop_Counter_Variable) == 0x00018C, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Add_IntInt_ReturnValue) == 0x000194, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_BooleanAND_ReturnValue) == 0x000198, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, K2Node_MakeStruct_GameTimer) == 0x00019C, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::K2Node_MakeStruct_GameTimer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, K2Node_MakeStruct_GameTimer_1) == 0x0001A8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::K2Node_MakeStruct_GameTimer_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, K2Node_MakeStruct_FEventTriggerCommandData) == 0x0001B8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::K2Node_MakeStruct_FEventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, K2Node_MakeStruct_FEventTriggerCommandData_1) == 0x000230, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::K2Node_MakeStruct_FEventTriggerCommandData_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Array_Length_ReturnValue) == 0x0002A8, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Array_Add_ReturnValue) == 0x0002AC, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Array_Length_ReturnValue_1) == 0x0002B0, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_Greater_IntInt_ReturnValue) == 0x0002B4, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddEventTriggerCommandToPriority, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002B5, "Member 'BP_EventManager_C_AddEventTriggerCommandToPriority::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearEventComanndListToUnderPriority
// 0x0320 (0x0320 - 0x0000)
struct BP_EventManager_C_ClearEventComanndListToUnderPriority final
{
public:
	struct FFEventTriggerCommandData              TriggerCommandData;                                // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFEventTriggerCommandData>      LocalEventTriggerList;                             // 0x0078(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         ResizeArrayIndex;                                  // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3617[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3618[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3619[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361A[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361B[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x00D0(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromSoftClassReference_ReturnValue; // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361C[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361D[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01B8(0x0018)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_1;        // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_2;        // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361E[0x2];                                     // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361F[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_3;        // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3620[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_4;        // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3621[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0308(0x0018)()
};
static_assert(alignof(BP_EventManager_C_ClearEventComanndListToUnderPriority) == 0x000008, "Wrong alignment on BP_EventManager_C_ClearEventComanndListToUnderPriority");
static_assert(sizeof(BP_EventManager_C_ClearEventComanndListToUnderPriority) == 0x000320, "Wrong size on BP_EventManager_C_ClearEventComanndListToUnderPriority");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, TriggerCommandData) == 0x000000, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::TriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, LocalEventTriggerList) == 0x000078, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::LocalEventTriggerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, ResizeArrayIndex) == 0x000088, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::ResizeArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, Temp_int_Loop_Num_Variable) == 0x00008C, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, Temp_bool_True_if_break_was_hit_Variable) == 0x000094, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Not_PreBool_ReturnValue) == 0x000095, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000A0, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, Temp_int_Loop_Num_Variable_1) == 0x0000AC, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_BooleanAND_ReturnValue) == 0x0000B1, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000B8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_GetClassDisplayName_ReturnValue) == 0x0000F8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_GetPrimaryAssetIdFromSoftClassReference_ReturnValue) == 0x000108, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_GetPrimaryAssetIdFromSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000128, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Conv_NameToString_ReturnValue) == 0x000138, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000148, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Array_Length_ReturnValue_1) == 0x000158, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000160, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Greater_IntInt_ReturnValue) == 0x000170, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000178, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000188, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000198, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001A8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Conv_StringToText_ReturnValue) == 0x0001B8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0001D0, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_GetClassDisplayName_ReturnValue_1) == 0x0001E0, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_GetClassDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_GetClassDisplayName_ReturnValue_2) == 0x0001F0, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_GetClassDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, Temp_int_Loop_Counter_Variable_1) == 0x000200, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Array_Length_ReturnValue_2) == 0x000204, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Less_IntInt_ReturnValue_1) == 0x00020C, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_BooleanAND_ReturnValue_1) == 0x00020D, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000210, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000220, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_GetClassDisplayName_ReturnValue_3) == 0x000228, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_GetClassDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000238, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_GetClassDisplayName_ReturnValue_4) == 0x000240, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_GetClassDisplayName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000250, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Add_IntInt_ReturnValue_1) == 0x000260, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000268, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000278, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000288, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000298, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0002A8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0002B8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0002C8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_15) == 0x0002D8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_16) == 0x0002E8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Concat_StrStr_ReturnValue_17) == 0x0002F8, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndListToUnderPriority, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000308, "Member 'BP_EventManager_C_ClearEventComanndListToUnderPriority::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EventStartBPCheck
// 0x0098 (0x0098 - 0x0000)
struct BP_EventManager_C_EventStartBPCheck final
{
public:
	struct FFEventTriggerCommandData              EventTriggerCommandData;                           // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartEvent;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3622[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProcessBrainFieldRemainingTimeCheck_result; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnyDead_Playing;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessEnpcBrainFieldTimeLimitEndCheck_IsStartEvent; // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Proccess_Brain_Field_Close_Check_IsStartEvent; // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessDimensionTangleCheck_IsStartEvent; // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessObstructActionNumOrTime_IsStartEvent; // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessTriggerPlayerAnimMontage_IsStartEvent; // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessEnemyNumCheck_IsStartEvent;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessTime_IsStartEvent;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessEndBrainTalk_IsStartEvent;        // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProccessEnemyAllDie_IsStartEvent;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EventStartBPCheck) == 0x000008, "Wrong alignment on BP_EventManager_C_EventStartBPCheck");
static_assert(sizeof(BP_EventManager_C_EventStartBPCheck) == 0x000098, "Wrong size on BP_EventManager_C_EventStartBPCheck");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, EventTriggerCommandData) == 0x000000, "Member 'BP_EventManager_C_EventStartBPCheck::EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, IsStartEvent) == 0x000078, "Member 'BP_EventManager_C_EventStartBPCheck::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_GetPlayerManager_PlayerManager) == 0x000080, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProcessBrainFieldRemainingTimeCheck_result) == 0x000088, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProcessBrainFieldRemainingTimeCheck_result' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_IsPlayingAnyDead_Playing) == 0x00008A, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_IsPlayingAnyDead_Playing' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProccessEnpcBrainFieldTimeLimitEndCheck_IsStartEvent) == 0x00008B, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProccessEnpcBrainFieldTimeLimitEndCheck_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_Proccess_Brain_Field_Close_Check_IsStartEvent) == 0x00008C, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_Proccess_Brain_Field_Close_Check_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProccessDimensionTangleCheck_IsStartEvent) == 0x00008D, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProccessDimensionTangleCheck_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProccessObstructActionNumOrTime_IsStartEvent) == 0x00008E, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProccessObstructActionNumOrTime_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProccessTriggerPlayerAnimMontage_IsStartEvent) == 0x00008F, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProccessTriggerPlayerAnimMontage_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProccessEnemyNumCheck_IsStartEvent) == 0x000090, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProccessEnemyNumCheck_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProccessTime_IsStartEvent) == 0x000091, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProccessTime_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProccessEndBrainTalk_IsStartEvent) == 0x000092, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProccessEndBrainTalk_IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, K2Node_SwitchEnum_CmpSuccess) == 0x000093, "Member 'BP_EventManager_C_EventStartBPCheck::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventStartBPCheck, CallFunc_ProccessEnemyAllDie_IsStartEvent) == 0x000094, "Member 'BP_EventManager_C_EventStartBPCheck::CallFunc_ProccessEnemyAllDie_IsStartEvent' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CheckEventCommandArray
// 0x00F8 (0x00F8 - 0x0000)
struct BP_EventManager_C_CheckEventCommandArray final
{
public:
	struct FFEventTriggerCommandData              LocalEventTriggerCommand;                          // 0x0000(0x0078)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalIsStartEvent;                                 // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3623[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3624[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3625[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3626[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutSceneEvent_IsCutSceneEvent;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayCutScene_OK;                       // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3627[0x1];                                     // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3628[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x00B0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3629[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventStartBPCheck_IsStartEvent;           // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CheckEventCommandArray) == 0x000008, "Wrong alignment on BP_EventManager_C_CheckEventCommandArray");
static_assert(sizeof(BP_EventManager_C_CheckEventCommandArray) == 0x0000F8, "Wrong size on BP_EventManager_C_CheckEventCommandArray");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, LocalEventTriggerCommand) == 0x000000, "Member 'BP_EventManager_C_CheckEventCommandArray::LocalEventTriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, LocalIsStartEvent) == 0x000078, "Member 'BP_EventManager_C_CheckEventCommandArray::LocalIsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, Temp_bool_True_if_break_was_hit_Variable) == 0x000079, "Member 'BP_EventManager_C_CheckEventCommandArray::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_EventManager_C_CheckEventCommandArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, Temp_int_Loop_Num_Variable) == 0x000084, "Member 'BP_EventManager_C_CheckEventCommandArray::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_EventManager_C_CheckEventCommandArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000090, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_IsCutSceneEvent_IsCutSceneEvent) == 0x0000A1, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_IsCutSceneEvent_IsCutSceneEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_CanPlayCutScene_OK) == 0x0000A2, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_CanPlayCutScene_OK' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A9, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D8, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F0, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_Contains_ReturnValue) == 0x0000F1, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_BooleanOR_ReturnValue) == 0x0000F2, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_BooleanOR_ReturnValue_1) == 0x0000F3, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F4, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventCommandArray, CallFunc_EventStartBPCheck_IsStartEvent) == 0x0000F5, "Member 'BP_EventManager_C_CheckEventCommandArray::CallFunc_EventStartBPCheck_IsStartEvent' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsValidEventCommandType
// 0x0170 (0x0170 - 0x0000)
struct BP_EventManager_C_IsValidEventCommandType final
{
public:
	EEventTriggerCheckType                        EventCommandType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckBrainTalkEvent;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ExclusionMakeEvent;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              EventTriggerCommandData;                           // 0x0018(0x0078)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEventTriggerCommandData              LocalEventTriggerCommandData;                      // 0x0090(0x0078)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidCommandType;                                // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362C[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362D[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362E[0x1];                                     // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362F[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0130(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsValidEventCommandType) == 0x000008, "Wrong alignment on BP_EventManager_C_IsValidEventCommandType");
static_assert(sizeof(BP_EventManager_C_IsValidEventCommandType) == 0x000170, "Wrong size on BP_EventManager_C_IsValidEventCommandType");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, EventCommandType) == 0x000000, "Member 'BP_EventManager_C_IsValidEventCommandType::EventCommandType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CheckBrainTalkEvent) == 0x000001, "Member 'BP_EventManager_C_IsValidEventCommandType::CheckBrainTalkEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, ExclusionMakeEvent) == 0x000008, "Member 'BP_EventManager_C_IsValidEventCommandType::ExclusionMakeEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, IsValid) == 0x000010, "Member 'BP_EventManager_C_IsValidEventCommandType::IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, EventTriggerCommandData) == 0x000018, "Member 'BP_EventManager_C_IsValidEventCommandType::EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, LocalEventTriggerCommandData) == 0x000090, "Member 'BP_EventManager_C_IsValidEventCommandType::LocalEventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, IsValidCommandType) == 0x000108, "Member 'BP_EventManager_C_IsValidEventCommandType::IsValidCommandType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, Temp_int_Array_Index_Variable) == 0x00010C, "Member 'BP_EventManager_C_IsValidEventCommandType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, Temp_int_Loop_Num_Variable) == 0x000110, "Member 'BP_EventManager_C_IsValidEventCommandType::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, Temp_int_Loop_Counter_Variable) == 0x000114, "Member 'BP_EventManager_C_IsValidEventCommandType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_IsValidClass_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_Less_IntInt_ReturnValue) == 0x000119, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, Temp_bool_True_if_break_was_hit_Variable) == 0x000120, "Member 'BP_EventManager_C_IsValidEventCommandType::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_BooleanAND_ReturnValue) == 0x000122, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_Array_Length_ReturnValue) == 0x000124, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000128, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000130, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000158, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000168, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_Contains_ReturnValue) == 0x000169, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandType, CallFunc_BooleanOR_ReturnValue) == 0x00016A, "Member 'BP_EventManager_C_IsValidEventCommandType::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CheckStartTagEnemyHpRateCheckEvent
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent final
{
public:
	class AActor*                                 BattleActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckOnly;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsStartEvent;                                      // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsStartBP;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3630[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              LocalEventCommand;                                 // 0x0010(0x0078)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3631[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3632[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3633[0x1];                                     // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3634[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3635[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHPPercent_Percent;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent");
static_assert(sizeof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent) == 0x0000D8, "Wrong size on BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, BattleActor) == 0x000000, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::BattleActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CheckOnly) == 0x000008, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CheckOnly' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, IsStartEvent) == 0x000009, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, IsStartBP) == 0x00000A, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::IsStartBP' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, LocalEventCommand) == 0x000010, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::LocalEventCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, Temp_int_Loop_Num_Variable) == 0x00008C, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_Array_Contains_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, Temp_bool_True_if_break_was_hit_Variable) == 0x0000A4, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_Not_PreBool_ReturnValue) == 0x0000A5, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_BooleanAND_ReturnValue) == 0x0000A6, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x0000B8, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_ActorHasTag_ReturnValue) == 0x0000C9, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_GetHPPercent_Percent) == 0x0000CC, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_GetHPPercent_Percent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_CheckStartTagEnemyHpRateCheckEvent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsCutSceneEventNative
// 0x0002 (0x0002 - 0x0000)
struct BP_EventManager_C_IsCutSceneEventNative final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutSceneEvent_IsCutSceneEvent;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsCutSceneEventNative) == 0x000001, "Wrong alignment on BP_EventManager_C_IsCutSceneEventNative");
static_assert(sizeof(BP_EventManager_C_IsCutSceneEventNative) == 0x000002, "Wrong size on BP_EventManager_C_IsCutSceneEventNative");
static_assert(offsetof(BP_EventManager_C_IsCutSceneEventNative, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsCutSceneEventNative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCutSceneEventNative, CallFunc_IsCutSceneEvent_IsCutSceneEvent) == 0x000001, "Member 'BP_EventManager_C_IsCutSceneEventNative::CallFunc_IsCutSceneEvent_IsCutSceneEvent' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdatePostProcessMaterialInternal
// 0x0148 (0x0148 - 0x0000)
struct BP_EventManager_C_UpdatePostProcessMaterialInternal final
{
public:
	class UPostProcessComponent*                  TargetPPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDynamic;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3636[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SubIndexList;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         SubIndex;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_1;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_2;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3637[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3638[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_3;    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_4;    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_5;    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_6;    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_7;    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3639[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_8;    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_9;    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_10;   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_11;   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_12;   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_13;   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_14;   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_15;   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_16;   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_17;   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363A[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_18;   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_19;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_20;   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_21;   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_22;   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_23;   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_24;   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_25;   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_26;   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_27;   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_28;   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_29;   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363B[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_4;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveDamagePostProcess_Active;         // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363C[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_30;   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_31;   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UpdatePostProcessMaterialInternal) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdatePostProcessMaterialInternal");
static_assert(sizeof(BP_EventManager_C_UpdatePostProcessMaterialInternal) == 0x000148, "Wrong size on BP_EventManager_C_UpdatePostProcessMaterialInternal");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, TargetPPC) == 0x000000, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::TargetPPC' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, IsDynamic) == 0x000008, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::IsDynamic' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, SubIndexList) == 0x000010, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::SubIndexList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, SubIndex) == 0x000020, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::SubIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_1) == 0x000028, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_2) == 0x00002C, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_SelectInt_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_SelectInt_ReturnValue_1) == 0x000048, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, K2Node_MakeArray_Array_1) == 0x000050, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_3) == 0x000060, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_4) == 0x000064, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_5) == 0x000068, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_FTrunc_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Clamp_ReturnValue) == 0x000074, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_6) == 0x000078, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, K2Node_MakeArray_Array_2) == 0x000080, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_7) == 0x000090, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000094, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_SelectInt_ReturnValue_2) == 0x000098, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_SelectInt_ReturnValue_3) == 0x00009C, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_8) == 0x0000A0, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_9) == 0x0000A4, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_10) == 0x0000A8, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_11) == 0x0000AC, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_12) == 0x0000B0, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_13) == 0x0000B4, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_14) == 0x0000B8, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_15) == 0x0000C0, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_16) == 0x0000CC, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_17) == 0x0000D0, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D4, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000D8, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0000DC, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_18) == 0x0000E0, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000E4, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_19) == 0x0000E8, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000EC, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_20) == 0x0000F0, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_21) == 0x0000F4, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000F8, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_22) == 0x0000FC, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_23) == 0x000100, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000104, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000108, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_24) == 0x00010C, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_25) == 0x000110, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_26) == 0x000114, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000118, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_27) == 0x00011C, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_28) == 0x000120, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_29) == 0x000124, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000128, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetPostProcessManager_Manager) == 0x000130, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_SelectInt_ReturnValue_4) == 0x000138, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_SelectInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_IsActiveDamagePostProcess_Active) == 0x00013C, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_IsActiveDamagePostProcess_Active' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_30) == 0x000140, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdatePostProcessMaterialInternal, CallFunc_GetScalarParameterValue_ReturnValue_31) == 0x000144, "Member 'BP_EventManager_C_UpdatePostProcessMaterialInternal::CallFunc_GetScalarParameterValue_ReturnValue_31' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.FinishedPostProcessSequencer
// 0x00F8 (0x00F8 - 0x0000)
struct BP_EventManager_C_FinishedPostProcessSequencer final
{
public:
	int32                                         LoopStartFrame;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         AlphaMovieList;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventPPAlphaMovie_C> K2Node_DynamicCast_AsBPI_Event_PPAlpha_Movie;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363E[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftClassPath                         CallFunc_MakeSoftClassPath_ReturnValue;            // 0x0048(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue; // 0x0060(0x0028)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3640[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ScrubToMarkedFrame_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3641[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime;           // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3642[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x00D4(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x00E4(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_FinishedPostProcessSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_FinishedPostProcessSequencer");
static_assert(sizeof(BP_EventManager_C_FinishedPostProcessSequencer) == 0x0000F8, "Wrong size on BP_EventManager_C_FinishedPostProcessSequencer");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, LoopStartFrame) == 0x000000, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::LoopStartFrame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, AlphaMovieList) == 0x000008, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::AlphaMovieList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, Temp_int_Variable) == 0x000018, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, K2Node_DynamicCast_AsBPI_Event_PPAlpha_Movie) == 0x000028, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::K2Node_DynamicCast_AsBPI_Event_PPAlpha_Movie' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_MakeSoftClassPath_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_MakeSoftClassPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_LoadSoftClass_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_LoadSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, K2Node_ClassDynamicCast_AsActor) == 0x000090, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, K2Node_ClassDynamicCast_bSuccess) == 0x000098, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_IsValidClass_ReturnValue) == 0x000099, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_ScrubToMarkedFrame_ReturnValue) == 0x0000BC, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_ScrubToMarkedFrame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_Greater_IntInt_ReturnValue) == 0x0000BD, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0000C0, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_GetMarkedFrameByLabel_MarkTime) == 0x0000C8, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_GetMarkedFrameByLabel_MarkTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_GetMarkedFrameByLabel_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_GetMarkedFrameByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_GetEndTime_ReturnValue) == 0x0000D4, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_BreakQualifiedFrameTime_Frame) == 0x0000E4, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x0000E8, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x0000F0, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishedPostProcessSequencer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_EventManager_C_FinishedPostProcessSequencer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnWaitInputFinishEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_OnWaitInputFinishEvent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnWaitInputFinishEvent) == 0x000001, "Wrong alignment on BP_EventManager_C_OnWaitInputFinishEvent");
static_assert(sizeof(BP_EventManager_C_OnWaitInputFinishEvent) == 0x000001, "Wrong size on BP_EventManager_C_OnWaitInputFinishEvent");
static_assert(offsetof(BP_EventManager_C_OnWaitInputFinishEvent, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_OnWaitInputFinishEvent::ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UnLoadPPM
// 0x0078 (0x0078 - 0x0000)
struct BP_EventManager_C_UnLoadPPM final
{
public:
	EEventPostProcessID                           EventPostProcessID;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3643[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMStatic_ReturnValue;           // 0x0008(0x0010)(ConstParm)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3644[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3645[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMDynamic_ReturnValue;          // 0x0030(0x0010)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3646[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3647[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UnLoadPPM) == 0x000008, "Wrong alignment on BP_EventManager_C_UnLoadPPM");
static_assert(sizeof(BP_EventManager_C_UnLoadPPM) == 0x000078, "Wrong size on BP_EventManager_C_UnLoadPPM");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, EventPostProcessID) == 0x000000, "Member 'BP_EventManager_C_UnLoadPPM::EventPostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_EventManager_C_UnLoadPPM::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_GetOrLoadPPMStatic_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_GetOrLoadPPMStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_GetOrLoadPPMDynamic_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_GetOrLoadPPMDynamic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Array_Length_ReturnValue_2) == 0x000044, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Loop_Counter_Variable_2) == 0x000054, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Loop_Num_Variable_1) == 0x000060, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Loop_Num_Variable_2) == 0x000064, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, CallFunc_Less_IntInt_ReturnValue_2) == 0x000069, "Member 'BP_EventManager_C_UnLoadPPM::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UnLoadPPM, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BP_EventManager_C_UnLoadPPM::Temp_int_Array_Index_Variable_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Private Get Dynamic Cut PPM Once
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once final
{
public:
	EEventPostProcessID                           EventPostProcessID;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Load;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3648[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PPM;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMDynamic_ReturnValue;          // 0x0010(0x0010)(ConstParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3649[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once) == 0x000008, "Wrong alignment on BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once");
static_assert(sizeof(BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once) == 0x000030, "Wrong size on BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once");
static_assert(offsetof(BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once, EventPostProcessID) == 0x000000, "Member 'BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once::EventPostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once, Load) == 0x000001, "Member 'BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once::Load' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once, PPM) == 0x000008, "Member 'BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once::PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once, CallFunc_GetOrLoadPPMDynamic_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once::CallFunc_GetOrLoadPPMDynamic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_Private_Get_Dynamic_Cut_PPM_Once::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateAddOrUpdateDynamicCutPPMValueIndex
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex final
{
public:
	class UPostProcessComponent*                  TargetPPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           PostProcessID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubIndex;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDynamic;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableMinusValue;                                  // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364B[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex");
static_assert(sizeof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex) == 0x000028, "Wrong size on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex, TargetPPC) == 0x000000, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex::TargetPPC' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex, PostProcessID) == 0x000008, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex::PostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex, Value) == 0x00000C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex::Value' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex, SubIndex) == 0x000010, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex::SubIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex, IsDynamic) == 0x000014, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex::IsDynamic' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex, EnableMinusValue) == 0x000015, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex::EnableMinusValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndex::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateAddOrUpdateDynamicCutPPMValueIndexList
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList final
{
public:
	class UPostProcessComponent*                  TargetPPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           PostProcessID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 SubIndex;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          IsDynamic;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableMunusValue;                                  // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364D[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            MIDs;                                              // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<float>                                 WeightList;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3650[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3651[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMStatic_ReturnValue;           // 0x0078(0x0010)(ConstParm)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3652[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3653[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMDynamic_ReturnValue;          // 0x00B0(0x0010)(ConstParm)
};
static_assert(alignof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList");
static_assert(sizeof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList) == 0x0000C0, "Wrong size on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, TargetPPC) == 0x000000, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::TargetPPC' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, PostProcessID) == 0x000008, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::PostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Value) == 0x00000C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Value' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, SubIndex) == 0x000010, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::SubIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, IsDynamic) == 0x000020, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::IsDynamic' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, EnableMunusValue) == 0x000021, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::EnableMunusValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, MIDs) == 0x000028, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::MIDs' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, WeightList) == 0x000038, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::WeightList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Enable) == 0x000048, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Enable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Temp_int_Loop_Num_Variable) == 0x00005C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Temp_float_Variable) == 0x000064, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000069, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Not_PreBool_ReturnValue) == 0x00006A, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_GetOrLoadPPMStatic_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_GetOrLoadPPMStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Temp_int_Loop_Num_Variable_1) == 0x000088, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Array_Length_ReturnValue_2) == 0x000090, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00009C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x0000A0, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList, CallFunc_GetOrLoadPPMDynamic_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueIndexList::CallFunc_GetOrLoadPPMDynamic_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateAddOrUpdateDynamicCutPPMValueALL
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL final
{
public:
	class UPostProcessComponent*                  TargetPPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           PostProcessID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3654[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDynamic;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableMinusValue;                                  // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3655[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            MIDs;                                              // 0x0018(0x0010)(Edit, BlueprintVisible)
	float                                         Weight;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3656[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3657[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3658[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMStatic_ReturnValue;           // 0x0048(0x0010)(ConstParm)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3659[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365A[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365B[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMDynamic_ReturnValue;          // 0x0080(0x0010)(ConstParm)
};
static_assert(alignof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL");
static_assert(sizeof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL) == 0x000090, "Wrong size on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, TargetPPC) == 0x000000, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::TargetPPC' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, PostProcessID) == 0x000008, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::PostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, Value) == 0x00000C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::Value' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, IsDynamic) == 0x000010, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::IsDynamic' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, EnableMinusValue) == 0x000011, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::EnableMinusValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, MIDs) == 0x000018, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::MIDs' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, Weight) == 0x000028, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::Weight' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, Enable) == 0x00002C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::Enable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_GetOrLoadPPMStatic_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_GetOrLoadPPMStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000068, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL, CallFunc_GetOrLoadPPMDynamic_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMValueALL::CallFunc_GetOrLoadPPMDynamic_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateAddOrUpdateDynamicCutPPMScalarValueIndex
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex final
{
public:
	class UPostProcessComponent*                  TargetPPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           PostProcessID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParamName;                                         // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubIndex;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDynamic;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableMinusValue;                                  // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365D[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Weight;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex");
static_assert(sizeof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex) == 0x000038, "Wrong size on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, TargetPPC) == 0x000000, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::TargetPPC' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, PostProcessID) == 0x000008, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::PostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, ParamName) == 0x00000C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::ParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, SubIndex) == 0x000014, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::SubIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, IsDynamic) == 0x000018, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::IsDynamic' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, EnableMinusValue) == 0x000019, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::EnableMinusValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, Weight) == 0x00001C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::Weight' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, Mid) == 0x000020, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::Mid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndex::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CreateEventPlAttachAsset
// 0x0200 (0x0200 - 0x0000)
struct BP_EventManager_C_CreateEventPlAttachAsset final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CaptureActorIndex;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365F[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_GetCaptureActor_CaptureActor;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCaptureActor_IsSuccess;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3660[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_static_pl_C*                        K2Node_DynamicCast_AsBP_Static_Pl;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3661[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3662[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0148(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEventPlAttachAssetData               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0150(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3663[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3664[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3665[0x2];                                     // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3666[0x6];                                     // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CreateEventPlAttachAsset) == 0x000010, "Wrong alignment on BP_EventManager_C_CreateEventPlAttachAsset");
static_assert(sizeof(BP_EventManager_C_CreateEventPlAttachAsset) == 0x000200, "Wrong size on BP_EventManager_C_CreateEventPlAttachAsset");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, RowName) == 0x000000, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::RowName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CaptureActorIndex) == 0x000008, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CaptureActorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, OffsetTransform) == 0x000010, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::OffsetTransform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_GetCaptureActor_CaptureActor) == 0x000090, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_GetCaptureActor_CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_GetCaptureActor_IsSuccess) == 0x000098, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_GetCaptureActor_IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_GetBP_static_pl_AsCharacter) == 0x0000A0, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, K2Node_DynamicCast_AsBP_Static_Pl) == 0x0000A8, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::K2Node_DynamicCast_AsBP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000B1, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000B4, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_GetAnimInstance_ReturnValue) == 0x000140, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, Temp_name_Variable) == 0x000148, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_GetDataTableRowFromName_OutRow) == 0x000150, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B0, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_Array_Add_ReturnValue) == 0x0001B4, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001B8, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x0001C0, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, K2Node_DynamicCast_AsAnim_Montage) == 0x0001C8, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, K2Node_DynamicCast_bSuccess_1) == 0x0001D0, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0001D1, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_Montage_Play_ReturnValue) == 0x0001D4, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_IsValidClass_ReturnValue) == 0x0001D8, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_IsValid_ReturnValue) == 0x0001D9, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, CallFunc_LoadSoftObject_ReturnValue_1) == 0x0001E0, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x0001E8, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CreateEventPlAttachAsset, K2Node_DynamicCast_bSuccess_2) == 0x0001F0, "Member 'BP_EventManager_C_CreateEventPlAttachAsset::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetCaptureActorVoiceCharaName
// 0x0088 (0x0088 - 0x0000)
struct BP_EventManager_C_GetCaptureActorVoiceCharaName final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 VoiceCharaName;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LocalSkeletalMeshCom;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LocalCharaID;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3667[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetVoiceCharaName_VoiceCharaName;         // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetCaptureActorVoiceCharaName) == 0x000008, "Wrong alignment on BP_EventManager_C_GetCaptureActorVoiceCharaName");
static_assert(sizeof(BP_EventManager_C_GetCaptureActorVoiceCharaName) == 0x000088, "Wrong size on BP_EventManager_C_GetCaptureActorVoiceCharaName");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, VoiceCharaName) == 0x000008, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::VoiceCharaName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, LocalSkeletalMeshCom) == 0x000018, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::LocalSkeletalMeshCom' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, LocalCharaID) == 0x000020, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::LocalCharaID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, CallFunc_LeftChop_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, CallFunc_Contains_ReturnValue) == 0x000051, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, CallFunc_GetObjectName_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, CallFunc_RightChop_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetCaptureActorVoiceCharaName, CallFunc_GetVoiceCharaName_VoiceCharaName) == 0x000078, "Member 'BP_EventManager_C_GetCaptureActorVoiceCharaName::CallFunc_GetVoiceCharaName_VoiceCharaName' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StopPostProcessSequencer
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_StopPostProcessSequencer final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3668[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StopPostProcessSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_StopPostProcessSequencer");
static_assert(sizeof(BP_EventManager_C_StopPostProcessSequencer) == 0x000018, "Wrong size on BP_EventManager_C_StopPostProcessSequencer");
static_assert(offsetof(BP_EventManager_C_StopPostProcessSequencer, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_StopPostProcessSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopPostProcessSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_StopPostProcessSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopPostProcessSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_EventManager_C_StopPostProcessSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopPostProcessSequencer, CallFunc_IsPlaying_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_StopPostProcessSequencer::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StopAddSpecialNodeAnimMontage
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_StopAddSpecialNodeAnimMontage final
{
public:
	class FString                                 DefaultPath;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3669[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SpecialStaticNodeActor_C> K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StopAddSpecialNodeAnimMontage) == 0x000008, "Wrong alignment on BP_EventManager_C_StopAddSpecialNodeAnimMontage");
static_assert(sizeof(BP_EventManager_C_StopAddSpecialNodeAnimMontage) == 0x000030, "Wrong size on BP_EventManager_C_StopAddSpecialNodeAnimMontage");
static_assert(offsetof(BP_EventManager_C_StopAddSpecialNodeAnimMontage, DefaultPath) == 0x000000, "Member 'BP_EventManager_C_StopAddSpecialNodeAnimMontage::DefaultPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopAddSpecialNodeAnimMontage, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_StopAddSpecialNodeAnimMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopAddSpecialNodeAnimMontage, K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor) == 0x000018, "Member 'BP_EventManager_C_StopAddSpecialNodeAnimMontage::K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopAddSpecialNodeAnimMontage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventManager_C_StopAddSpecialNodeAnimMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayAddSpecialNodeAnimMontage
// 0x0068 (0x0068 - 0x0000)
struct BP_EventManager_C_PlayAddSpecialNodeAnimMontage final
{
public:
	class FString                                 SpecialNodeAnimNamePath;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DefaultPath;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SpecialStaticNodeActor_C> K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SpecialStaticNodeActor_C*           K2Node_DynamicCast_AsBP_Special_Static_Node_Actor; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_co0300_C*                          K2Node_DynamicCast_AsABP_Co_0300;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage) == 0x000008, "Wrong alignment on BP_EventManager_C_PlayAddSpecialNodeAnimMontage");
static_assert(sizeof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage) == 0x000068, "Wrong size on BP_EventManager_C_PlayAddSpecialNodeAnimMontage");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, SpecialNodeAnimNamePath) == 0x000000, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::SpecialNodeAnimNamePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, DefaultPath) == 0x000010, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::DefaultPath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor) == 0x000028, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::K2Node_DynamicCast_AsBPI_Special_Static_Node_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, K2Node_DynamicCast_AsBP_Special_Static_Node_Actor) == 0x000040, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::K2Node_DynamicCast_AsBP_Special_Static_Node_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, K2Node_DynamicCast_AsABP_Co_0300) == 0x000058, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::K2Node_DynamicCast_AsABP_Co_0300' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAddSpecialNodeAnimMontage, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_EventManager_C_PlayAddSpecialNodeAnimMontage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnCameraCutChangeDynamic
// 0x0098 (0x0098 - 0x0000)
struct BP_EventManager_C_OnCameraCutChangeDynamic final
{
public:
	class UCameraComponent*                       Camea;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SkeletalMeshList;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StageParameterSettingVolumeManager_C* Settingmanager;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetBindingActors_GamePlayers;             // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ABP_MenuPlayerBase_C*>           CallFunc_GetBindingActors_Instances;               // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366D[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366E[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366F[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_1; // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_OnCameraCutChangeDynamic) == 0x000008, "Wrong alignment on BP_EventManager_C_OnCameraCutChangeDynamic");
static_assert(sizeof(BP_EventManager_C_OnCameraCutChangeDynamic) == 0x000098, "Wrong size on BP_EventManager_C_OnCameraCutChangeDynamic");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, Camea) == 0x000000, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::Camea' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, SkeletalMeshList) == 0x000008, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::SkeletalMeshList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, Actor) == 0x000018, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, Settingmanager) == 0x000020, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::Settingmanager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, CallFunc_GetBindingActors_GamePlayers) == 0x000030, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::CallFunc_GetBindingActors_GamePlayers' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, CallFunc_GetBindingActors_Instances) == 0x000040, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::CallFunc_GetBindingActors_Instances' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, K2Node_DynamicCast_AsEvent_Interface) == 0x000058, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnCameraCutChangeDynamic, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_1) == 0x000088, "Member 'BP_EventManager_C_OnCameraCutChangeDynamic::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupDynamicSpawnableActors
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EventManager_C_SetupDynamicSpawnableActors final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3670[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CelLookActors;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StageParameterSettingVolumeManager_C* Settingmanager;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3671[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3672[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3673[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3674[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_CanUseOptimizeSwitchMaterialPlayerActor_TargetMeshComp; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOptimizeMaterialCheckResultType              CallFunc_CanUseOptimizeSwitchMaterialPlayerActor_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCelLookMaterialActor_ReturnValue;      // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3675[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_OptimizeSwitchMaterial_C*          K2Node_DynamicCast_AsBPC_Optimize_Switch_Material; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3676[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3677[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3678[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StageParameterSettingVolumeManager_C* CallFunc_GetStageParameterSettingManager_SettingManager; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupDynamicSpawnableActors) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupDynamicSpawnableActors");
static_assert(sizeof(BP_EventManager_C_SetupDynamicSpawnableActors) == 0x0000D8, "Wrong size on BP_EventManager_C_SetupDynamicSpawnableActors");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Actors) == 0x000000, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Actors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, SkelMeshComp) == 0x000010, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Param_Index) == 0x000018, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CelLookActors) == 0x000020, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CelLookActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Actor) == 0x000030, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Settingmanager) == 0x000038, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Settingmanager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Loop_Num_Variable) == 0x000044, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Loop_Num_Variable_1) == 0x000048, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Array_Index_Variable_2) == 0x00005C, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Loop_Num_Variable_2) == 0x000060, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_CanUseOptimizeSwitchMaterialPlayerActor_TargetMeshComp) == 0x000080, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_CanUseOptimizeSwitchMaterialPlayerActor_TargetMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_CanUseOptimizeSwitchMaterialPlayerActor_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_CanUseOptimizeSwitchMaterialPlayerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_HasCelLookMaterialActor_ReturnValue) == 0x00008B, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_HasCelLookMaterialActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_AddActorComponent_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_AddActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, K2Node_DynamicCast_AsBPC_Optimize_Switch_Material) == 0x000098, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::K2Node_DynamicCast_AsBPC_Optimize_Switch_Material' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Variable) == 0x0000A8, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Array_Length_ReturnValue_2) == 0x0000AC, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B0, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, Temp_int_Loop_Counter_Variable_2) == 0x0000B4, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000BC, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_IsValid_ReturnValue_1) == 0x0000C1, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_GetStageParameterSettingManager_SettingManager) == 0x0000C8, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_GetStageParameterSettingManager_SettingManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_Array_Length_ReturnValue_3) == 0x0000D0, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupDynamicSpawnableActors, CallFunc_IsValid_ReturnValue_2) == 0x0000D4, "Member 'BP_EventManager_C_SetupDynamicSpawnableActors::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupStaticCapturePPMRedStringsSign
// 0x00A0 (0x00A0 - 0x0000)
struct BP_EventManager_C_SetupStaticCapturePPMRedStringsSign final
{
public:
	struct FEventPPMRedStringsSingParam           Param;                                             // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_1; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_2; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_3; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_4; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetupStaticCapturePPMRedStringsSign) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupStaticCapturePPMRedStringsSign");
static_assert(sizeof(BP_EventManager_C_SetupStaticCapturePPMRedStringsSign) == 0x0000A0, "Wrong size on BP_EventManager_C_SetupStaticCapturePPMRedStringsSign");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMRedStringsSign, Param) == 0x000000, "Member 'BP_EventManager_C_SetupStaticCapturePPMRedStringsSign::Param' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMRedStringsSign, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM) == 0x000078, "Member 'BP_EventManager_C_SetupStaticCapturePPMRedStringsSign::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMRedStringsSign, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_1) == 0x000080, "Member 'BP_EventManager_C_SetupStaticCapturePPMRedStringsSign::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMRedStringsSign, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_2) == 0x000088, "Member 'BP_EventManager_C_SetupStaticCapturePPMRedStringsSign::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMRedStringsSign, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_3) == 0x000090, "Member 'BP_EventManager_C_SetupStaticCapturePPMRedStringsSign::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupStaticCapturePPMRedStringsSign, CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_4) == 0x000098, "Member 'BP_EventManager_C_SetupStaticCapturePPMRedStringsSign::CallFunc_Private_Get_Static_Cature_PPM_Once_PPM_4' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetPPMRedStringsSignParameter
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EventManager_C_SetPPMRedStringsSignParameter final
{
public:
	struct FEventPPMRedStringsSingParam           Param;                                             // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bVertical;                                         // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3679[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               TapeDistortionMaterial;                            // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_1;   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_2;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_3;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_4;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_5;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetPPMRedStringsSignParameter) == 0x000008, "Wrong alignment on BP_EventManager_C_SetPPMRedStringsSignParameter");
static_assert(sizeof(BP_EventManager_C_SetPPMRedStringsSignParameter) == 0x0000B8, "Wrong size on BP_EventManager_C_SetPPMRedStringsSignParameter");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, Param) == 0x000000, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::Param' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, bVertical) == 0x000078, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::bVertical' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, TapeDistortionMaterial) == 0x000080, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::TapeDistortionMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM) == 0x000088, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_1) == 0x000090, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_2) == 0x000098, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_3) == 0x0000A0, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_4) == 0x0000A8, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPPMRedStringsSignParameter, CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_5) == 0x0000B0, "Member 'BP_EventManager_C_SetPPMRedStringsSignParameter::CallFunc_Private_Get_Dynamic_Cut_PPM_Once_PPM_5' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Private Set PPMRed Strings Sign Parameter Internal
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal final
{
public:
	struct FEventPPMRedStringsSingParam           Param;                                             // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class UMaterialInstanceDynamic*               PPMAcBeat;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMBearding;                                       // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMDotCraw;                                        // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMDropout;                                        // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMGhosting;                                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMStrobing;                                       // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMTapeDistortion;                                 // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMYIQManipulation;                                // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TargetMaterial;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal) == 0x000008, "Wrong alignment on BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal");
static_assert(sizeof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal) == 0x0000C8, "Wrong size on BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, Param) == 0x000000, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::Param' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMAcBeat) == 0x000078, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMAcBeat' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMBearding) == 0x000080, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMBearding' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMDotCraw) == 0x000088, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMDotCraw' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMDropout) == 0x000090, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMDropout' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMGhosting) == 0x000098, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMGhosting' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMStrobing) == 0x0000A0, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMStrobing' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMTapeDistortion) == 0x0000A8, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMTapeDistortion' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMYIQManipulation) == 0x0000B0, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMYIQManipulation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, TargetMaterial) == 0x0000B8, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::TargetMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, CallFunc_IsValid_ReturnValue_1) == 0x0000C1, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, CallFunc_IsValid_ReturnValue_2) == 0x0000C2, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, CallFunc_IsValid_ReturnValue_3) == 0x0000C3, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal, CallFunc_IsValid_ReturnValue_4) == 0x0000C4, "Member 'BP_EventManager_C_Private_Set_PPMRed_Strings_Sign_Parameter_Internal::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.DebugCheckCaptureRetry
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_DebugCheckCaptureRetry final
{
public:
	bool                                          Retry;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_DebugCheckCaptureRetry) == 0x000001, "Wrong alignment on BP_EventManager_C_DebugCheckCaptureRetry");
static_assert(sizeof(BP_EventManager_C_DebugCheckCaptureRetry) == 0x000001, "Wrong size on BP_EventManager_C_DebugCheckCaptureRetry");
static_assert(offsetof(BP_EventManager_C_DebugCheckCaptureRetry, Retry) == 0x000000, "Member 'BP_EventManager_C_DebugCheckCaptureRetry::Retry' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.DebugSetCaptureRetry
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_DebugSetCaptureRetry final
{
public:
	bool                                          Retry;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_DebugSetCaptureRetry) == 0x000001, "Wrong alignment on BP_EventManager_C_DebugSetCaptureRetry");
static_assert(sizeof(BP_EventManager_C_DebugSetCaptureRetry) == 0x000001, "Wrong size on BP_EventManager_C_DebugSetCaptureRetry");
static_assert(offsetof(BP_EventManager_C_DebugSetCaptureRetry, Retry) == 0x000000, "Member 'BP_EventManager_C_DebugSetCaptureRetry::Retry' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.DebugSetCaptureRetryOneSkip
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_DebugSetCaptureRetryOneSkip final
{
public:
	bool                                          OneSkip;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_DebugSetCaptureRetryOneSkip) == 0x000001, "Wrong alignment on BP_EventManager_C_DebugSetCaptureRetryOneSkip");
static_assert(sizeof(BP_EventManager_C_DebugSetCaptureRetryOneSkip) == 0x000001, "Wrong size on BP_EventManager_C_DebugSetCaptureRetryOneSkip");
static_assert(offsetof(BP_EventManager_C_DebugSetCaptureRetryOneSkip, OneSkip) == 0x000000, "Member 'BP_EventManager_C_DebugSetCaptureRetryOneSkip::OneSkip' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProccessDimensionTangleCheck
// 0x01C0 (0x01C0 - 0x0000)
struct BP_EventManager_C_ProccessDimensionTangleCheck final
{
public:
	struct FFEventTriggerCommandData              EventTriggerComandData;                            // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartEvent;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367A[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LocalDimensionTangleList;                          // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<struct FS_LoadedLevelInfo>             LLoadedLevelInfoArray;                             // 0x0090(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         LocalDimensionTangleNum;                           // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCheck;                                           // 0x00A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367B[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367C[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367D[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_367E[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367F[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetPsychicObjectListByLevelName_ReturnValue; // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3680[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3681[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0118(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectProcedure                       CallFunc_GetProcedurePhase_return;                 // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3682[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3683[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3684[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventStartup_IsEvent;                   // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3685[0x2];                                     // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProccessDimensionTangleCheck) == 0x000008, "Wrong alignment on BP_EventManager_C_ProccessDimensionTangleCheck");
static_assert(sizeof(BP_EventManager_C_ProccessDimensionTangleCheck) == 0x0001C0, "Wrong size on BP_EventManager_C_ProccessDimensionTangleCheck");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, EventTriggerComandData) == 0x000000, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::EventTriggerComandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, IsStartEvent) == 0x000078, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, LocalDimensionTangleList) == 0x000080, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::LocalDimensionTangleList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, LLoadedLevelInfoArray) == 0x000090, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::LLoadedLevelInfoArray' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, LocalDimensionTangleNum) == 0x0000A0, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::LocalDimensionTangleNum' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, IsCheck) == 0x0000A4, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::IsCheck' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, Temp_bool_True_if_break_was_hit_Variable) == 0x0000B8, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, Temp_int_Array_Index_Variable) == 0x0000BC, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, Temp_int_Variable) == 0x0000C4, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C8, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x0000D0, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D9, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_GetPsychicObjectListByLevelName_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_GetPsychicObjectListByLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F9, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Conv_NameToString_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, Temp_int_Array_Index_Variable_1) == 0x000110, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Array_Get_Item) == 0x000118, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Array_Get_Item_1) == 0x000160, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000168, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000171, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_BooleanAND_ReturnValue) == 0x000172, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_GetProcedurePhase_return) == 0x000173, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_GetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000174, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00017C, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000180, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Contains_ReturnValue) == 0x000190, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000191, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Array_Length_ReturnValue_2) == 0x000194, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Less_IntInt_ReturnValue_1) == 0x000198, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_GetBrainFieldManager_Manager) == 0x0001A0, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_BooleanAND_ReturnValue_2) == 0x0001A8, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_IsEventStartup_IsEvent) == 0x0001A9, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_IsEventStartup_IsEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x0001AA, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0001AB, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001AC, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_BooleanAND_ReturnValue_3) == 0x0001AD, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_GetLevelManager_LevelManager) == 0x0001B0, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_BooleanOR_ReturnValue) == 0x0001B8, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessDimensionTangleCheck, CallFunc_IsValid_ReturnValue_1) == 0x0001B9, "Member 'BP_EventManager_C_ProccessDimensionTangleCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventStreamPP
// 0x0070 (0x0070 - 0x0000)
struct BP_EventManager_C_SetEventStreamPP final
{
public:
	float                                         PerspectiveScaleLeft;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PerspectiveScaleRight;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VisibleLineArea;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissivePower;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3686[0xB];                                     // 0x0015(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventPPStream_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetEventStreamPP) == 0x000010, "Wrong alignment on BP_EventManager_C_SetEventStreamPP");
static_assert(sizeof(BP_EventManager_C_SetEventStreamPP) == 0x000070, "Wrong size on BP_EventManager_C_SetEventStreamPP");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, PerspectiveScaleLeft) == 0x000000, "Member 'BP_EventManager_C_SetEventStreamPP::PerspectiveScaleLeft' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, PerspectiveScaleRight) == 0x000004, "Member 'BP_EventManager_C_SetEventStreamPP::PerspectiveScaleRight' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, Rotate) == 0x000008, "Member 'BP_EventManager_C_SetEventStreamPP::Rotate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, VisibleLineArea) == 0x00000C, "Member 'BP_EventManager_C_SetEventStreamPP::VisibleLineArea' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, EmissivePower) == 0x000010, "Member 'BP_EventManager_C_SetEventStreamPP::EmissivePower' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, CallFunc_IsPlaying_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_SetEventStreamPP::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_SetEventStreamPP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_SetEventStreamPP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_SetEventStreamPP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventStreamPP, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_SetEventStreamPP::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.InitializeGeneralParticles
// 0x0100 (0x0100 - 0x0000)
struct BP_EventManager_C_InitializeGeneralParticles final
{
public:
	class ABP_SequencerParticle_C*                Particle;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3687[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3688[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SequencerParticle_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3689[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_368A[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SequencerParticle_C*                CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SequencerParticle_C*                CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_InitializeGeneralParticles) == 0x000010, "Wrong alignment on BP_EventManager_C_InitializeGeneralParticles");
static_assert(sizeof(BP_EventManager_C_InitializeGeneralParticles) == 0x000100, "Wrong size on BP_EventManager_C_InitializeGeneralParticles");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, Particle) == 0x000000, "Member 'BP_EventManager_C_InitializeGeneralParticles::Particle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EventManager_C_InitializeGeneralParticles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'BP_EventManager_C_InitializeGeneralParticles::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_EventManager_C_InitializeGeneralParticles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_MakeTransform_ReturnValue_1) == 0x000070, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000A0, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000A8, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_MakeTransform_ReturnValue_2) == 0x0000B0, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0000E0, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0000E8, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitializeGeneralParticles, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000F4, "Member 'BP_EventManager_C_InitializeGeneralParticles::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.RestartGeneralParticles
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_RestartGeneralParticles final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_368B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  LevelSequenceActor;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     BindingIDList;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ASequencerParticle*>             CallFunc_GetGeneralParticlesInternal_GeneralParticles; // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_RestartGeneralParticles) == 0x000008, "Wrong alignment on BP_EventManager_C_RestartGeneralParticles");
static_assert(sizeof(BP_EventManager_C_RestartGeneralParticles) == 0x000030, "Wrong size on BP_EventManager_C_RestartGeneralParticles");
static_assert(offsetof(BP_EventManager_C_RestartGeneralParticles, Handle) == 0x000000, "Member 'BP_EventManager_C_RestartGeneralParticles::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RestartGeneralParticles, LevelSequenceActor) == 0x000008, "Member 'BP_EventManager_C_RestartGeneralParticles::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RestartGeneralParticles, BindingIDList) == 0x000010, "Member 'BP_EventManager_C_RestartGeneralParticles::BindingIDList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RestartGeneralParticles, CallFunc_GetGeneralParticlesInternal_GeneralParticles) == 0x000020, "Member 'BP_EventManager_C_RestartGeneralParticles::CallFunc_GetGeneralParticlesInternal_GeneralParticles' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetGeneralParticlesHandle
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_GetGeneralParticlesHandle final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetHandle;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetGeneralParticlesHandle) == 0x000004, "Wrong alignment on BP_EventManager_C_GetGeneralParticlesHandle");
static_assert(sizeof(BP_EventManager_C_GetGeneralParticlesHandle) == 0x000010, "Wrong size on BP_EventManager_C_GetGeneralParticlesHandle");
static_assert(offsetof(BP_EventManager_C_GetGeneralParticlesHandle, Handle) == 0x000000, "Member 'BP_EventManager_C_GetGeneralParticlesHandle::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetGeneralParticlesHandle, RetHandle) == 0x000004, "Member 'BP_EventManager_C_GetGeneralParticlesHandle::RetHandle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetGeneralParticlesHandle, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_GetGeneralParticlesHandle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetGeneralParticlesHandle, CallFunc_Percent_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_GetGeneralParticlesHandle::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.BindingGeneralParticles
// 0x01A8 (0x01A8 - 0x0000)
struct BP_EventManager_C_BindingGeneralParticles final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_368C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  Param_Sequencer;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     BindingIDList;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_368D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASequencerParticle*>             CallFunc_GetGeneralParticlesInternal_GeneralParticles; // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASequencerParticle*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_SequencerParticle_C> K2Node_DynamicCast_AsBPI_Sequencer_Particle;       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_368E[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_368F[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00AC(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3690[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3691[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0130(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0180(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_BindingGeneralParticles) == 0x000008, "Wrong alignment on BP_EventManager_C_BindingGeneralParticles");
static_assert(sizeof(BP_EventManager_C_BindingGeneralParticles) == 0x0001A8, "Wrong size on BP_EventManager_C_BindingGeneralParticles");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, Handle) == 0x000000, "Member 'BP_EventManager_C_BindingGeneralParticles::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, Param_Sequencer) == 0x000008, "Member 'BP_EventManager_C_BindingGeneralParticles::Param_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, BindingIDList) == 0x000010, "Member 'BP_EventManager_C_BindingGeneralParticles::BindingIDList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_GetGeneralParticlesInternal_GeneralParticles) == 0x000028, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_GetGeneralParticlesInternal_GeneralParticles' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_EventManager_C_BindingGeneralParticles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_EventManager_C_BindingGeneralParticles::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, K2Node_DynamicCast_AsBPI_Sequencer_Particle) == 0x000088, "Member 'BP_EventManager_C_BindingGeneralParticles::K2Node_DynamicCast_AsBPI_Sequencer_Particle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_EventManager_C_BindingGeneralParticles::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, Temp_int_Loop_Num_Variable) == 0x00009C, "Member 'BP_EventManager_C_BindingGeneralParticles::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_EventManager_C_BindingGeneralParticles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, Temp_bool_Variable) == 0x0000AC, "Member 'BP_EventManager_C_BindingGeneralParticles::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BP_EventManager_C_BindingGeneralParticles::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_EventManager_C_BindingGeneralParticles::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Conv_TextToString_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Array_Length_ReturnValue_2) == 0x000128, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Greater_IntInt_ReturnValue) == 0x00012C, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, K2Node_MakeStruct_FormatArgumentData_2) == 0x000130, "Member 'BP_EventManager_C_BindingGeneralParticles::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, K2Node_MakeArray_Array_1) == 0x000170, "Member 'BP_EventManager_C_BindingGeneralParticles::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Format_ReturnValue_1) == 0x000180, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_BindingGeneralParticles, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000198, "Member 'BP_EventManager_C_BindingGeneralParticles::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetGeneralParticlesInternal
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_GetGeneralParticlesInternal final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3692[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASequencerParticle*>             GeneralParticles;                                  // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         RetHandle;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetGeneralParticlesInternal) == 0x000008, "Wrong alignment on BP_EventManager_C_GetGeneralParticlesInternal");
static_assert(sizeof(BP_EventManager_C_GetGeneralParticlesInternal) == 0x000020, "Wrong size on BP_EventManager_C_GetGeneralParticlesInternal");
static_assert(offsetof(BP_EventManager_C_GetGeneralParticlesInternal, Handle) == 0x000000, "Member 'BP_EventManager_C_GetGeneralParticlesInternal::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetGeneralParticlesInternal, GeneralParticles) == 0x000008, "Member 'BP_EventManager_C_GetGeneralParticlesInternal::GeneralParticles' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetGeneralParticlesInternal, RetHandle) == 0x000018, "Member 'BP_EventManager_C_GetGeneralParticlesInternal::RetHandle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetGeneralParticlesInternal, K2Node_SwitchInteger_CmpSuccess) == 0x00001C, "Member 'BP_EventManager_C_GetGeneralParticlesInternal::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StopHideGeneralParticles
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_StopHideGeneralParticles final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetHandle;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASequencerParticle*>             CallFunc_GetGeneralParticlesInternal_GeneralParticles; // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3693[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3694[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StopHideGeneralParticles) == 0x000008, "Wrong alignment on BP_EventManager_C_StopHideGeneralParticles");
static_assert(sizeof(BP_EventManager_C_StopHideGeneralParticles) == 0x000038, "Wrong size on BP_EventManager_C_StopHideGeneralParticles");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, Handle) == 0x000000, "Member 'BP_EventManager_C_StopHideGeneralParticles::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, RetHandle) == 0x000004, "Member 'BP_EventManager_C_StopHideGeneralParticles::RetHandle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, CallFunc_GetGeneralParticlesInternal_GeneralParticles) == 0x000008, "Member 'BP_EventManager_C_StopHideGeneralParticles::CallFunc_GetGeneralParticlesInternal_GeneralParticles' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EventManager_C_StopHideGeneralParticles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_StopHideGeneralParticles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_EventManager_C_StopHideGeneralParticles::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_StopHideGeneralParticles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_EventManager_C_StopHideGeneralParticles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_StopHideGeneralParticles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StopHideGeneralParticles, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_StopHideGeneralParticles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearGeneralParticles
// 0x0050 (0x0050 - 0x0000)
struct BP_EventManager_C_ClearGeneralParticles final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetHandle;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3695[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASequencerParticle*>             CallFunc_GetGeneralParticlesInternal_GeneralParticles; // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3696[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASequencerParticle*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SequencerParticle_C> K2Node_DynamicCast_AsBPI_Sequencer_Particle;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3697[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ClearGeneralParticles) == 0x000008, "Wrong alignment on BP_EventManager_C_ClearGeneralParticles");
static_assert(sizeof(BP_EventManager_C_ClearGeneralParticles) == 0x000050, "Wrong size on BP_EventManager_C_ClearGeneralParticles");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, Handle) == 0x000000, "Member 'BP_EventManager_C_ClearGeneralParticles::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, RetHandle) == 0x000004, "Member 'BP_EventManager_C_ClearGeneralParticles::RetHandle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, Temp_int_Variable) == 0x000008, "Member 'BP_EventManager_C_ClearGeneralParticles::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, CallFunc_GetGeneralParticlesInternal_GeneralParticles) == 0x000010, "Member 'BP_EventManager_C_ClearGeneralParticles::CallFunc_GetGeneralParticlesInternal_GeneralParticles' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_ClearGeneralParticles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_ClearGeneralParticles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, K2Node_DynamicCast_AsBPI_Sequencer_Particle) == 0x000030, "Member 'BP_EventManager_C_ClearGeneralParticles::K2Node_DynamicCast_AsBPI_Sequencer_Particle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventManager_C_ClearGeneralParticles::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_ClearGeneralParticles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_ClearGeneralParticles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearGeneralParticles, Temp_bool_Variable) == 0x000049, "Member 'BP_EventManager_C_ClearGeneralParticles::Temp_bool_Variable' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsGeneralParticlesActive
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_IsGeneralParticlesActive final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3698[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetHandle;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_IsGeneralParticlesActive) == 0x000004, "Wrong alignment on BP_EventManager_C_IsGeneralParticlesActive");
static_assert(sizeof(BP_EventManager_C_IsGeneralParticlesActive) == 0x00000C, "Wrong size on BP_EventManager_C_IsGeneralParticlesActive");
static_assert(offsetof(BP_EventManager_C_IsGeneralParticlesActive, Handle) == 0x000000, "Member 'BP_EventManager_C_IsGeneralParticlesActive::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsGeneralParticlesActive, Active) == 0x000004, "Member 'BP_EventManager_C_IsGeneralParticlesActive::Active' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsGeneralParticlesActive, RetHandle) == 0x000008, "Member 'BP_EventManager_C_IsGeneralParticlesActive::RetHandle' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.FinishPostProcessSeqLoop
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_FinishPostProcessSeqLoop final
{
public:
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_JumpToMarkedFrame_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3699[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_GetCurrentTime_ReturnValue;               // 0x0014(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime;           // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369A[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x0030(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_FinishPostProcessSeqLoop) == 0x000008, "Wrong alignment on BP_EventManager_C_FinishPostProcessSeqLoop");
static_assert(sizeof(BP_EventManager_C_FinishPostProcessSeqLoop) == 0x000048, "Wrong size on BP_EventManager_C_FinishPostProcessSeqLoop");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_GetSequencePlayer_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000008, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_JumpToMarkedFrame_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_JumpToMarkedFrame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_GetCurrentTime_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_GetCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_GetMarkedFrameByLabel_MarkTime) == 0x000024, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_GetMarkedFrameByLabel_MarkTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_GetMarkedFrameByLabel_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_GetMarkedFrameByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_BreakQualifiedFrameTime_Frame) == 0x000030, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x000034, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x00003C, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_FinishPostProcessSeqLoop, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_FinishPostProcessSeqLoop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Setup Event Prestream Textures
// 0x0128 (0x0128 - 0x0000)
struct BP_EventManager_C_Setup_Event_Prestream_Textures final
{
public:
	class AActor*                                 EventActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePrestream;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EventName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResourceMipPrestreamEventTable        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0038)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue_1;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue_2;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue_3;                 // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369E[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResourceManager_C*                  CallFunc_GetResourceManager_ResourceManager;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369F[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Setup_Event_Prestream_Textures) == 0x000008, "Wrong alignment on BP_EventManager_C_Setup_Event_Prestream_Textures");
static_assert(sizeof(BP_EventManager_C_Setup_Event_Prestream_Textures) == 0x000128, "Wrong size on BP_EventManager_C_Setup_Event_Prestream_Textures");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, EventActor) == 0x000000, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::EventActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, UsePrestream) == 0x000008, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::UsePrestream' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, EventName) == 0x000010, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::EventName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_StartsWith_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_Conv_StringToName_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_StartsWith_ReturnValue_1) == 0x000069, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_StartsWith_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_StartsWith_ReturnValue_2) == 0x00006A, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_StartsWith_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_StartsWith_ReturnValue_3) == 0x00006B, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_StartsWith_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_GetResourceManager_ResourceManager) == 0x000070, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_GetResourceManager_ResourceManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_GetObjectName_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_Mid_ReturnValue) == 0x000110, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Setup_Event_Prestream_Textures, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'BP_EventManager_C_Setup_Event_Prestream_Textures::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.DebugSetPrestreamTextures
// 0x0002 (0x0002 - 0x0000)
struct BP_EventManager_C_DebugSetPrestreamTextures final
{
public:
	bool                                          UsePrestream;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_DebugSetPrestreamTextures) == 0x000001, "Wrong alignment on BP_EventManager_C_DebugSetPrestreamTextures");
static_assert(sizeof(BP_EventManager_C_DebugSetPrestreamTextures) == 0x000002, "Wrong size on BP_EventManager_C_DebugSetPrestreamTextures");
static_assert(offsetof(BP_EventManager_C_DebugSetPrestreamTextures, UsePrestream) == 0x000000, "Member 'BP_EventManager_C_DebugSetPrestreamTextures::UsePrestream' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DebugSetPrestreamTextures, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_EventManager_C_DebugSetPrestreamTextures::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Reset Event Prestream Textures
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_Reset_Event_Prestream_Textures final
{
public:
	class ABP_ResourceManager_C*                  CallFunc_GetResourceManager_ResourceManager;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Reset_Event_Prestream_Textures) == 0x000008, "Wrong alignment on BP_EventManager_C_Reset_Event_Prestream_Textures");
static_assert(sizeof(BP_EventManager_C_Reset_Event_Prestream_Textures) == 0x000010, "Wrong size on BP_EventManager_C_Reset_Event_Prestream_Textures");
static_assert(offsetof(BP_EventManager_C_Reset_Event_Prestream_Textures, CallFunc_GetResourceManager_ResourceManager) == 0x000000, "Member 'BP_EventManager_C_Reset_Event_Prestream_Textures::CallFunc_GetResourceManager_ResourceManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Reset_Event_Prestream_Textures, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_Reset_Event_Prestream_Textures::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsCurrentZeroEP
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_IsCurrentZeroEP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          IsZeroEPFlag;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsZeroProgress;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A0[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue_1;                        // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsCurrentZeroEP) == 0x000008, "Wrong alignment on BP_EventManager_C_IsCurrentZeroEP");
static_assert(sizeof(BP_EventManager_C_IsCurrentZeroEP) == 0x000040, "Wrong size on BP_EventManager_C_IsCurrentZeroEP");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsCurrentZeroEP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, IsZeroEPFlag) == 0x000001, "Member 'BP_EventManager_C_IsCurrentZeroEP::IsZeroEPFlag' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, IsZeroProgress) == 0x000002, "Member 'BP_EventManager_C_IsCurrentZeroEP::IsZeroProgress' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsCurrentZeroEP::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, CallFunc_Mid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_IsCurrentZeroEP::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, CallFunc_Mid_ReturnValue_1) == 0x000028, "Member 'BP_EventManager_C_IsCurrentZeroEP::CallFunc_Mid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_IsCurrentZeroEP::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000039, "Member 'BP_EventManager_C_IsCurrentZeroEP::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentZeroEP, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_EventManager_C_IsCurrentZeroEP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsWireVisibleOffEvent
// 0x0007 (0x0007 - 0x0000)
struct BP_EventManager_C_IsWireVisibleOffEvent final
{
public:
	bool                                          IsOffWireEvent;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsZeroEP;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentZeroEP_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsWireVisibleOffEvent) == 0x000001, "Wrong alignment on BP_EventManager_C_IsWireVisibleOffEvent");
static_assert(sizeof(BP_EventManager_C_IsWireVisibleOffEvent) == 0x000007, "Wrong size on BP_EventManager_C_IsWireVisibleOffEvent");
static_assert(offsetof(BP_EventManager_C_IsWireVisibleOffEvent, IsOffWireEvent) == 0x000000, "Member 'BP_EventManager_C_IsWireVisibleOffEvent::IsOffWireEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWireVisibleOffEvent, IsZeroEP) == 0x000001, "Member 'BP_EventManager_C_IsWireVisibleOffEvent::IsZeroEP' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWireVisibleOffEvent, CallFunc_IsCurrentZeroEP_ReturnValue) == 0x000002, "Member 'BP_EventManager_C_IsWireVisibleOffEvent::CallFunc_IsCurrentZeroEP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWireVisibleOffEvent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000003, "Member 'BP_EventManager_C_IsWireVisibleOffEvent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWireVisibleOffEvent, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000004, "Member 'BP_EventManager_C_IsWireVisibleOffEvent::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWireVisibleOffEvent, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_EventManager_C_IsWireVisibleOffEvent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWireVisibleOffEvent, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'BP_EventManager_C_IsWireVisibleOffEvent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Proccess Brain Field Close Check
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EventManager_C_Proccess_Brain_Field_Close_Check final
{
public:
	struct FFEventTriggerCommandData              EventTriggerComandData;                            // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartEvent;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A1[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LocalDimensionTangleList;                          // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<struct FS_LoadedLevelInfo>             LLoadedLevelInfoArray;                             // 0x0090(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         LocalDimensionTangleNum;                           // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCheck;                                           // 0x00A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A2[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Proccess_Brain_Field_Close_Check) == 0x000008, "Wrong alignment on BP_EventManager_C_Proccess_Brain_Field_Close_Check");
static_assert(sizeof(BP_EventManager_C_Proccess_Brain_Field_Close_Check) == 0x0000B8, "Wrong size on BP_EventManager_C_Proccess_Brain_Field_Close_Check");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, EventTriggerComandData) == 0x000000, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::EventTriggerComandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, IsStartEvent) == 0x000078, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, LocalDimensionTangleList) == 0x000080, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::LocalDimensionTangleList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, LLoadedLevelInfoArray) == 0x000090, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::LLoadedLevelInfoArray' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, LocalDimensionTangleNum) == 0x0000A0, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::LocalDimensionTangleNum' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, IsCheck) == 0x0000A4, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::IsCheck' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, CallFunc_GetBrainFieldManager_Manager) == 0x0000A8, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x0000B0, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Proccess_Brain_Field_Close_Check, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'BP_EventManager_C_Proccess_Brain_Field_Close_Check::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Public Set PPMRed Strings Sign Parameter Internal
// 0x0088 (0x0088 - 0x0000)
struct BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal final
{
public:
	struct FEventPPMRedStringsSingParam           Param;                                             // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UMaterialInstanceDynamic*               PPMTapeDistortion;                                 // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMYIQManipulation;                                // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal) == 0x000008, "Wrong alignment on BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal");
static_assert(sizeof(BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal) == 0x000088, "Wrong size on BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal");
static_assert(offsetof(BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal, Param) == 0x000000, "Member 'BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal::Param' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMTapeDistortion) == 0x000078, "Member 'BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMTapeDistortion' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal, PPMYIQManipulation) == 0x000080, "Member 'BP_EventManager_C_Public_Set_PPMRed_Strings_Sign_Parameter_Internal::PPMYIQManipulation' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartPadVibration
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_StartPadVibration final
{
public:
	class UForceFeedbackEffect*                   VibrationParameterAsset;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A3[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopTime;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StartPadVibration) == 0x000008, "Wrong alignment on BP_EventManager_C_StartPadVibration");
static_assert(sizeof(BP_EventManager_C_StartPadVibration) == 0x000038, "Wrong size on BP_EventManager_C_StartPadVibration");
static_assert(offsetof(BP_EventManager_C_StartPadVibration, VibrationParameterAsset) == 0x000000, "Member 'BP_EventManager_C_StartPadVibration::VibrationParameterAsset' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPadVibration, IsLoop) == 0x000008, "Member 'BP_EventManager_C_StartPadVibration::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPadVibration, LoopTime) == 0x00000C, "Member 'BP_EventManager_C_StartPadVibration::LoopTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPadVibration, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_EventManager_C_StartPadVibration::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPadVibration, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_StartPadVibration::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPadVibration, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_StartPadVibration::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartPadVibration, CallFunc_GetGameSystemManager_Manager) == 0x000030, "Member 'BP_EventManager_C_StartPadVibration::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StopPadVibration
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_StopPadVibration final
{
public:
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StopPadVibration) == 0x000008, "Wrong alignment on BP_EventManager_C_StopPadVibration");
static_assert(sizeof(BP_EventManager_C_StopPadVibration) == 0x000008, "Wrong size on BP_EventManager_C_StopPadVibration");
static_assert(offsetof(BP_EventManager_C_StopPadVibration, CallFunc_GetGameSystemManager_Manager) == 0x000000, "Member 'BP_EventManager_C_StopPadVibration::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartCutsceneOptimize
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_StartCutsceneOptimize final
{
public:
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A5[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A7[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartCutsceneOptimize) == 0x000004, "Wrong alignment on BP_EventManager_C_StartCutsceneOptimize");
static_assert(sizeof(BP_EventManager_C_StartCutsceneOptimize) == 0x000038, "Wrong size on BP_EventManager_C_StartCutsceneOptimize");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, Temp_int_Loop_Num_Variable) == 0x000000, "Member 'BP_EventManager_C_StartCutsceneOptimize::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventManager_C_StartCutsceneOptimize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_StartCutsceneOptimize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventManager_C_StartCutsceneOptimize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_EventManager_C_StartCutsceneOptimize::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_StartCutsceneOptimize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_EventManager_C_StartCutsceneOptimize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, Temp_int_Loop_Num_Variable_1) == 0x00001C, "Member 'BP_EventManager_C_StartCutsceneOptimize::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, CallFunc_Less_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_StartCutsceneOptimize::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_EventManager_C_StartCutsceneOptimize::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_StartCutsceneOptimize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_StartCutsceneOptimize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_StartCutsceneOptimize::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCutsceneOptimize, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_EventManager_C_StartCutsceneOptimize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndCutsceneOptimize
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_EndCutsceneOptimize final
{
public:
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A8[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36AA[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndCutsceneOptimize) == 0x000004, "Wrong alignment on BP_EventManager_C_EndCutsceneOptimize");
static_assert(sizeof(BP_EventManager_C_EndCutsceneOptimize) == 0x000038, "Wrong size on BP_EventManager_C_EndCutsceneOptimize");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, Temp_int_Loop_Num_Variable) == 0x000000, "Member 'BP_EventManager_C_EndCutsceneOptimize::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventManager_C_EndCutsceneOptimize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_EndCutsceneOptimize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventManager_C_EndCutsceneOptimize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_EventManager_C_EndCutsceneOptimize::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_EndCutsceneOptimize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_EventManager_C_EndCutsceneOptimize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, Temp_int_Loop_Num_Variable_1) == 0x00001C, "Member 'BP_EventManager_C_EndCutsceneOptimize::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, CallFunc_Less_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_EndCutsceneOptimize::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_EventManager_C_EndCutsceneOptimize::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_EndCutsceneOptimize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_EndCutsceneOptimize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_EndCutsceneOptimize::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneOptimize, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_EventManager_C_EndCutsceneOptimize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.isEndPostProcessSequencer
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_IsEndPostProcessSequencer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36AB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsEndPostProcessSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_IsEndPostProcessSequencer");
static_assert(sizeof(BP_EventManager_C_IsEndPostProcessSequencer) == 0x000018, "Wrong size on BP_EventManager_C_IsEndPostProcessSequencer");
static_assert(offsetof(BP_EventManager_C_IsEndPostProcessSequencer, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsEndPostProcessSequencer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPostProcessSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsEndPostProcessSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPostProcessSequencer, CallFunc_IsPlaying_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_IsEndPostProcessSequencer::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPostProcessSequencer, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_IsEndPostProcessSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPostProcessSequencer, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_EventManager_C_IsEndPostProcessSequencer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPostProcessSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000013, "Member 'BP_EventManager_C_IsEndPostProcessSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupOptimizeMaterialStaticFace
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SetupOptimizeMaterialStaticFace final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOptimizeMaterialCheckResultType              CallFunc_CanUseOptimizeSwitchMaterialPlayerComp_ReturnValue; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetupOptimizeMaterialStaticFace) == 0x000008, "Wrong alignment on BP_EventManager_C_SetupOptimizeMaterialStaticFace");
static_assert(sizeof(BP_EventManager_C_SetupOptimizeMaterialStaticFace) == 0x000010, "Wrong size on BP_EventManager_C_SetupOptimizeMaterialStaticFace");
static_assert(offsetof(BP_EventManager_C_SetupOptimizeMaterialStaticFace, SkelMeshComp) == 0x000000, "Member 'BP_EventManager_C_SetupOptimizeMaterialStaticFace::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupOptimizeMaterialStaticFace, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SetupOptimizeMaterialStaticFace::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupOptimizeMaterialStaticFace, CallFunc_CanUseOptimizeSwitchMaterialPlayerComp_ReturnValue) == 0x000009, "Member 'BP_EventManager_C_SetupOptimizeMaterialStaticFace::CallFunc_CanUseOptimizeSwitchMaterialPlayerComp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupOptimizeMaterialStaticFace, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'BP_EventManager_C_SetupOptimizeMaterialStaticFace::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupOptimizeMaterialStaticFace, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'BP_EventManager_C_SetupOptimizeMaterialStaticFace::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.InitCapturePPM
// 0x0290 (0x0290 - 0x0000)
struct BP_EventManager_C_InitCapturePPM final
{
public:
	float                                         ResetParamValue;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ResetParamName;                                    // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36AC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInterface>> AssetObjectList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      AssetObject;                                       // 0x0020(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_2;                          // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_3;                          // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_4;                          // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_5;                          // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_6;                          // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_7;                          // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_8;                          // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_9;                          // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_10;                         // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_11;                         // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_12;                         // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_13;                         // 0x0118(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_14;                         // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_15;                         // 0x0138(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_16;                         // 0x0148(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_17;                         // 0x0158(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_18;                         // 0x0168(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_19;                         // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_20;                         // 0x0188(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_21;                         // 0x0198(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_22;                         // 0x01A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_23;                         // 0x01B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_24;                         // 0x01C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_25;                         // 0x01D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_26;                         // 0x01E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_27;                         // 0x01F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36AD[0x2];                                     // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36AE[0x1];                                     // 0x021F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_28;                         // 0x0220(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_29;                         // 0x0230(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_30;                         // 0x0240(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_31;                         // 0x0250(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36AF[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_32;                         // 0x0268(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B0[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeArray_Array_33;                         // 0x0280(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_InitCapturePPM) == 0x000008, "Wrong alignment on BP_EventManager_C_InitCapturePPM");
static_assert(sizeof(BP_EventManager_C_InitCapturePPM) == 0x000290, "Wrong size on BP_EventManager_C_InitCapturePPM");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, ResetParamValue) == 0x000000, "Member 'BP_EventManager_C_InitCapturePPM::ResetParamValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, ResetParamName) == 0x000004, "Member 'BP_EventManager_C_InitCapturePPM::ResetParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, AssetObjectList) == 0x000010, "Member 'BP_EventManager_C_InitCapturePPM::AssetObjectList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, AssetObject) == 0x000020, "Member 'BP_EventManager_C_InitCapturePPM::AssetObject' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_1) == 0x000058, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_2) == 0x000068, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_3) == 0x000078, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_4) == 0x000088, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_5) == 0x000098, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_6) == 0x0000A8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_7) == 0x0000B8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_8) == 0x0000C8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_9) == 0x0000D8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_10) == 0x0000E8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_11) == 0x0000F8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_12) == 0x000108, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_12' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_13) == 0x000118, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_13' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_14) == 0x000128, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_14' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_15) == 0x000138, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_15' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_16) == 0x000148, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_16' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_17) == 0x000158, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_17' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_18) == 0x000168, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_18' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_19) == 0x000178, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_19' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_20) == 0x000188, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_20' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_21) == 0x000198, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_21' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_22) == 0x0001A8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_22' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_23) == 0x0001B8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_23' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_24) == 0x0001C8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_24' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_25) == 0x0001D8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_25' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_26) == 0x0001E8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_26' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_27) == 0x0001F8, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_27' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, Temp_int_Variable) == 0x000208, "Member 'BP_EventManager_C_InitCapturePPM::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, CallFunc_Add_IntInt_ReturnValue) == 0x00020C, "Member 'BP_EventManager_C_InitCapturePPM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, CallFunc_Conv_IntToByte_ReturnValue) == 0x000210, "Member 'BP_EventManager_C_InitCapturePPM::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000211, "Member 'BP_EventManager_C_InitCapturePPM::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000214, "Member 'BP_EventManager_C_InitCapturePPM::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, Temp_int_Variable_1) == 0x000218, "Member 'BP_EventManager_C_InitCapturePPM::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00021C, "Member 'BP_EventManager_C_InitCapturePPM::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, CallFunc_GetValidValue_ReturnValue) == 0x00021D, "Member 'BP_EventManager_C_InitCapturePPM::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_SwitchEnum_CmpSuccess) == 0x00021E, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_28) == 0x000220, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_28' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_29) == 0x000230, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_29' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_30) == 0x000240, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_30' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_31) == 0x000250, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_31' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, CallFunc_MakeLiteralInt_ReturnValue) == 0x000260, "Member 'BP_EventManager_C_InitCapturePPM::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_32) == 0x000268, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_32' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, CallFunc_Less_IntInt_ReturnValue) == 0x000278, "Member 'BP_EventManager_C_InitCapturePPM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitCapturePPM, K2Node_MakeArray_Array_33) == 0x000280, "Member 'BP_EventManager_C_InitCapturePPM::K2Node_MakeArray_Array_33' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsLoadPPM
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_IsLoadPPM final
{
public:
	EEventPostProcessID                           EventPostProcessID;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loaded;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B1[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMStatic_ReturnValue;           // 0x0008(0x0010)(ConstParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsLoadPPM) == 0x000008, "Wrong alignment on BP_EventManager_C_IsLoadPPM");
static_assert(sizeof(BP_EventManager_C_IsLoadPPM) == 0x000030, "Wrong size on BP_EventManager_C_IsLoadPPM");
static_assert(offsetof(BP_EventManager_C_IsLoadPPM, EventPostProcessID) == 0x000000, "Member 'BP_EventManager_C_IsLoadPPM::EventPostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadPPM, Loaded) == 0x000001, "Member 'BP_EventManager_C_IsLoadPPM::Loaded' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadPPM, CallFunc_GetOrLoadPPMStatic_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsLoadPPM::CallFunc_GetOrLoadPPMStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadPPM, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_IsLoadPPM::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadPPM, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventManager_C_IsLoadPPM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadPPM, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_IsLoadPPM::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList final
{
public:
	class UPostProcessComponent*                  TargetPPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           PostProcessID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36B3[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParamName;                                         // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36B4[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SubIndex;                                          // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          IsDynamic;                                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableMinusValue;                                  // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enable;                                            // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B5[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfMID                            MIDs;                                              // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<float>                                 WeightList;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMStatic_ReturnValue;           // 0x0060(0x0010)(ConstParm)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMDynamic_ReturnValue;          // 0x0070(0x0010)(ConstParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B6[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36B7[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B8[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B9[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BA[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList");
static_assert(sizeof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList) == 0x0000E0, "Wrong size on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, TargetPPC) == 0x000000, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::TargetPPC' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, PostProcessID) == 0x000008, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::PostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, ParamName) == 0x00000C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::ParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, SubIndex) == 0x000018, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::SubIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, IsDynamic) == 0x000028, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::IsDynamic' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, EnableMinusValue) == 0x000029, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::EnableMinusValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Enable) == 0x00002A, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Enable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, MIDs) == 0x000030, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::MIDs' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, WeightList) == 0x000040, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::WeightList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Mid) == 0x000050, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Mid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_GetOrLoadPPMStatic_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_GetOrLoadPPMStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_GetOrLoadPPMDynamic_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_GetOrLoadPPMDynamic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Temp_int_Loop_Num_Variable) == 0x000084, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Temp_float_Variable) == 0x000090, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Temp_int_Loop_Num_Variable_1) == 0x0000AC, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000B8, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B9, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x0000C8, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList, CallFunc_Not_PreBool_ReturnValue) == 0x0000D9, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueIndexList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateAddOrUpdateDynamicCutPPMScalarValueALL
// 0x0078 (0x0078 - 0x0000)
struct BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL final
{
public:
	class UPostProcessComponent*                  TargetPPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPostProcessID                           PostProcessID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36BB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParamName;                                         // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfMID                            CallFunc_GetOrLoadPPMDynamic_ReturnValue;          // 0x0020(0x0010)(ConstParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36BC[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BD[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BE[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36BF[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C0[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL) == 0x000008, "Wrong alignment on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL");
static_assert(sizeof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL) == 0x000078, "Wrong size on BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, TargetPPC) == 0x000000, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::TargetPPC' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, PostProcessID) == 0x000008, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::PostProcessID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, ParamName) == 0x00000C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::ParamName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, Weight) == 0x000014, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::Weight' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, Mid) == 0x000018, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::Mid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_GetOrLoadPPMDynamic_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_GetOrLoadPPMDynamic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000060, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL, CallFunc_SelectFloat_ReturnValue) == 0x000074, "Member 'BP_EventManager_C_PrivateAddOrUpdateDynamicCutPPMScalarValueALL::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetSequencerPause
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_SetSequencerPause final
{
public:
	class ALevelSequenceActor*                    Param_Sequencer;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPause;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPaused_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetSequencerPause) == 0x000008, "Wrong alignment on BP_EventManager_C_SetSequencerPause");
static_assert(sizeof(BP_EventManager_C_SetSequencerPause) == 0x000020, "Wrong size on BP_EventManager_C_SetSequencerPause");
static_assert(offsetof(BP_EventManager_C_SetSequencerPause, Param_Sequencer) == 0x000000, "Member 'BP_EventManager_C_SetSequencerPause::Param_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetSequencerPause, IsPause) == 0x000008, "Member 'BP_EventManager_C_SetSequencerPause::IsPause' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetSequencerPause, CallFunc_GetSequencePlayer_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_SetSequencerPause::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetSequencerPause, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_SetSequencerPause::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetSequencerPause, CallFunc_IsPaused_ReturnValue) == 0x000019, "Member 'BP_EventManager_C_SetSequencerPause::CallFunc_IsPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetSequencerPause, CallFunc_IsPlaying_ReturnValue) == 0x00001A, "Member 'BP_EventManager_C_SetSequencerPause::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsRipSyncJointID
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EventManager_C_IsRipSyncJointID final
{
public:
	class URSAtomComponentBase*                   VoiceAtom;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   JointID;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRipSync;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LocalVoiceCharaName;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            CharaVoiceNameList;                                // 0x0028(0x0050)(Edit, BlueprintVisible)
	TMap<class FString, class FString>            K2Node_MakeVariable_MakeVariableOutput;            // 0x0078(0x0050)()
	class FName                                   CallFunc_Map_Find_Value;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsRipSyncJointID) == 0x000008, "Wrong alignment on BP_EventManager_C_IsRipSyncJointID");
static_assert(sizeof(BP_EventManager_C_IsRipSyncJointID) == 0x0000D8, "Wrong size on BP_EventManager_C_IsRipSyncJointID");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, VoiceAtom) == 0x000000, "Member 'BP_EventManager_C_IsRipSyncJointID::VoiceAtom' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, JointID) == 0x000008, "Member 'BP_EventManager_C_IsRipSyncJointID::JointID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, IsRipSync) == 0x000010, "Member 'BP_EventManager_C_IsRipSyncJointID::IsRipSync' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, LocalVoiceCharaName) == 0x000018, "Member 'BP_EventManager_C_IsRipSyncJointID::LocalVoiceCharaName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, CharaVoiceNameList) == 0x000028, "Member 'BP_EventManager_C_IsRipSyncJointID::CharaVoiceNameList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, K2Node_MakeVariable_MakeVariableOutput) == 0x000078, "Member 'BP_EventManager_C_IsRipSyncJointID::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'BP_EventManager_C_IsRipSyncJointID::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_IsRipSyncJointID::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsRipSyncJointID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000D1, "Member 'BP_EventManager_C_IsRipSyncJointID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndCutsceneRestoreMaterial
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_EndCutsceneRestoreMaterial final
{
public:
	float                                         CallFunc_GetDefaultScalarParameterValue_ParameterValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDefaultScalarParameterValue_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDefaultScalarParameterValue_ParameterValue_1; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDefaultScalarParameterValue_ReturnValue_1; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndCutsceneRestoreMaterial) == 0x000004, "Wrong alignment on BP_EventManager_C_EndCutsceneRestoreMaterial");
static_assert(sizeof(BP_EventManager_C_EndCutsceneRestoreMaterial) == 0x000010, "Wrong size on BP_EventManager_C_EndCutsceneRestoreMaterial");
static_assert(offsetof(BP_EventManager_C_EndCutsceneRestoreMaterial, CallFunc_GetDefaultScalarParameterValue_ParameterValue) == 0x000000, "Member 'BP_EventManager_C_EndCutsceneRestoreMaterial::CallFunc_GetDefaultScalarParameterValue_ParameterValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneRestoreMaterial, CallFunc_GetDefaultScalarParameterValue_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_EndCutsceneRestoreMaterial::CallFunc_GetDefaultScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneRestoreMaterial, CallFunc_GetDefaultScalarParameterValue_ParameterValue_1) == 0x000008, "Member 'BP_EventManager_C_EndCutsceneRestoreMaterial::CallFunc_GetDefaultScalarParameterValue_ParameterValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCutsceneRestoreMaterial, CallFunc_GetDefaultScalarParameterValue_ReturnValue_1) == 0x00000C, "Member 'BP_EventManager_C_EndCutsceneRestoreMaterial::CallFunc_GetDefaultScalarParameterValue_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Is Play Enable Rip Sync Montage
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage final
{
public:
	class UAnimMontage*                           PlayRipSyncMontage;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C4[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C5[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_GetPlayRate_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage) == 0x000008, "Wrong alignment on BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage");
static_assert(sizeof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage) == 0x000030, "Wrong size on BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, PlayRipSyncMontage) == 0x000000, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::PlayRipSyncMontage' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, AnimInstance) == 0x000008, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::AnimInstance' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, ReturnValue) == 0x000010, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, CallFunc_Montage_GetPlayRate_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::CallFunc_Montage_GetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage, CallFunc_BooleanOR_ReturnValue) == 0x00002B, "Member 'BP_EventManager_C_Is_Play_Enable_Rip_Sync_Montage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetupCutsceneMaterial
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SetupCutsceneMaterial final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetupCutsceneMaterial) == 0x000004, "Wrong alignment on BP_EventManager_C_SetupCutsceneMaterial");
static_assert(sizeof(BP_EventManager_C_SetupCutsceneMaterial) == 0x000010, "Wrong size on BP_EventManager_C_SetupCutsceneMaterial");
static_assert(offsetof(BP_EventManager_C_SetupCutsceneMaterial, Start) == 0x000000, "Member 'BP_EventManager_C_SetupCutsceneMaterial::Start' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupCutsceneMaterial, Temp_bool_Variable) == 0x000001, "Member 'BP_EventManager_C_SetupCutsceneMaterial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupCutsceneMaterial, Temp_float_Variable) == 0x000004, "Member 'BP_EventManager_C_SetupCutsceneMaterial::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupCutsceneMaterial, Temp_float_Variable_1) == 0x000008, "Member 'BP_EventManager_C_SetupCutsceneMaterial::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetupCutsceneMaterial, K2Node_Select_Default) == 0x00000C, "Member 'BP_EventManager_C_SetupCutsceneMaterial::K2Node_Select_Default' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartWaitingHPCheckEvent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_EventManager_C_StartWaitingHPCheckEvent final
{
public:
	bool                                          IsStartBP;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              LocalEventCommand;                                 // 0x0008(0x0078)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayCutScene_OK;                       // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C8[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C9[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_StartWaitingHPCheckEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_StartWaitingHPCheckEvent");
static_assert(sizeof(BP_EventManager_C_StartWaitingHPCheckEvent) == 0x0000A0, "Wrong size on BP_EventManager_C_StartWaitingHPCheckEvent");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, IsStartBP) == 0x000000, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::IsStartBP' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, LocalEventCommand) == 0x000008, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::LocalEventCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, Temp_int_Loop_Num_Variable) == 0x000084, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, CallFunc_CanPlayCutScene_OK) == 0x00008C, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::CallFunc_CanPlayCutScene_OK' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartWaitingHPCheckEvent, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_EventManager_C_StartWaitingHPCheckEvent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearEventComanndList
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_ClearEventComanndList final
{
public:
	int32                                         ResizeArrayIndex;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ClearEventComanndList) == 0x000004, "Wrong alignment on BP_EventManager_C_ClearEventComanndList");
static_assert(sizeof(BP_EventManager_C_ClearEventComanndList) == 0x000004, "Wrong size on BP_EventManager_C_ClearEventComanndList");
static_assert(offsetof(BP_EventManager_C_ClearEventComanndList, ResizeArrayIndex) == 0x000000, "Member 'BP_EventManager_C_ClearEventComanndList::ResizeArrayIndex' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsValidEventCommandTypeFromNative
// 0x0080 (0x0080 - 0x0000)
struct BP_EventManager_C_IsValidEventCommandTypeFromNative final
{
public:
	EEventTriggerCheckType                        EventCommandType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckBrainTalkEvent;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsValid;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidEventCommandType_IsValid;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              CallFunc_IsValidEventCommandType_EventTriggerCommandData; // 0x0008(0x0078)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_IsValidEventCommandTypeFromNative) == 0x000008, "Wrong alignment on BP_EventManager_C_IsValidEventCommandTypeFromNative");
static_assert(sizeof(BP_EventManager_C_IsValidEventCommandTypeFromNative) == 0x000080, "Wrong size on BP_EventManager_C_IsValidEventCommandTypeFromNative");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandTypeFromNative, EventCommandType) == 0x000000, "Member 'BP_EventManager_C_IsValidEventCommandTypeFromNative::EventCommandType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandTypeFromNative, CheckBrainTalkEvent) == 0x000001, "Member 'BP_EventManager_C_IsValidEventCommandTypeFromNative::CheckBrainTalkEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandTypeFromNative, IsValid) == 0x000002, "Member 'BP_EventManager_C_IsValidEventCommandTypeFromNative::IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandTypeFromNative, CallFunc_IsValidEventCommandType_IsValid) == 0x000003, "Member 'BP_EventManager_C_IsValidEventCommandTypeFromNative::CallFunc_IsValidEventCommandType_IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandTypeFromNative, CallFunc_IsValidEventCommandType_EventTriggerCommandData) == 0x000008, "Member 'BP_EventManager_C_IsValidEventCommandTypeFromNative::CallFunc_IsValidEventCommandType_EventTriggerCommandData' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.StartCreditEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_StartCreditEvent final
{
public:
	class AActor*                                 CallFunc_SpawnActorFromBPFilePath_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_StartCreditEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_StartCreditEvent");
static_assert(sizeof(BP_EventManager_C_StartCreditEvent) == 0x000010, "Wrong size on BP_EventManager_C_StartCreditEvent");
static_assert(offsetof(BP_EventManager_C_StartCreditEvent, CallFunc_SpawnActorFromBPFilePath_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_StartCreditEvent::CallFunc_SpawnActorFromBPFilePath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_StartCreditEvent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_StartCreditEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndCreditEvent
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EventManager_C_EndCreditEvent final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSpecialStaticNodeActor_ReturnSpecialStaticNodeActor; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CB[0xE];                                     // 0x0012(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndCreditEvent) == 0x000010, "Wrong alignment on BP_EventManager_C_EndCreditEvent");
static_assert(sizeof(BP_EventManager_C_EndCreditEvent) == 0x0000E0, "Wrong size on BP_EventManager_C_EndCreditEvent");
static_assert(offsetof(BP_EventManager_C_EndCreditEvent, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'BP_EventManager_C_EndCreditEvent::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCreditEvent, CallFunc_GetSpecialStaticNodeActor_ReturnSpecialStaticNodeActor) == 0x000008, "Member 'BP_EventManager_C_EndCreditEvent::CallFunc_GetSpecialStaticNodeActor_ReturnSpecialStaticNodeActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCreditEvent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_EndCreditEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCreditEvent, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_EventManager_C_EndCreditEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCreditEvent, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_EndCreditEvent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCreditEvent, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000050, "Member 'BP_EventManager_C_EndCreditEvent::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCreditEvent, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_EndCreditEvent::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndCreditEvent, CallFunc_IsValid_ReturnValue_2) == 0x0000D9, "Member 'BP_EventManager_C_EndCreditEvent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsCurrentCreditEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_IsCurrentCreditEvent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPCreditEventManagerInterface_C> K2Node_DynamicCast_AsBPCredit_Event_Manager_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentCreditEvent_IsCurrentCredit;     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsCurrentCreditEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_IsCurrentCreditEvent");
static_assert(sizeof(BP_EventManager_C_IsCurrentCreditEvent) == 0x000020, "Wrong size on BP_EventManager_C_IsCurrentCreditEvent");
static_assert(offsetof(BP_EventManager_C_IsCurrentCreditEvent, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsCurrentCreditEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentCreditEvent, K2Node_DynamicCast_AsBPCredit_Event_Manager_Interface) == 0x000008, "Member 'BP_EventManager_C_IsCurrentCreditEvent::K2Node_DynamicCast_AsBPCredit_Event_Manager_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentCreditEvent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EventManager_C_IsCurrentCreditEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentCreditEvent, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_EventManager_C_IsCurrentCreditEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCurrentCreditEvent, CallFunc_IsCurrentCreditEvent_IsCurrentCredit) == 0x00001A, "Member 'BP_EventManager_C_IsCurrentCreditEvent::CallFunc_IsCurrentCreditEvent_IsCurrentCredit' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddExcludeStaticCapturePPS
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_AddExcludeStaticCapturePPS final
{
public:
	class UMaterialInterface*                     ExcludeMaterial;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CD[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddExcludeStaticCapturePPS) == 0x000008, "Wrong alignment on BP_EventManager_C_AddExcludeStaticCapturePPS");
static_assert(sizeof(BP_EventManager_C_AddExcludeStaticCapturePPS) == 0x000020, "Wrong size on BP_EventManager_C_AddExcludeStaticCapturePPS");
static_assert(offsetof(BP_EventManager_C_AddExcludeStaticCapturePPS, ExcludeMaterial) == 0x000000, "Member 'BP_EventManager_C_AddExcludeStaticCapturePPS::ExcludeMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddExcludeStaticCapturePPS, Handle) == 0x000008, "Member 'BP_EventManager_C_AddExcludeStaticCapturePPS::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddExcludeStaticCapturePPS, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_AddExcludeStaticCapturePPS::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddExcludeStaticCapturePPS, CallFunc_Array_Add_ReturnValue_1) == 0x000010, "Member 'BP_EventManager_C_AddExcludeStaticCapturePPS::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddExcludeStaticCapturePPS, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_AddExcludeStaticCapturePPS::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddExcludeStaticCapturePPS, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_AddExcludeStaticCapturePPS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.RemoveExcludeStaticCapturePPS
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_RemoveExcludeStaticCapturePPS final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CE[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D0[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D1[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_RemoveExcludeStaticCapturePPS) == 0x000004, "Wrong alignment on BP_EventManager_C_RemoveExcludeStaticCapturePPS");
static_assert(sizeof(BP_EventManager_C_RemoveExcludeStaticCapturePPS) == 0x000030, "Wrong size on BP_EventManager_C_RemoveExcludeStaticCapturePPS");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, Handle) == 0x000000, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::Handle' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, Param_Index) == 0x000004, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000025, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveExcludeStaticCapturePPS, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_RemoveExcludeStaticCapturePPS::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AddOptimizeCacheCustomStencil
// 0x0140 (0x0140 - 0x0000)
struct BP_EventManager_C_AddOptimizeCacheCustomStencil final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Player;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D2[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D3[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D4[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D5[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D6[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D7[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D8[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D9[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36DA[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DB[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_Map_Keys_Keys_1;                          // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36DC[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36DD[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36DE[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36DF[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetPlayerWeaponList_WeaponList;           // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E0[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0128(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_AddOptimizeCacheCustomStencil) == 0x000008, "Wrong alignment on BP_EventManager_C_AddOptimizeCacheCustomStencil");
static_assert(sizeof(BP_EventManager_C_AddOptimizeCacheCustomStencil) == 0x000140, "Wrong size on BP_EventManager_C_AddOptimizeCacheCustomStencil");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, SkelMeshComp) == 0x000000, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Weapon) == 0x000008, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Weapon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Player) == 0x000010, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, PlayerList) == 0x000018, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Variable) == 0x000028, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Variable_1) == 0x00002C, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Conv_IntToByte_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_GetValidValue_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000039, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00003A, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Loop_Num_Variable) == 0x000050, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Loop_Num_Variable_1) == 0x00005C, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Loop_Counter_Variable_2) == 0x000068, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Add_IntInt_ReturnValue_3) == 0x00006C, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Loop_Num_Variable_2) == 0x000074, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue_2) == 0x000078, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, Temp_int_Array_Index_Variable_2) == 0x00007C, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_GetExtraMesh_ExtraMesh) == 0x000088, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000A0, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Array_Find_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Map_Keys_Keys_1) == 0x0000C8, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000D8, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Array_Find_ReturnValue_1) == 0x0000E0, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000E4, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_IsValid_ReturnValue_2) == 0x0000E5, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000E8, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue_5) == 0x0000EC, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0000F0, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_GetPlayerWeaponList_WeaponList) == 0x000108, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_GetPlayerWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_GetPlayerManager_PlayerManager) == 0x000118, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_IsValid_ReturnValue_3) == 0x000120, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_GetPlayerList_ReturnValue) == 0x000128, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AddOptimizeCacheCustomStencil, CallFunc_Array_Length_ReturnValue_2) == 0x000138, "Member 'BP_EventManager_C_AddOptimizeCacheCustomStencil::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearOptimizeCacheCustomStencil
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EventManager_C_ClearOptimizeCacheCustomStencil final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Player;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E1[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E2[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E3[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E4[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E5[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E6[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E7[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_Map_Keys_Keys_1;                          // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ClearOptimizeCacheCustomStencil) == 0x000008, "Wrong alignment on BP_EventManager_C_ClearOptimizeCacheCustomStencil");
static_assert(sizeof(BP_EventManager_C_ClearOptimizeCacheCustomStencil) == 0x0000A8, "Wrong size on BP_EventManager_C_ClearOptimizeCacheCustomStencil");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, SkelMeshComp) == 0x000000, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Weapon) == 0x000008, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Weapon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Player) == 0x000010, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Loop_Num_Variable) == 0x000024, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Loop_Num_Variable_1) == 0x00002C, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Loop_Num_Variable_2) == 0x000044, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_GetExtraMesh_ExtraMesh) == 0x000050, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_IsValid_ReturnValue_1) == 0x000064, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, Temp_int_Loop_Counter_Variable_2) == 0x000068, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Less_IntInt_ReturnValue_2) == 0x00006C, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_IsValid_ReturnValue_2) == 0x00008C, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Map_Keys_Keys_1) == 0x000090, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearOptimizeCacheCustomStencil, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'BP_EventManager_C_ClearOptimizeCacheCustomStencil::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetOptimizeCacheCustomStencilPlayer
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseCustomDepth;                                    // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Find;                                              // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E8[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer) == 0x000008, "Wrong alignment on BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer");
static_assert(sizeof(BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer) == 0x000018, "Wrong size on BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer, Player) == 0x000000, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer, IsFind) == 0x000008, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer::IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer, UseCustomDepth) == 0x000009, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer::UseCustomDepth' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer, Find) == 0x00000A, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer::Find' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer, CallFunc_Map_Find_Value) == 0x00000C, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilPlayer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetOptimizeCacheCustomStencilWeapon
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon final
{
public:
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseCustomDepth;                                    // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Find;                                              // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E9[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon) == 0x000008, "Wrong alignment on BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon");
static_assert(sizeof(BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon) == 0x000018, "Wrong size on BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon, Weapon) == 0x000000, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon, IsFind) == 0x000008, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon::IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon, UseCustomDepth) == 0x000009, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon::UseCustomDepth' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon, Find) == 0x00000A, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon::Find' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon, CallFunc_Map_Find_Value) == 0x00000C, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_GetOptimizeCacheCustomStencilWeapon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetOptimizeCustomStencilPlayer
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EventManager_C_SetOptimizeCustomStencilPlayer final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithWeapon;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enable;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36EA[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36EB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36EC[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36ED[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36EE[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36EF[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F0[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F1[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetPlayerWeaponList_WeaponList;           // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F2[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetOptimizeCustomStencilPlayer) == 0x000008, "Wrong alignment on BP_EventManager_C_SetOptimizeCustomStencilPlayer");
static_assert(sizeof(BP_EventManager_C_SetOptimizeCustomStencilPlayer) == 0x0000B8, "Wrong size on BP_EventManager_C_SetOptimizeCustomStencilPlayer");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Player) == 0x000000, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, WithWeapon) == 0x000008, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::WithWeapon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Enable) == 0x000009, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Enable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, SkelMeshComp) == 0x000010, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Weapon) == 0x000018, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Weapon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Temp_int_Variable) == 0x000020, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Temp_int_Variable_1) == 0x000024, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Conv_IntToByte_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_GetValidValue_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000032, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Temp_int_Loop_Num_Variable_1) == 0x00004C, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_GetExtraMesh_ExtraMesh) == 0x000068, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000080, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_GetPlayerWeaponList_WeaponList) == 0x000098, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_GetPlayerWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000AC, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetOptimizeCustomStencilPlayer, CallFunc_IsValid_ReturnValue_2) == 0x0000B4, "Member 'BP_EventManager_C_SetOptimizeCustomStencilPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsFindLoadMakeEvent
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_IsFindLoadMakeEvent final
{
public:
	class FString                                 BPFilePath;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalIsFind;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F3[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F4[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F5[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F6[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsFindLoadMakeEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_IsFindLoadMakeEvent");
static_assert(sizeof(BP_EventManager_C_IsFindLoadMakeEvent) == 0x000048, "Wrong size on BP_EventManager_C_IsFindLoadMakeEvent");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, BPFilePath) == 0x000000, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::BPFilePath' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, IsFind) == 0x000010, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, LocalIsFind) == 0x000011, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::LocalIsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, Temp_bool_True_if_break_was_hit_Variable) == 0x000012, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, CallFunc_Map_Keys_Keys) == 0x000030, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsFindLoadMakeEvent, CallFunc_Contains_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_IsFindLoadMakeEvent::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearLoadedMakeEvent
// 0x0088 (0x0088 - 0x0000)
struct BP_EventManager_C_ClearLoadedMakeEvent final
{
public:
	class FString                                 ObjectName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Remove;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F7[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 KeyName;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          LocalIsFindName;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalIsFind;                                       // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F8[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F9[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FA[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Map_Find_Value;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FB[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FC[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FD[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ClearLoadedMakeEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_ClearLoadedMakeEvent");
static_assert(sizeof(BP_EventManager_C_ClearLoadedMakeEvent) == 0x000088, "Wrong size on BP_EventManager_C_ClearLoadedMakeEvent");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, ObjectName) == 0x000000, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, Remove) == 0x000010, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::Remove' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, KeyName) == 0x000018, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::KeyName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, LocalIsFindName) == 0x000028, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::LocalIsFindName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, LocalIsFind) == 0x000029, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::LocalIsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, K2Node_DynamicCast_AsActor) == 0x000058, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Map_Length_ReturnValue) == 0x000064, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Contains_ReturnValue) == 0x000079, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearLoadedMakeEvent, CallFunc_Map_Remove_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_ClearLoadedMakeEvent::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Is Find Loading Make Event
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_Is_Find_Loading_Make_Event final
{
public:
	class FString                                 ObjectName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnObjectName;                                  // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LocalObjectName;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          LocalIsFind;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FF[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3700[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3701[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3702[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Is_Find_Loading_Make_Event) == 0x000008, "Wrong alignment on BP_EventManager_C_Is_Find_Loading_Make_Event");
static_assert(sizeof(BP_EventManager_C_Is_Find_Loading_Make_Event) == 0x000060, "Wrong size on BP_EventManager_C_Is_Find_Loading_Make_Event");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, ObjectName) == 0x000000, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, IsFind) == 0x000010, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, ReturnObjectName) == 0x000018, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::ReturnObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, LocalObjectName) == 0x000028, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::LocalObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, LocalIsFind) == 0x000038, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::LocalIsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, Temp_bool_True_if_break_was_hit_Variable) == 0x000039, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, Temp_int_Loop_Num_Variable) == 0x000044, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, CallFunc_Contains_ReturnValue) == 0x000055, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Is_Find_Loading_Make_Event, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_Is_Find_Loading_Make_Event::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.RemoveLoadingMakeEventList
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_RemoveLoadingMakeEventList final
{
public:
	class FString                                 ObjectName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Find_Loading_Make_Event_IsFind;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3703[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Is_Find_Loading_Make_Event_ReturnObjectName; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_RemoveLoadingMakeEventList) == 0x000008, "Wrong alignment on BP_EventManager_C_RemoveLoadingMakeEventList");
static_assert(sizeof(BP_EventManager_C_RemoveLoadingMakeEventList) == 0x000040, "Wrong size on BP_EventManager_C_RemoveLoadingMakeEventList");
static_assert(offsetof(BP_EventManager_C_RemoveLoadingMakeEventList, ObjectName) == 0x000000, "Member 'BP_EventManager_C_RemoveLoadingMakeEventList::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveLoadingMakeEventList, CallFunc_Is_Find_Loading_Make_Event_IsFind) == 0x000010, "Member 'BP_EventManager_C_RemoveLoadingMakeEventList::CallFunc_Is_Find_Loading_Make_Event_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveLoadingMakeEventList, CallFunc_Is_Find_Loading_Make_Event_ReturnObjectName) == 0x000018, "Member 'BP_EventManager_C_RemoveLoadingMakeEventList::CallFunc_Is_Find_Loading_Make_Event_ReturnObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveLoadingMakeEventList, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_RemoveLoadingMakeEventList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RemoveLoadingMakeEventList, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_RemoveLoadingMakeEventList::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsLoadingMakeEventAsset
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_IsLoadingMakeEventAsset final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3704[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsLoadingMakeEventAsset) == 0x000004, "Wrong alignment on BP_EventManager_C_IsLoadingMakeEventAsset");
static_assert(sizeof(BP_EventManager_C_IsLoadingMakeEventAsset) == 0x00000C, "Wrong size on BP_EventManager_C_IsLoadingMakeEventAsset");
static_assert(offsetof(BP_EventManager_C_IsLoadingMakeEventAsset, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsLoadingMakeEventAsset::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadingMakeEventAsset, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_IsLoadingMakeEventAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsLoadingMakeEventAsset, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsLoadingMakeEventAsset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayAjitoTVSequencer
// 0x01B8 (0x01B8 - 0x0000)
struct BP_EventManager_C_PlayAjitoTVSequencer final
{
public:
	class ULevelSequence*                         Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 BindAjitoTVBP;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SeqSpawnActorList;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FName                                   PlayerSeqTagName;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           ObjName;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3705[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3706[0x1];                                     // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3707[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_1;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_2;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_3;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3708[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3709[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370A[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEventVisible_ReturnValue;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBinding;             // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer;       // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode;      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode;    // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370B[0x2];                                     // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon;       // 0x0110(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370C[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x0140(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventStart_ReturnValue;            // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370D[0x2];                                     // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_Array_Get_Item;                           // 0x0154(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370E[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0178(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370F[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3710[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3711[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayAjitoTVSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_PlayAjitoTVSequencer");
static_assert(sizeof(BP_EventManager_C_PlayAjitoTVSequencer) == 0x0001B8, "Wrong size on BP_EventManager_C_PlayAjitoTVSequencer");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, Sequence) == 0x000000, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, BindAjitoTVBP) == 0x000008, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::BindAjitoTVBP' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, SeqSpawnActorList) == 0x000010, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::SeqSpawnActorList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, PlayerSeqTagName) == 0x000020, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::PlayerSeqTagName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, ObjName) == 0x000028, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::ObjName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, PlayerList) == 0x000038, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, Temp_int_Loop_Num_Variable) == 0x00005C, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, Temp_byte_Variable) == 0x000074, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_SwitchEnum_CmpSuccess) == 0x000075, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x000076, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPresentSequencer_PresentSequencer) == 0x000080, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPresentSequencer_PresentSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPresentSequencer_PresentSequencer_1) == 0x000088, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPresentSequencer_PresentSequencer_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPresentSequencer_PresentSequencer_2) == 0x0000A0, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPresentSequencer_PresentSequencer_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPresentSequencer_PresentSequencer_3) == 0x0000A8, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPresentSequencer_PresentSequencer_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0000C8, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_AsPlayer_Interface) == 0x0000D0, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000E8, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPlayerID_ReturnValue) == 0x0000F1, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_AsEvent_Interface) == 0x0000F8, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_SetEventVisible_ReturnValue) == 0x000109, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_SetEventVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_BindingEventPlayer_IsBinding) == 0x00010A, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_BindingEventPlayer_IsBindingPlayer) == 0x00010B, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_BindingEventPlayer_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_BindingEventPlayer_IsBindingSASCode) == 0x00010C, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_BindingEventPlayer_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_BindingEventPlayer_IsBindingBrainCode) == 0x00010D, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_BindingEventPlayer_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_BindingEventPlayer_IsBindingWeapon) == 0x000110, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_BindingEventPlayer_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000120, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_AsEvent_Interface_1) == 0x000128, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_bSuccess_3) == 0x000138, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x000140, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x000150, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_DynamicEventStart_ReturnValue) == 0x000151, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_DynamicEventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Array_Get_Item) == 0x000154, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Array_Length_ReturnValue) == 0x00016C, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000170, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_MakeArray_Array_1) == 0x000178, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000188, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_IsValid_ReturnValue_2) == 0x000190, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x000198, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, K2Node_DynamicCast_bSuccess_4) == 0x0001A0, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Array_Length_ReturnValue_1) == 0x0001A4, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_ActorHasTag_ReturnValue) == 0x0001A8, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Array_Length_ReturnValue_2) == 0x0001AC, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoTVSequencer, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B0, "Member 'BP_EventManager_C_PlayAjitoTVSequencer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnAjitoTVSequencerFinished
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_OnAjitoTVSequencerFinished final
{
public:
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventEnd_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnAjitoTVSequencerFinished) == 0x000008, "Wrong alignment on BP_EventManager_C_OnAjitoTVSequencerFinished");
static_assert(sizeof(BP_EventManager_C_OnAjitoTVSequencerFinished) == 0x000030, "Wrong size on BP_EventManager_C_OnAjitoTVSequencerFinished");
static_assert(offsetof(BP_EventManager_C_OnAjitoTVSequencerFinished, PlayerList) == 0x000000, "Member 'BP_EventManager_C_OnAjitoTVSequencerFinished::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoTVSequencerFinished, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_OnAjitoTVSequencerFinished::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoTVSequencerFinished, K2Node_DynamicCast_AsEvent_Interface) == 0x000018, "Member 'BP_EventManager_C_OnAjitoTVSequencerFinished::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoTVSequencerFinished, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventManager_C_OnAjitoTVSequencerFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoTVSequencerFinished, CallFunc_DynamicEventEnd_ReturnValue) == 0x000029, "Member 'BP_EventManager_C_OnAjitoTVSequencerFinished::CallFunc_DynamicEventEnd_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndAjitoTVSequencer
// 0x0220 (0x0220 - 0x0000)
struct BP_EventManager_C_EndAjitoTVSequencer final
{
public:
	class AAjitoMember*                           BindForAjitoTVBP;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3712[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3713[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3714[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3715[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3716[0x8];                                     // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3717[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3718[0x8];                                     // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureCineCameraActor_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_EndAjitoTVSequencer) == 0x000010, "Wrong alignment on BP_EventManager_C_EndAjitoTVSequencer");
static_assert(sizeof(BP_EventManager_C_EndAjitoTVSequencer) == 0x000220, "Wrong size on BP_EventManager_C_EndAjitoTVSequencer");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, BindForAjitoTVBP) == 0x000000, "Member 'BP_EventManager_C_EndAjitoTVSequencer::BindForAjitoTVBP' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, PlayerList) == 0x000008, "Member 'BP_EventManager_C_EndAjitoTVSequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetPresentSequencer_PresentSequencer) == 0x000018, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetPresentSequencer_PresentSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000038, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000C8, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, K2Node_DynamicCast_AsRSBattle_Character) == 0x0000D0, "Member 'BP_EventManager_C_EndAjitoTVSequencer::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_EventManager_C_EndAjitoTVSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_IsValid_ReturnValue_1) == 0x0000D9, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetSocketTransform_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetPlayerController_ReturnValue_1) == 0x000110, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_BreakTransform_Location) == 0x000118, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_BreakTransform_Rotation) == 0x000124, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_BreakTransform_Scale) == 0x000130, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetViewTarget_ReturnValue) == 0x000140, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, K2Node_DynamicCast_AsCine________) == 0x000180, "Member 'BP_EventManager_C_EndAjitoTVSequencer::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_EventManager_C_EndAjitoTVSequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000190, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetTransform_ReturnValue) == 0x0001A0, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_MakeTransform_ReturnValue_1) == 0x0001D0, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000200, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x000208, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoTVSequencer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000210, "Member 'BP_EventManager_C_EndAjitoTVSequencer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetLoadedAndLoadingMakeEventPathList
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	TArray<class FString>                         AllMakeEventPathList;                              // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList) == 0x000008, "Wrong alignment on BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList");
static_assert(sizeof(BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList) == 0x000030, "Wrong size on BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList");
static_assert(offsetof(BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList, AllMakeEventPathList) == 0x000010, "Member 'BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList::AllMakeEventPathList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_EventManager_C_GetLoadedAndLoadingMakeEventPathList::CallFunc_Map_Keys_Keys' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnSkipInput
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_OnSkipInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3719[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventCaptureFuncData                 SequenceFuncCommand;                               // 0x0008(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371A[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_OnSkipInput) == 0x000008, "Wrong alignment on BP_EventManager_C_OnSkipInput");
static_assert(sizeof(BP_EventManager_C_OnSkipInput) == 0x000040, "Wrong size on BP_EventManager_C_OnSkipInput");
static_assert(offsetof(BP_EventManager_C_OnSkipInput, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_OnSkipInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSkipInput, SequenceFuncCommand) == 0x000008, "Member 'BP_EventManager_C_OnSkipInput::SequenceFuncCommand' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSkipInput, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_OnSkipInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSkipInput, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_OnSkipInput::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnSkipInput, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_OnSkipInput::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateSimulate
// 0x01F8 (0x01F8 - 0x0000)
struct BP_EventManager_C_UpdateSimulate final
{
public:
	bool                                          Hit;                                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MeshName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ValidNameStrings;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               Players;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371D[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371E[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371F[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventSwitchPlayer_C*                K2Node_DynamicCast_AsBP_Event_Switch_Player;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnimationMode                                CallFunc_GetAnimationMode_ReturnValue;             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3720[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3721[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3722[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3723[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x00F0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3724[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3725[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0158(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0168(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3726[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UpdateSimulate) == 0x000008, "Wrong alignment on BP_EventManager_C_UpdateSimulate");
static_assert(sizeof(BP_EventManager_C_UpdateSimulate) == 0x0001F8, "Wrong size on BP_EventManager_C_UpdateSimulate");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Hit) == 0x000000, "Member 'BP_EventManager_C_UpdateSimulate::Hit' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, MeshName) == 0x000008, "Member 'BP_EventManager_C_UpdateSimulate::MeshName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, ValidNameStrings) == 0x000018, "Member 'BP_EventManager_C_UpdateSimulate::ValidNameStrings' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, SkelMeshComp) == 0x000028, "Member 'BP_EventManager_C_UpdateSimulate::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Players) == 0x000030, "Member 'BP_EventManager_C_UpdateSimulate::Players' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, TargetActor) == 0x000040, "Member 'BP_EventManager_C_UpdateSimulate::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_EventManager_C_UpdateSimulate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Loop_Num_Variable_1) == 0x000068, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_IsValid_ReturnValue_1) == 0x00006C, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Loop_Num_Variable_2) == 0x00007C, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, K2Node_MakeArray_Array_1) == 0x000088, "Member 'BP_EventManager_C_UpdateSimulate::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, K2Node_DynamicCast_AsBP_Event_Switch_Player) == 0x0000A8, "Member 'BP_EventManager_C_UpdateSimulate::K2Node_DynamicCast_AsBP_Event_Switch_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_EventManager_C_UpdateSimulate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_IsValid_ReturnValue_2) == 0x0000B1, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetAnimationMode_ReturnValue) == 0x0000B2, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetAnimationMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B3, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetObjectName_ReturnValue) == 0x0000B8, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Loop_Counter_Variable_2) == 0x0000C8, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_int_Array_Index_Variable_2) == 0x0000CC, "Member 'BP_EventManager_C_UpdateSimulate::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_FindSubstring_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D5, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetPlayerManager_PlayerManager) == 0x0000E0, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, Temp_bool_True_if_break_was_hit_Variable) == 0x0000E8, "Member 'BP_EventManager_C_UpdateSimulate::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Not_PreBool_ReturnValue) == 0x0000EA, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_BooleanAND_ReturnValue) == 0x0000EB, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetPlayerList_ReturnValue) == 0x0000F0, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, K2Node_DynamicCast_AsSkeletal_Mesh_Actor) == 0x000100, "Member 'BP_EventManager_C_UpdateSimulate::K2Node_DynamicCast_AsSkeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'BP_EventManager_C_UpdateSimulate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000110, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetCameraRotation_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetCameraLocation_ReturnValue) == 0x000124, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetForwardVector_ReturnValue) == 0x000130, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00013C, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Add_VectorVector_ReturnValue) == 0x000148, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_GetAllActorsWithTag_OutActors) == 0x000158, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000168, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001F0, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_UpdateSimulate, CallFunc_Array_Length_ReturnValue_2) == 0x0001F4, "Member 'BP_EventManager_C_UpdateSimulate::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetWeaponVisibility
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_SetWeaponVisibility final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoApply;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3727[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3728[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetWeaponVisibility) == 0x000008, "Wrong alignment on BP_EventManager_C_SetWeaponVisibility");
static_assert(sizeof(BP_EventManager_C_SetWeaponVisibility) == 0x000040, "Wrong size on BP_EventManager_C_SetWeaponVisibility");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, Visibility) == 0x000000, "Member 'BP_EventManager_C_SetWeaponVisibility::Visibility' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, NoApply) == 0x000001, "Member 'BP_EventManager_C_SetWeaponVisibility::NoApply' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SetWeaponVisibility::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000010, "Member 'BP_EventManager_C_SetWeaponVisibility::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventManager_C_SetWeaponVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, CallFunc_GetMainPlayerBP_Player) == 0x000028, "Member 'BP_EventManager_C_SetWeaponVisibility::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, K2Node_DynamicCast_AsRSBattle_Player) == 0x000030, "Member 'BP_EventManager_C_SetWeaponVisibility::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EventManager_C_SetWeaponVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetWeaponVisibility, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EventManager_C_SetWeaponVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsWeaponVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_IsWeaponVisibility final
{
public:
	bool                                          Visibillity;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsWeaponVisibility) == 0x000001, "Wrong alignment on BP_EventManager_C_IsWeaponVisibility");
static_assert(sizeof(BP_EventManager_C_IsWeaponVisibility) == 0x000001, "Wrong size on BP_EventManager_C_IsWeaponVisibility");
static_assert(offsetof(BP_EventManager_C_IsWeaponVisibility, Visibillity) == 0x000000, "Member 'BP_EventManager_C_IsWeaponVisibility::Visibillity' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProccessEnpcBrainFieldTimeLimitEndCheck
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck final
{
public:
	struct FFEventTriggerCommandData              EventTriggerComandData;                            // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartEvent;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3729[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LocalDimensionTangleList;                          // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<struct FS_LoadedLevelInfo>             LLoadedLevelInfoArray;                             // 0x0090(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         LocalDimensionTangleNum;                           // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCheck;                                           // 0x00A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372A[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372B[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetENPCBrainFieldRate_Rate;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck) == 0x000008, "Wrong alignment on BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck");
static_assert(sizeof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck) == 0x0000C0, "Wrong size on BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, EventTriggerComandData) == 0x000000, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::EventTriggerComandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, IsStartEvent) == 0x000078, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::IsStartEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, LocalDimensionTangleList) == 0x000080, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::LocalDimensionTangleList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, LLoadedLevelInfoArray) == 0x000090, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::LLoadedLevelInfoArray' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, LocalDimensionTangleNum) == 0x0000A0, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::LocalDimensionTangleNum' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, IsCheck) == 0x0000A4, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::IsCheck' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, CallFunc_GetBattleManager_BattleManager) == 0x0000A8, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, CallFunc_GetENPCBrainFieldRate_Rate) == 0x0000B4, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::CallFunc_GetENPCBrainFieldRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_EventManager_C_ProccessEnpcBrainFieldTimeLimitEndCheck::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Get Message Label Facial
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EventManager_C_Get_Message_Label_Facial final
{
public:
	class FString                                 MessageLabel;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FFMessageIDFacialData                  Facial;                                            // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	struct FFMessageIDFacialData                  FacialData;                                        // 0x0028(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           FacialRowNames;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UDataTable*                             MessageIDFaceDataList;                             // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372C[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372E[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372F[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3730[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMessageIDFacialData                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3731[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3732[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_Get_Message_Label_Facial) == 0x000008, "Wrong alignment on BP_EventManager_C_Get_Message_Label_Facial");
static_assert(sizeof(BP_EventManager_C_Get_Message_Label_Facial) == 0x0000B8, "Wrong size on BP_EventManager_C_Get_Message_Label_Facial");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, MessageLabel) == 0x000000, "Member 'BP_EventManager_C_Get_Message_Label_Facial::MessageLabel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, Facial) == 0x000010, "Member 'BP_EventManager_C_Get_Message_Label_Facial::Facial' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, FacialData) == 0x000028, "Member 'BP_EventManager_C_Get_Message_Label_Facial::FacialData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, FacialRowNames) == 0x000040, "Member 'BP_EventManager_C_Get_Message_Label_Facial::FacialRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, MessageIDFaceDataList) == 0x000050, "Member 'BP_EventManager_C_Get_Message_Label_Facial::MessageIDFaceDataList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, IsFind) == 0x000058, "Member 'BP_EventManager_C_Get_Message_Label_Facial::IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, Temp_bool_True_if_break_was_hit_Variable) == 0x000059, "Member 'BP_EventManager_C_Get_Message_Label_Facial::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_EventManager_C_Get_Message_Label_Facial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, Temp_int_Loop_Num_Variable) == 0x000064, "Member 'BP_EventManager_C_Get_Message_Label_Facial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_EventManager_C_Get_Message_Label_Facial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_BooleanAND_ReturnValue) == 0x000074, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_Contains_ReturnValue) == 0x0000A0, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Get_Message_Label_Facial, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000A8, "Member 'BP_EventManager_C_Get_Message_Label_Facial::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetEventRenderTarget
// 0x0050 (0x0050 - 0x0000)
struct BP_EventManager_C_ResetEventRenderTarget final
{
public:
	ERenderTargetType                             RenderTargetType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3733[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 NewTarget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3734[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3735[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3736[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3737[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ResetEventRenderTarget) == 0x000008, "Wrong alignment on BP_EventManager_C_ResetEventRenderTarget");
static_assert(sizeof(BP_EventManager_C_ResetEventRenderTarget) == 0x000050, "Wrong size on BP_EventManager_C_ResetEventRenderTarget");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, RenderTargetType) == 0x000000, "Member 'BP_EventManager_C_ResetEventRenderTarget::RenderTargetType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, NewTarget) == 0x000008, "Member 'BP_EventManager_C_ResetEventRenderTarget::NewTarget' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventManager_C_ResetEventRenderTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BP_EventManager_C_ResetEventRenderTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_EventManager_C_ResetEventRenderTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EventManager_C_ResetEventRenderTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_EventManager_C_ResetEventRenderTarget::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_EventManager_C_ResetEventRenderTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_EventManager_C_ResetEventRenderTarget::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetEventRenderTarget, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000048, "Member 'BP_EventManager_C_ResetEventRenderTarget::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Set Camera After Change Player
// 0x0050 (0x0050 - 0x0000)
struct BP_EventManager_C_Set_Camera_After_Change_Player final
{
public:
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3738[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerCameraPreset                           CallFunc_GetCurrentAreaCameraPreset_camera_preset; // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentAreaCameraPreset_return;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3739[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraTriggerInfo                     K2Node_MakeStruct_CameraTriggerInfo;               // 0x0028(0x0028)()
};
static_assert(alignof(BP_EventManager_C_Set_Camera_After_Change_Player) == 0x000008, "Wrong alignment on BP_EventManager_C_Set_Camera_After_Change_Player");
static_assert(sizeof(BP_EventManager_C_Set_Camera_After_Change_Player) == 0x000050, "Wrong size on BP_EventManager_C_Set_Camera_After_Change_Player");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, CallFunc_GetLevelManager_LevelManager) == 0x000000, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, CallFunc_GetMainPlayer_Player) == 0x000018, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, CallFunc_GetCurrentAreaCameraPreset_camera_preset) == 0x000022, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::CallFunc_GetCurrentAreaCameraPreset_camera_preset' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, CallFunc_GetCurrentAreaCameraPreset_return) == 0x000023, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::CallFunc_GetCurrentAreaCameraPreset_return' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Camera_After_Change_Player, K2Node_MakeStruct_CameraTriggerInfo) == 0x000028, "Member 'BP_EventManager_C_Set_Camera_After_Change_Player::K2Node_MakeStruct_CameraTriggerInfo' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetUIUnlockFlag
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_SetUIUnlockFlag final
{
public:
	bool                                          UiUnlock;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetUIUnlockFlag) == 0x000001, "Wrong alignment on BP_EventManager_C_SetUIUnlockFlag");
static_assert(sizeof(BP_EventManager_C_SetUIUnlockFlag) == 0x000001, "Wrong size on BP_EventManager_C_SetUIUnlockFlag");
static_assert(offsetof(BP_EventManager_C_SetUIUnlockFlag, UiUnlock) == 0x000000, "Member 'BP_EventManager_C_SetUIUnlockFlag::UiUnlock' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsCameraYawNormal
// 0x0002 (0x0002 - 0x0000)
struct BP_EventManager_C_IsCameraYawNormal final
{
public:
	bool                                          IsNormal;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsCameraYawNormal) == 0x000001, "Wrong alignment on BP_EventManager_C_IsCameraYawNormal");
static_assert(sizeof(BP_EventManager_C_IsCameraYawNormal) == 0x000002, "Wrong size on BP_EventManager_C_IsCameraYawNormal");
static_assert(offsetof(BP_EventManager_C_IsCameraYawNormal, IsNormal) == 0x000000, "Member 'BP_EventManager_C_IsCameraYawNormal::IsNormal' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCameraYawNormal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_EventManager_C_IsCameraYawNormal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsCameraPitchNormal
// 0x0002 (0x0002 - 0x0000)
struct BP_EventManager_C_IsCameraPitchNormal final
{
public:
	bool                                          IsNormal;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsCameraPitchNormal) == 0x000001, "Wrong alignment on BP_EventManager_C_IsCameraPitchNormal");
static_assert(sizeof(BP_EventManager_C_IsCameraPitchNormal) == 0x000002, "Wrong size on BP_EventManager_C_IsCameraPitchNormal");
static_assert(offsetof(BP_EventManager_C_IsCameraPitchNormal, IsNormal) == 0x000000, "Member 'BP_EventManager_C_IsCameraPitchNormal::IsNormal' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsCameraPitchNormal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_EventManager_C_IsCameraPitchNormal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsWorldMapShowDesSubQuestForAreaName
// 0x0220 (0x0220 - 0x0000)
struct BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShowDestinationApplicationType               ApplicationType;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotOrderCheck;                                     // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsShow;                                            // 0x000E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373A[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         VisibleWeight;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestParamManager*                     QuestParamManager;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FShowDestinationDBDataCell>     DBValuesTemp;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373C[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373D[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373E[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveSubQuestNumber_ReturnValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuestParamManager*                     CallFunc_GetQuestParamManager_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373F[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3740[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3741[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSubQuestNumberFromID_ReturnValue;      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EQuestProgressState                           CallFunc_GetSubQuestState_ReturnValue;             // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3742[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UShowDestinationData*                   CallFunc_GetShowDestinationData_ReturnValue;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3743[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FShowDestinationDBDataCell> CallFunc_GetDB_ReturnValue;                        // 0x00D8(0x0050)(ConstParm)
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3744[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FShowDestinationDBDataCell>     CallFunc_Map_Values_Values;                        // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3745[0x2];                                     // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_2;                            // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_2;                           // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_2;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3746[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_3;                            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_3;                           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_3;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3747[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_4;                            // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_4;                           // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_4;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3748[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_5;                            // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_5;                           // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_5;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3749[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName) == 0x000008, "Wrong alignment on BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName");
static_assert(sizeof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName) == 0x000220, "Wrong size on BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, LocationId) == 0x000000, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::LocationId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, AreaId) == 0x000004, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::AreaId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, PortalID) == 0x000008, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::PortalID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, ApplicationType) == 0x00000C, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::ApplicationType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, NotOrderCheck) == 0x00000D, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::NotOrderCheck' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, IsShow) == 0x00000E, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::IsShow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, VisibleWeight) == 0x000010, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::VisibleWeight' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, QuestParamManager) == 0x000018, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::QuestParamManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, DBValuesTemp) == 0x000020, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::DBValuesTemp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_GetUserParamManager_UserParamManager) == 0x000050, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_GetActiveSubQuestNumber_ReturnValue) == 0x00005C, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_GetActiveSubQuestNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_GetQuestParamManager_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_GetQuestParamManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_GetDataBaseManager_Manager) == 0x000070, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000084, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_GetSubQuestNumberFromID_ReturnValue) == 0x000088, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_GetSubQuestNumberFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00008C, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008D, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_GetSubQuestState_ReturnValue) == 0x00008E, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_GetSubQuestState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, K2Node_SwitchEnum_CmpSuccess) == 0x00008F, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000090, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000091, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_GetShowDestinationData_ReturnValue) == 0x0000A8, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_GetShowDestinationData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_LeftS) == 0x0000B0, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_RightS) == 0x0000C0, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_ReturnValue) == 0x0000D0, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_GetDB_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_GetDB_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_LeftS_1) == 0x000128, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_RightS_1) == 0x000138, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_ReturnValue_1) == 0x000148, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Map_Values_Values) == 0x000150, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_SelectString_ReturnValue) == 0x000160, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Conv_StringToInt_ReturnValue) == 0x000170, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Contains_ReturnValue) == 0x000174, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000175, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_LeftS_2) == 0x000178, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_LeftS_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_RightS_2) == 0x000188, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_RightS_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_ReturnValue_2) == 0x000198, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_LeftS_3) == 0x0001A0, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_LeftS_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_RightS_3) == 0x0001B0, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_RightS_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_ReturnValue_3) == 0x0001C0, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_LeftS_4) == 0x0001C8, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_LeftS_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_RightS_4) == 0x0001D8, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_RightS_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_ReturnValue_4) == 0x0001E8, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x0001EC, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_LeftS_5) == 0x0001F0, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_LeftS_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_RightS_5) == 0x000200, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_RightS_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Split_ReturnValue_5) == 0x000210, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Split_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x000214, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000218, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000219, "Member 'BP_EventManager_C_IsWorldMapShowDesSubQuestForAreaName::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventHiddenNeonWire
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_SetEventHiddenNeonWire final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetEventHiddenNeonWire) == 0x000001, "Wrong alignment on BP_EventManager_C_SetEventHiddenNeonWire");
static_assert(sizeof(BP_EventManager_C_SetEventHiddenNeonWire) == 0x000001, "Wrong size on BP_EventManager_C_SetEventHiddenNeonWire");
static_assert(offsetof(BP_EventManager_C_SetEventHiddenNeonWire, Hidden) == 0x000000, "Member 'BP_EventManager_C_SetEventHiddenNeonWire::Hidden' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsEventHiddenNeonWire
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_IsEventHiddenNeonWire final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsEventHiddenNeonWire) == 0x000001, "Wrong alignment on BP_EventManager_C_IsEventHiddenNeonWire");
static_assert(sizeof(BP_EventManager_C_IsEventHiddenNeonWire) == 0x000001, "Wrong size on BP_EventManager_C_IsEventHiddenNeonWire");
static_assert(offsetof(BP_EventManager_C_IsEventHiddenNeonWire, Hidden) == 0x000000, "Member 'BP_EventManager_C_IsEventHiddenNeonWire::Hidden' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticHighResDelay
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_SetStaticHighResDelay final
{
public:
	int32                                         DelayFrame;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetStaticHighResDelay) == 0x000004, "Wrong alignment on BP_EventManager_C_SetStaticHighResDelay");
static_assert(sizeof(BP_EventManager_C_SetStaticHighResDelay) == 0x000004, "Wrong size on BP_EventManager_C_SetStaticHighResDelay");
static_assert(offsetof(BP_EventManager_C_SetStaticHighResDelay, DelayFrame) == 0x000000, "Member 'BP_EventManager_C_SetStaticHighResDelay::DelayFrame' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetStaticHighResDelay
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_GetStaticHighResDelay final
{
public:
	int32                                         DelayFrame;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetStaticHighResDelay) == 0x000004, "Wrong alignment on BP_EventManager_C_GetStaticHighResDelay");
static_assert(sizeof(BP_EventManager_C_GetStaticHighResDelay) == 0x000004, "Wrong size on BP_EventManager_C_GetStaticHighResDelay");
static_assert(offsetof(BP_EventManager_C_GetStaticHighResDelay, DelayFrame) == 0x000000, "Member 'BP_EventManager_C_GetStaticHighResDelay::DelayFrame' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EnableTickNewStaticActor
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_EnableTickNewStaticActor final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_374A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NewStaticNodeActor_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_374C[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EnableTickNewStaticActor) == 0x000008, "Wrong alignment on BP_EventManager_C_EnableTickNewStaticActor");
static_assert(sizeof(BP_EventManager_C_EnableTickNewStaticActor) == 0x000030, "Wrong size on BP_EventManager_C_EnableTickNewStaticActor");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, Enabled) == 0x000000, "Member 'BP_EventManager_C_EnableTickNewStaticActor::Enabled' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EventManager_C_EnableTickNewStaticActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EventManager_C_EnableTickNewStaticActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_EnableTickNewStaticActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_EnableTickNewStaticActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EventManager_C_EnableTickNewStaticActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_EnableTickNewStaticActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_EventManager_C_EnableTickNewStaticActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_EventManager_C_EnableTickNewStaticActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EnableTickNewStaticActor, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_EnableTickNewStaticActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsCurrentEventOffSkipEndFade
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_IsCurrentEventOffSkipEndFade final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsCurrentEventOffSkipEndFade) == 0x000001, "Wrong alignment on BP_EventManager_C_IsCurrentEventOffSkipEndFade");
static_assert(sizeof(BP_EventManager_C_IsCurrentEventOffSkipEndFade) == 0x000001, "Wrong size on BP_EventManager_C_IsCurrentEventOffSkipEndFade");
static_assert(offsetof(BP_EventManager_C_IsCurrentEventOffSkipEndFade, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsCurrentEventOffSkipEndFade::ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticGhostTrailCache
// 0x0180 (0x0180 - 0x0000)
struct BP_EventManager_C_SetStaticGhostTrailCache final
{
public:
	EPlayerID                                     Player;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ControlId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseableMeshComponent*                 PoseableMeshComp;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CacheIndex;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MeshNum;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumLastIndex;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3750[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class UPoseableMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3751[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class UPoseableMeshComponent*                 CallFunc_AddComponent_ReturnValue_1;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3752[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3753[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3754[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3755[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3756[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3757[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkeletalMeshActor*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3758[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3759[0x2];                                     // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375A[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_GetOrSpawnBindingInstance_Instance;       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetStaticGhostTrailCache) == 0x000010, "Wrong alignment on BP_EventManager_C_SetStaticGhostTrailCache");
static_assert(sizeof(BP_EventManager_C_SetStaticGhostTrailCache) == 0x000180, "Wrong size on BP_EventManager_C_SetStaticGhostTrailCache");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, Player) == 0x000000, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, ControlId) == 0x000004, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::ControlId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, Num) == 0x000008, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::Num' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, PoseableMeshComp) == 0x000010, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::PoseableMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CacheIndex) == 0x000018, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CacheIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, MeshNum) == 0x00001C, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::MeshNum' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, NumLastIndex) == 0x000020, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::NumLastIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, MeshComp) == 0x000028, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::MeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_MakeTransform_ReturnValue_1) == 0x000080, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_AddComponent_ReturnValue_1) == 0x0000B0, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_MakeTransform_ReturnValue_2) == 0x0000F0, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000128, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Greater_IntInt_ReturnValue) == 0x000130, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, Temp_int_Variable) == 0x000140, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000144, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00014C, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Add_IntInt_ReturnValue_2) == 0x000150, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, K2Node_SwitchEnum_CmpSuccess) == 0x000154, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000155, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000158, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_GetOrSpawnBindingInstance_Instance) == 0x000160, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_GetOrSpawnBindingInstance_Instance' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000168, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticGhostTrailCache, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'BP_EventManager_C_SetStaticGhostTrailCache::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ResetStaticGhostTrailCache
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_ResetStaticGhostTrailCache final
{
public:
	class UPoseableMeshComponent*                 PoseableMeshComp;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     SkelMeshActor;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375C[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375D[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375E[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ResetStaticGhostTrailCache) == 0x000008, "Wrong alignment on BP_EventManager_C_ResetStaticGhostTrailCache");
static_assert(sizeof(BP_EventManager_C_ResetStaticGhostTrailCache) == 0x000060, "Wrong size on BP_EventManager_C_ResetStaticGhostTrailCache");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, PoseableMeshComp) == 0x000000, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::PoseableMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, SkelMeshActor) == 0x000008, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::SkelMeshActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Loop_Num_Variable_1) == 0x00002C, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Loop_Counter_Variable_2) == 0x000030, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, Temp_int_Loop_Num_Variable_2) == 0x000044, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Less_IntInt_ReturnValue_2) == 0x000048, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ResetStaticGhostTrailCache, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'BP_EventManager_C_ResetStaticGhostTrailCache::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetMatchStaticGhostTrailCache
// 0x0098 (0x0098 - 0x0000)
struct BP_EventManager_C_GetMatchStaticGhostTrailCache final
{
public:
	int32                                         ControlId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASkeletalMeshActor*>             Param_StaticGhostTrailCacheActor;                  // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         Param_StaticGhostTrailCacheMeshComps;              // 0x0018(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         MeshNum;                                           // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3760[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPoseableMeshComponent*>         Param_StaticGhostTrailCachePosableMeshComps;       // 0x0030(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Layer;                                             // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPoseableMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPoseableMeshComponent*>         K2Node_Select_Default;                             // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_1;                          // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class ASkeletalMeshActor*>             K2Node_MakeArray_Array_2;                          // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetMatchStaticGhostTrailCache) == 0x000008, "Wrong alignment on BP_EventManager_C_GetMatchStaticGhostTrailCache");
static_assert(sizeof(BP_EventManager_C_GetMatchStaticGhostTrailCache) == 0x000098, "Wrong size on BP_EventManager_C_GetMatchStaticGhostTrailCache");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, ControlId) == 0x000000, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::ControlId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, Param_StaticGhostTrailCacheActor) == 0x000008, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::Param_StaticGhostTrailCacheActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, Param_StaticGhostTrailCacheMeshComps) == 0x000018, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::Param_StaticGhostTrailCacheMeshComps' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, MeshNum) == 0x000028, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::MeshNum' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, Param_StaticGhostTrailCachePosableMeshComps) == 0x000030, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::Param_StaticGhostTrailCachePosableMeshComps' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, Layer) == 0x000040, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::Layer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, Temp_int_Variable) == 0x000044, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, CallFunc_Percent_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, K2Node_Select_Default) == 0x000060, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, K2Node_MakeArray_Array_1) == 0x000070, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, K2Node_MakeArray_Array_2) == 0x000080, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetMatchStaticGhostTrailCache, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000094, "Member 'BP_EventManager_C_GetMatchStaticGhostTrailCache::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsNeedFrameWait
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_IsNeedFrameWait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsNeedFrameWait) == 0x000001, "Wrong alignment on BP_EventManager_C_IsNeedFrameWait");
static_assert(sizeof(BP_EventManager_C_IsNeedFrameWait) == 0x000001, "Wrong size on BP_EventManager_C_IsNeedFrameWait");
static_assert(offsetof(BP_EventManager_C_IsNeedFrameWait, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsNeedFrameWait::ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Set Capture Actor Hidden in Game
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewHidden;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game) == 0x000008, "Wrong alignment on BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game");
static_assert(sizeof(BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game) == 0x000010, "Wrong size on BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game");
static_assert(offsetof(BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game, NewHidden) == 0x000008, "Member 'BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game::NewHidden' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EventManager_C_Set_Capture_Actor_Hidden_in_Game::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Set All Capture Actor Hidden in Game
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game final
{
public:
	bool                                          NewHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3761[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPSpecialCaptureActor_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3762[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game) == 0x000008, "Wrong alignment on BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game");
static_assert(sizeof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game) == 0x000040, "Wrong size on BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, NewHidden) == 0x000000, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::NewHidden' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_EventManager_C_Set_All_Capture_Actor_Hidden_in_Game::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.InitRipSync
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_InitRipSync final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SubEveryFrameCapActorList_IsRemove;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStartRipSyncCrossFadeChara_Return;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStartRipSyncCrossFadeChara_Return_1;    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_InitRipSync) == 0x000008, "Wrong alignment on BP_EventManager_C_InitRipSync");
static_assert(sizeof(BP_EventManager_C_InitRipSync) == 0x000010, "Wrong size on BP_EventManager_C_InitRipSync");
static_assert(offsetof(BP_EventManager_C_InitRipSync, CaptureActor) == 0x000000, "Member 'BP_EventManager_C_InitRipSync::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitRipSync, CallFunc_SubEveryFrameCapActorList_IsRemove) == 0x000008, "Member 'BP_EventManager_C_InitRipSync::CallFunc_SubEveryFrameCapActorList_IsRemove' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitRipSync, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EventManager_C_InitRipSync::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitRipSync, CallFunc_IsStartRipSyncCrossFadeChara_Return) == 0x00000A, "Member 'BP_EventManager_C_InitRipSync::CallFunc_IsStartRipSyncCrossFadeChara_Return' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitRipSync, CallFunc_IsStartRipSyncCrossFadeChara_Return_1) == 0x00000B, "Member 'BP_EventManager_C_InitRipSync::CallFunc_IsStartRipSyncCrossFadeChara_Return_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitRipSync, CallFunc_IsValid_ReturnValue_1) == 0x00000C, "Member 'BP_EventManager_C_InitRipSync::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetSoundPressureThreshold
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_GetSoundPressureThreshold final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetSoundPressureThreshold) == 0x000004, "Wrong alignment on BP_EventManager_C_GetSoundPressureThreshold");
static_assert(sizeof(BP_EventManager_C_GetSoundPressureThreshold) == 0x000004, "Wrong size on BP_EventManager_C_GetSoundPressureThreshold");
static_assert(offsetof(BP_EventManager_C_GetSoundPressureThreshold, Value) == 0x000000, "Member 'BP_EventManager_C_GetSoundPressureThreshold::Value' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetHiddenActorForTagName
// 0x004C (0x004C - 0x0000)
struct BP_EventManager_C_SetHiddenActorForTagName final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHiddenInGame;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3763[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TagName;                                           // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeepHidden;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3764[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_find;                                            // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3765[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3766[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3767[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3768[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventHiddenActorForTagNameData       K2Node_MakeStruct_FEventHiddenActorForTagNameData; // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetHiddenActorForTagName) == 0x000004, "Wrong alignment on BP_EventManager_C_SetHiddenActorForTagName");
static_assert(sizeof(BP_EventManager_C_SetHiddenActorForTagName) == 0x00004C, "Wrong size on BP_EventManager_C_SetHiddenActorForTagName");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, FlagIn) == 0x000000, "Member 'BP_EventManager_C_SetHiddenActorForTagName::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, IsHiddenInGame) == 0x000001, "Member 'BP_EventManager_C_SetHiddenActorForTagName::IsHiddenInGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, TagName) == 0x000004, "Member 'BP_EventManager_C_SetHiddenActorForTagName::TagName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, IsKeepHidden) == 0x00000C, "Member 'BP_EventManager_C_SetHiddenActorForTagName::IsKeepHidden' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, L_index) == 0x000010, "Member 'BP_EventManager_C_SetHiddenActorForTagName::L_index' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, L_find) == 0x000014, "Member 'BP_EventManager_C_SetHiddenActorForTagName::L_find' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, Temp_bool_True_if_break_was_hit_Variable) == 0x000015, "Member 'BP_EventManager_C_SetHiddenActorForTagName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EventManager_C_SetHiddenActorForTagName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_SetHiddenActorForTagName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_EventManager_C_SetHiddenActorForTagName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EventManager_C_SetHiddenActorForTagName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetHiddenActorForTagName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_SetHiddenActorForTagName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetHiddenActorForTagName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, K2Node_MakeStruct_FEventHiddenActorForTagNameData) == 0x000034, "Member 'BP_EventManager_C_SetHiddenActorForTagName::K2Node_MakeStruct_FEventHiddenActorForTagNameData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, CallFunc_Array_AddUnique_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_SetHiddenActorForTagName::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_SetHiddenActorForTagName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetHiddenActorForTagName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_SetHiddenActorForTagName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetTeleportTransformAndSweepLocation
// 0x0150 (0x0150 - 0x0000)
struct BP_EventManager_C_GetTeleportTransformAndSweepLocation final
{
public:
	struct FTransform                             TransformIn;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UCapsuleComponent*                      CapsuleComponentIn;                                // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3769[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutTransform;                                      // 0x0040(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                OutSweepLocation;                                  // 0x0070(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_sweepLocation;                                   // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_376A[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             L_transform;                                       // 0x0090(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetTeleportTransformAndSweepLocation) == 0x000010, "Wrong alignment on BP_EventManager_C_GetTeleportTransformAndSweepLocation");
static_assert(sizeof(BP_EventManager_C_GetTeleportTransformAndSweepLocation) == 0x000150, "Wrong size on BP_EventManager_C_GetTeleportTransformAndSweepLocation");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, TransformIn) == 0x000000, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::TransformIn' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CapsuleComponentIn) == 0x000030, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CapsuleComponentIn' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, OutTransform) == 0x000040, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::OutTransform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, OutSweepLocation) == 0x000070, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::OutSweepLocation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, L_sweepLocation) == 0x00007C, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::L_sweepLocation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, L_transform) == 0x000090, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::L_transform' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakTransform_Location) == 0x0000C4, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakTransform_Rotation) == 0x0000D0, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakTransform_Scale) == 0x0000DC, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakVector_X) == 0x0000E8, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakVector_Y) == 0x0000EC, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakVector_X_1) == 0x0000F4, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_BreakVector_Z_1) == 0x0000FC, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_MakeVector_ReturnValue) == 0x000108, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000114, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetTeleportTransformAndSweepLocation, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_EventManager_C_GetTeleportTransformAndSweepLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ProcessBrainFieldRemainingTimeCheck
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck final
{
public:
	struct FFEventTriggerCommandData              EventTriggerCommandData;                           // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376B[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBrainFieldRemainTime_bResult;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck) == 0x000008, "Wrong alignment on BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck");
static_assert(sizeof(BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck) == 0x000090, "Wrong size on BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck");
static_assert(offsetof(BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck, EventTriggerCommandData) == 0x000000, "Member 'BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck::EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck, Result) == 0x000078, "Member 'BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck::Result' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck, CallFunc_GetBrainFieldManager_Manager) == 0x000080, "Member 'BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck, CallFunc_CheckBrainFieldRemainTime_bResult) == 0x000088, "Member 'BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck::CallFunc_CheckBrainFieldRemainTime_bResult' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x00008A, "Member 'BP_EventManager_C_ProcessBrainFieldRemainingTimeCheck::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.HiddenSetoMask
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_HiddenSetoMask final
{
public:
	bool                                          Param_bHidden;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_HiddenSetoMask) == 0x000001, "Wrong alignment on BP_EventManager_C_HiddenSetoMask");
static_assert(sizeof(BP_EventManager_C_HiddenSetoMask) == 0x000001, "Wrong size on BP_EventManager_C_HiddenSetoMask");
static_assert(offsetof(BP_EventManager_C_HiddenSetoMask, Param_bHidden) == 0x000000, "Member 'BP_EventManager_C_HiddenSetoMask::Param_bHidden' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ChangeCurrentMontageToEndPos
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_ChangeCurrentMontageToEndPos final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ChangeCurrentMontageToEndPos) == 0x000008, "Wrong alignment on BP_EventManager_C_ChangeCurrentMontageToEndPos");
static_assert(sizeof(BP_EventManager_C_ChangeCurrentMontageToEndPos) == 0x000018, "Wrong size on BP_EventManager_C_ChangeCurrentMontageToEndPos");
static_assert(offsetof(BP_EventManager_C_ChangeCurrentMontageToEndPos, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_ChangeCurrentMontageToEndPos::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeCurrentMontageToEndPos, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_ChangeCurrentMontageToEndPos::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeCurrentMontageToEndPos, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_ChangeCurrentMontageToEndPos::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearHiddenActorforTagName
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_ClearHiddenActorforTagName final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ClearHiddenActorforTagName) == 0x000004, "Wrong alignment on BP_EventManager_C_ClearHiddenActorforTagName");
static_assert(sizeof(BP_EventManager_C_ClearHiddenActorforTagName) == 0x000018, "Wrong size on BP_EventManager_C_ClearHiddenActorforTagName");
static_assert(offsetof(BP_EventManager_C_ClearHiddenActorforTagName, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventManager_C_ClearHiddenActorforTagName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearHiddenActorforTagName, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_EventManager_C_ClearHiddenActorforTagName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearHiddenActorforTagName, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EventManager_C_ClearHiddenActorforTagName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearHiddenActorforTagName, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_ClearHiddenActorforTagName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearHiddenActorforTagName, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_ClearHiddenActorforTagName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearHiddenActorforTagName, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_ClearHiddenActorforTagName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PrivateSaveSequencerCharaTransform
// 0x01B0 (0x01B0 - 0x0000)
struct BP_EventManager_C_PrivateSaveSequencerCharaTransform final
{
public:
	bool                                          SetupActor;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableEventUnControlMgrFlag_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0038(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376F[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3770[0xF];                                     // 0x0071(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3771[0x8];                                     // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3772[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3773[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_PrivateSaveSequencerCharaTransform) == 0x000010, "Wrong alignment on BP_EventManager_C_PrivateSaveSequencerCharaTransform");
static_assert(sizeof(BP_EventManager_C_PrivateSaveSequencerCharaTransform) == 0x0001B0, "Wrong size on BP_EventManager_C_PrivateSaveSequencerCharaTransform");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, SetupActor) == 0x000000, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::SetupActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_EnableEventUnControlMgrFlag_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_EnableEventUnControlMgrFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_GetEnemyManager_Manager) == 0x000018, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_GetEnemyList_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_GetPlayerList_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, K2Node_DynamicCast_AsRSBattle_Character) == 0x000058, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, K2Node_DynamicCast_AsRSBattle_Character_1) == 0x000068, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::K2Node_DynamicCast_AsRSBattle_Character_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0000B0, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_BreakTransform_Rotation) == 0x0000EC, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_BreakTransform_Location_1) == 0x000104, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_BreakTransform_Rotation_1) == 0x000110, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_BreakTransform_Scale_1) == 0x00011C, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x000160, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_Array_Length_ReturnValue_1) == 0x000194, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, Temp_int_Loop_Counter_Variable_1) == 0x00019C, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A0, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PrivateSaveSequencerCharaTransform, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A4, "Member 'BP_EventManager_C_PrivateSaveSequencerCharaTransform::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetCacheActorHiddenInGameFromTagName
// 0x0158 (0x0158 - 0x0000)
struct BP_EventManager_C_SetCacheActorHiddenInGameFromTagName final
{
public:
	class FName                                   TagName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHiddenInGame;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3774[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Actors;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveComp;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ECollisionEnabled>                     PrimitiveCollisions;                               // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            PrimitiveComps;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FEventCacheActorHiddenInGameActor> Cache;                                             // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3775[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3776[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3777[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue_1;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3778[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventCacheActorHiddenInGame           CallFunc_Map_Find_Value;                           // 0x00C8(0x0010)(ContainsInstancedReference)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3779[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventCacheActorHiddenInGame           K2Node_MakeStruct_EventCacheActorHiddenInGame;     // 0x00E0(0x0010)(ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_377A[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_377B[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventCacheActorHiddenInGameActor      K2Node_MakeStruct_EventCacheActorHiddenInGameActor; // 0x0108(0x0028)(ContainsInstancedReference)
	const class UPrimitiveComponent*              Temp_object_Variable;                              // 0x0130(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventCacheActorHiddenInGame           CallFunc_Map_Find_Value_1;                         // 0x0140(0x0010)(ContainsInstancedReference)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName) == 0x000008, "Wrong alignment on BP_EventManager_C_SetCacheActorHiddenInGameFromTagName");
static_assert(sizeof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName) == 0x000158, "Wrong size on BP_EventManager_C_SetCacheActorHiddenInGameFromTagName");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, TagName) == 0x000000, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::TagName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, IsHiddenInGame) == 0x000008, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::IsHiddenInGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Actors) == 0x000010, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Actors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, PrimitiveComp) == 0x000020, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::PrimitiveComp' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Actor) == 0x000028, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Actor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, PrimitiveCollisions) == 0x000030, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::PrimitiveCollisions' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, PrimitiveComps) == 0x000040, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::PrimitiveComps' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Cache) == 0x000050, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Cache' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Loop_Num_Variable) == 0x00007C, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Loop_Num_Variable_1) == 0x000090, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Loop_Counter_Variable_2) == 0x000098, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Array_Index_Variable_1) == 0x0000A0, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Array_Index_Variable_2) == 0x0000A4, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Loop_Num_Variable_2) == 0x0000A8, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Array_Index_Variable_3) == 0x0000B0, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Loop_Num_Variable_3) == 0x0000B4, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_GetCollisionEnabled_ReturnValue) == 0x0000B9, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BA, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Map_Remove_ReturnValue) == 0x0000BB, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_GetCollisionEnabled_ReturnValue_1) == 0x0000C1, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_GetCollisionEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Map_Find_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, K2Node_MakeStruct_EventCacheActorHiddenInGame) == 0x0000E0, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::K2Node_MakeStruct_EventCacheActorHiddenInGame' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_int_Loop_Counter_Variable_3) == 0x0000F0, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000F4, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000F8, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Array_Length_ReturnValue_2) == 0x0000FC, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000100, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Array_Length_ReturnValue_3) == 0x000104, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, K2Node_MakeStruct_EventCacheActorHiddenInGameActor) == 0x000108, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::K2Node_MakeStruct_EventCacheActorHiddenInGameActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, Temp_object_Variable) == 0x000130, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Array_Length_ReturnValue_4) == 0x00013C, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Map_Find_Value_1) == 0x000140, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetCacheActorHiddenInGameFromTagName, CallFunc_Map_Find_ReturnValue_1) == 0x000150, "Member 'BP_EventManager_C_SetCacheActorHiddenInGameFromTagName::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Clear Cache Actor Hidden in Game from Tag Name
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name final
{
public:
	class FName                                   TagName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name) == 0x000004, "Wrong alignment on BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name");
static_assert(sizeof(BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name) == 0x00000C, "Wrong size on BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name");
static_assert(offsetof(BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name, TagName) == 0x000000, "Member 'BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name::TagName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name, CallFunc_Map_Remove_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_Clear_Cache_Actor_Hidden_in_Game_from_Tag_Name::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetPlayerCostumeSettings
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetPlayerCostumeSettings final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DefaultCostume;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoAttachments;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_377C[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InstanceIndex;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetPlayerCostumeSettings) == 0x000004, "Wrong alignment on BP_EventManager_C_SetPlayerCostumeSettings");
static_assert(sizeof(BP_EventManager_C_SetPlayerCostumeSettings) == 0x000018, "Wrong size on BP_EventManager_C_SetPlayerCostumeSettings");
static_assert(offsetof(BP_EventManager_C_SetPlayerCostumeSettings, PlayerId) == 0x000000, "Member 'BP_EventManager_C_SetPlayerCostumeSettings::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPlayerCostumeSettings, DefaultCostume) == 0x000001, "Member 'BP_EventManager_C_SetPlayerCostumeSettings::DefaultCostume' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPlayerCostumeSettings, NoAttachments) == 0x000002, "Member 'BP_EventManager_C_SetPlayerCostumeSettings::NoAttachments' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPlayerCostumeSettings, InstanceIndex) == 0x000004, "Member 'BP_EventManager_C_SetPlayerCostumeSettings::InstanceIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPlayerCostumeSettings, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SetPlayerCostumeSettings::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPlayerCostumeSettings, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_SetPlayerCostumeSettings::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPlayerCostumeSettings, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000010, "Member 'BP_EventManager_C_SetPlayerCostumeSettings::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetPlayerCostumeSettings, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_SetPlayerCostumeSettings::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearAllPlayerCostumeSettings
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_ClearAllPlayerCostumeSettings final
{
public:
	bool                                          ResetBindingActors;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_377E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InstanceIndex;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377F[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3780[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3781[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3782[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ClearAllPlayerCostumeSettings) == 0x000004, "Wrong alignment on BP_EventManager_C_ClearAllPlayerCostumeSettings");
static_assert(sizeof(BP_EventManager_C_ClearAllPlayerCostumeSettings) == 0x000030, "Wrong size on BP_EventManager_C_ClearAllPlayerCostumeSettings");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, ResetBindingActors) == 0x000000, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::ResetBindingActors' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, InstanceIndex) == 0x000004, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::InstanceIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, Temp_bool_Variable) == 0x000008, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, Temp_bool_Variable_1) == 0x000009, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_MakeLiteralByte_ReturnValue) == 0x00000A, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, Temp_int_Variable) == 0x00000C, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_GetValidValue_ReturnValue) == 0x000015, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00001C, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000020, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000024, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000025, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000028, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ClearAllPlayerCostumeSettings, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_ClearAllPlayerCostumeSettings::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetPlayerCostumeSettings
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_GetPlayerCostumeSettings final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DefaultCostume;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoAttachments;                                     // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetNoAttachments;                                  // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetDefaultCostume;                                 // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3783[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3784[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetPlayerCostumeSettings) == 0x000004, "Wrong alignment on BP_EventManager_C_GetPlayerCostumeSettings");
static_assert(sizeof(BP_EventManager_C_GetPlayerCostumeSettings) == 0x000020, "Wrong size on BP_EventManager_C_GetPlayerCostumeSettings");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, PlayerId) == 0x000000, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, DefaultCostume) == 0x000001, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::DefaultCostume' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, NoAttachments) == 0x000002, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::NoAttachments' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, RetNoAttachments) == 0x000003, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::RetNoAttachments' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, RetDefaultCostume) == 0x000004, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::RetDefaultCostume' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, InstanceIndex) == 0x000008, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::InstanceIndex' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, CallFunc_MakeLiteralByte_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000014, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPlayerCostumeSettings, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00001D, "Member 'BP_EventManager_C_GetPlayerCostumeSettings::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CheckScenarioFlagListC
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_CheckScenarioFlagListC final
{
public:
	TArray<struct FShowDestinationFlgCheck>       FlgCheckList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlagListC_ReturnBool;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CheckScenarioFlagListC) == 0x000008, "Wrong alignment on BP_EventManager_C_CheckScenarioFlagListC");
static_assert(sizeof(BP_EventManager_C_CheckScenarioFlagListC) == 0x000018, "Wrong size on BP_EventManager_C_CheckScenarioFlagListC");
static_assert(offsetof(BP_EventManager_C_CheckScenarioFlagListC, FlgCheckList) == 0x000000, "Member 'BP_EventManager_C_CheckScenarioFlagListC::FlgCheckList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckScenarioFlagListC, ReturnValue) == 0x000010, "Member 'BP_EventManager_C_CheckScenarioFlagListC::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckScenarioFlagListC, CallFunc_CheckScenarioFlagListC_ReturnBool) == 0x000011, "Member 'BP_EventManager_C_CheckScenarioFlagListC::CallFunc_CheckScenarioFlagListC_ReturnBool' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CheckProgressID
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_CheckProgressID final
{
public:
	int32                                         MinProgressID;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxProgressID;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckProgressID_ReturnEnable1;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CheckProgressID) == 0x000004, "Wrong alignment on BP_EventManager_C_CheckProgressID");
static_assert(sizeof(BP_EventManager_C_CheckProgressID) == 0x00000C, "Wrong size on BP_EventManager_C_CheckProgressID");
static_assert(offsetof(BP_EventManager_C_CheckProgressID, MinProgressID) == 0x000000, "Member 'BP_EventManager_C_CheckProgressID::MinProgressID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckProgressID, MaxProgressID) == 0x000004, "Member 'BP_EventManager_C_CheckProgressID::MaxProgressID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckProgressID, ReturnValue) == 0x000008, "Member 'BP_EventManager_C_CheckProgressID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckProgressID, CallFunc_CheckProgressID_ReturnEnable1) == 0x000009, "Member 'BP_EventManager_C_CheckProgressID::CallFunc_CheckProgressID_ReturnEnable1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsVisibleCharaNameForProgressID
// 0x0050 (0x0050 - 0x0000)
struct BP_EventManager_C_IsVisibleCharaNameForProgressID final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3785[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue_1;                        // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3786[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsVisibleCharaNameForProgressID) == 0x000008, "Wrong alignment on BP_EventManager_C_IsVisibleCharaNameForProgressID");
static_assert(sizeof(BP_EventManager_C_IsVisibleCharaNameForProgressID) == 0x000050, "Wrong size on BP_EventManager_C_IsVisibleCharaNameForProgressID");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, PlayerId) == 0x000000, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, ReturnValue) == 0x000001, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_Greater_IntInt_ReturnValue) == 0x000003, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000006, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000007, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000008, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_Mid_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_Mid_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_Mid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, CallFunc_Conv_StringToInt_ReturnValue) == 0x000044, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsVisibleCharaNameForProgressID, K2Node_SwitchInteger_CmpSuccess) == 0x000048, "Member 'BP_EventManager_C_IsVisibleCharaNameForProgressID::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsValidEventCommand
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_IsValidEventCommand final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3787[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsValidEventCommand) == 0x000004, "Wrong alignment on BP_EventManager_C_IsValidEventCommand");
static_assert(sizeof(BP_EventManager_C_IsValidEventCommand) == 0x00000C, "Wrong size on BP_EventManager_C_IsValidEventCommand");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommand, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsValidEventCommand::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommand, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_IsValidEventCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommand, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsValidEventCommand::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.isEndPresentSequencer
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_IsEndPresentSequencer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3788[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsEndPresentSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_IsEndPresentSequencer");
static_assert(sizeof(BP_EventManager_C_IsEndPresentSequencer) == 0x000020, "Wrong size on BP_EventManager_C_IsEndPresentSequencer");
static_assert(offsetof(BP_EventManager_C_IsEndPresentSequencer, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsEndPresentSequencer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPresentSequencer, CallFunc_GetPresentSequencer_PresentSequencer) == 0x000008, "Member 'BP_EventManager_C_IsEndPresentSequencer::CallFunc_GetPresentSequencer_PresentSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPresentSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_IsEndPresentSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPresentSequencer, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_IsEndPresentSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPresentSequencer, CallFunc_IsPlaying_ReturnValue) == 0x000019, "Member 'BP_EventManager_C_IsEndPresentSequencer::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsEndPresentSequencer, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_EventManager_C_IsEndPresentSequencer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayAjitoStaySequencer
// 0x0628 (0x0628 - 0x0000)
struct BP_EventManager_C_PlayAjitoStaySequencer final
{
public:
	class ULevelSequence*                         Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAjitoMember*                           BindForCharaActor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAjitoMember*                           BindFromCharaActor;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3789[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         SeqSpawnActorList;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FName                                   PlayerSeqTagName;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378A[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378B[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378C[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378D[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventStart_ReturnValue;            // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378E[0x5];                                     // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_1;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_2;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer_3;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3790[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3791[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3792[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0158(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0170(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0200(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0210(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0228(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0240(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0280(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x02C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x02D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02E0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x02F8(0x0018)()
	TArray<class FText>                           K2Node_MakeArray_Array_5;                          // 0x0310(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x0328(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3793[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3794[0x3];                                     // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_Array_Get_Item_1;                         // 0x0354(0x0018)(NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3795[0x3];                                     // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3796[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3797[0x7];                                     // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3798[0x2];                                     // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3799[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue_1;                  // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue_1;                   // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_6;                          // 0x03D0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379A[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x03F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0410(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0450(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x0490(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_8;                          // 0x04A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x04B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x04C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x04E0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0520(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_9;                          // 0x0560(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_10;                         // 0x0570(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0580(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x0598(0x0018)()
	TArray<class FText>                           K2Node_MakeArray_Array_11;                         // 0x05B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379B[0x7];                                     // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1; // 0x05C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind_1;  // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379C[0x7];                                     // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             CallFunc_Array_Get_Item_2;                         // 0x05E8(0x0018)(NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0600(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379D[0x2];                                     // 0x0616(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_PlayAjitoStaySequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_PlayAjitoStaySequencer");
static_assert(sizeof(BP_EventManager_C_PlayAjitoStaySequencer) == 0x000628, "Wrong size on BP_EventManager_C_PlayAjitoStaySequencer");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Sequence) == 0x000000, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Sequence' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, BindForCharaActor) == 0x000008, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::BindForCharaActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, BindFromCharaActor) == 0x000010, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::BindFromCharaActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, PlayRate) == 0x000018, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::PlayRate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, SeqSpawnActorList) == 0x000020, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::SeqSpawnActorList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, PlayerSeqTagName) == 0x000030, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::PlayerSeqTagName' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, PlayerList) == 0x000038, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Array_Index_Variable_2) == 0x000068, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Loop_Counter_Variable_2) == 0x000074, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Array_Index_Variable_3) == 0x000080, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_DynamicCast_AsEvent_Interface) == 0x000090, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_DynamicEventStart_ReturnValue) == 0x0000A2, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_DynamicEventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPresentSequencer_PresentSequencer) == 0x0000A8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPresentSequencer_PresentSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPresentSequencer_PresentSequencer_1) == 0x0000B0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPresentSequencer_PresentSequencer_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPresentSequencer_PresentSequencer_2) == 0x0000B8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPresentSequencer_PresentSequencer_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x0000C0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPresentSequencer_PresentSequencer_3) == 0x0000D0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPresentSequencer_PresentSequencer_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000D8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_IsValid_ReturnValue_2) == 0x0000E0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPostProcessManager_Manager) == 0x0000E8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_IsValid_ReturnValue_3) == 0x0000F0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_IsValid_ReturnValue_4) == 0x000108, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Loop_Counter_Variable_3) == 0x00010C, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetObjectName_ReturnValue) == 0x000110, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_RightChop_ReturnValue) == 0x000120, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Add_IntInt_ReturnValue_3) == 0x000130, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_LeftChop_ReturnValue) == 0x000138, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Concat_StrStr_ReturnValue) == 0x000148, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Conv_StringToText_ReturnValue) == 0x000158, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeStruct_FormatArgumentData) == 0x000170, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_1) == 0x0001F0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_2) == 0x000200, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Format_ReturnValue) == 0x000210, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Format_ReturnValue_1) == 0x000228, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeStruct_FormatArgumentData_2) == 0x000240, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeStruct_FormatArgumentData_3) == 0x000280, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_3) == 0x0002C0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_4) == 0x0002D0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Format_ReturnValue_2) == 0x0002E0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Format_ReturnValue_3) == 0x0002F8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_5) == 0x000310, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000320, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x000328, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x000338, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_DynamicCast_AsPlayer_Interface) == 0x000340, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_DynamicCast_bSuccess_1) == 0x000350, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Get_Item_1) == 0x000354, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPlayerID_ReturnValue) == 0x00036C, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Length_ReturnValue_2) == 0x000370, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000378, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000380, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_DynamicCast_AsRSBattle_Player) == 0x000388, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_DynamicCast_bSuccess_2) == 0x000390, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_IsValid_ReturnValue_5) == 0x000391, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_int_Loop_Num_Variable) == 0x000394, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Less_IntInt_ReturnValue_2) == 0x000398, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetObjectName_ReturnValue_1) == 0x0003A0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_RightChop_ReturnValue_1) == 0x0003B0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_RightChop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_LeftChop_ReturnValue_1) == 0x0003C0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_LeftChop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_6) == 0x0003D0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0003E0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, Temp_byte_Variable) == 0x0003F0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0003F8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeStruct_FormatArgumentData_4) == 0x000410, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeStruct_FormatArgumentData_5) == 0x000450, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_7) == 0x000490, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_8) == 0x0004A0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Format_ReturnValue_4) == 0x0004B0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Format_ReturnValue_5) == 0x0004C8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeStruct_FormatArgumentData_6) == 0x0004E0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeStruct_FormatArgumentData_7) == 0x000520, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_9) == 0x000560, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_10) == 0x000570, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Format_ReturnValue_6) == 0x000580, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Format_ReturnValue_7) == 0x000598, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_MakeArray_Array_11) == 0x0005B0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_MakeArray_Array_11' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, K2Node_SwitchEnum_CmpSuccess) == 0x0005C0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1) == 0x0005C8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetSequenceObjectBindingIDList_IsFind_1) == 0x0005D8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetSequenceObjectBindingIDList_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPlayerManager_PlayerManager) == 0x0005E0, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Get_Item_2) == 0x0005E8, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_GetPlayerList_ReturnValue) == 0x000600, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Length_ReturnValue_3) == 0x000610, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Less_IntInt_ReturnValue_3) == 0x000614, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_ActorHasTag_ReturnValue) == 0x000615, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Length_ReturnValue_4) == 0x000618, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Array_Length_ReturnValue_5) == 0x00061C, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayAjitoStaySequencer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000620, "Member 'BP_EventManager_C_PlayAjitoStaySequencer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndAjitoStaySequencer
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_EndAjitoStaySequencer final
{
public:
	class AAjitoMember*                           BindForCharaActor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAjitoMember*                           BindFromCharaActor;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetPresentSequencer_PresentSequencer;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndAjitoStaySequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_EndAjitoStaySequencer");
static_assert(sizeof(BP_EventManager_C_EndAjitoStaySequencer) == 0x000038, "Wrong size on BP_EventManager_C_EndAjitoStaySequencer");
static_assert(offsetof(BP_EventManager_C_EndAjitoStaySequencer, BindForCharaActor) == 0x000000, "Member 'BP_EventManager_C_EndAjitoStaySequencer::BindForCharaActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoStaySequencer, BindFromCharaActor) == 0x000008, "Member 'BP_EventManager_C_EndAjitoStaySequencer::BindFromCharaActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoStaySequencer, PlayerList) == 0x000010, "Member 'BP_EventManager_C_EndAjitoStaySequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoStaySequencer, CallFunc_GetPresentSequencer_PresentSequencer) == 0x000020, "Member 'BP_EventManager_C_EndAjitoStaySequencer::CallFunc_GetPresentSequencer_PresentSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoStaySequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_EndAjitoStaySequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoStaySequencer, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_EndAjitoStaySequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoStaySequencer, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_EventManager_C_EndAjitoStaySequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndAjitoStaySequencer, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'BP_EventManager_C_EndAjitoStaySequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnAjitoStaySequencerFinished
// 0x0070 (0x0070 - 0x0000)
struct BP_EventManager_C_OnAjitoStaySequencerFinished final
{
public:
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379F[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventEnd_ReturnValue;              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A0[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0060(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_OnAjitoStaySequencerFinished) == 0x000008, "Wrong alignment on BP_EventManager_C_OnAjitoStaySequencerFinished");
static_assert(sizeof(BP_EventManager_C_OnAjitoStaySequencerFinished) == 0x000070, "Wrong size on BP_EventManager_C_OnAjitoStaySequencerFinished");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, PlayerList) == 0x000000, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_GetPostProcessManager_Manager) == 0x000020, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, K2Node_DynamicCast_AsEvent_Interface) == 0x000038, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_DynamicEventEnd_ReturnValue) == 0x00004A, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_DynamicEventEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_IsValid_ReturnValue) == 0x00004B, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_GetPlayerManager_PlayerManager) == 0x000058, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnAjitoStaySequencerFinished, CallFunc_GetPlayerList_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_OnAjitoStaySequencerFinished::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.InitAjitoStayRandomData
// 0x0078 (0x0078 - 0x0000)
struct BP_EventManager_C_InitAjitoStayRandomData final
{
public:
	class UDataTable*                             LocalAjitoStayDT;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A2[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A3[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          Temp_softobject_Variable;                          // 0x0038(0x0028)(ConstParm, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadObjectGeneric_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_InitAjitoStayRandomData) == 0x000008, "Wrong alignment on BP_EventManager_C_InitAjitoStayRandomData");
static_assert(sizeof(BP_EventManager_C_InitAjitoStayRandomData) == 0x000078, "Wrong size on BP_EventManager_C_InitAjitoStayRandomData");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, LocalAjitoStayDT) == 0x000000, "Member 'BP_EventManager_C_InitAjitoStayRandomData::LocalAjitoStayDT' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EventManager_C_InitAjitoStayRandomData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_EventManager_C_InitAjitoStayRandomData::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventManager_C_InitAjitoStayRandomData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'BP_EventManager_C_InitAjitoStayRandomData::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_InitAjitoStayRandomData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_InitAjitoStayRandomData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_InitAjitoStayRandomData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, Temp_softobject_Variable) == 0x000038, "Member 'BP_EventManager_C_InitAjitoStayRandomData::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, CallFunc_LoadObjectGeneric_ReturnValue) == 0x000060, "Member 'BP_EventManager_C_InitAjitoStayRandomData::CallFunc_LoadObjectGeneric_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, K2Node_DynamicCast_AsData_Table) == 0x000068, "Member 'BP_EventManager_C_InitAjitoStayRandomData::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_EventManager_C_InitAjitoStayRandomData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_InitAjitoStayRandomData, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_EventManager_C_InitAjitoStayRandomData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsValidEventCommandEnemyExterminationEvent
// 0x0128 (0x0128 - 0x0000)
struct BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              EventTriggerCommandData;                           // 0x0008(0x0078)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEventTriggerCommandData              LocalEventTriggerCommandData;                      // 0x0080(0x0078)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidCommandType;                                // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A5[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A6[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A7[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A8[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent");
static_assert(sizeof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent) == 0x000128, "Wrong size on BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, IsValid) == 0x000000, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, EventTriggerCommandData) == 0x000008, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, LocalEventTriggerCommandData) == 0x000080, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::LocalEventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, IsValidCommandType) == 0x0000F8, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::IsValidCommandType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, Temp_bool_True_if_break_was_hit_Variable) == 0x0000F9, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, Temp_int_Array_Index_Variable) == 0x0000FC, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, Temp_int_Loop_Num_Variable) == 0x000104, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_BooleanAND_ReturnValue) == 0x000114, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00011C, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00011D, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00011E, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_BooleanAND_ReturnValue_1) == 0x00011F, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent, CallFunc_BooleanOR_ReturnValue) == 0x000120, "Member 'BP_EventManager_C_IsValidEventCommandEnemyExterminationEvent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.OnBattleFieldEnd
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_OnBattleFieldEnd final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidEventCommandEnemyExterminationEvent_IsValid; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A9[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              CallFunc_IsValidEventCommandEnemyExterminationEvent_EventTriggerCommandData; // 0x0008(0x0078)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCutSceneEvent_IsCutSceneEvent;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37AA[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_OnBattleFieldEnd) == 0x000008, "Wrong alignment on BP_EventManager_C_OnBattleFieldEnd");
static_assert(sizeof(BP_EventManager_C_OnBattleFieldEnd) == 0x000090, "Wrong size on BP_EventManager_C_OnBattleFieldEnd");
static_assert(offsetof(BP_EventManager_C_OnBattleFieldEnd, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_OnBattleFieldEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnBattleFieldEnd, CallFunc_IsValidEventCommandEnemyExterminationEvent_IsValid) == 0x000001, "Member 'BP_EventManager_C_OnBattleFieldEnd::CallFunc_IsValidEventCommandEnemyExterminationEvent_IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnBattleFieldEnd, CallFunc_IsValidEventCommandEnemyExterminationEvent_EventTriggerCommandData) == 0x000008, "Member 'BP_EventManager_C_OnBattleFieldEnd::CallFunc_IsValidEventCommandEnemyExterminationEvent_EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnBattleFieldEnd, CallFunc_IsCutSceneEvent_IsCutSceneEvent) == 0x000080, "Member 'BP_EventManager_C_OnBattleFieldEnd::CallFunc_IsCutSceneEvent_IsCutSceneEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_OnBattleFieldEnd, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000088, "Member 'BP_EventManager_C_OnBattleFieldEnd::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticMainPlayerCastShadow
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_SetStaticMainPlayerCastShadow final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableFlag;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37AB[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_GetPlayerInstance_MenuPlayer;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetStaticMainPlayerCastShadow) == 0x000008, "Wrong alignment on BP_EventManager_C_SetStaticMainPlayerCastShadow");
static_assert(sizeof(BP_EventManager_C_SetStaticMainPlayerCastShadow) == 0x000020, "Wrong size on BP_EventManager_C_SetStaticMainPlayerCastShadow");
static_assert(offsetof(BP_EventManager_C_SetStaticMainPlayerCastShadow, PlayerId) == 0x000000, "Member 'BP_EventManager_C_SetStaticMainPlayerCastShadow::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticMainPlayerCastShadow, EnableFlag) == 0x000001, "Member 'BP_EventManager_C_SetStaticMainPlayerCastShadow::EnableFlag' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticMainPlayerCastShadow, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_SetStaticMainPlayerCastShadow::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticMainPlayerCastShadow, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SetStaticMainPlayerCastShadow::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticMainPlayerCastShadow, CallFunc_GetPlayerInstance_MenuPlayer) == 0x000010, "Member 'BP_EventManager_C_SetStaticMainPlayerCastShadow::CallFunc_GetPlayerInstance_MenuPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticMainPlayerCastShadow, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_SetStaticMainPlayerCastShadow::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetPresentSequencer
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_GetPresentSequencer final
{
public:
	class ARSLevelSequenceActor*                  PresentSequencer;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetPresentSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_GetPresentSequencer");
static_assert(sizeof(BP_EventManager_C_GetPresentSequencer) == 0x000020, "Wrong size on BP_EventManager_C_GetPresentSequencer");
static_assert(offsetof(BP_EventManager_C_GetPresentSequencer, PresentSequencer) == 0x000000, "Member 'BP_EventManager_C_GetPresentSequencer::PresentSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPresentSequencer, PlayerList) == 0x000008, "Member 'BP_EventManager_C_GetPresentSequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetPresentSequencer, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EventManager_C_GetPresentSequencer::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SpawnPresentSequencer
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_SpawnPresentSequencer final
{
public:
	class ARSLevelSequenceActor*                  LocalSequencer;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	uint8                                         Pad_37AD[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AE[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SpawnPresentSequencer) == 0x000010, "Wrong alignment on BP_EventManager_C_SpawnPresentSequencer");
static_assert(sizeof(BP_EventManager_C_SpawnPresentSequencer) == 0x000090, "Wrong size on BP_EventManager_C_SpawnPresentSequencer");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, LocalSequencer) == 0x000000, "Member 'BP_EventManager_C_SpawnPresentSequencer::LocalSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, PlayerList) == 0x000008, "Member 'BP_EventManager_C_SpawnPresentSequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_SpawnPresentSequencer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_EventManager_C_SpawnPresentSequencer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_SpawnPresentSequencer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_EventManager_C_SpawnPresentSequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_SpawnPresentSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, CallFunc_MakeLiteralByte_ReturnValue) == 0x000071, "Member 'BP_EventManager_C_SpawnPresentSequencer::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_EventManager_C_SpawnPresentSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SpawnPresentSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_EventManager_C_SpawnPresentSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.DestroyPresentSequencer
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_DestroyPresentSequencer final
{
public:
	class ARSLevelSequenceActor*                  LocalSequencer;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_DestroyPresentSequencer) == 0x000008, "Wrong alignment on BP_EventManager_C_DestroyPresentSequencer");
static_assert(sizeof(BP_EventManager_C_DestroyPresentSequencer) == 0x000028, "Wrong size on BP_EventManager_C_DestroyPresentSequencer");
static_assert(offsetof(BP_EventManager_C_DestroyPresentSequencer, LocalSequencer) == 0x000000, "Member 'BP_EventManager_C_DestroyPresentSequencer::LocalSequencer' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DestroyPresentSequencer, PlayerList) == 0x000008, "Member 'BP_EventManager_C_DestroyPresentSequencer::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DestroyPresentSequencer, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EventManager_C_DestroyPresentSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DestroyPresentSequencer, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_DestroyPresentSequencer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_DestroyPresentSequencer, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_DestroyPresentSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsValidBattleSimulatorSystemEventCommand
// 0x0120 (0x0120 - 0x0000)
struct BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37AF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              EventTriggerCommandData;                           // 0x0008(0x0078)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEventTriggerCommandData              LocalEventTriggerCommandData;                      // 0x0080(0x0078)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidCommandType;                                // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B0[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B1[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B2[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B3[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand) == 0x000008, "Wrong alignment on BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand");
static_assert(sizeof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand) == 0x000120, "Wrong size on BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, IsValid) == 0x000000, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::IsValid' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, EventTriggerCommandData) == 0x000008, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, LocalEventTriggerCommandData) == 0x000080, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::LocalEventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, IsValidCommandType) == 0x0000F8, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::IsValidCommandType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, Temp_bool_True_if_break_was_hit_Variable) == 0x0000F9, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, Temp_int_Array_Index_Variable) == 0x0000FC, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, CallFunc_Not_PreBool_ReturnValue) == 0x000100, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, Temp_int_Loop_Num_Variable) == 0x000104, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, CallFunc_BooleanAND_ReturnValue) == 0x000114, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BP_EventManager_C_IsValidBattleSimulatorSystemEventCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetStaticEventSkyPause
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetStaticEventSkyPause final
{
public:
	bool                                          Pause;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B4[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_static_sky_C*                       K2Node_DynamicCast_AsBP_Static_Sky;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetStaticEventSkyPause) == 0x000008, "Wrong alignment on BP_EventManager_C_SetStaticEventSkyPause");
static_assert(sizeof(BP_EventManager_C_SetStaticEventSkyPause) == 0x000018, "Wrong size on BP_EventManager_C_SetStaticEventSkyPause");
static_assert(offsetof(BP_EventManager_C_SetStaticEventSkyPause, Pause) == 0x000000, "Member 'BP_EventManager_C_SetStaticEventSkyPause::Pause' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticEventSkyPause, ReturnValue) == 0x000001, "Member 'BP_EventManager_C_SetStaticEventSkyPause::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticEventSkyPause, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_EventManager_C_SetStaticEventSkyPause::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticEventSkyPause, K2Node_DynamicCast_AsBP_Static_Sky) == 0x000008, "Member 'BP_EventManager_C_SetStaticEventSkyPause::K2Node_DynamicCast_AsBP_Static_Sky' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetStaticEventSkyPause, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EventManager_C_SetStaticEventSkyPause::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.HiddenEventName3DWidget
// 0x0006 (0x0006 - 0x0000)
struct BP_EventManager_C_HiddenEventName3DWidget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_HiddenEventName3DWidget) == 0x000001, "Wrong alignment on BP_EventManager_C_HiddenEventName3DWidget");
static_assert(sizeof(BP_EventManager_C_HiddenEventName3DWidget) == 0x000006, "Wrong size on BP_EventManager_C_HiddenEventName3DWidget");
static_assert(offsetof(BP_EventManager_C_HiddenEventName3DWidget, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_HiddenEventName3DWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_HiddenEventName3DWidget, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EventManager_C_HiddenEventName3DWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_HiddenEventName3DWidget, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_EventManager_C_HiddenEventName3DWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_HiddenEventName3DWidget, CallFunc_GetVisibility_ReturnValue) == 0x000003, "Member 'BP_EventManager_C_HiddenEventName3DWidget::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_HiddenEventName3DWidget, CallFunc_GetVisibility_ReturnValue_1) == 0x000004, "Member 'BP_EventManager_C_HiddenEventName3DWidget::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_HiddenEventName3DWidget, CallFunc_IsValid_ReturnValue_2) == 0x000005, "Member 'BP_EventManager_C_HiddenEventName3DWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.RestoreVisibilityEventName3DWidget
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_RestoreVisibilityEventName3DWidget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_RestoreVisibilityEventName3DWidget) == 0x000001, "Wrong alignment on BP_EventManager_C_RestoreVisibilityEventName3DWidget");
static_assert(sizeof(BP_EventManager_C_RestoreVisibilityEventName3DWidget) == 0x000004, "Wrong size on BP_EventManager_C_RestoreVisibilityEventName3DWidget");
static_assert(offsetof(BP_EventManager_C_RestoreVisibilityEventName3DWidget, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_RestoreVisibilityEventName3DWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RestoreVisibilityEventName3DWidget, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EventManager_C_RestoreVisibilityEventName3DWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RestoreVisibilityEventName3DWidget, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_EventManager_C_RestoreVisibilityEventName3DWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_RestoreVisibilityEventName3DWidget, CallFunc_IsValid_ReturnValue_2) == 0x000003, "Member 'BP_EventManager_C_RestoreVisibilityEventName3DWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsValidTimerEventCommand
// 0x0070 (0x0070 - 0x0000)
struct BP_EventManager_C_IsValidTimerEventCommand final
{
public:
	bool                                          CheckBrainTalkEvent;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WithinTime;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          IsValidCommandType;                                // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B6[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B7[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B8[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B9[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0030(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsValidTimerEventCommand) == 0x000008, "Wrong alignment on BP_EventManager_C_IsValidTimerEventCommand");
static_assert(sizeof(BP_EventManager_C_IsValidTimerEventCommand) == 0x000070, "Wrong size on BP_EventManager_C_IsValidTimerEventCommand");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CheckBrainTalkEvent) == 0x000000, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CheckBrainTalkEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, WithinTime) == 0x000004, "Member 'BP_EventManager_C_IsValidTimerEventCommand::WithinTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, ReturnValue) == 0x000008, "Member 'BP_EventManager_C_IsValidTimerEventCommand::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, IsValidCommandType) == 0x000009, "Member 'BP_EventManager_C_IsValidTimerEventCommand::IsValidCommandType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventManager_C_IsValidTimerEventCommand::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_EventManager_C_IsValidTimerEventCommand::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EventManager_C_IsValidTimerEventCommand::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BP_EventManager_C_IsValidTimerEventCommand::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_Less_IntInt_ReturnValue) == 0x00001A, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_Contains_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsValidTimerEventCommand, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'BP_EventManager_C_IsValidTimerEventCommand::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetProgressID
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_GetProgressID final
{
public:
	int32                                         Param_ProgressId;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetProgressID_Internal_ProgressID;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_GetProgressID) == 0x000004, "Wrong alignment on BP_EventManager_C_GetProgressID");
static_assert(sizeof(BP_EventManager_C_GetProgressID) == 0x000008, "Wrong size on BP_EventManager_C_GetProgressID");
static_assert(offsetof(BP_EventManager_C_GetProgressID, Param_ProgressId) == 0x000000, "Member 'BP_EventManager_C_GetProgressID::Param_ProgressId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetProgressID, CallFunc_GetProgressID_Internal_ProgressID) == 0x000004, "Member 'BP_EventManager_C_GetProgressID::CallFunc_GetProgressID_Internal_ProgressID' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsEventPause
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_IsEventPause final
{
public:
	bool                                          IsPause;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsEventPause) == 0x000001, "Wrong alignment on BP_EventManager_C_IsEventPause");
static_assert(sizeof(BP_EventManager_C_IsEventPause) == 0x000001, "Wrong size on BP_EventManager_C_IsEventPause");
static_assert(offsetof(BP_EventManager_C_IsEventPause, IsPause) == 0x000000, "Member 'BP_EventManager_C_IsEventPause::IsPause' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetEventTriggerCommendNum
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_GetEventTriggerCommendNum final
{
public:
	EEventTriggerCheckType                        CheckType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37BA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LCount;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37BB[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetEventTriggerCommendNum) == 0x000004, "Wrong alignment on BP_EventManager_C_GetEventTriggerCommendNum");
static_assert(sizeof(BP_EventManager_C_GetEventTriggerCommendNum) == 0x000030, "Wrong size on BP_EventManager_C_GetEventTriggerCommendNum");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, CheckType) == 0x000000, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::CheckType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, Count) == 0x000004, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::Count' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, LCount) == 0x000008, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::LCount' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, Temp_int_Variable) == 0x00001C, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventTriggerCommendNum, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_GetEventTriggerCommendNum::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetENPCPresetPlayerCamera
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_SetENPCPresetPlayerCamera final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerCameraPreset                           Preset_Basic;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37BC[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraTriggerInfo                     K2Node_MakeStruct_CameraTriggerInfo;               // 0x0008(0x0028)()
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetENPCPresetPlayerCamera) == 0x000008, "Wrong alignment on BP_EventManager_C_SetENPCPresetPlayerCamera");
static_assert(sizeof(BP_EventManager_C_SetENPCPresetPlayerCamera) == 0x000048, "Wrong size on BP_EventManager_C_SetENPCPresetPlayerCamera");
static_assert(offsetof(BP_EventManager_C_SetENPCPresetPlayerCamera, Enable) == 0x000000, "Member 'BP_EventManager_C_SetENPCPresetPlayerCamera::Enable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetENPCPresetPlayerCamera, Preset_Basic) == 0x000001, "Member 'BP_EventManager_C_SetENPCPresetPlayerCamera::Preset_Basic' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetENPCPresetPlayerCamera, Ret) == 0x000002, "Member 'BP_EventManager_C_SetENPCPresetPlayerCamera::Ret' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetENPCPresetPlayerCamera, K2Node_MakeStruct_CameraTriggerInfo) == 0x000008, "Member 'BP_EventManager_C_SetENPCPresetPlayerCamera::K2Node_MakeStruct_CameraTriggerInfo' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetENPCPresetPlayerCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetENPCPresetPlayerCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetENPCPresetPlayerCamera, K2Node_DynamicCast_AsRSBattle_Player) == 0x000038, "Member 'BP_EventManager_C_SetENPCPresetPlayerCamera::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetENPCPresetPlayerCamera, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventManager_C_SetENPCPresetPlayerCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

