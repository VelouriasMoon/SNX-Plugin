#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PsychicObjectComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PsychicObjectSizeParameter_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "E_SASKind_structs.hpp"
#include "PsychicObjectCommonParameter_structs.hpp"
#include "Engine_structs.hpp"
#include "SPsychicCaptureMaterial_structs.hpp"
#include "Enum_ui_pk_weight_gauge_button_structs.hpp"
#include "Enum_ui_pk_weight_gauge_size_structs.hpp"


namespace SDK::Params
{

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.OnSetEffectFocus__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_OnSetEffectFocus__DelegateSignature final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_OnSetEffectFocus__DelegateSignature) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_OnSetEffectFocus__DelegateSignature");
static_assert(sizeof(BP_PsychicObjectComponent_C_OnSetEffectFocus__DelegateSignature) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_OnSetEffectFocus__DelegateSignature");
static_assert(offsetof(BP_PsychicObjectComponent_C_OnSetEffectFocus__DelegateSignature, FlagIn) == 0x000000, "Member 'BP_PsychicObjectComponent_C_OnSetEffectFocus__DelegateSignature::FlagIn' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ExecuteUbergraph_BP_PsychicObjectComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7168[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent");
static_assert(sizeof(BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent, EntryPoint) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent, K2Node_Event_EndPlayReason) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_PsychicObjectComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_PsychicObjectComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_ReceiveTick");
static_assert(sizeof(BP_PsychicObjectComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_ReceiveTick");
static_assert(offsetof(BP_PsychicObjectComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.Initialize
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_Initialize final
{
public:
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7169[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_Initialize) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_Initialize");
static_assert(sizeof(BP_PsychicObjectComponent_C_Initialize) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_Initialize");
static_assert(offsetof(BP_PsychicObjectComponent_C_Initialize, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000000, "Member 'BP_PsychicObjectComponent_C_Initialize::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Initialize, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000008, "Member 'BP_PsychicObjectComponent_C_Initialize::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PsychicObjectComponent_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Initialize, CallFunc_SetPsychicObjectActiveC_ReturnValue) == 0x000019, "Member 'BP_PsychicObjectComponent_C_Initialize::CallFunc_SetPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Initialize, CallFunc_SetProcedurePhase_return) == 0x00001A, "Member 'BP_PsychicObjectComponent_C_Initialize::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Initialize, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_Initialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Initialize, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000028, "Member 'BP_PsychicObjectComponent_C_Initialize::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Initialize, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_Initialize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.Update
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_Update final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_Update) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_Update");
static_assert(sizeof(BP_PsychicObjectComponent_C_Update) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_Update");
static_assert(offsetof(BP_PsychicObjectComponent_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_PsychicObjectComponent_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.Finalize
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_Finalize final
{
public:
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FinalizeUniqueObject_dummy;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_Finalize) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_Finalize");
static_assert(sizeof(BP_PsychicObjectComponent_C_Finalize) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_Finalize");
static_assert(offsetof(BP_PsychicObjectComponent_C_Finalize, CallFunc_SetAnimOwner_anim_owner) == 0x000000, "Member 'BP_PsychicObjectComponent_C_Finalize::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Finalize, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_Finalize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Finalize, CallFunc_FinalizeUniqueObject_dummy) == 0x000009, "Member 'BP_PsychicObjectComponent_C_Finalize::CallFunc_FinalizeUniqueObject_dummy' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsPsychicObjectActive
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_IsPsychicObjectActive final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsPsychicObjectActive) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsPsychicObjectActive");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsPsychicObjectActive) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_IsPsychicObjectActive");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsPsychicObjectActive, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsPsychicObjectActive::Return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectActive
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectActive final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Flag_only;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectActive) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectActive");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectActive) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectActive");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectActive, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectActive::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectActive, Flag_only) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectActive::Flag_only' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectActive, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectActive, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectActive::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitializeParameter
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_InitializeParameter final
{
public:
	class URSParticleSystemComponentBase*         L_particle;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716A[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716B[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716C[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHitDamageMesh_dummy;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716D[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitialParameter_dummy;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitializeParameter) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitializeParameter");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitializeParameter) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_InitializeParameter");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, L_particle) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::L_particle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x000021, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_IsValid_ReturnValue_2) == 0x000034, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_SetHitDamageMesh_dummy) == 0x000035, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_SetHitDamageMesh_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, Temp_int_Variable) == 0x000038, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_IsValid_ReturnValue_3) == 0x000044, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_InitialParameter_dummy) == 0x000045, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_InitialParameter_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeParameter, CallFunc_SetProcedurePhase_return) == 0x000046, "Member 'BP_PsychicObjectComponent_C_InitializeParameter::CallFunc_SetProcedurePhase_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsFocusable
// 0x000B (0x000B - 0x0000)
struct BP_PsychicObjectComponent_C_IsFocusable final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsFocusable) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsFocusable");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsFocusable) == 0x00000B, "Wrong size on BP_PsychicObjectComponent_C_IsFocusable");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsFocusable::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_Not_PreBool_ReturnValue_2) == 0x000003, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_Not_PreBool_ReturnValue_3) == 0x000004, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_CheckPsychicObjectState_return) == 0x000005, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_BooleanAND_ReturnValue_2) == 0x000008, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_BooleanAND_ReturnValue_3) == 0x000009, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsFocusable, CallFunc_BooleanAND_ReturnValue_4) == 0x00000A, "Member 'BP_PsychicObjectComponent_C_IsFocusable::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CanCapture
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_CanCapture final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CanCapture) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CanCapture");
static_assert(sizeof(BP_PsychicObjectComponent_C_CanCapture) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_CanCapture");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanCapture, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CanCapture::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanCapture, CallFunc_CheckPsychicObjectState_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CanCapture::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanCapture, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CanCapture::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseCapture
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPhaseCapture final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_success_in;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Air_in;                                            // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Psychic_field_in;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716F[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7170[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7171[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7172[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7173[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return_1;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return_2;               // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPhaseCapture) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPhaseCapture");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPhaseCapture) == 0x0000C0, "Wrong size on BP_PsychicObjectComponent_C_SetPhaseCapture");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, Capture_success_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::Capture_success_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, Combo_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::Combo_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, Air_in) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::Air_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, Psychic_field_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::Psychic_field_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, Temp_int_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_BreakTransform_Location) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_BreakTransform_Rotation) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_BreakTransform_Scale) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_VSize_ReturnValue) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000051, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000052, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, K2Node_DynamicCast_AsPlayer_Interface) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_IsAIPlayer_ReturnValue) == 0x00006A, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_BooleanNOR_ReturnValue) == 0x00006B, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_GetDisplayName_ReturnValue) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_SetProcedurePhase_return) == 0x0000AA, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_GetDebuggingManager_Manager) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_SetProcedurePhase_return_1) == 0x0000B9, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_SetProcedurePhase_return_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseCapture, CallFunc_SetProcedurePhase_return_2) == 0x0000BA, "Member 'BP_PsychicObjectComponent_C_SetPhaseCapture::CallFunc_SetProcedurePhase_return_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectCapture
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectCapture final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7174[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        Capture_owner_in;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Capture_success_in;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Air_in;                                            // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Psychic_field_in;                                  // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7175[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVibSndMode                                   Temp_byte_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7176[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProcedurePhase_return;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   K2Node_Select_Default;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVibSndMode                                   K2Node_Select_Default_1;                           // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCapture_return;                        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectCapture");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectCapture");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Capture_owner_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Capture_owner_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Capture_success_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Capture_success_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Combo_in) == 0x000011, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Combo_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Air_in) == 0x000012, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Air_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Psychic_field_in) == 0x000013, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Psychic_field_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Return) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Temp_byte_Variable) == 0x000015, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_SelectString_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Temp_bool_Variable) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Temp_byte_Variable_1) == 0x00002A, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Temp_byte_Variable_2) == 0x00002B, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_BooleanOR_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_BooleanOR_ReturnValue_1) == 0x00002D, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_SelectString_ReturnValue_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_CheckProcedurePhase_return) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_CheckProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, Temp_bool_Variable_1) == 0x000049, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, K2Node_Select_Default) == 0x00004A, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, K2Node_Select_Default_1) == 0x00004B, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectCapture, CallFunc_CanCapture_return) == 0x00004D, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectCapture::CallFunc_CanCapture_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplay
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDisplay final
{
public:
	class FString                                 L_str;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectInUseC_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectTick_return;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7177[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectTickC_ReturnValue;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDisplay) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDisplay");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDisplay) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_DebugDisplay");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, L_str) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::L_str' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_IsPsychicObjectInUseC_ReturnValue) == 0x000021, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_IsPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_SetPsychicObjectTick_return) == 0x000022, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_SetPsychicObjectTick_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_GetMeshBoundCentrePos_pos) == 0x000024, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_IsPsychicObjectTickC_ReturnValue) == 0x000041, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_IsPsychicObjectTickC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue_1) == 0x000043, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue_2) == 0x000044, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue_3) == 0x000045, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue_4) == 0x000046, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue_5) == 0x000047, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue_6) == 0x000048, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue_7) == 0x000049, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplay, CallFunc_BooleanOR_ReturnValue_8) == 0x00004A, "Member 'BP_PsychicObjectComponent_C_DebugDisplay::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetFocus
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetFocus final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Wait_gauge_in;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetFocus) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetFocus");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetFocus) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetFocus");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFocus, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetFocus::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFocus, Wait_gauge_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetFocus::Wait_gauge_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectFocus
// 0x0060 (0x0060 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectFocus final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7178[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_obj;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         L_Mesh;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7179[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_717A[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_717B[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectFocus) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectFocus");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectFocus) == 0x000060, "Wrong size on BP_PsychicObjectComponent_C_SetEffectFocus");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, L_obj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::L_obj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, L_Mesh) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectFocus, CallFunc_SelectInt_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetEffectFocus::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectAttack
// 0x0088 (0x0088 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectAttack final
{
public:
	class AActor*                                 Target_actor_in;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Direct_drop_in;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unique_in;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Air_combo_in;                                      // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_direct_shot_in;                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          brain_field_in;                                    // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_717C[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Combo_level_in;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Combo_index_in;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Attract_time_in;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_717D[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Anim_seq_in;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectBrainFieldAttackType            Attack_type_in;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_return;                                          // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_717E[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       K2Node_DynamicCast_AsRSCharacter_Base;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisionFogInternalLock_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectState                           CallFunc_GetPsychicObjectState_return;             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_717F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7180[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7181[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentAttackType_attack_type;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttack_dummy;                          // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7182[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAttack_return;                         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack) == 0x000088, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Target_actor_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Target_actor_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Direct_drop_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Direct_drop_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Unique_in) == 0x000009, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Unique_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Combo_in) == 0x00000A, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Combo_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Air_combo_in) == 0x00000B, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Air_combo_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Enemy_direct_shot_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Enemy_direct_shot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, brain_field_in) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::brain_field_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Combo_level_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Combo_level_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Combo_index_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Combo_index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Attract_time_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Attract_time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Anim_seq_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Anim_seq_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Attack_type_in) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Return) == 0x000029, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, L_return) == 0x00002A, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::L_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Temp_int_Variable) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, K2Node_DynamicCast_AsRSCharacter_Base) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::K2Node_DynamicCast_AsRSCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_IsVisionFogInternalLock_ReturnValue) == 0x000039, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_IsVisionFogInternalLock_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_BooleanOR_ReturnValue) == 0x00003B, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_BooleanOR_ReturnValue_1) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_IsValid_ReturnValue_1) == 0x00003D, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_Not_PreBool_ReturnValue) == 0x00003E, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_GetPsychicObjectState_return) == 0x00003F, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_GetPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_Not_PreBool_ReturnValue_1) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, Temp_int_Variable_1) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_GetCurrentAttackType_attack_type) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_GetCurrentAttackType_attack_type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, K2Node_SwitchInteger_CmpSuccess) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_IsValid_ReturnValue_3) == 0x00007D, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_SetAttack_dummy) == 0x00007E, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_SetAttack_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttack, CallFunc_CanAttack_return) == 0x000084, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttack::CallFunc_CanAttack_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseLiftUpOld
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPhaseLiftUpOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPhaseLiftUpOld) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetPhaseLiftUpOld");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPhaseLiftUpOld) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetPhaseLiftUpOld");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseLiftUpOld, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPhaseLiftUpOld::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CanAttack
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_CanAttack final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return_1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return_2;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return_3;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CanAttack) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CanAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_CanAttack) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_CanAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttack, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CanAttack::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttack, CallFunc_CheckPsychicObjectState_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CanAttack::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttack, CallFunc_CheckPsychicObjectState_return_1) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CanAttack::CallFunc_CheckPsychicObjectState_return_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttack, CallFunc_CheckPsychicObjectState_return_2) == 0x000003, "Member 'BP_PsychicObjectComponent_C_CanAttack::CallFunc_CheckPsychicObjectState_return_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttack, CallFunc_CheckPsychicObjectState_return_3) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CanAttack::CallFunc_CheckPsychicObjectState_return_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttack, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_PsychicObjectComponent_C_CanAttack::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttack, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'BP_PsychicObjectComponent_C_CanAttack::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttack, CallFunc_BooleanOR_ReturnValue_2) == 0x000007, "Member 'BP_PsychicObjectComponent_C_CanAttack::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseAttack
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPhaseAttack final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7183[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHCSkillExtraType>                     CallFunc_SetExtraTypeUnqObj_extra_type;            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentAttackType_attack_type;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return_1;               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPhaseAttack) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPhaseAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPhaseAttack) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_SetPhaseAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttack, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttack::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttack, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttack, CallFunc_SetExtraTypeUnqObj_extra_type) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttack::CallFunc_SetExtraTypeUnqObj_extra_type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttack, CallFunc_GetCurrentAttackType_attack_type) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttack::CallFunc_GetCurrentAttackType_attack_type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttack, K2Node_SwitchInteger_CmpSuccess) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttack::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttack, CallFunc_SetProcedurePhase_return) == 0x00001D, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttack::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttack, CallFunc_SetProcedurePhase_return_1) == 0x00001E, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttack::CallFunc_SetProcedurePhase_return_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttackThrow
// 0x0070 (0x0070 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAttackThrow final
{
public:
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7184[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7185[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAttackThrow) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAttackThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAttackThrow) == 0x000070, "Wrong size on BP_PsychicObjectComponent_C_UpdateAttackThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_GetRate_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_IsOver_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_VEase_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000058, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttackThrow, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000064, "Member 'BP_PsychicObjectComponent_C_UpdateAttackThrow::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsync
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_PrevAsync final
{
public:
	int32                                         CallFunc_GetCurrentAttackType_attack_type;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PrevAsync) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_PrevAsync");
static_assert(sizeof(BP_PsychicObjectComponent_C_PrevAsync) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_PrevAsync");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsync, CallFunc_GetCurrentAttackType_attack_type) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PrevAsync::CallFunc_GetCurrentAttackType_attack_type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsync, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'BP_PsychicObjectComponent_C_PrevAsync::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsync, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_PsychicObjectComponent_C_PrevAsync::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsync
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAsync final
{
public:
	int32                                         CallFunc_GetCurrentAttackType_attack_type;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAsync) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAsync");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAsync) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_UpdateAsync");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsync, CallFunc_GetCurrentAttackType_attack_type) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAsync::CallFunc_GetCurrentAttackType_attack_type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsync, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateAsync::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsync, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_PsychicObjectComponent_C_UpdateAsync::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncLiftUp
// 0x0098 (0x0098 - 0x0000)
struct BP_PsychicObjectComponent_C_PrevAsyncLiftUp final
{
public:
	float                                         L_time;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_targetPos;                                       // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7186[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7187[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7188[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_PrevAsyncLiftUp");
static_assert(sizeof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp) == 0x000098, "Wrong size on BP_PsychicObjectComponent_C_PrevAsyncLiftUp");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, L_time) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::L_time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, L_targetPos) == 0x000004, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::L_targetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000020, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_BreakVector_X_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_BreakVector_Y_1) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_Less_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_IsValid_ReturnValue) == 0x00006D, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_Normal_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncLiftUp, CallFunc_MakeRotFromX_ReturnValue) == 0x000088, "Member 'BP_PsychicObjectComponent_C_PrevAsyncLiftUp::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncLiftUp
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAsyncLiftUp final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAsyncLiftUp");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_UpdateAsyncLiftUp");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_BreakVector_X) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_BreakVector_Y) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_BreakVector_Z) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_GetFloatValue_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_GetFloatValue_ReturnValue_1) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_VLerp_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_BreakVector_X_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_BreakVector_Y_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_BreakVector_Z_1) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_RLerp_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncLiftUp, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncLiftUp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetLerpStart
// 0x0100 (0x0100 - 0x0000)
struct BP_PsychicObjectComponent_C_SetLerpStart final
{
public:
	bool                                          Actor_pos_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Actor_rot_in;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use_swing_arrow_in;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7189[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        L_arrow;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_718A[0xF];                                     // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_718B[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_718C[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetLerpStart) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetLerpStart");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetLerpStart) == 0x000100, "Wrong size on BP_PsychicObjectComponent_C_SetLerpStart");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, Actor_pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::Actor_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, Actor_rot_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::Actor_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, Use_swing_arrow_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::Use_swing_arrow_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, L_arrow) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::L_arrow' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, Temp_bool_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_BreakTransform_Location_1) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_BreakTransform_Rotation_1) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_BreakTransform_Scale_1) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, K2Node_Select_Default) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_SelectRotator_ReturnValue) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpStart, CallFunc_SelectVector_ReturnValue) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_SetLerpStart::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ApplyLerpResult
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_ApplyLerpResult final
{
public:
	bool                                          Actor_pos_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Actor_rot_in;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use_swing_arrow_in;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ApplyLerpResult) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_ApplyLerpResult");
static_assert(sizeof(BP_PsychicObjectComponent_C_ApplyLerpResult) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_ApplyLerpResult");
static_assert(offsetof(BP_PsychicObjectComponent_C_ApplyLerpResult, Actor_pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ApplyLerpResult::Actor_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ApplyLerpResult, Actor_rot_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_ApplyLerpResult::Actor_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ApplyLerpResult, Use_swing_arrow_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_ApplyLerpResult::Use_swing_arrow_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitializeComponent
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PsychicObjectComponent_C_InitializeComponent final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Arrow_comp_in;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Attack_sphere_in;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Attack_capsule_in;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Physics_capsule_in;                                // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_718D[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_718E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitializeComponent) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_InitializeComponent");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitializeComponent) == 0x0000B0, "Wrong size on BP_PsychicObjectComponent_C_InitializeComponent");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, Mesh_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, Arrow_comp_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::Arrow_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, Attack_sphere_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::Attack_sphere_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, Attack_capsule_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::Attack_capsule_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, Physics_capsule_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::Physics_capsule_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_IsValidClass_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_BreakTransform_Location) == 0x000064, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_BreakTransform_Rotation) == 0x000070, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_BreakTransform_Scale) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_NegateRotator_ReturnValue) == 0x000088, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000094, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_IsGravityEnabled_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_IsGravityEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0000AD, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitializeComponent, CallFunc_GetCollisionEnabled_ReturnValue) == 0x0000AE, "Member 'BP_PsychicObjectComponent_C_InitializeComponent::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetActorPosRot
// 0x0100 (0x0100 - 0x0000)
struct BP_PsychicObjectComponent_C_ResetActorPosRot final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_718F[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ResetActorPosRot) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_ResetActorPosRot");
static_assert(sizeof(BP_PsychicObjectComponent_C_ResetActorPosRot) == 0x000100, "Wrong size on BP_PsychicObjectComponent_C_ResetActorPosRot");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetActorPosRot, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ResetActorPosRot::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetActorPosRot, CallFunc_BreakTransform_Location) == 0x000030, "Member 'BP_PsychicObjectComponent_C_ResetActorPosRot::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetActorPosRot, CallFunc_BreakTransform_Rotation) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_ResetActorPosRot::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetActorPosRot, CallFunc_BreakTransform_Scale) == 0x000048, "Member 'BP_PsychicObjectComponent_C_ResetActorPosRot::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetActorPosRot, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_ResetActorPosRot::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetActorPosRot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_ResetActorPosRot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetActorPosRot, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_ResetActorPosRot::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetActorPosRot, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000070, "Member 'BP_PsychicObjectComponent_C_ResetActorPosRot::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncAttackThrow
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_PrevAsyncAttackThrow final
{
public:
	class FString                                 L_str;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PrevAsyncAttackThrow) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_PrevAsyncAttackThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_PrevAsyncAttackThrow) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_PrevAsyncAttackThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackThrow, L_str) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackThrow::L_str' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncAttackThrow
// 0x0130 (0x0130 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow final
{
public:
	class AActor*                                 L_timerActor;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_axis;                                            // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7190[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7191[0xE];                                     // 0x0032(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocationAndRotation_TargetLocation; // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTargetLocationAndRotation_TargetRotation; // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetDeltaSecond_delta_second_1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7192[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default_1;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUniqueAttack_return;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7193[0x1];                                     // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow) == 0x000130, "Wrong size on BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, L_timerActor) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::L_timerActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, L_axis) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::L_axis' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, Temp_bool_Variable) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, Temp_struct_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, Temp_struct_Variable_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_GetDeltaSecond_delta_second) == 0x000094, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_GetTargetLocationAndRotation_TargetLocation) == 0x000098, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_GetTargetLocationAndRotation_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_GetTargetLocationAndRotation_TargetRotation) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_GetTargetLocationAndRotation_TargetRotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_GetDeltaSecond_delta_second_1) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_GetDeltaSecond_delta_second_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_SelectRotator_ReturnValue) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_SelectVector_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, K2Node_Select_Default) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_Ease_ReturnValue) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_ComposeRotators_ReturnValue) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_Add_VectorVector_ReturnValue) == 0x000104, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_Ease_ReturnValue_1) == 0x000110, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000114, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, Temp_bool_Variable_1) == 0x000118, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, K2Node_Select_Default_1) == 0x000120, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_CanUniqueAttack_return) == 0x000128, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_CanUniqueAttack_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_IsOver_ReturnValue) == 0x000129, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_IsOver_ReturnValue_1) == 0x00012A, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow, CallFunc_GetRate_ReturnValue) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackThrow::CallFunc_GetRate_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCameraTransform
// 0x0060 (0x0060 - 0x0000)
struct BP_PsychicObjectComponent_C_GetCameraTransform final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotate;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Direction;                                         // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetCameraTransform) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetCameraTransform");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetCameraTransform) == 0x000060, "Wrong size on BP_PsychicObjectComponent_C_GetCameraTransform");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraTransform, Location) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetCameraTransform::Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraTransform, Rotate) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetCameraTransform::Rotate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraTransform, Direction) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetCameraTransform::Direction' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraTransform, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_GetCameraTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraTransform, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetCameraTransform::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraTransform, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetCameraTransform::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraTransform, CallFunc_GetCameraRotation_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_GetCameraTransform::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraTransform, CallFunc_GetCameraLocation_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_GetCameraTransform::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjPosRot
// 0x0118 (0x0118 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjPosRot final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot_in;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Actor_pos_in;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Actor_rot_in;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use_swing_arrow_in;                                // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sweep_in;                                          // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Teleport_in;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7194[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewLocalVar_2;                                     // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7195[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        L_arrow;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rot;                                             // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7196[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0084(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7197[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjPosRot) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjPosRot");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjPosRot) == 0x000118, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjPosRot");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, Pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, Rot_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, Actor_pos_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::Actor_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, Actor_rot_in) == 0x000019, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::Actor_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, Use_swing_arrow_in) == 0x00001A, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::Use_swing_arrow_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, Sweep_in) == 0x00001B, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::Sweep_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, Teleport_in) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::Teleport_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, NewLocalVar_2) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, L_arrow) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::L_arrow' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, L_rot) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::L_rot' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, L_pos) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, CallFunc_NegateRotator_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, CallFunc_ComposeRotators_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, Temp_bool_Variable) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000084, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjPosRot, K2Node_Select_Default) == 0x000110, "Member 'BP_PsychicObjectComponent_C_SetPsyObjPosRot::K2Node_Select_Default' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncAttackCombo
// 0x0064 (0x0064 - 0x0000)
struct BP_PsychicObjectComponent_C_PrevAsyncAttackCombo final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_PrevAsyncAttackCombo");
static_assert(sizeof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo) == 0x000064, "Wrong size on BP_PsychicObjectComponent_C_PrevAsyncAttackCombo");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_GetRate_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackCombo, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000058, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackCombo::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncAttackCombo
// 0x0024 (0x0024 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo final
{
public:
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo) == 0x000024, "Wrong size on BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo, CallFunc_VEase_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttackCombo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncAttackCombo
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_PostAsyncAttackCombo final
{
public:
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PostAsyncAttackCombo) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_PostAsyncAttackCombo");
static_assert(sizeof(BP_PsychicObjectComponent_C_PostAsyncAttackCombo) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_PostAsyncAttackCombo");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackCombo, CallFunc_SetAnimOwner_anim_owner) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackCombo::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackCombo, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackCombo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackCombo, CallFunc_IsPlaying_ReturnValue) == 0x000009, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackCombo::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseAttract
// 0x00E8 (0x00E8 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPhaseAttract final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7198[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Attract_time_in;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_dropTime;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVibSndMode                                   Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7199[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719B[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719C[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   Temp_byte_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719D[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_Select_Default_1;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_Select_Default_2;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVibSndMode                                   Temp_byte_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719E[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719F[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentAttackType_attack_type;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A0[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentAttackType_attack_type_1;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71A1[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A2[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAttractUnique_dummy;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A3[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimation_anim_sequence;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   K2Node_Select_Default_4;                           // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVibSndMode                                   K2Node_Select_Default_5;                           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return_1;               // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPhaseAttract) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPhaseAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPhaseAttract) == 0x0000E8, "Wrong size on BP_PsychicObjectComponent_C_SetPhaseAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Attract_time_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Attract_time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, L_dropTime) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::L_dropTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_byte_Variable) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_bool_Variable) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_object_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_object_Variable_1) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_bool_Variable_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_object_Variable_2) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_object_Variable_3) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_bool_Variable_2) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_float_Variable) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_float_Variable_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_bool_Variable_3) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_IsValid_ReturnValue) == 0x000045, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_IsValid_ReturnValue_1) == 0x000046, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_byte_Variable_1) == 0x000051, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_BooleanOR_ReturnValue_1) == 0x000052, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_bool_Variable_4) == 0x000053, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_Select_Default) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_Select_Default_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_Select_Default_2) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_byte_Variable_2) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_BooleanOR_ReturnValue_2) == 0x000071, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_BooleanOR_ReturnValue_3) == 0x000072, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_SetAnimOwner_anim_owner) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_Select_Default_3) == 0x000084, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_SelectVector_ReturnValue) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_GetCurrentAttackType_attack_type) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_GetCurrentAttackType_attack_type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_SwitchInteger_CmpSuccess) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_GetCurrentAttackType_attack_type_1) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_GetCurrentAttackType_attack_type_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_SetAttractUnique_dummy) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_SetAttractUnique_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000D1, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_GetAnimation_anim_sequence) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_GetAnimation_anim_sequence' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_SwitchEnum_CmpSuccess) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, Temp_bool_Variable_5) == 0x0000E1, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E2, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_Select_Default_4) == 0x0000E3, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, K2Node_Select_Default_5) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_SetProcedurePhase_return) == 0x0000E5, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseAttract, CallFunc_SetProcedurePhase_return_1) == 0x0000E6, "Member 'BP_PsychicObjectComponent_C_SetPhaseAttract::CallFunc_SetProcedurePhase_return_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCombo
// 0x0054 (0x0054 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackCombo final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectSizeType                        Temp_byte_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A5[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackCombo) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackCombo");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackCombo) == 0x000054, "Wrong size on BP_PsychicObjectComponent_C_SetAttackCombo");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, Temp_float_Variable) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, Temp_float_Variable_1) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, Temp_float_Variable_2) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, Temp_float_Variable_3) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, Temp_float_Variable_4) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, Temp_float_Variable_5) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, Temp_byte_Variable) == 0x00001D, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, CallFunc_IsValid_ReturnValue_1) == 0x00001E, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, K2Node_Select_Default) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCombo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetAttackCombo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCollisionOld
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackCollisionOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Throw_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackCollisionOld) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackCollisionOld");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackCollisionOld) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetAttackCollisionOld");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionOld, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionOld::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionOld, Throw_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionOld::Throw_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHit
// 0x0300 (0x0300 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHit final
{
public:
	bool                                          Hit_enemy_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hit_background_in;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCHitResult                           Hit_result_in;                                     // 0x0008(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FHitResult                             Hit_result_bg_in;                                  // 0x01C8(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPsychicObjectSizeType                        Temp_byte_Variable;                                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71A7[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EVibSndMode                                   Temp_byte_Variable_1;                              // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   Temp_byte_Variable_2;                              // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A8[0x2];                                     // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> CallFunc_GetPsychicObjectSize_self_CastInput;      // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectSizeType                        CallFunc_GetPsychicObjectSize_ReturnValue;         // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVibSndMode                                   Temp_byte_Variable_3;                              // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71A9[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   K2Node_Select_Default_1;                           // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   K2Node_Select_Default_2;                           // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x02F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHitUnqObj_dummy;                       // 0x02FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHit) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetHit");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHit) == 0x000300, "Wrong size on BP_PsychicObjectComponent_C_SetHit");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Hit_enemy_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHit::Hit_enemy_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Hit_background_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetHit::Hit_background_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Hit_result_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetHit::Hit_result_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Hit_result_bg_in) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_SetHit::Hit_result_bg_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_byte_Variable) == 0x000250, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_string_Variable) == 0x000258, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_string_Variable_1) == 0x000268, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_string_Variable_2) == 0x000278, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_string_Variable_3) == 0x000288, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_string_Variable_4) == 0x000298, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_string_Variable_5) == 0x0002A8, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_byte_Variable_1) == 0x0002B8, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_IsValid_ReturnValue) == 0x0002B9, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_bool_Variable) == 0x0002BA, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_BooleanOR_ReturnValue) == 0x0002BB, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_byte_Variable_2) == 0x0002BC, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_BooleanOR_ReturnValue_1) == 0x0002BD, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x0002C0, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_GetPsychicObjectSize_self_CastInput) == 0x0002C8, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_GetPsychicObjectSize_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_GetPsychicObjectSize_ReturnValue) == 0x0002D8, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_GetPsychicObjectSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_byte_Variable_3) == 0x0002D9, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, K2Node_Select_Default) == 0x0002E0, "Member 'BP_PsychicObjectComponent_C_SetHit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, Temp_bool_Variable_1) == 0x0002F0, "Member 'BP_PsychicObjectComponent_C_SetHit::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, K2Node_Select_Default_1) == 0x0002F1, "Member 'BP_PsychicObjectComponent_C_SetHit::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002F2, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, K2Node_Select_Default_2) == 0x0002F3, "Member 'BP_PsychicObjectComponent_C_SetHit::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002F4, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002F5, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0002F6, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0002F7, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0002F8, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_BooleanOR_ReturnValue_2) == 0x0002F9, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_BooleanOR_ReturnValue_3) == 0x0002FA, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0002FB, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_BooleanOR_ReturnValue_4) == 0x0002FC, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_BooleanOR_ReturnValue_5) == 0x0002FD, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_IsValid_ReturnValue_1) == 0x0002FE, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHit, CallFunc_SetHitUnqObj_dummy) == 0x0002FF, "Member 'BP_PsychicObjectComponent_C_SetHit::CallFunc_SetHitUnqObj_dummy' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectAttract
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectAttract final
{
public:
	class ARsBattleHero_C*                        Capture_owner_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Attract_time_in;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectAttract) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectAttract) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttract, Capture_owner_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttract::Capture_owner_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttract, Attract_time_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttract::Attract_time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAttract, Return) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAttract::Return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CanAttract
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_CanAttract final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CanAttract) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CanAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_CanAttract) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_CanAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttract, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CanAttract::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanAttract, CallFunc_CheckPsychicObjectState_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CanAttract::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncAttract
// 0x018C (0x018C - 0x0000)
struct BP_PsychicObjectComponent_C_PrevAsyncAttract final
{
public:
	struct FVector                                L_vecTarget;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_playerDirHz;                                     // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_targetPos;                                       // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71AA[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71AB[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71AC[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos_1;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71AD[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71AE[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_roation;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PrevAsyncAttract) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_PrevAsyncAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_PrevAsyncAttract) == 0x00018C, "Wrong size on BP_PsychicObjectComponent_C_PrevAsyncAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, L_vecTarget) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::L_vecTarget' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, L_playerDirHz) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::L_playerDirHz' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, L_targetPos) == 0x000018, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::L_targetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetSocketLocation_location) == 0x000024, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetForwardVector_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetMeshBoundCentrePos_pos) == 0x000040, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_IsValid_ReturnValue_1) == 0x000064, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Normal_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000074, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetEnemyWeakPoint_weak_pos_1) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetEnemyWeakPoint_weak_pos_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_ComposeRotators_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_MakeRotFromX_ReturnValue) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_ComposeRotators_ReturnValue_1) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_IsValid_ReturnValue_2) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000100, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_BreakVector_X) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_BreakVector_Y) == 0x000110, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_BreakVector_Z) == 0x000114, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_MakeVector_ReturnValue) == 0x000118, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Normal_ReturnValue_1) == 0x000124, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Cross_VectorVector_ReturnValue) == 0x000130, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_IsValid_ReturnValue_3) == 0x00013C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_MakeRotFromXY_ReturnValue) == 0x000140, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_MakeRotFromXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetSocketRotation_roation) == 0x00014C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetSocketRotation_roation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetRightVector_ReturnValue) == 0x000158, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetUpVector_ReturnValue) == 0x000164, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000170, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_MakeRotFromXZ_ReturnValue) == 0x00017C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttract, CallFunc_GetRate_ReturnValue) == 0x000188, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttract::CallFunc_GetRate_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncAttract
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAsyncAttract final
{
public:
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_REase_ReturnValue;                        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAsyncAttract) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAsyncAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAsyncAttract) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_UpdateAsyncAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttract, CallFunc_GetFloatValue_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttract::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttract, CallFunc_GetFloatValue_ReturnValue_1) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttract::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttract, CallFunc_REase_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttract::CallFunc_REase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncAttract, CallFunc_VEase_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncAttract::CallFunc_VEase_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncAttract
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_PostAsyncAttract final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttackUnique_dummy;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallUniqueAttackSuccess_return;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PostAsyncAttract) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_PostAsyncAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_PostAsyncAttract) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_PostAsyncAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_SetAttackUnique_dummy) == 0x000001, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_SetAttackUnique_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_CallUniqueAttackSuccess_return) == 0x000002, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_CallUniqueAttackSuccess_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_IsOver_ReturnValue) == 0x000005, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_CheckPsychicObjectState_return) == 0x000006, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_IsValid_ReturnValue_2) == 0x000007, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_GetRate_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsCapturing
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_IsCapturing final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return_1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsCapturing) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsCapturing");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsCapturing) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_IsCapturing");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCapturing, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsCapturing::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCapturing, CallFunc_CheckPsychicObjectState_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_IsCapturing::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCapturing, CallFunc_CheckPsychicObjectState_return_1) == 0x000002, "Member 'BP_PsychicObjectComponent_C_IsCapturing::CallFunc_CheckPsychicObjectState_return_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCapturing, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_IsCapturing::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckPsychicObjectState
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_CheckPsychicObjectState final
{
public:
	EPsychicObjectState                           State_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckPsychicObjectState) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CheckPsychicObjectState");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckPsychicObjectState) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_CheckPsychicObjectState");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckPsychicObjectState, State_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckPsychicObjectState::State_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckPsychicObjectState, Return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CheckPsychicObjectState::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckPsychicObjectState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CheckPsychicObjectState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectState
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectState final
{
public:
	EPsychicObjectState                           State_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectState) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectState");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectState) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectState");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectState, State_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectState::State_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetPsychicObjectState
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_GetPsychicObjectState final
{
public:
	EPsychicObjectState                           Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetPsychicObjectState) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_GetPsychicObjectState");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetPsychicObjectState) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_GetPsychicObjectState");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetPsychicObjectState, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetPsychicObjectState::Return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackThrow
// 0x02D0 (0x02D0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackThrow final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71AF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Throw_speed_in;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Homing_speed_in;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_brainFieldThrow;                                 // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71B0[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_throwDirHz;                                      // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71B1[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71B2[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71B3[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71B4[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71B5[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInterceptThrowParameter_throw_speed;   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInterceptThrowParameter_homing_speed;  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   Temp_byte_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71B6[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEnemyAttackThrowTargetPoint_targetPos; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71B7[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEnemyThrowParameter_throw_speed;       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnemyThrowParameter_homing_speed;      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   Temp_byte_Variable_1;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71B8[0x1];                                     // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_roation;                // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71B9[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71BA[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71BB[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71BC[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71BD[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71BE[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_4;                           // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   Temp_byte_Variable_2;                              // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71BF[0x1];                                     // 0x01AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentAttackType_attack_type;         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttackThrow_dummy;                     // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C0[0x1];                                     // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVibSndMode                                   K2Node_Select_Default_7;                           // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVibSndMode                                   K2Node_Select_Default_8;                           // 0x01C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_9;                           // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71C1[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_10;                          // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_11;                          // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C2[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C3[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraTransform_location;              // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraTransform_rotate;                // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraTransform_direction;             // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C4[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackThrow) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackThrow) == 0x0002D0, "Wrong size on BP_PsychicObjectComponent_C_SetAttackThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Throw_speed_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Throw_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Homing_speed_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Homing_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, L_brainFieldThrow) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::L_brainFieldThrow' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, L_throwDirHz) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::L_throwDirHz' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_float_Variable) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_float_Variable_1) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_2) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_string_Variable) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_string_Variable_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_3) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_4) == 0x000051, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_5) == 0x000052, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_6) == 0x000053, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_7) == 0x000054, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_MakeVector_ReturnValue) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Normal_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Conv_FloatToString_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetInterceptThrowParameter_throw_speed) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetInterceptThrowParameter_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetInterceptThrowParameter_homing_speed) == 0x000094, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetInterceptThrowParameter_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BooleanOR_ReturnValue) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BooleanOR_ReturnValue_1) == 0x0000BA, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BooleanOR_ReturnValue_2) == 0x0000BB, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_byte_Variable) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetEnemyAttackThrowTargetPoint_targetPos) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetEnemyAttackThrowTargetPoint_targetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_8) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetEnemyThrowParameter_throw_speed) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetEnemyThrowParameter_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetEnemyThrowParameter_homing_speed) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetEnemyThrowParameter_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D9, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BooleanOR_ReturnValue_3) == 0x0000DA, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_IsValid_ReturnValue_1) == 0x0000DB, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_byte_Variable_1) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_IsValid_ReturnValue_2) == 0x0000DD, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_IsValid_ReturnValue_3) == 0x0000DE, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetSocketRotation_roation) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetSocketRotation_roation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetUpVector_ReturnValue) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_SelectFloat_ReturnValue) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_string_Variable_2) == 0x000100, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BooleanOR_ReturnValue_4) == 0x000110, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default) == 0x000118, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_1) == 0x000128, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_9) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000130, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000140, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000150, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000160, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Less_FloatFloat_ReturnValue) == 0x000170, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000178, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_2) == 0x000188, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00018C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_3) == 0x000190, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_SelectFloat_ReturnValue_1) == 0x000194, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000198, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_4) == 0x00019C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_SelectFloat_ReturnValue_2) == 0x0001A0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_5) == 0x0001A4, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_6) == 0x0001A8, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_10) == 0x0001AC, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_byte_Variable_2) == 0x0001AD, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Not_PreBool_ReturnValue) == 0x0001AE, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetCurrentAttackType_attack_type) == 0x0001B0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetCurrentAttackType_attack_type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_IsValid_ReturnValue_4) == 0x0001B4, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_SetAttackThrow_dummy) == 0x0001B5, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_SetAttackThrow_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001B6, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_bool_Variable_11) == 0x0001C4, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001C5, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_7) == 0x0001C6, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_8) == 0x0001C7, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_9) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, Temp_string_Variable_3) == 0x0001D0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_10) == 0x0001E0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, K2Node_Select_Default_11) == 0x0001F0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000200, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Cross_VectorVector_ReturnValue) == 0x000210, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BreakVector_X_1) == 0x00021C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BreakVector_Y_1) == 0x000220, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_BreakVector_Z_1) == 0x000224, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_RotateAngleAxis_ReturnValue) == 0x000228, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000234, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Dot_VectorVector_ReturnValue) == 0x000238, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_DegAcos_ReturnValue) == 0x00023C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x000240, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000244, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetCameraTransform_location) == 0x000250, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetCameraTransform_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetCameraTransform_rotate) == 0x00025C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetCameraTransform_rotate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_GetCameraTransform_direction) == 0x000268, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_GetCameraTransform_direction' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_IsValid_ReturnValue_5) == 0x000274, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000278, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000284, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000290, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Add_VectorVector_ReturnValue) == 0x00029C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002A8, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002B4, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrow, CallFunc_Normal_ReturnValue_1) == 0x0002C0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrow::CallFunc_Normal_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetProcedurePhase
// 0x0006 (0x0006 - 0x0000)
struct BP_PsychicObjectComponent_C_SetProcedurePhase final
{
public:
	EPsychicObjectProcedure                       Phase_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetProcedurePhase) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetProcedurePhase");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetProcedurePhase) == 0x000006, "Wrong size on BP_PsychicObjectComponent_C_SetProcedurePhase");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetProcedurePhase, Phase_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetProcedurePhase::Phase_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetProcedurePhase, Return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetProcedurePhase::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetProcedurePhase, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetProcedurePhase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetProcedurePhase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetProcedurePhase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetProcedurePhase, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetProcedurePhase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetProcedurePhase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_PsychicObjectComponent_C_SetProcedurePhase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetProcedurePhase
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_GetProcedurePhase final
{
public:
	EPsychicObjectProcedure                       Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetProcedurePhase) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_GetProcedurePhase");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetProcedurePhase) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_GetProcedurePhase");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetProcedurePhase, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetProcedurePhase::Return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckProcedurePhase
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_CheckProcedurePhase final
{
public:
	EPsychicObjectProcedure                       Phase_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckProcedurePhase) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CheckProcedurePhase");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckProcedurePhase) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_CheckProcedurePhase");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckProcedurePhase, Phase_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckProcedurePhase::Phase_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckProcedurePhase, Return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CheckProcedurePhase::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckProcedurePhase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CheckProcedurePhase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseDestroy
// 0x0040 (0x0040 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPhaseDestroy final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delay_time_in;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bNpc;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C6[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_destroyDelayTime;                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsParent_return;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChkPsyObjMan_return;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C7[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetAttackObject_attack_obj_;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C8[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPhaseDestroyUnqObj_dunmy;              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return_1;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPhaseDestroy) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPhaseDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPhaseDestroy) == 0x000040, "Wrong size on BP_PsychicObjectComponent_C_SetPhaseDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, Delay_time_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::Delay_time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, L_bNpc) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::L_bNpc' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, L_destroyDelayTime) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::L_destroyDelayTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_SetAnimOwner_anim_owner) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_IsParent_return) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_IsParent_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_ChkPsyObjMan_return) == 0x000019, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_ChkPsyObjMan_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_GetAttackObject_attack_obj_) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_GetAttackObject_attack_obj_' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_SetPhaseDestroyUnqObj_dunmy) == 0x000032, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_SetPhaseDestroyUnqObj_dunmy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000033, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_SelectFloat_ReturnValue_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_SetProcedurePhase_return) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseDestroy, CallFunc_SetProcedurePhase_return_1) == 0x00003D, "Member 'BP_PsychicObjectComponent_C_SetPhaseDestroy::CallFunc_SetProcedurePhase_return_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateDestroy
// 0x00F0 (0x00F0 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateDestroy final
{
public:
	class ARSCharacterBase*                       L_player;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71C9[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71CA[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71CB[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetDestroyUnqObj_dummy;                   // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckProcedurePhase_return;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BulletDestroyReport_dummy;                // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateDestroy) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateDestroy) == 0x0000F0, "Wrong size on BP_PsychicObjectComponent_C_UpdateDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, L_player) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::L_player' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_GetDebuggingManager_Manager) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000012, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000090, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_GetPlayerManager_PlayerManager) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue_3) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue_4) == 0x0000D1, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_GetPlayer_ReturnValue) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsOver_ReturnValue) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue_5) == 0x0000E1, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue_6) == 0x0000E2, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_SetDestroyUnqObj_dummy) == 0x0000E3, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_SetDestroyUnqObj_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_CheckProcedurePhase_return) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_CheckProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue_7) == 0x0000E5, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsValid_ReturnValue_8) == 0x0000E6, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_BulletDestroyReport_dummy) == 0x0000E7, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_BulletDestroyReport_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_SetProcedurePhase_return) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroy, CallFunc_IsOver_ReturnValue_1) == 0x0000E9, "Member 'BP_PsychicObjectComponent_C_UpdateDestroy::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectDestroy
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectDestroy final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectDestroy) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectDestroy) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetEffectDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectDestroy, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectDestroy::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateEffectDestroy
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateEffectDestroy final
{
public:
	class ARSCharacterBase*                       L_player;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71CC[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71CD[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71CE[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateEffectDestroy) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateEffectDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateEffectDestroy) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_UpdateEffectDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, L_player) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::L_player' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, L_rate) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, CallFunc_GetPlayer_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, CallFunc_GetRate_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, CallFunc_IsValid_ReturnValue_2) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, CallFunc_IsValid_ReturnValue_3) == 0x00002D, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectDestroy, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_UpdateEffectDestroy::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsPsychicObjectUnique
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_IsPsychicObjectUnique final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsPsychicObjectUnique) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsPsychicObjectUnique");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsPsychicObjectUnique) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_IsPsychicObjectUnique");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsPsychicObjectUnique, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsPsychicObjectUnique::Return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetUniqueMontageType
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_GetUniqueMontageType final
{
public:
	EPsychicObjectUniqueMontageType               Montage_type;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetUniqueMontageType) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_GetUniqueMontageType");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetUniqueMontageType) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_GetUniqueMontageType");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetUniqueMontageType, Montage_type) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetUniqueMontageType::Montage_type' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetWeightGauge
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_SetWeightGauge final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_success_in;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Show_button_in;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71CF[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         L_hud;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ui_pk_weight_gauge_size                  Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ui_pk_weight_gauge_size                  Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ui_pk_weight_gauge_size                  Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71D0[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectSizeType                        Temp_byte_Variable_3;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71D1[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcCaptureRate_level;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCaptureRate_capture_rate;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ui_pk_weight_gauge_size                  Temp_byte_Variable_4;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71D2[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ui_pk_weight_gauge_size                  Temp_byte_Variable_5;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ui_pk_weight_gauge_size                  Temp_byte_Variable_6;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ui_pk_weight_gauge_size                  K2Node_Select_Default;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetWeightGauge) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetWeightGauge");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetWeightGauge) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_SetWeightGauge");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Capture_success_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Capture_success_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Show_button_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Show_button_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, L_hud) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::L_hud' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Temp_byte_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Temp_byte_Variable_1) == 0x000011, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Temp_byte_Variable_2) == 0x000012, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Temp_byte_Variable_3) == 0x000022, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_CalcCaptureRate_level) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_CalcCaptureRate_level' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_CalcCaptureRate_capture_rate) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_CalcCaptureRate_capture_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Temp_byte_Variable_4) == 0x000031, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_GetHud_hud_main) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Temp_byte_Variable_5) == 0x000041, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, Temp_byte_Variable_6) == 0x000042, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGauge, K2Node_Select_Default) == 0x000043, "Member 'BP_PsychicObjectComponent_C_SetWeightGauge::K2Node_Select_Default' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateWeightGauge
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateWeightGauge final
{
public:
	int32                                         Level_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent_in;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         L_hud;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71D3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateWeightGauge) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateWeightGauge");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateWeightGauge) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_UpdateWeightGauge");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateWeightGauge, Level_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateWeightGauge::Level_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateWeightGauge, Percent_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateWeightGauge::Percent_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateWeightGauge, L_hud) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateWeightGauge::L_hud' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateWeightGauge, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateWeightGauge::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateWeightGauge, CallFunc_GetHud_hud_main) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateWeightGauge::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateWeightGauge, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateWeightGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCollisionSphereOld
// 0x0098 (0x0098 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D4[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld) == 0x000098, "Wrong size on BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCollisionParam
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackCollisionParam final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D5[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackCollisionParam) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackCollisionParam");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackCollisionParam) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_SetAttackCollisionParam");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionParam, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionParam::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionParam, Temp_bool_Variable) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionParam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionParam, K2Node_Select_Default) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionParam::K2Node_Select_Default' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CanUniqueAttack
// 0x0005 (0x0005 - 0x0000)
struct BP_PsychicObjectComponent_C_CanUniqueAttack final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CanUniqueAttack) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CanUniqueAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_CanUniqueAttack) == 0x000005, "Wrong size on BP_PsychicObjectComponent_C_CanUniqueAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanUniqueAttack, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CanUniqueAttack::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanUniqueAttack, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CanUniqueAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanUniqueAttack, CallFunc_Less_IntInt_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CanUniqueAttack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanUniqueAttack, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_CanUniqueAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CanUniqueAttack, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CanUniqueAttack::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackUnique
// 0x0040 (0x0040 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackUnique final
{
public:
	class UAnimSequence*                          CallFunc_GetAnimation_anim_sequence;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttackUnique_dummy;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D6[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackUnique) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackUnique");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackUnique) == 0x000040, "Wrong size on BP_PsychicObjectComponent_C_SetAttackUnique");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackUnique, CallFunc_GetAnimation_anim_sequence) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackUnique::CallFunc_GetAnimation_anim_sequence' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackUnique, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAttackUnique::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackUnique, CallFunc_SetAttackUnique_dummy) == 0x000009, "Member 'BP_PsychicObjectComponent_C_SetAttackUnique::CallFunc_SetAttackUnique_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackUnique, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_PsychicObjectComponent_C_SetAttackUnique::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackUnique, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetAttackUnique::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackUnique, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetAttackUnique::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackUnique, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetAttackUnique::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackUnique, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetAttackUnique::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncAttackUnique
// 0x000C (0x000C - 0x0000)
struct BP_PsychicObjectComponent_C_PrevAsyncAttackUnique final
{
public:
	struct FVector                                L_targetPos;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PrevAsyncAttackUnique) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_PrevAsyncAttackUnique");
static_assert(sizeof(BP_PsychicObjectComponent_C_PrevAsyncAttackUnique) == 0x00000C, "Wrong size on BP_PsychicObjectComponent_C_PrevAsyncAttackUnique");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncAttackUnique, L_targetPos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PrevAsyncAttackUnique::L_targetPos' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncAttackUnique
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_PostAsyncAttackUnique final
{
public:
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallUniqueAttackSuccess_return;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_PostAsyncAttackUnique");
static_assert(sizeof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_PostAsyncAttackUnique");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique, CallFunc_SetAnimOwner_anim_owner) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackUnique::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackUnique::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique, CallFunc_CallUniqueAttackSuccess_return) == 0x000009, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackUnique::CallFunc_CallUniqueAttackSuccess_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackUnique::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackUnique::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackUnique::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique, CallFunc_IsValid_ReturnValue_2) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackUnique::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncAttackUnique, CallFunc_IsPlaying_ReturnValue) == 0x00000E, "Member 'BP_PsychicObjectComponent_C_PostAsyncAttackUnique::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTimeDilation
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_SetTimeDilation final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_in;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Rate_in;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D8[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_IsAIPlayer_self_CastInput;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71DA[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetTimeDilation) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetTimeDilation");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetTimeDilation) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_SetTimeDilation");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, Name_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::Name_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, Rate_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::Rate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, CallFunc_IsAIPlayer_self_CastInput) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::CallFunc_IsAIPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, CallFunc_IsAIPlayer_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, CallFunc_GetGameSystemManager_Manager) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000041, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilation, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetTimeDilation::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetLerpLiftUp
// 0x0068 (0x0068 - 0x0000)
struct BP_PsychicObjectComponent_C_SetLerpLiftUp final
{
public:
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71DB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71DC[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetLerpLiftUp) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetLerpLiftUp");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetLerpLiftUp) == 0x000068, "Wrong size on BP_PsychicObjectComponent_C_SetLerpLiftUp");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_Normal_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_BreakVector_Y) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_MakeRotFromX_ReturnValue) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetLerpLiftUp, CallFunc_MakeVector_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetLerpLiftUp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectCapture
// 0x00F8 (0x00F8 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectCapture final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71DD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         L_particle;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71DE[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_meshComp;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_capture;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71DF[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E0[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E1[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E2[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     CallFunc_GetEffectCaptureParam_sas_kind;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEffectCaptureParam_capture;            // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetEffectCaptureParam_rate;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_size;               // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectCaptureParam_rateAura;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_sizeAura;           // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71E3[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnParticleEffect_particleSystem;       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E4[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E5[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E6[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetEffectCaptureParam_sas_kind_1;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEffectCaptureParam_capture_1;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E7[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEffectCaptureParam_rate_1;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_size_1;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectCaptureParam_rateAura_1;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_sizeAura_1;         // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71E8[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnParticleEffect_particleSystem_1;     // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        Temp_object_Variable;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E9[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectCapture) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectCapture");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectCapture) == 0x0000F8, "Wrong size on BP_PsychicObjectComponent_C_SetEffectCapture");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, L_particle) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::L_particle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, L_index) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::L_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, L_meshComp) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::L_meshComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, L_psyObj) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, L_capture) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::L_capture' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_bool_Variable) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Loop_Counter_Variable_2) == 0x000054, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Add_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Loop_Num_Variable_1) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_sas_kind) == 0x000062, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_sas_kind' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_capture) == 0x000063, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_capture' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_rate) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_size) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_size' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_rateAura) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_rateAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_sizeAura) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_sizeAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_SpawnParticleEffect_particleSystem) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_SpawnParticleEffect_particleSystem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Array_Index_Variable_2) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_int_Loop_Num_Variable_2) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Less_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_Array_Length_ReturnValue_2) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_sas_kind_1) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_sas_kind_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_capture_1) == 0x0000B1, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_capture_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_rate_1) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_rate_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_size_1) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_size_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_rateAura_1) == 0x0000C4, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_rateAura_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_sizeAura_1) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_sizeAura_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_SpawnParticleEffect_particleSystem_1) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_SpawnParticleEffect_particleSystem_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, Temp_object_Variable) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCapture, K2Node_Select_Default) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_SetEffectCapture::K2Node_Select_Default' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetHUD
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_GetHUD final
{
public:
	class AHUDMainGame_C*                         Hud_main;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetHUD) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetHUD");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetHUD) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_GetHUD");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetHUD, Hud_main) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetHUD::Hud_main' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetHUD, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetHUD, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetHUD::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackThrowAnim
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackThrowAnim final
{
public:
	float                                         Throw_speed_in;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Homing_speed_in;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enemy_direct_shot_in;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Enemy_attack_row_name_in;                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_angleLimit;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_targetVector;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_angle;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_targetPos;                                       // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EC[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71ED[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EE[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EF[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_roation;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackThrowAnim) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackThrowAnim");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackThrowAnim) == 0x0000B0, "Wrong size on BP_PsychicObjectComponent_C_SetAttackThrowAnim");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, Throw_speed_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::Throw_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, Homing_speed_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::Homing_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, Enemy_direct_shot_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::Enemy_direct_shot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, Enemy_attack_row_name_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::Enemy_attack_row_name_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, L_angleLimit) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::L_angleLimit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, L_targetVector) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::L_targetVector' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, L_angle) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::L_angle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, L_targetPos) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::L_targetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_SetAnimOwner_anim_owner) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_Conv_NameToString_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_Contains_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000054, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_GetMeshBoundCentrePos_pos) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_Normal_ReturnValue) == 0x000084, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_SetProcedurePhase_return) == 0x000091, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_GetSocketRotation_roation) == 0x000094, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_GetSocketRotation_roation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_GetUpVector_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_Not_PreBool_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AD, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_BooleanAND_ReturnValue) == 0x0000AE, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackThrowAnim, CallFunc_IsValid_ReturnValue_2) == 0x0000AF, "Member 'BP_PsychicObjectComponent_C_SetAttackThrowAnim::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectAttackThrow
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectAttackThrow final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectAttackThrow) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectAttackThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectAttackThrow) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_SetEffectAttackThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, Temp_bool_Variable) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, Temp_object_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, Temp_bool_Variable_1) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, Temp_object_Variable_1) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, Temp_object_Variable_2) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, K2Node_Select_Default) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, CallFunc_GetMeshBoundCentrePos_pos) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, K2Node_Select_Default_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttackThrow, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetEffectAttackThrow::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckHitBackGround
// 0x03F8 (0x03F8 - 0x0000)
struct BP_PsychicObjectComponent_C_CheckHitBackGround final
{
public:
	int32                                         L_sideHitCount;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_sideDist;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_traceEnd;                                        // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_traceStt;                                        // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_rightVector;                                     // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_throwVector;                                     // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_dbThickness;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_dbDuration;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             L_hitResult;                                       // 0x0040(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                L_hitPos;                                          // 0x00C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_hitNormal;                                       // 0x00D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00E0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F3[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F4[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F5[0x2];                                     // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F6[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0160(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0170(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F7[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0200(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F8[0x2];                                     // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F9[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71FA[0x1];                                     // 0x0293(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71FB[0x2];                                     // 0x02AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71FC[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x02B8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_Select_Default;                             // 0x02C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71FD[0x2];                                     // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71FE[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0358(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue_1; // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71FF[0x1];                                     // 0x03E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckHitBackGround) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_CheckHitBackGround");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckHitBackGround) == 0x0003F8, "Wrong size on BP_PsychicObjectComponent_C_CheckHitBackGround");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_sideHitCount) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_sideHitCount' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_sideDist) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_sideDist' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_traceEnd) == 0x000008, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_traceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_traceStt) == 0x000014, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_traceStt' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_rightVector) == 0x000020, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_rightVector' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_throwVector) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_throwVector' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_dbThickness) == 0x000038, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_dbThickness' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_dbDuration) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_dbDuration' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_hitResult) == 0x000040, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_hitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_hitPos) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_hitPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, L_hitNormal) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::L_hitNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, Temp_object_Variable) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakVector_X) == 0x000100, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakVector_Y) == 0x000104, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakVector_Z) == 0x000108, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Less_FloatFloat_ReturnValue) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00010D, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, K2Node_MakeArray_Array) == 0x000110, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000120, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000138, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000144, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Cross_VectorVector_ReturnValue) == 0x000150, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, Temp_object_Variable_1) == 0x000160, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000170, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001F8, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, K2Node_MakeArray_Array_1) == 0x000200, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_bBlockingHit) == 0x000210, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x000211, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_Time) == 0x000214, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_Distance) == 0x000218, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_Location) == 0x00021C, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_ImpactPoint) == 0x000228, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_Normal) == 0x000234, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_ImpactNormal) == 0x000240, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_PhysMat) == 0x000250, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_HitActor) == 0x000258, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_HitComponent) == 0x000260, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_HitBoneName) == 0x000268, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_HitItem) == 0x000270, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_FaceIndex) == 0x000274, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_TraceEnd) == 0x000284, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000290, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000291, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, Temp_bool_Variable) == 0x000292, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000294, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_SelectVector_ReturnValue) == 0x0002A0, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_IsOver_ReturnValue) == 0x0002AC, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x0002AD, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, Temp_int_Variable) == 0x0002B0, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, K2Node_MakeArray_Array_2) == 0x0002B8, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, K2Node_Select_Default) == 0x0002C8, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0002D8, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0002D9, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_Time_1) == 0x0002DC, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_Distance_1) == 0x0002E0, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_Location_1) == 0x0002E4, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0002F0, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_Normal_1) == 0x0002FC, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000308, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_PhysMat_1) == 0x000318, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_HitActor_1) == 0x000320, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_HitComponent_1) == 0x000328, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_HitBoneName_1) == 0x000330, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_HitItem_1) == 0x000338, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_FaceIndex_1) == 0x00033C, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_TraceStart_1) == 0x000340, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakHitResult_TraceEnd_1) == 0x00034C, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000358, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0003E0, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_GetCollisionResponseToChannel_ReturnValue_1) == 0x0003E1, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_GetCollisionResponseToChannel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0003E2, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakVector_X_1) == 0x0003E4, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakVector_Y_1) == 0x0003E8, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_BreakVector_Z_1) == 0x0003EC, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0003F0, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckHitBackGround, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0003F1, "Member 'BP_PsychicObjectComponent_C_CheckHitBackGround::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncVibrate
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_PrevAsyncVibrate final
{
public:
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7200[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PrevAsyncVibrate) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_PrevAsyncVibrate");
static_assert(sizeof(BP_PsychicObjectComponent_C_PrevAsyncVibrate) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_PrevAsyncVibrate");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncVibrate, CallFunc_GetDeltaSecond_delta_second) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PrevAsyncVibrate::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncVibrate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_PrevAsyncVibrate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_PrevAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncVibrate, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncVibrate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncVibrate
// 0x01C0 (0x01C0 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAsyncVibrate final
{
public:
	float                                         L_deltaSecond;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_angle;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_axis;                                            // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_offsetPos;                                       // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7201[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7202[0x2];                                     // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7203[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0138(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAsyncVibrate");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate) == 0x0001C0, "Wrong size on BP_PsychicObjectComponent_C_UpdateAsyncVibrate");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, L_deltaSecond) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::L_deltaSecond' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, L_angle) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::L_angle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, L_axis) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::L_axis' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, L_offsetPos) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::L_offsetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, K2Node_SwitchInteger_CmpSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_GetVectorValue_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_BreakVector_X) == 0x000034, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_BreakVector_Z) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000050, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000054, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000058, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Cross_VectorVector_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_RotateAngleAxis_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_GetDeltaSecond_delta_second) == 0x000088, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_GetDeltaSecond_delta_second_1) == 0x000094, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_GetDeltaSecond_delta_second_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000098, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_MakeVector_ReturnValue) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_MakeVector_ReturnValue_1) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_MakeVector_ReturnValue_2) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_MakeVector_ReturnValue_3) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_ComposeRotators_ReturnValue) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000108, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000110, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x000114, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000118, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00011C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000120, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Less_FloatFloat_ReturnValue) == 0x000124, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000125, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000128, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_IsOver_ReturnValue) == 0x000134, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncVibrate, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000138, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncVibrate::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncVibrate
// 0x009C (0x009C - 0x0000)
struct BP_PsychicObjectComponent_C_PostAsyncVibrate final
{
public:
	float                                         L_angle;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_axis;                                            // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PostAsyncVibrate) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_PostAsyncVibrate");
static_assert(sizeof(BP_PsychicObjectComponent_C_PostAsyncVibrate) == 0x00009C, "Wrong size on BP_PsychicObjectComponent_C_PostAsyncVibrate");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncVibrate, L_angle) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PostAsyncVibrate::L_angle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncVibrate, L_axis) == 0x000004, "Member 'BP_PsychicObjectComponent_C_PostAsyncVibrate::L_axis' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncVibrate, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000010, "Member 'BP_PsychicObjectComponent_C_PostAsyncVibrate::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncVibrate, CallFunc_IsOver_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_PostAsyncVibrate::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetMeshPosRot
// 0x0088 (0x0088 - 0x0000)
struct BP_PsychicObjectComponent_C_ResetMeshPosRot final
{
public:
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ResetMeshPosRot) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_ResetMeshPosRot");
static_assert(sizeof(BP_PsychicObjectComponent_C_ResetMeshPosRot) == 0x000088, "Wrong size on BP_PsychicObjectComponent_C_ResetMeshPosRot");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetMeshPosRot, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ResetMeshPosRot::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncCapture
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_PrevAsyncCapture final
{
public:
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7204[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeltaSecond_delta_second_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7205[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcCaptureRate_level;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCaptureRate_capture_rate;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PrevAsyncCapture_dummy;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7206[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcRate_Rate;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDriveMode_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7207[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPsychicWaitGaugeRate_ReturnValue;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PrevAsyncCapture) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_PrevAsyncCapture");
static_assert(sizeof(BP_PsychicObjectComponent_C_PrevAsyncCapture) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_PrevAsyncCapture");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_GetDeltaSecond_delta_second) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_GetDeltaSecond_delta_second_1) == 0x000008, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_GetDeltaSecond_delta_second_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, Temp_float_Variable) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, Temp_bool_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_CalcCaptureRate_level) == 0x000014, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_CalcCaptureRate_level' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_CalcCaptureRate_capture_rate) == 0x000018, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_CalcCaptureRate_capture_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_PrevAsyncCapture_dummy) == 0x00001D, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_PrevAsyncCapture_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_CalcRate_Rate) == 0x000020, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_CalcRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_IsDriveMode_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_IsDriveMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_GetPsychicWaitGaugeRate_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_GetPsychicWaitGaugeRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, K2Node_Select_Default) == 0x000030, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PrevAsyncCapture, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_PrevAsyncCapture::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncCapture
// 0x0014 (0x0014 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAsyncCapture final
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectState                           CallFunc_GetPsychicObjectState_return;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7208[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7209[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAsyncCapture) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAsyncCapture");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAsyncCapture) == 0x000014, "Wrong size on BP_PsychicObjectComponent_C_UpdateAsyncCapture");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCapture, Temp_float_Variable) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCapture::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCapture, CallFunc_GetPsychicObjectState_return) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCapture::CallFunc_GetPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCapture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCapture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCapture, CallFunc_GetRate_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCapture::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCapture, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCapture, Temp_bool_Variable) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCapture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCapture, CallFunc_IsValid_ReturnValue_1) == 0x00000E, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCapture, K2Node_Select_Default) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCapture::K2Node_Select_Default' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncCapture
// 0x0108 (0x0108 - 0x0000)
struct BP_PsychicObjectComponent_C_PostAsyncCapture final
{
public:
	class UAnimMontage*                           L_montage;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posNow;                                          // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_720A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetUniqueObjectPlayerMontage_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetUniqueObjectPlayerMontage_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720C[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720D[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcAttackSide_return;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateCaptureTimer_finish;                // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PostAsyncCapture_dummy;                   // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_PostAsyncCapture) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_PostAsyncCapture");
static_assert(sizeof(BP_PsychicObjectComponent_C_PostAsyncCapture) == 0x000108, "Wrong size on BP_PsychicObjectComponent_C_PostAsyncCapture");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, L_montage) == 0x000000, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::L_montage' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, L_posNow) == 0x000008, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::L_posNow' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000018, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_GetUniqueObjectPlayerMontage_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_GetUniqueObjectPlayerMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_GetUniqueObjectPlayerMontage_ReturnValue_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_GetUniqueObjectPlayerMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_BreakVector_X) == 0x000078, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_BreakVector_Y) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_BreakVector_Z) == 0x000080, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_MakeVector_ReturnValue) == 0x000084, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_IsOver_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Normal_ReturnValue) == 0x000094, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_GetRate_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_VEase_ReturnValue) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_CalcAttackSide_return) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_CalcAttackSide_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_UpdateCaptureTimer_finish) == 0x0000FD, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_UpdateCaptureTimer_finish' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_IsValid_ReturnValue_3) == 0x0000FE, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_PostAsyncCapture_dummy) == 0x0000FF, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_PostAsyncCapture_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000100, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_PostAsyncCapture, CallFunc_IsOver_ReturnValue_1) == 0x000101, "Member 'BP_PsychicObjectComponent_C_PostAsyncCapture::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAsyncVibrate
// 0x0160 (0x0160 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAsyncVibrate final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720E[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720F[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAsyncVibrate) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetAsyncVibrate");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAsyncVibrate) == 0x000160, "Wrong size on BP_PsychicObjectComponent_C_SetAsyncVibrate");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_GetUpVector_ReturnValue) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncVibrate, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000150, "Member 'BP_PsychicObjectComponent_C_SetAsyncVibrate::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAsyncLiftUp
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAsyncLiftUp final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAsyncLiftUp) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetAsyncLiftUp");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAsyncLiftUp) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetAsyncLiftUp");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncLiftUp, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAsyncLiftUp::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DetachAttackCombo
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_DetachAttackCombo final
{
public:
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7210[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DetachAttackCombo) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_DetachAttackCombo");
static_assert(sizeof(BP_PsychicObjectComponent_C_DetachAttackCombo) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_DetachAttackCombo");
static_assert(offsetof(BP_PsychicObjectComponent_C_DetachAttackCombo, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DetachAttackCombo::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DetachAttackCombo, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_DetachAttackCombo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DetachAttackCombo, CallFunc_SetAnimOwner_anim_owner) == 0x000010, "Member 'BP_PsychicObjectComponent_C_DetachAttackCombo::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEffectCaptureParam
// 0x0338 (0x0338 - 0x0000)
struct BP_PsychicObjectComponent_C_GetEffectCaptureParam final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Capture;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7211[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RateAura;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SizeAura;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7212[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectSizeParameter            L_param;                                           // 0x0028(0x0138)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        L_owner;                                           // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_sizeAura;                                        // 0x0168(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rateAura;                                        // 0x0174(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_size;                                            // 0x0178(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7213[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_5;         // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetUniqueEffectParam_return;              // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7214[0x1];                                     // 0x01F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectSizeParameter            CallFunc_GetUniqueEffectParam_parameter;           // 0x01F8(0x0138)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetEffectCaptureParam) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetEffectCaptureParam");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetEffectCaptureParam) == 0x000338, "Wrong size on BP_PsychicObjectComponent_C_GetEffectCaptureParam");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, SAS_Kind) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::SAS_Kind' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, Capture) == 0x000001, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::Capture' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, Rate) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::Rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, Size) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::Size' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, RateAura) == 0x000014, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::RateAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, SizeAura) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::SizeAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, L_param) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::L_param' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, L_owner) == 0x000160, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::L_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, L_sizeAura) == 0x000168, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::L_sizeAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, L_rateAura) == 0x000174, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::L_rateAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, L_size) == 0x000178, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::L_size' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, L_rate) == 0x000184, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000188, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_X) == 0x000194, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_Y) == 0x000198, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_Z) == 0x00019C, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_X_1) == 0x0001A0, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_Y_1) == 0x0001A4, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_Z_1) == 0x0001A8, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_X_2) == 0x0001AC, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_Y_2) == 0x0001B0, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_Z_2) == 0x0001B4, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0001BC, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0001C0, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_X_3) == 0x0001C4, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_Y_3) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_BreakVector_Z_3) == 0x0001CC, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_MakeVector_ReturnValue) == 0x0001D0, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0001DC, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x0001E0, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_RandomFloatInRange_ReturnValue_5) == 0x0001E4, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_RandomFloatInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_MakeVector_ReturnValue_1) == 0x0001E8, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001F4, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001F5, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_GetUniqueEffectParam_return) == 0x0001F6, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_GetUniqueEffectParam_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_GetUniqueEffectParam_parameter) == 0x0001F8, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_GetUniqueEffectParam_parameter' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEffectCaptureParam, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000330, "Member 'BP_PsychicObjectComponent_C_GetEffectCaptureParam::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCheckHit
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCheckHit final
{
public:
	bool                                          Check_floor_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Check_wall_in;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Check_ceiling_in;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCheckHit) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetCheckHit");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCheckHit) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_SetCheckHit");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCheckHit, Check_floor_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCheckHit::Check_floor_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCheckHit, Check_wall_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetCheckHit::Check_wall_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCheckHit, Check_ceiling_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetCheckHit::Check_ceiling_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleGrab
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandleGrab final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Throw_interpolation_in;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7215[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_sizeIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7216[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7217[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7218[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandleGrab) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandleGrab");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandleGrab) == 0x0000B0, "Wrong size on BP_PsychicObjectComponent_C_SetHandleGrab");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, Throw_interpolation_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::Throw_interpolation_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, L_sizeIndex) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::L_sizeIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_GetMeshBoundCentrePos_pos) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_Conv_BoolToString_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_GetMass_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrab, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetHandleGrab::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttractExtendLerp
// 0x0068 (0x0068 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAttractExtendLerp final
{
public:
	struct FVector                                L_normal;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7219[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_roation;                // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindClosestPointOnLine_ReturnValue;       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAttractExtendLerp");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp) == 0x000068, "Wrong size on BP_PsychicObjectComponent_C_UpdateAttractExtendLerp");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, L_normal) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::L_normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_VEase_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_GetRate_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_GetSocketLocation_location) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_GetSocketRotation_roation) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_GetSocketRotation_roation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_GetRightVector_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractExtendLerp, CallFunc_FindClosestPointOnLine_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractExtendLerp::CallFunc_FindClosestPointOnLine_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCapture
// 0x0078 (0x0078 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCapture final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_success_in;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721A[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_captureHeight;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721B[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCapture) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetCapture");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCapture) == 0x000078, "Wrong size on BP_PsychicObjectComponent_C_SetCapture");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCapture::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, Capture_success_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetCapture::Capture_success_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, L_captureHeight) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetCapture::L_captureHeight' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_GetComponentBounds_Origin) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_GetComponentBounds_BoxExtent) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_GetComponentBounds_SphereRadius) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_BreakVector_Y) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_RotateAngleAxis_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCapture, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetCapture::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateThrowVectorHoming
// 0x00C8 (0x00C8 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateThrowVectorHoming final
{
public:
	float                                         L_deltaAngle;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_axis;                                            // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_TargetAngle;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_targetVector;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyAttackThrowTargetPoint_targetPos; // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721C[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721D[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721E[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721F[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7220[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateThrowVectorHoming");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming) == 0x0000C8, "Wrong size on BP_PsychicObjectComponent_C_UpdateThrowVectorHoming");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, L_deltaAngle) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::L_deltaAngle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, L_axis) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::L_axis' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, L_TargetAngle) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::L_TargetAngle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, L_targetVector) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::L_targetVector' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_GetEnemyAttackThrowTargetPoint_targetPos) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_GetEnemyAttackThrowTargetPoint_targetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_IsOver_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002D, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_GetMeshBoundCentrePos_pos) == 0x000030, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_GetDeltaSecond_delta_second) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_RotateAngleAxis_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000054, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Cross_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Dot_VectorVector_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Normal_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_DegAcos_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x000080, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_IsDead_bDead) == 0x000091, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000094, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_SelectVector_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateThrowVectorHoming, CallFunc_Normal_ReturnValue_1) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_UpdateThrowVectorHoming::CallFunc_Normal_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitCaptureTimer
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_InitCaptureTimer final
{
public:
	bool                                          Combo_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAirIn;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lem8400;                                           // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7221[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7222[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitCaptureTimer) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitCaptureTimer");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitCaptureTimer) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_InitCaptureTimer");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, Combo_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::Combo_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, bAirIn) == 0x000001, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::bAirIn' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, Lem8400) == 0x000002, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::Lem8400' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, Temp_bool_Variable) == 0x000003, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, Temp_bool_Variable_1) == 0x000004, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, Temp_bool_Variable_2) == 0x000005, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_GetPlayerID_self_CastInput) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_GetPlayerID_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, K2Node_Select_Default) == 0x000024, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_SelectFloat_ReturnValue_2) == 0x000028, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_SelectFloat_ReturnValue_3) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, K2Node_Select_Default_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, K2Node_Select_Default_2) == 0x000034, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_SelectFloat_ReturnValue_4) == 0x000038, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_SelectFloat_ReturnValue_5) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitCaptureTimer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_InitCaptureTimer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCaptureTimer
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateCaptureTimer final
{
public:
	bool                                          Finish;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7223[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_nextLevel;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCaptureLevel_dummy;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateCaptureTimer) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateCaptureTimer");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateCaptureTimer) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_UpdateCaptureTimer");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimer, Finish) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimer::Finish' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimer, L_nextLevel) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimer::L_nextLevel' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimer, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimer, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimer, CallFunc_SetCaptureLevel_dummy) == 0x00000E, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimer::CallFunc_SetCaptureLevel_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimer, CallFunc_Less_IntInt_ReturnValue) == 0x00000F, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcCaptureRate
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_CalcCaptureRate final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Capture_rate;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_pass;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_total;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_time;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7224[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7225[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7226[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CalcCaptureRate) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_CalcCaptureRate");
static_assert(sizeof(BP_PsychicObjectComponent_C_CalcCaptureRate) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_CalcCaptureRate");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, Level) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::Level' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, Capture_rate) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::Capture_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, L_pass) == 0x000008, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::L_pass' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, L_total) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::L_total' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, L_index) == 0x000010, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::L_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, L_time) == 0x000014, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::L_time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, Temp_bool_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, Temp_float_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, Temp_bool_Variable_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, Temp_float_Variable_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, CallFunc_CheckPsychicObjectState_return) == 0x000028, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, CallFunc_CheckPsychicObjectState_return_1) == 0x000029, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::CallFunc_CheckPsychicObjectState_return_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, CallFunc_GetRate_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, K2Node_Select_Default) == 0x000030, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCaptureRate, K2Node_Select_Default_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_CalcCaptureRate::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncCommon
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAsyncCommon final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PostAsyncCommon_dummy;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PrevAsyncCommon_dummy;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateAsyncCommon_dummy;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAsyncCommon) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAsyncCommon");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAsyncCommon) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_UpdateAsyncCommon");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCommon, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCommon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCommon, CallFunc_PostAsyncCommon_dummy) == 0x000001, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCommon::CallFunc_PostAsyncCommon_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCommon, CallFunc_PrevAsyncCommon_dummy) == 0x000002, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCommon::CallFunc_PrevAsyncCommon_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAsyncCommon, CallFunc_UpdateAsyncCommon_dummy) == 0x000003, "Member 'BP_PsychicObjectComponent_C_UpdateAsyncCommon::CallFunc_UpdateAsyncCommon_dummy' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjCompTick
// 0x0024 (0x0024 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjCompTick final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7227[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name_in;                                           // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectTick_return;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectTick_return_1;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7228[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7229[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjCompTick) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjCompTick");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjCompTick) == 0x000024, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjCompTick");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, Name_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::Name_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, CallFunc_SetPsychicObjectTick_return) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::CallFunc_SetPsychicObjectTick_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, CallFunc_SetPsychicObjectTick_return_1) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::CallFunc_SetPsychicObjectTick_return_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, CallFunc_Array_RemoveItem_ReturnValue) == 0x000015, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, CallFunc_Array_Find_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCompTick, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCompTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAnimation
// 0x0080 (0x0080 - 0x0000)
struct BP_PsychicObjectComponent_C_GetAnimation final
{
public:
	class UAnimSequence*                          Anim_sequence;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_722A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_return;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_male;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_return_1;              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_male_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_722B[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimationBrainField_return;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_722C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationBrainField_anim_sequence;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_722D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationDirect_AnimSequence;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetAnimation) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetAnimation");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetAnimation) == 0x000080, "Wrong size on BP_PsychicObjectComponent_C_GetAnimation");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, Anim_sequence) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetAnimation::Anim_sequence' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, Temp_object_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetAnimation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, Temp_bool_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, Temp_object_Variable_1) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetAnimation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, Temp_object_Variable_2) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetAnimation::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, Temp_bool_Variable_1) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetAnimation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_IsCaptureOwnerMale_return) == 0x000029, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_IsCaptureOwnerMale_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_IsCaptureOwnerMale_male) == 0x00002A, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_IsCaptureOwnerMale_male' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_IsCaptureOwnerMale_return_1) == 0x00002B, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_IsCaptureOwnerMale_return_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_IsCaptureOwnerMale_male_1) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_IsCaptureOwnerMale_male_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, K2Node_Select_Default) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_GetAnimationBrainField_return) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_GetAnimationBrainField_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_GetAnimationBrainField_anim_sequence) == 0x000040, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_GetAnimationBrainField_anim_sequence' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, Temp_object_Variable_3) == 0x000048, "Member 'BP_PsychicObjectComponent_C_GetAnimation::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, K2Node_Select_Default_1) == 0x000050, "Member 'BP_PsychicObjectComponent_C_GetAnimation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000069, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_IsValid_ReturnValue_1) == 0x00006B, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_GetAnimationDirect_AnimSequence) == 0x000070, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_GetAnimationDirect_AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimation, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BP_PsychicObjectComponent_C_GetAnimation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDrawRotArrow
// 0x0090 (0x0090 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDrawRotArrow final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot_in;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Len_in;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size_in;                                           // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_in;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDrawRotArrow) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDrawRotArrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDrawRotArrow) == 0x000090, "Wrong size on BP_PsychicObjectComponent_C_DebugDrawRotArrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, Pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, Rot_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, Len_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::Len_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, Size_in) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::Size_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, Time_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::Time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_GetForwardVector_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_GetUpVector_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_GetRightVector_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000078, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawRotArrow, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000084, "Member 'BP_PsychicObjectComponent_C_DebugDrawRotArrow::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCurrentAttackType
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_GetCurrentAttackType final
{
public:
	int32                                         Attack_type;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetCurrentAttackType) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetCurrentAttackType");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetCurrentAttackType) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_GetCurrentAttackType");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCurrentAttackType, Attack_type) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetCurrentAttackType::Attack_type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCurrentAttackType, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetCurrentAttackType::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseInput
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPhaseInput final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return_1;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPhaseInput) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetPhaseInput");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPhaseInput) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_SetPhaseInput");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseInput, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPhaseInput::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseInput, CallFunc_SetProcedurePhase_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPhaseInput::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhaseInput, CallFunc_SetProcedurePhase_return_1) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetPhaseInput::CallFunc_SetProcedurePhase_return_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddChildObjList
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_AddChildObjList final
{
public:
	class ABP_PsychicObjectBasic_C*               Child_obj_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddChildObjList) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddChildObjList");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddChildObjList) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_AddChildObjList");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddChildObjList, Child_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddChildObjList::Child_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddChildObjList, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddChildObjList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveChildObj
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_RemoveChildObj final
{
public:
	class ABP_PsychicObjectBasic_C*               Child_obj_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_RemoveChildObj) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_RemoveChildObj");
static_assert(sizeof(BP_PsychicObjectComponent_C_RemoveChildObj) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_RemoveChildObj");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveChildObj, Child_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_RemoveChildObj::Child_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveChildObj, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_RemoveChildObj::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetChildObjList
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_ResetChildObjList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_722E[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ResetChildObjList) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_ResetChildObjList");
static_assert(sizeof(BP_PsychicObjectComponent_C_ResetChildObjList) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_ResetChildObjList");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetChildObjList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ResetChildObjList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetChildObjList, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_PsychicObjectComponent_C_ResetChildObjList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetChildObjList, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_ResetChildObjList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetChildObjList, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_ResetChildObjList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetChildObjList, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_ResetChildObjList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetChildObjList, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_ResetChildObjList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjSimulatePhysics
// 0x01C0 (0x01C0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics final
{
public:
	ECollisionEnabled                             Mesh_collision_in;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Simulate_in;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Gravity_in;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_722F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7230[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7231[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7232[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7233[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7234[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7235[0x5];                                     // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7236[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7237[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7238[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_3;          // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue_1;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7239[0x6];                                     // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_4;          // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue_1;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723A[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723B[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue_2;        // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics) == 0x0001C0, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, Mesh_collision_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::Mesh_collision_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, Simulate_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::Simulate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, Gravity_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::Gravity_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Conv_BoolToString_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000D1, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_BooleanAND_ReturnValue) == 0x0000D2, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_BooleanAND_ReturnValue_2) == 0x000100, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000108, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_IsGravityEnabled_ReturnValue) == 0x000118, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_IsGravityEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000119, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00011A, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x00011B, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x000120, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Conv_BoolToString_ReturnValue_3) == 0x000130, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Conv_BoolToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_GetCollisionEnabled_ReturnValue_1) == 0x000140, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_GetCollisionEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000141, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Conv_BoolToString_ReturnValue_4) == 0x000148, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Conv_BoolToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000158, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_IsGravityEnabled_ReturnValue_1) == 0x000168, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_IsGravityEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000170, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000180, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x000190, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000198, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001A8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_GetCollisionEnabled_ReturnValue_2) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_GetCollisionEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0001B9, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x0001BA, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0001BB, "Member 'BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleTarget
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandleTarget final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_rot_in;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rot_in;                                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandleTarget) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandleTarget");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandleTarget) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_SetHandleTarget");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleTarget, Pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandleTarget::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleTarget, Set_rot_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetHandleTarget::Set_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleTarget, Rot_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetHandleTarget::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleTarget, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetHandleTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplayState
// 0x0370 (0x0370 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDisplayState final
{
public:
	class FString                                 L_str;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPsychicObjectTickC_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectInUseC_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723F[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_2;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectActiveC_ReturnValue;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7240[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7241[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue;             // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7242[0x2];                                     // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7243[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7244[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5; // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDisplayState) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDisplayState");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDisplayState) == 0x000370, "Wrong size on BP_PsychicObjectComponent_C_DebugDisplayState");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, L_str) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::L_str' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_IsPsychicObjectTickC_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_IsPsychicObjectTickC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_IsPsychicObjectInUseC_ReturnValue) == 0x000051, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_IsPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Conv_BoolToString_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000068, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, K2Node_DynamicCast_AsPsychic_Object_Interface_2) == 0x000078, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::K2Node_DynamicCast_AsPsychic_Object_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_IsPsychicObjectActiveC_ReturnValue) == 0x000089, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_IsPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x000090, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetCollisionObjectType_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetCollisionProfileName_ReturnValue) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000100, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Conv_NameToString_ReturnValue) == 0x000110, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000120, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000130, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000140, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000150, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetComponentBounds_Origin) == 0x000160, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetComponentBounds_BoxExtent) == 0x00016C, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetComponentBounds_SphereRadius) == 0x000178, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_IsGravityEnabled_ReturnValue) == 0x00017C, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_IsGravityEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetCollisionEnabled_ReturnValue) == 0x00017D, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_SelectString_ReturnValue) == 0x000180, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000190, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetMass_ReturnValue) == 0x0001A0, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001A4, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Conv_FloatToString_ReturnValue) == 0x0001A8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_SelectString_ReturnValue_1) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001D8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001E8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001F8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000208, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000218, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000228, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000238, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000248, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000258, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000268, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000278, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x000288, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000298, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_21) == 0x0002A8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetElapsedTime_ReturnValue) == 0x0002B8, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0002C0, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0002D0, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_22) == 0x0002E0, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_23) == 0x0002F0, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000300, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_25) == 0x000310, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_26) == 0x000320, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_27) == 0x000330, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5) == 0x000340, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_28) == 0x000350, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayState, CallFunc_Concat_StrStr_ReturnValue_29) == 0x000360, "Member 'BP_PsychicObjectComponent_C_DebugDisplayState::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplayAttackSphere
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDisplayAttackSphere final
{
public:
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDisplayAttackSphere) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDisplayAttackSphere");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDisplayAttackSphere) == 0x000030, "Wrong size on BP_PsychicObjectComponent_C_DebugDisplayAttackSphere");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackSphere, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackSphere::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackSphere, CallFunc_GetMeshBoundCentrePos_pos) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackSphere::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackSphere, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackSphere::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackSphere, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackSphere::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplayChild
// 0x0054 (0x0054 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDisplayChild final
{
public:
	struct FVector                                L_posChild;                                        // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posParent;                                       // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7245[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7246[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDisplayChild) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDisplayChild");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDisplayChild) == 0x000054, "Wrong size on BP_PsychicObjectComponent_C_DebugDisplayChild");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, L_posChild) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::L_posChild' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, L_posParent) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::L_posParent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayChild, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_DebugDisplayChild::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplayAttackCollision
// 0x006C (0x006C - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDisplayAttackCollision final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7247[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7248[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsCollisionEnabled_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7249[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsCollisionEnabled_ReturnValue_1;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_724A[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDisplayAttackCollision");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision) == 0x00006C, "Wrong size on BP_PsychicObjectComponent_C_DebugDisplayAttackCollision");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, Temp_bool_Variable) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, Temp_float_Variable) == 0x000004, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, Temp_float_Variable_1) == 0x000008, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, Temp_float_Variable_2) == 0x000010, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, Temp_float_Variable_3) == 0x000014, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, CallFunc_K2_IsCollisionEnabled_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::CallFunc_K2_IsCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, CallFunc_SelectColor_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, K2Node_Select_Default) == 0x000044, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, CallFunc_K2_IsCollisionEnabled_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::CallFunc_K2_IsCollisionEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, CallFunc_SelectColor_ReturnValue_1) == 0x000058, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDisplayAttackCollision, K2Node_Select_Default_1) == 0x000068, "Member 'BP_PsychicObjectComponent_C_DebugDisplayAttackCollision::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcAttackSide
// 0x0130 (0x0130 - 0x0000)
struct BP_PsychicObjectComponent_C_CalcAttackSide final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_724B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_targetVec;                                       // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_objectVec;                                       // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_724C[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraTransform_location;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraTransform_rotate;                // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraTransform_direction;             // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_724D[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_5;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CalcAttackSide) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_CalcAttackSide");
static_assert(sizeof(BP_PsychicObjectComponent_C_CalcAttackSide) == 0x000130, "Wrong size on BP_PsychicObjectComponent_C_CalcAttackSide");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, L_targetVec) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::L_targetVec' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, L_objectVec) == 0x000010, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::L_objectVec' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_X_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Y_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000050, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_X_2) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Y_2) == 0x000060, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Z_2) == 0x000064, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_X_3) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Y_3) == 0x000080, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Z_3) == 0x000084, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000094, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Normal_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_MakeVector_ReturnValue_1) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Normal_ReturnValue_1) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_GetCameraTransform_location) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_GetCameraTransform_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_GetCameraTransform_rotate) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_GetCameraTransform_rotate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_GetCameraTransform_direction) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_GetCameraTransform_direction' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_X_4) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Y_4) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Z_4) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_GetForwardVector_ReturnValue) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Less_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_X_5) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Y_5) == 0x000110, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_BreakVector_Z_5) == 0x000114, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_MakeVector_ReturnValue_2) == 0x000118, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackSide, CallFunc_Normal_ReturnValue_2) == 0x000124, "Member 'BP_PsychicObjectComponent_C_CalcAttackSide::CallFunc_Normal_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetWeightGaugePos
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_GetWeightGaugePos final
{
public:
	struct FVector                                Gauge_pos;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_pos;                                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_724E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeightGaugePosUnqObj_return;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_724F[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWeightGaugePosUnqObj_pos;              // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetWeightGaugePos) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetWeightGaugePos");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetWeightGaugePos) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_GetWeightGaugePos");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetWeightGaugePos, Gauge_pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetWeightGaugePos::Gauge_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetWeightGaugePos, L_pos) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetWeightGaugePos::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetWeightGaugePos, CallFunc_GetMeshBoundCentrePos_pos) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetWeightGaugePos::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetWeightGaugePos, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_GetWeightGaugePos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetWeightGaugePos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetWeightGaugePos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetWeightGaugePos, CallFunc_GetWeightGaugePosUnqObj_return) == 0x000034, "Member 'BP_PsychicObjectComponent_C_GetWeightGaugePos::CallFunc_GetWeightGaugePosUnqObj_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetWeightGaugePos, CallFunc_GetWeightGaugePosUnqObj_pos) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetWeightGaugePos::CallFunc_GetWeightGaugePosUnqObj_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetWeightGaugePos, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_GetWeightGaugePos::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitDamageMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_InitDamageMesh final
{
public:
	class UMeshComponent*                         Damage_comp_in;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            L_Mesh;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitDamageMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitDamageMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitDamageMesh) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_InitDamageMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitDamageMesh, Damage_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitDamageMesh::Damage_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitDamageMesh, L_Mesh) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitDamageMesh::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitDamageMesh, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_InitDamageMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDamageMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_SetDamageMesh final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_bEffectAttack;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7250[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_tempMesh;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetDamageMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetDamageMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetDamageMesh) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_SetDamageMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDamageMesh, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetDamageMesh::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDamageMesh, L_bEffectAttack) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetDamageMesh::L_bEffectAttack' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDamageMesh, L_tempMesh) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetDamageMesh::L_tempMesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDamageMesh, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetDamageMesh::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDamageMesh, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_PsychicObjectComponent_C_SetDamageMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectAttack
// 0x0080 (0x0080 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectAttack final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     Sas_kind_in;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7251[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_sizeAura;                                        // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rateAura;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_size;                                            // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_isSkeletal;                                      // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7252[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        L_effect;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7253[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetEffectCaptureParam_sas_kind;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEffectCaptureParam_capture;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7254[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEffectCaptureParam_rate;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_size;               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectCaptureParam_rateAura;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_sizeAura;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnParticleEffect_particleSystem;       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7255[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectAttack) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectAttack) == 0x000080, "Wrong size on BP_PsychicObjectComponent_C_SetEffectAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, Sas_kind_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, L_sizeAura) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::L_sizeAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, L_rateAura) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::L_rateAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, L_size) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::L_size' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, L_rate) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, L_isSkeletal) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::L_isSkeletal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, L_effect) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::L_effect' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_sas_kind) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_sas_kind' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_capture) == 0x000039, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_capture' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_rate) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_size) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_size' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_rateAura) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_rateAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_sizeAura) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_sizeAura' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_SpawnParticleEffect_particleSystem) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_SpawnParticleEffect_particleSystem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAttack, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_PsychicObjectComponent_C_SetEffectAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectAura
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectAura final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Instance_on_in;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7256[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7257[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7258[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7259[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectAura) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectAura");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectAura) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_SetEffectAura");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, Instance_on_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::Instance_on_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, L_psyObj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Not_PreBool_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Not_PreBool_ReturnValue_2) == 0x000041, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Not_PreBool_ReturnValue_3) == 0x000042, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_IsValid_ReturnValue_1) == 0x000043, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAura, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetEffectAura::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitWreckageMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_InitWreckageMesh final
{
public:
	class UMeshComponent*                         Wreckage_mesh_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitWreckageMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitWreckageMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitWreckageMesh) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_InitWreckageMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitWreckageMesh, Wreckage_mesh_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitWreckageMesh::Wreckage_mesh_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitWreckageMesh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitWreckageMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMeshSimulatePhysics
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_SetMeshSimulatePhysics final
{
public:
	class UMeshComponent*                         Mesh_in;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Mesh_collision_in;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Simulate_in;                                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Gravity_in;                                        // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_725A[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetMeshSimulatePhysics");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_SetMeshSimulatePhysics");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics, Mesh_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetMeshSimulatePhysics::Mesh_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics, Mesh_collision_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetMeshSimulatePhysics::Mesh_collision_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics, Simulate_in) == 0x000009, "Member 'BP_PsychicObjectComponent_C_SetMeshSimulatePhysics::Simulate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics, Gravity_in) == 0x00000A, "Member 'BP_PsychicObjectComponent_C_SetMeshSimulatePhysics::Gravity_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetMeshSimulatePhysics::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetMeshSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetMeshSimulatePhysics::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshSimulatePhysics, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_PsychicObjectComponent_C_SetMeshSimulatePhysics::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectCaptureWreckageOld
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectCaptureWreckageOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectCaptureWreckageOld) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectCaptureWreckageOld");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectCaptureWreckageOld) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetEffectCaptureWreckageOld");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectCaptureWreckageOld, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectCaptureWreckageOld::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddCaptureChild
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_AddCaptureChild final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddCaptureChild) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddCaptureChild");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddCaptureChild) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_AddCaptureChild");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureChild, Psy_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddCaptureChild::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureChild, CallFunc_Array_Find_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddCaptureChild::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureChild, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_AddCaptureChild::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureChild, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_AddCaptureChild::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveCaptureChild
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_RemoveCaptureChild final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_RemoveCaptureChild) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_RemoveCaptureChild");
static_assert(sizeof(BP_PsychicObjectComponent_C_RemoveCaptureChild) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_RemoveCaptureChild");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveCaptureChild, Psy_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_RemoveCaptureChild::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveCaptureChild, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_RemoveCaptureChild::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyReaction
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEnemyReaction final
{
public:
	int32                                         Attack_type_in;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_725B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target_actor_in;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_725C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_725D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerActionForEnemyReaction_Dummy;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEnemyReaction) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEnemyReaction");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEnemyReaction) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_SetEnemyReaction");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, Attack_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::Attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, Target_actor_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::Target_actor_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, CallFunc_GetEnemyManager_Manager) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, CallFunc_PlayerActionForEnemyReaction_Dummy) == 0x000041, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::CallFunc_PlayerActionForEnemyReaction_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyReaction, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'BP_PsychicObjectComponent_C_SetEnemyReaction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAttackCollision
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_GetAttackCollision final
{
public:
	class UPrimitiveComponent*                    Attack_collision;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_725E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetAttackCollision) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetAttackCollision");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetAttackCollision) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_GetAttackCollision");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackCollision, Attack_collision) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetAttackCollision::Attack_collision' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackCollision, Temp_bool_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetAttackCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackCollision, K2Node_Select_Default) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetAttackCollision::K2Node_Select_Default' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetWeightGaugeEnable
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_SetWeightGaugeEnable final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unq_obj_in;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Check_in;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_725F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                L_objMan;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ui_pk_weight_gauge_button                L_buttonType;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7260[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetWeightGaugeEnable");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_SetWeightGaugeEnable");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetWeightGaugeEnable::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable, Unq_obj_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetWeightGaugeEnable::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable, Check_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetWeightGaugeEnable::Check_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable, L_objMan) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetWeightGaugeEnable::L_objMan' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable, L_buttonType) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetWeightGaugeEnable::L_buttonType' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetWeightGaugeEnable::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitPsychicBullet
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_InitPsychicBullet final
{
public:
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_in;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num_in;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitPsychicBullet) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitPsychicBullet");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitPsychicBullet) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_InitPsychicBullet");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPsychicBullet, Parent_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitPsychicBullet::Parent_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPsychicBullet, Index_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitPsychicBullet::Index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPsychicBullet, Num_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_InitPsychicBullet::Num_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPsychicBullet, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_InitPsychicBullet::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPsychicBullet, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_InitPsychicBullet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPsychicBullet, CallFunc_SetPsychicObjectActiveC_ReturnValue) == 0x000021, "Member 'BP_PsychicObjectComponent_C_InitPsychicBullet::CallFunc_SetPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPsychicBullet, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'BP_PsychicObjectComponent_C_InitPsychicBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicBulletParent
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicBulletParent final
{
public:
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicBulletParent) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicBulletParent");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicBulletParent) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicBulletParent");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicBulletParent, Parent_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicBulletParent::Parent_obj_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CreateHandle
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_CreateHandle final
{
public:
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsHandleComponent*                K2Node_DynamicCast_AsPhysics_Handle_Component;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CreateHandle) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_CreateHandle");
static_assert(sizeof(BP_PsychicObjectComponent_C_CreateHandle) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_CreateHandle");
static_assert(offsetof(BP_PsychicObjectComponent_C_CreateHandle, CallFunc_AddActorComponent_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CreateHandle::CallFunc_AddActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CreateHandle, K2Node_DynamicCast_AsPhysics_Handle_Component) == 0x000008, "Member 'BP_PsychicObjectComponent_C_CreateHandle::K2Node_DynamicCast_AsPhysics_Handle_Component' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CreateHandle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PsychicObjectComponent_C_CreateHandle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CreateHandle, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_PsychicObjectComponent_C_CreateHandle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckChildDestroy
// 0x0070 (0x0070 - 0x0000)
struct BP_PsychicObjectComponent_C_CheckChildDestroy final
{
public:
	float                                         Delay_time_in;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7261[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PsychicObjectBasic_C*>       NewLocalVar_0;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       L_destroyList;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_childObj;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7262[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7263[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7264[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7265[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckChildDestroy) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_CheckChildDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckChildDestroy) == 0x000070, "Wrong size on BP_PsychicObjectComponent_C_CheckChildDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, Delay_time_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::Delay_time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, NewLocalVar_0) == 0x000008, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, L_destroyList) == 0x000018, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::L_destroyList' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, L_childObj) == 0x000028, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::L_childObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, Temp_int_Loop_Num_Variable_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_Array_RemoveItem_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckChildDestroy, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_PsychicObjectComponent_C_CheckChildDestroy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjVisibility
// 0x0005 (0x0005 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjVisibility final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Keep_effect_attack_in;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_eftAtkVis;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjVisibility) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjVisibility");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjVisibility) == 0x000005, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjVisibility");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjVisibility, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjVisibility::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjVisibility, Keep_effect_attack_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsyObjVisibility::Keep_effect_attack_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjVisibility, L_eftAtkVis) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetPsyObjVisibility::L_eftAtkVis' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjVisibility, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetPsyObjVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPsyObjVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureChild
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCaptureChild final
{
public:
	class ARsBattleHero_C*                        Capture_owner_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7266[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCaptureChild) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetCaptureChild");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCaptureChild) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_SetCaptureChild");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureChild, Capture_owner_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCaptureChild::Capture_owner_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureChild, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetCaptureChild::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureChild, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetCaptureChild::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureChild, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetCaptureChild::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureChild, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetCaptureChild::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureChild, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetCaptureChild::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureChild, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetCaptureChild::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackSpline
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackSpline final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttackSpline_dummy;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackSpline) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackSpline");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackSpline) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetAttackSpline");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSpline, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSpline, CallFunc_SetAttackSpline_dummy) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAttackSpline::CallFunc_SetAttackSpline_dummy' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetChildObj
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_SetChildObj final
{
public:
	class ABP_PsychicObjectBasic_C*               Child_obj_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag_in;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetChildObj) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetChildObj");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetChildObj) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_SetChildObj");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetChildObj, Child_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetChildObj::Child_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetChildObj, Flag_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetChildObj::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicBulletIndex
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicBulletIndex final
{
public:
	int32                                         Num_in;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicBulletIndex) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicBulletIndex");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicBulletIndex) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicBulletIndex");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicBulletIndex, Num_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicBulletIndex::Num_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicBulletIndex, Index_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPsychicBulletIndex::Index_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcCircleArrangment
// 0x005C (0x005C - 0x0000)
struct BP_PsychicObjectComponent_C_CalcCircleArrangment final
{
public:
	int32                                         Sector_num_in;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_min_in;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_max_in;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Valid_angle_rate_in;                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height_min_in;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height_max_in;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_height;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_radius;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_angle;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_sector;                                          // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CalcCircleArrangment) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_CalcCircleArrangment");
static_assert(sizeof(BP_PsychicObjectComponent_C_CalcCircleArrangment) == 0x00005C, "Wrong size on BP_PsychicObjectComponent_C_CalcCircleArrangment");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Sector_num_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Sector_num_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Index_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Radius_min_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Radius_min_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Radius_max_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Radius_max_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Valid_angle_rate_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Valid_angle_rate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Height_min_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Height_min_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Height_max_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Height_max_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Radius) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Radius' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Angle) == 0x000020, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Angle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, Height) == 0x000024, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::Height' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, L_height) == 0x000028, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::L_height' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, L_radius) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::L_radius' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, L_angle) == 0x000030, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::L_angle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, L_sector) == 0x000034, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::L_sector' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000050, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcCircleArrangment, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_CalcCircleArrangment::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectTick
// 0x0040 (0x0040 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectTick final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7267[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectTickC_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7268[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectTick) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectTick");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectTick) == 0x000040, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectTick");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, Return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, L_psyObj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, CallFunc_SetPsychicObjectTickC_ReturnValue) == 0x000021, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::CallFunc_SetPsychicObjectTickC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectTick, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMeshCompHit
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PsychicObjectComponent_C_SetMeshCompHit final
{
public:
	class UPrimitiveComponent*                    Prim_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal_in;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_result_in;                                     // 0x0014(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetMeshCompHit) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetMeshCompHit");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetMeshCompHit) == 0x0000A8, "Wrong size on BP_PsychicObjectComponent_C_SetMeshCompHit");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, Prim_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::Prim_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, Normal_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::Normal_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, Hit_result_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::Hit_result_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, CallFunc_Not_PreBool_ReturnValue) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x00009D, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, CallFunc_GetCollisionObjectType_ReturnValue) == 0x00009E, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00009F, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshCompHit, CallFunc_IsValid_ReturnValue) == 0x0000A2, "Member 'BP_PsychicObjectComponent_C_SetMeshCompHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAsyncCommon
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAsyncCommon final
{
public:
	class FName                                   Ref_name_in;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag_in;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7269[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_726A[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAsyncCommon) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetAsyncCommon");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAsyncCommon) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_SetAsyncCommon");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncCommon, Ref_name_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAsyncCommon::Ref_name_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncCommon, Flag_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAsyncCommon::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncCommon, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetAsyncCommon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncCommon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAsyncCommon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncCommon, CallFunc_Array_RemoveItem_ReturnValue) == 0x000011, "Member 'BP_PsychicObjectComponent_C_SetAsyncCommon::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncCommon, CallFunc_Array_Find_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetAsyncCommon::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncCommon, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetAsyncCommon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAsyncCommon, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetAsyncCommon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCommonParameter
// 0x0170 (0x0170 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCommonParameter final
{
public:
	struct FPsychicObjectCommonParameter          Common_param_in;                                   // 0x0000(0x0170)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCommonParameter) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetCommonParameter");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCommonParameter) == 0x000170, "Wrong size on BP_PsychicObjectComponent_C_SetCommonParameter");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonParameter, Common_param_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCommonParameter::Common_param_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetMaterialParameter
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_ResetMaterialParameter final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ResetMaterialParameter) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_ResetMaterialParameter");
static_assert(sizeof(BP_PsychicObjectComponent_C_ResetMaterialParameter) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_ResetMaterialParameter");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetMaterialParameter, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ResetMaterialParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetInstanceValue
// 0x000C (0x000C - 0x0000)
struct BP_PsychicObjectComponent_C_SetInstanceValue final
{
public:
	int32                                         Index_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetInstanceValue) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetInstanceValue");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetInstanceValue) == 0x00000C, "Wrong size on BP_PsychicObjectComponent_C_SetInstanceValue");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInstanceValue, Index_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetInstanceValue::Index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInstanceValue, Value_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetInstanceValue::Value_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInstanceValue, Return) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetInstanceValue::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInstanceValue, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000009, "Member 'BP_PsychicObjectComponent_C_SetInstanceValue::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetInstanceValue
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_GetInstanceValue final
{
public:
	int32                                         Index_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_726B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetInstanceValue) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetInstanceValue");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetInstanceValue) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_GetInstanceValue");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInstanceValue, Index_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetInstanceValue::Index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInstanceValue, Return) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetInstanceValue::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInstanceValue, Value) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetInstanceValue::Value' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInstanceValue, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetInstanceValue::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDataRevision
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_SetDataRevision final
{
public:
	int32                                         Revision_in;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetDataRevision) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetDataRevision");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetDataRevision) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_SetDataRevision");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDataRevision, Revision_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetDataRevision::Revision_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetDataRevision
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_GetDataRevision final
{
public:
	int32                                         Revision;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetDataRevision) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetDataRevision");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetDataRevision) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_GetDataRevision");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetDataRevision, Revision) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetDataRevision::Revision' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IncrementDataRevision
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_IncrementDataRevision final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IncrementDataRevision) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_IncrementDataRevision");
static_assert(sizeof(BP_PsychicObjectComponent_C_IncrementDataRevision) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_IncrementDataRevision");
static_assert(offsetof(BP_PsychicObjectComponent_C_IncrementDataRevision, Temp_int_Variable) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IncrementDataRevision::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IncrementDataRevision, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_IncrementDataRevision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.Check Unique Object
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_Check_Unique_Object final
{
public:
	class UBP_UniqueObjectComponentBase_C*        Unq_obj_comp_in;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_726C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUniqueObjectC_ReturnValue;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_Check_Unique_Object) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_Check_Unique_Object");
static_assert(sizeof(BP_PsychicObjectComponent_C_Check_Unique_Object) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_Check_Unique_Object");
static_assert(offsetof(BP_PsychicObjectComponent_C_Check_Unique_Object, Unq_obj_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_Check_Unique_Object::Unq_obj_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Check_Unique_Object, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_Check_Unique_Object::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Check_Unique_Object, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_Check_Unique_Object::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Check_Unique_Object, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_Check_Unique_Object::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Check_Unique_Object, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_PsychicObjectComponent_C_Check_Unique_Object::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_Check_Unique_Object, CallFunc_SetUniqueObjectC_ReturnValue) == 0x000022, "Member 'BP_PsychicObjectComponent_C_Check_Unique_Object::CallFunc_SetUniqueObjectC_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ChkPsyObjMan
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_ChkPsyObjMan final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_726D[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ChkPsyObjMan) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_ChkPsyObjMan");
static_assert(sizeof(BP_PsychicObjectComponent_C_ChkPsyObjMan) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_ChkPsyObjMan");
static_assert(offsetof(BP_PsychicObjectComponent_C_ChkPsyObjMan, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ChkPsyObjMan::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ChkPsyObjMan, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_ChkPsyObjMan::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ChkPsyObjMan, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_PsychicObjectComponent_C_ChkPsyObjMan::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ChkPsyObjMan, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_PsychicObjectComponent_C_ChkPsyObjMan::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SearchEnemyAround
// 0x0190 (0x0190 - 0x0000)
struct BP_PsychicObjectComponent_C_SearchEnemyAround final
{
public:
	class AActor*                                 Target_actor_in;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Search_num_in;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_in;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height_in;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_726E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Search_list;                                       // 0x0018(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         L_count;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_726F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         L_list;                                            // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSCharacterBase*                       L_enemy;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posCen;                                          // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7270[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7271[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7272[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetableCharacter_ReturnValue;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7273[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7274[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7275[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7276[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7277[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7278[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7279[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SearchEnemyAround) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SearchEnemyAround");
static_assert(sizeof(BP_PsychicObjectComponent_C_SearchEnemyAround) == 0x000190, "Wrong size on BP_PsychicObjectComponent_C_SearchEnemyAround");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Target_actor_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Target_actor_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Search_num_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Search_num_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Radius_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Radius_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Height_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Height_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Search_list) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Search_list' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, L_count) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::L_count' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, L_list) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::L_list' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, L_enemy) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::L_enemy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, L_posCen) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::L_posCen' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Temp_bool_True_if_break_was_hit_Variable) == 0x000054, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Temp_int_Loop_Num_Variable) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_CheckTargetableCharacter_ReturnValue) == 0x000071, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_CheckTargetableCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_IsValid_ReturnValue) == 0x000072, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_GetDisplayName_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_IsActorTickEnabled_ReturnValue) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Conv_BoolToString_ReturnValue) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, Temp_int_Variable) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_BreakVector_X) == 0x000104, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_BreakVector_Y) == 0x000108, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_BreakVector_Z) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_GetEnemyManager_Manager) == 0x000110, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Conv_FloatToString_ReturnValue) == 0x000118, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_IsValid_ReturnValue_2) == 0x000128, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000130, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000140, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_GetEnemyList_ReturnValue) == 0x000150, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000160, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Abs_ReturnValue) == 0x000174, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Less_FloatFloat_ReturnValue) == 0x000178, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_MakeVector_ReturnValue) == 0x00017C, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_VSizeSquared_ReturnValue) == 0x000188, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00018C, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SearchEnemyAround, CallFunc_IsValid_ReturnValue_3) == 0x00018D, "Member 'BP_PsychicObjectComponent_C_SearchEnemyAround::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetTargetAttackPoint
// 0x0248 (0x0248 - 0x0000)
struct BP_PsychicObjectComponent_C_GetTargetAttackPoint final
{
public:
	float                                         Safety_height_in;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Player_front_in;                                   // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Camera_front_in;                                   // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos;                                               // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_hitPos;                                          // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_pos;                                             // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraTransform_location;              // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraTransform_rotate;                // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraTransform_direction;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_727A[0x2];                                     // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_727B[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_727C[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0138(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_727D[0x1];                                     // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_727E[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetTargetAttackPoint) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetTargetAttackPoint");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetTargetAttackPoint) == 0x000248, "Wrong size on BP_PsychicObjectComponent_C_GetTargetAttackPoint");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, Safety_height_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::Safety_height_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, Player_front_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::Player_front_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, Camera_front_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::Camera_front_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, Pos) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::Pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, L_hitPos) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::L_hitPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, L_pos) == 0x000034, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, Temp_object_Variable) == 0x000040, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000050, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_GetCameraTransform_location) == 0x000068, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_GetCameraTransform_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_GetCameraTransform_rotate) == 0x000074, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_GetCameraTransform_rotate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_GetCameraTransform_direction) == 0x000080, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_GetCameraTransform_direction' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_X) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_Y) == 0x000090, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_Z) == 0x000094, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_MakeRotFromX_ReturnValue) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_VSizeSquared_ReturnValue) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_VSizeSquared_ReturnValue_1) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000DD, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_X_1) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_Y_1) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_Z_1) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_MakeVector_ReturnValue_1) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_X_2) == 0x000108, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_Y_2) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakVector_Z_2) == 0x000110, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000114, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000128, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000134, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000138, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001C0, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C1, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001C2, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_Time) == 0x0001C4, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_Distance) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_Location) == 0x0001CC, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D8, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_Normal) == 0x0001E4, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F0, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_PhysMat) == 0x000200, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_HitActor) == 0x000208, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_HitComponent) == 0x000210, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000218, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_HitItem) == 0x000220, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_FaceIndex) == 0x000224, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_BreakHitResult_TraceEnd) == 0x000234, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetTargetAttackPoint, CallFunc_IsValid_ReturnValue) == 0x000240, "Member 'BP_PsychicObjectComponent_C_GetTargetAttackPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ClearPsychicBulletList
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectComponent_C_ClearPsychicBulletList final
{
public:
	bool                                          Destroy_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_727F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7280[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7281[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ClearPsychicBulletList) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_ClearPsychicBulletList");
static_assert(sizeof(BP_PsychicObjectComponent_C_ClearPsychicBulletList) == 0x000030, "Wrong size on BP_PsychicObjectComponent_C_ClearPsychicBulletList");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, Destroy_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::Destroy_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, L_psyObj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPsychicBulletList, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_ClearPsychicBulletList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddPsychicBulletList
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_AddPsychicBulletList final
{
public:
	class ABP_PsychicObjectBasic_C*               bullet_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_in;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddPsychicBulletList) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddPsychicBulletList");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddPsychicBulletList) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_AddPsychicBulletList");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddPsychicBulletList, bullet_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddPsychicBulletList::bullet_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddPsychicBulletList, Index_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddPsychicBulletList::Index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddPsychicBulletList, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_AddPsychicBulletList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetPsychicBulletList
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_GetPsychicBulletList final
{
public:
	TArray<class ABP_PsychicObjectBasic_C*>       bullet_obj;                                        // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetPsychicBulletList) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetPsychicBulletList");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetPsychicBulletList) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_GetPsychicBulletList");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetPsychicBulletList, bullet_obj) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetPsychicBulletList::bullet_obj' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSasKind
// 0x0068 (0x0068 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSasKind final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7282[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7283[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7284[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7285[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue;              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7286[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     CallFunc_GetSasKind_return;                        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSasKind) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetSasKind");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSasKind) == 0x000068, "Wrong size on BP_PsychicObjectComponent_C_SetSasKind");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSasKind::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, L_psyObj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetSasKind::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, Temp_bool_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetSasKind::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, Temp_object_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetSasKind::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetSasKind::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetSasKind::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetSasKind::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetSasKind::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetSasKind::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_IsUniqueObjectC_ReturnValue) == 0x000049, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_IsUniqueObjectC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_Array_AddUnique_ReturnValue) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, K2Node_Select_Default) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetSasKind::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSasKind, CallFunc_GetSasKind_return) == 0x000061, "Member 'BP_PsychicObjectComponent_C_SetSasKind::CallFunc_GetSasKind_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetPsyObjCompTick
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_ResetPsyObjCompTick final
{
public:
	bool                                          CallFunc_SetPsychicObjectTick_return;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ResetPsyObjCompTick) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_ResetPsyObjCompTick");
static_assert(sizeof(BP_PsychicObjectComponent_C_ResetPsyObjCompTick) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_ResetPsyObjCompTick");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetPsyObjCompTick, CallFunc_SetPsychicObjectTick_return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ResetPsyObjCompTick::CallFunc_SetPsychicObjectTick_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSeHit
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSeHit final
{
public:
	bool                                          Hit_enemy_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hit_background_in;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7287[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          L_soundStom;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7288[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SetPsychicObjectSound_rs_atom_comp;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSeHit) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetSeHit");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSeHit) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_SetSeHit");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeHit, Hit_enemy_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSeHit::Hit_enemy_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeHit, Hit_background_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetSeHit::Hit_background_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeHit, L_soundStom) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetSeHit::L_soundStom' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeHit, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetSeHit::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeHit, CallFunc_SetPsychicObjectSound_rs_atom_comp) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetSeHit::CallFunc_SetPsychicObjectSound_rs_atom_comp' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSeLiftUp
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSeLiftUp final
{
public:
	class URSAtomComponentBase*                   CallFunc_SetPsychicObjectSound_rs_atom_comp;       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSeLiftUp) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetSeLiftUp");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSeLiftUp) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetSeLiftUp");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeLiftUp, CallFunc_SetPsychicObjectSound_rs_atom_comp) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSeLiftUp::CallFunc_SetPsychicObjectSound_rs_atom_comp' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSeAttack
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSeAttack final
{
public:
	bool                                          Throw_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7289[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          L_sound;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SetPsychicObjectSound_rs_atom_comp;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_728A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSeAttack) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetSeAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSeAttack) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_SetSeAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeAttack, Throw_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSeAttack::Throw_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeAttack, Index_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetSeAttack::Index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeAttack, L_sound) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetSeAttack::L_sound' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeAttack, CallFunc_SetPsychicObjectSound_rs_atom_comp) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetSeAttack::CallFunc_SetPsychicObjectSound_rs_atom_comp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeAttack, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetSeAttack::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSeAttack, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetSeAttack::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugPrintString
// 0x0088 (0x0088 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugPrintString final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_728B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Str_in;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Obj_name_in;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Draw_in;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          On_player_in;                                      // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Screen_in;                                         // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_728C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_728D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugPrintString) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_DebugPrintString");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugPrintString) == 0x000088, "Wrong size on BP_PsychicObjectComponent_C_DebugPrintString");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, Str_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::Str_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, Obj_name_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::Obj_name_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, Draw_in) == 0x000019, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::Draw_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, On_player_in) == 0x00001A, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::On_player_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, Screen_in) == 0x00001B, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::Screen_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, CallFunc_SelectString_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintString, CallFunc_SelectVector_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_DebugPrintString::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugPrintError
// 0x0088 (0x0088 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugPrintError final
{
public:
	class FString                                 Func_str_in;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Msg_str_in;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Screen_in;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_728E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugPrintError) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_DebugPrintError");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugPrintError) == 0x000088, "Wrong size on BP_PsychicObjectComponent_C_DebugPrintError");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, Func_str_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::Func_str_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, Msg_str_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::Msg_str_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, Screen_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::Screen_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000068, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugPrintError, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000078, "Member 'BP_PsychicObjectComponent_C_DebugPrintError::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckFocusable
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_CheckFocusable final
{
public:
	bool                                          CallFunc_IsFocusable_return;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckFocusable) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CheckFocusable");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckFocusable) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_CheckFocusable");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckFocusable, CallFunc_IsFocusable_return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckFocusable::CallFunc_IsFocusable_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitPartsObj
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_InitPartsObj final
{
public:
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitPartsObj) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitPartsObj");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitPartsObj) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_InitPartsObj");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPartsObj, Parent_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitPartsObj::Parent_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitPartsObj, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitPartsObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ClearPartsObjList
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectComponent_C_ClearPartsObjList final
{
public:
	bool                                          Destroy_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_728F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_partsObj;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7290[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7291[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ClearPartsObjList) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_ClearPartsObjList");
static_assert(sizeof(BP_PsychicObjectComponent_C_ClearPartsObjList) == 0x000030, "Wrong size on BP_PsychicObjectComponent_C_ClearPartsObjList");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, Destroy_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::Destroy_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, L_partsObj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::L_partsObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearPartsObjList, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_ClearPartsObjList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddPartsObjList
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_AddPartsObjList final
{
public:
	class ABP_PsychicObjectBasic_C*               Parts_obj_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddPartsObjList) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddPartsObjList");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddPartsObjList) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_AddPartsObjList");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddPartsObjList, Parts_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddPartsObjList::Parts_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddPartsObjList, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddPartsObjList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddPartsObjList, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_AddPartsObjList::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddPartsObjList, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_AddPartsObjList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetPartsObjList
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_GetPartsObjList final
{
public:
	int32                                         Index_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7292[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Parts_obj;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7293[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetPartsObjList) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetPartsObjList");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetPartsObjList) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_GetPartsObjList");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetPartsObjList, Index_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetPartsObjList::Index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetPartsObjList, Parts_obj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetPartsObjList::Parts_obj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetPartsObjList, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetPartsObjList::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetPartsObjList, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetPartsObjList::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDrawAsyncCommon
// 0x0090 (0x0090 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDrawAsyncCommon final
{
public:
	class FString                                 L_str;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7294[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7295[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDrawAsyncCommon");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon) == 0x000090, "Wrong size on BP_PsychicObjectComponent_C_DebugDrawAsyncCommon");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, L_str) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::L_str' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawAsyncCommon, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'BP_PsychicObjectComponent_C_DebugDrawAsyncCommon::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectHit
// 0x03E0 (0x03E0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectHit final
{
public:
	bool                                          Hit_enemy_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hit_background_in;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7296[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCHitResult                           Hit_result_in;                                     // 0x0008(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FHitResult                             Hit_result_bg_in;                                  // 0x01C8(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0250(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0298(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7297[0x1];                                     // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7298[0x4];                                     // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03A0(0x0030)(IsPlainOldData, NoDestructor)
	class URSParticleSystemComponentBase*         CallFunc_SetPsychicObjectEffect_ReturnValue;       // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetEffectHitUnqObj_dummy;                 // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectHit) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectHit");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectHit) == 0x0003E0, "Wrong size on BP_PsychicObjectComponent_C_SetEffectHit");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, Hit_enemy_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::Hit_enemy_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, Hit_background_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::Hit_background_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, Hit_result_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::Hit_result_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, Hit_result_bg_in) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::Hit_result_bg_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, Temp_object_Variable) == 0x000250, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_RandomFloatInRange_ReturnValue) == 0x000260, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_MakeRotator_ReturnValue) == 0x000264, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_Add_VectorVector_ReturnValue) == 0x000270, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00027C, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, K2Node_MakeArray_Array) == 0x000288, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000298, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000320, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000321, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000322, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_Time) == 0x000324, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_Distance) == 0x000328, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_Location) == 0x00032C, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000338, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_Normal) == 0x000344, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_ImpactNormal) == 0x000350, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_PhysMat) == 0x000360, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_HitActor) == 0x000368, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_HitComponent) == 0x000370, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_HitBoneName) == 0x000378, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_HitItem) == 0x000380, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_FaceIndex) == 0x000384, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_TraceStart) == 0x000388, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_BreakHitResult_TraceEnd) == 0x000394, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_MakeTransform_ReturnValue) == 0x0003A0, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_SetPsychicObjectEffect_ReturnValue) == 0x0003D0, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_SetPsychicObjectEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_SetEffectHitUnqObj_dummy) == 0x0003D8, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_SetEffectHitUnqObj_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectHit, CallFunc_IsValid_ReturnValue) == 0x0003D9, "Member 'BP_PsychicObjectComponent_C_SetEffectHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCheckDestroy
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCheckDestroy final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCheckDestroyUnqObj_dummy;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCheckDestroy) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetCheckDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCheckDestroy) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_SetCheckDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCheckDestroy, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCheckDestroy::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCheckDestroy, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetCheckDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCheckDestroy, CallFunc_SetCheckDestroyUnqObj_dummy) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetCheckDestroy::CallFunc_SetCheckDestroyUnqObj_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCheckDestroy, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetCheckDestroy::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCheckDestroy
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateCheckDestroy final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateCheckDestroy_dummy;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateCheckDestroy) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateCheckDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateCheckDestroy) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_UpdateCheckDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckDestroy, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateCheckDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckDestroy, CallFunc_UpdateCheckDestroy_dummy) == 0x000001, "Member 'BP_PsychicObjectComponent_C_UpdateCheckDestroy::CallFunc_UpdateCheckDestroy_dummy' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddDestroyEffectMeshList
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_AddDestroyEffectMeshList final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddDestroyEffectMeshList) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddDestroyEffectMeshList");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddDestroyEffectMeshList) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_AddDestroyEffectMeshList");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddDestroyEffectMeshList, Mesh_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddDestroyEffectMeshList::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddDestroyEffectMeshList, CallFunc_Array_Find_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddDestroyEffectMeshList::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddDestroyEffectMeshList, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_AddDestroyEffectMeshList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddDestroyEffectMeshList, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_AddDestroyEffectMeshList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetParameterEffectFade
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_SetParameterEffectFade final
{
public:
	float                                         Rate_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7299[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_meshComp;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_729A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetParameterEffectFade) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetParameterEffectFade");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetParameterEffectFade) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_SetParameterEffectFade");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, Rate_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::Rate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, L_meshComp) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::L_meshComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, L_rate) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterEffectFade, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetParameterEffectFade::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHitDestroy
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHitDestroy final
{
public:
	float                                         L_destroyDelayTime;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDestroyExplosionProc_return;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHitDestroy) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetHitDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHitDestroy) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetHitDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHitDestroy, L_destroyDelayTime) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHitDestroy::L_destroyDelayTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHitDestroy, CallFunc_SetDestroyExplosionProc_return) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetHitDestroy::CallFunc_SetDestroyExplosionProc_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitBrainFieldObjOld
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_InitBrainFieldObjOld final
{
public:
	int32                                         Index_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitBrainFieldObjOld) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_InitBrainFieldObjOld");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitBrainFieldObjOld) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_InitBrainFieldObjOld");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitBrainFieldObjOld, Index_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitBrainFieldObjOld::Index_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldGrab
// 0x0070 (0x0070 - 0x0000)
struct BP_PsychicObjectComponent_C_SetBrainFieldGrab final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_729B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        Hero_in;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_in;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_in;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset_pos_in;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewLocalVar_1;                                     // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729C[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBrainFieldObjectC_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_729D[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SetBrainFieldObjPosRot_pos;               // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBrainFieldPos_pos;                     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetBrainFieldGrab) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetBrainFieldGrab");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetBrainFieldGrab) == 0x000070, "Wrong size on BP_PsychicObjectComponent_C_SetBrainFieldGrab");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, Hero_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::Hero_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, Max_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::Max_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, Index_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::Index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, Offset_pos_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::Offset_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, NewLocalVar_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, L_pos) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, CallFunc_SetBrainFieldObjectC_ReturnValue) == 0x000051, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::CallFunc_SetBrainFieldObjectC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, CallFunc_SetBrainFieldObjPosRot_pos) == 0x000054, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::CallFunc_SetBrainFieldObjPosRot_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, CallFunc_GetBrainFieldPos_pos) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::CallFunc_GetBrainFieldPos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldGrab, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldGrab::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAppearOld
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAppearOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAppearOld) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetAppearOld");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAppearOld) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetAppearOld");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAppearOld, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAppearOld::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateBrainField
// 0x0024 (0x0024 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateBrainField final
{
public:
	struct FVector                                L_pos;                                             // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetBrainFieldObjPosRot_pos;               // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBrainFieldPos_pos;                     // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateBrainField) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateBrainField");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateBrainField) == 0x000024, "Wrong size on BP_PsychicObjectComponent_C_UpdateBrainField");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateBrainField, L_pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateBrainField::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateBrainField, CallFunc_SetBrainFieldObjPosRot_pos) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateBrainField::CallFunc_SetBrainFieldObjPosRot_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateBrainField, CallFunc_GetBrainFieldPos_pos) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateBrainField::CallFunc_GetBrainFieldPos_pos' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetBrainFieldPos
// 0x0060 (0x0060 - 0x0000)
struct BP_PsychicObjectComponent_C_GetBrainFieldPos final
{
public:
	bool                                          Reset_random_in;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_729E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pos;                                               // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetBrainFieldPos) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetBrainFieldPos");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetBrainFieldPos) == 0x000060, "Wrong size on BP_PsychicObjectComponent_C_GetBrainFieldPos");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, Reset_random_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::Reset_random_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, Pos) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_RotateAngleAxis_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMeshPosRot
// 0x0094 (0x0094 - 0x0000)
struct BP_PsychicObjectComponent_C_SetMeshPosRot final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetMeshPosRot) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetMeshPosRot");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetMeshPosRot) == 0x000094, "Wrong size on BP_PsychicObjectComponent_C_SetMeshPosRot");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshPosRot, Pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetMeshPosRot::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshPosRot, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetMeshPosRot::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldAttackType
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_SetBrainFieldAttackType final
{
public:
	EPsychicObjectBrainFieldAttackType            Attack_type_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetBrainFieldAttackType) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetBrainFieldAttackType");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetBrainFieldAttackType) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_SetBrainFieldAttackType");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldAttackType, Attack_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldAttackType::Attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldAttackType, Level_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldAttackType::Level_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldAttackType, Temp_int_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldAttackType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldAttackType, Temp_int_Variable_1) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldAttackType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldAttackType, Temp_int_Variable_2) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldAttackType::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldAttackType, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldAttackType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCommonSpline
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCommonSpline final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Dist_curve_in;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_rate_in;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A1[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSplineUnqObj_dunnmy;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCommonSpline) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetCommonSpline");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCommonSpline) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_SetCommonSpline");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, Dist_curve_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::Dist_curve_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, Time_rate_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::Time_rate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, CallFunc_GetTimeRange_MinTime) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, CallFunc_GetTimeRange_MaxTime) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, CallFunc_SetSplineUnqObj_dunnmy) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::CallFunc_SetSplineUnqObj_dunnmy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonSpline, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000025, "Member 'BP_PsychicObjectComponent_C_SetCommonSpline::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCommonSpline
// 0x014C (0x014C - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateCommonSpline final
{
public:
	float                                         L_rate;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos_1;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A2[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotatorAxisAndAngle_outRot;           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A3[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A4[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateSplineUnqObj_dummy;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A5[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A6[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A7[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateCommonSpline) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateCommonSpline");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateCommonSpline) == 0x00014C, "Wrong size on BP_PsychicObjectComponent_C_UpdateCommonSpline");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, L_rate) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetEnemyWeakPoint_weak_pos_1) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetEnemyWeakPoint_weak_pos_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_X_1) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_Y_1) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetFloatValue_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetRate_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetDeltaSecond_delta_second) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_MakeRotatorAxisAndAngle_outRot) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_MakeRotatorAxisAndAngle_outRot' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_ComposeRotators_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_SetPsychicObjectAttack_return) == 0x000064, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_X_2) == 0x000068, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_Y_2) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_Z_2) == 0x000070, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BooleanOR_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BooleanOR_ReturnValue_1) == 0x000099, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BooleanOR_ReturnValue_2) == 0x00009A, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BooleanOR_ReturnValue_3) == 0x00009B, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_RLerp_ReturnValue) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_IsValid_ReturnValue_2) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_UpdateSplineUnqObj_dummy) == 0x0000B9, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_UpdateSplineUnqObj_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_IsValid_ReturnValue_3) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_X_3) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_Y_3) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_BreakVector_Z_3) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_RLerp_ReturnValue_1) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_MakeVector_ReturnValue_1) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Normal_ReturnValue) == 0x000108, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_RotateAngleAxis_ReturnValue) == 0x000114, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_MakeRotFromX_ReturnValue) == 0x000120, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_IsOver_ReturnValue) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000130, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000134, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetElapsedTime_ReturnValue) == 0x000140, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000144, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonSpline, CallFunc_GetFloatValue_ReturnValue_1) == 0x000148, "Member 'BP_PsychicObjectComponent_C_UpdateCommonSpline::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSplinePoint
// 0x0024 (0x0024 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSplinePoint final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update_in;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A8[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSplinePoint) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetSplinePoint");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSplinePoint) == 0x000024, "Wrong size on BP_PsychicObjectComponent_C_SetSplinePoint");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePoint, Pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSplinePoint::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePoint, Update_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetSplinePoint::Update_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePoint, L_index) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetSplinePoint::L_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePoint, Temp_int_Variable) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetSplinePoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePoint, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetSplinePoint::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePoint, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetSplinePoint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePoint, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetSplinePoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackDrop
// 0x0250 (0x0250 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackDrop final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Drop_arrow_rot_in;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A9[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Drop_time_rate_in;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posAttackTarget;                                 // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAnimationBrainField_return;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72AA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetAnimationBrainField_anim_sequence;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72AB[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72AC[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72AD[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72AE[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyTopWeakPoint_weak_pos;            // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72AF[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x01E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackDrop) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackDrop");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackDrop) == 0x000250, "Wrong size on BP_PsychicObjectComponent_C_SetAttackDrop");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, Drop_arrow_rot_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::Drop_arrow_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, Drop_time_rate_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::Drop_time_rate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, L_posAttackTarget) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::L_posAttackTarget' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, L_index) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::L_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, L_psyObj) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_GetAnimationBrainField_return) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_GetAnimationBrainField_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_GetAnimationBrainField_anim_sequence) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_GetAnimationBrainField_anim_sequence' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_SetAnimOwner_anim_owner) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_MakeVector_ReturnValue) == 0x000094, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_MakeVector_ReturnValue_1) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C4, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, Temp_bool_Variable) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_SelectVector_ReturnValue) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, K2Node_Select_Default) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Normal_ReturnValue) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Cross_VectorVector_ReturnValue) == 0x000104, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_X) == 0x000110, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_Y) == 0x000114, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_Z) == 0x000118, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00011C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_X_1) == 0x000128, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_Y_1) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_MakeVector_ReturnValue_2) == 0x000134, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_X_2) == 0x000140, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_Y_2) == 0x000144, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_Z_2) == 0x000148, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00014C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakRotator_Roll) == 0x000158, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakRotator_Pitch) == 0x00015C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakRotator_Yaw) == 0x000160, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_MakeRotator_ReturnValue) == 0x000164, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000174, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_X_3) == 0x000180, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_Y_3) == 0x000184, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakVector_Z_3) == 0x000188, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_GetEnemyTopWeakPoint_weak_pos) == 0x00018C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_GetEnemyTopWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000198, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00019C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_MakeVector_ReturnValue_3) == 0x0001A0, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Normal_ReturnValue_1) == 0x0001AC, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_MakeRotFromX_ReturnValue) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001C4, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D0, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0001DC, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_GetTransform_ReturnValue_1) == 0x0001E0, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakTransform_Location_1) == 0x000210, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakTransform_Rotation_1) == 0x00021C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_BreakTransform_Scale_1) == 0x000228, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000234, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000240, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackDrop, CallFunc_IsValid_ReturnValue_1) == 0x00024C, "Member 'BP_PsychicObjectComponent_C_SetAttackDrop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcAttackDropSpline
// 0x0140 (0x0140 - 0x0000)
struct BP_PsychicObjectComponent_C_CalcAttackDropSpline final
{
public:
	bool                                          Force_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72B0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_posStt;                                          // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_pos;                                             // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72B1[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72B2[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyTopWeakPoint_weak_pos;            // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72B3[0xC];                                     // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CalcAttackDropSpline) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_CalcAttackDropSpline");
static_assert(sizeof(BP_PsychicObjectComponent_C_CalcAttackDropSpline) == 0x000140, "Wrong size on BP_PsychicObjectComponent_C_CalcAttackDropSpline");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, Force_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::Force_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, L_posStt) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::L_posStt' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, L_pos) == 0x000010, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_GetSocketLocation_location) == 0x000020, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_X_1) == 0x000054, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_Z_1) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_GetEnemyTopWeakPoint_weak_pos) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_GetEnemyTopWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_X_2) == 0x000078, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_Y_2) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_Z_2) == 0x000080, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakTransform_Rotation) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_X_3) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_Y_3) == 0x000100, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_BreakVector_Z_3) == 0x000104, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_VLerp_ReturnValue) == 0x000108, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000114, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_Abs_ReturnValue) == 0x000118, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00011C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000120, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_Add_FloatFloat_ReturnValue) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_MakeVector_ReturnValue_1) == 0x000130, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcAttackDropSpline, CallFunc_IsValid_ReturnValue_2) == 0x00013C, "Member 'BP_PsychicObjectComponent_C_CalcAttackDropSpline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackSwing
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackSwing final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcAttackSide_return;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackSwing) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackSwing");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackSwing) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_SetAttackSwing");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSwing, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackSwing::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSwing, CallFunc_CalcAttackSide_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAttackSwing::CallFunc_CalcAttackSide_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSwing, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetAttackSwing::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCommonAttract
// 0x00D0 (0x00D0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCommonAttract final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72B4[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72B5[0xD];                                     // 0x0013(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72B6[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner_1;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72B7[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_1;                           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_GetAnimation_anim_sequence;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCommonAttract) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetCommonAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCommonAttract) == 0x0000D0, "Wrong size on BP_PsychicObjectComponent_C_SetCommonAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, Temp_bool_Variable) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, Temp_struct_Variable) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, Temp_bool_Variable_1) == 0x000012, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_SelectFloat_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_BooleanOR_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, K2Node_Select_Default) == 0x000091, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_SelectFloat_ReturnValue_1) == 0x000094, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_SetAnimOwner_anim_owner) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_SetAnimOwner_anim_owner_1) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_SetAnimOwner_anim_owner_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, K2Node_Select_Default_1) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_GetAnimation_anim_sequence) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_GetAnimation_anim_sequence' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, K2Node_SwitchEnum_CmpSuccess) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCommonAttract, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000C1, "Member 'BP_PsychicObjectComponent_C_SetCommonAttract::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCommonAttract
// 0x0150 (0x0150 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateCommonAttract final
{
public:
	float                                         L_rate2;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_offset;                                          // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_vecTargetHz;                                     // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_vecTarget;                                       // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_targetPos;                                       // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72B8[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72B9[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72BA[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72BB[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_roation;                // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRate_ReturnValue_1;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateCommonAttract) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateCommonAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateCommonAttract) == 0x000150, "Wrong size on BP_PsychicObjectComponent_C_UpdateCommonAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, L_rate2) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::L_rate2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, L_offset) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::L_offset' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, L_rate) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, L_vecTargetHz) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::L_vecTargetHz' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, L_vecTarget) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::L_vecTarget' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, L_targetPos) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::L_targetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000094, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_IsOver_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_RLerp_ReturnValue) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_VLerp_ReturnValue) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_GetRate_ReturnValue) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_IsValid_ReturnValue) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_IsPlaying_ReturnValue) == 0x0000CD, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_IsValid_ReturnValue_1) == 0x0000CE, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_RLerp_ReturnValue_1) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_VLerp_ReturnValue_1) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_IsPlaying_ReturnValue_1) == 0x000100, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_IsOver_ReturnValue_1) == 0x000101, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_GetSocketLocation_location) == 0x000104, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_GetSocketRotation_roation) == 0x000110, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_GetSocketRotation_roation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_GetUpVector_ReturnValue) == 0x00011C, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_MakeRotFromX_ReturnValue) == 0x000128, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_GetRate_ReturnValue_1) == 0x000134, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_GetRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCommonAttract, CallFunc_ComposeRotators_ReturnValue) == 0x000138, "Member 'BP_PsychicObjectComponent_C_UpdateCommonAttract::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAnimNotifyReturn
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAnimNotifyReturn final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAnimNotifyReturn) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetAnimNotifyReturn");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAnimNotifyReturn) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetAnimNotifyReturn");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimNotifyReturn, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAnimNotifyReturn::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ExecAttackDrop
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_ExecAttackDrop final
{
public:
	int32                                         Drop_level_in;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attack_collision_in;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ExecAttackDrop) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_ExecAttackDrop");
static_assert(sizeof(BP_PsychicObjectComponent_C_ExecAttackDrop) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_ExecAttackDrop");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecAttackDrop, Drop_level_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ExecAttackDrop::Drop_level_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecAttackDrop, Attack_collision_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_ExecAttackDrop::Attack_collision_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ExecAttackDrop, CallFunc_SetPsychicObjectAttack_return) == 0x000005, "Member 'BP_PsychicObjectComponent_C_ExecAttackDrop::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyTopWeakPoint
// 0x01F8 (0x01F8 - 0x0000)
struct BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint final
{
public:
	struct FVector                                Weak_pos;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             L_workResult;                                      // 0x000C(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                L_traceEnd;                                        // 0x0094(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_traceStt;                                        // 0x00A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_HitHeight;                                       // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_tgtPos;                                          // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72BC[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72BD[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0130(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72BE[0x2];                                     // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72BF[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_CapsuleTraceMultiForObjects_OutHits;      // 0x01C0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CapsuleTraceMultiForObjects_ReturnValue;  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C0[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C1[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint) == 0x0001F8, "Wrong size on BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, Weak_pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::Weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, L_workResult) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::L_workResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, L_traceEnd) == 0x000094, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::L_traceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, L_traceStt) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::L_traceStt' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, L_HitHeight) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::L_HitHeight' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, L_tgtPos) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::L_tgtPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, Temp_int_Array_Index_Variable) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_X) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_Z) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_X_1) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_Y_1) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_Z_1) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_MakeVector_ReturnValue_1) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_MakeVector_ReturnValue_2) == 0x000104, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, K2Node_MakeArray_Array_1) == 0x000130, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x000140, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x000141, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_Time) == 0x000144, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_Distance) == 0x000148, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_Location) == 0x00014C, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_Normal) == 0x000164, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_FaceIndex) == 0x0001A4, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakHitResult_TraceEnd) == 0x0001B4, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_CapsuleTraceMultiForObjects_OutHits) == 0x0001C0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_CapsuleTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_CapsuleTraceMultiForObjects_ReturnValue) == 0x0001D0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_CapsuleTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_GetOwner_ReturnValue) == 0x0001D8, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001E0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_Array_Length_ReturnValue) == 0x0001E4, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_X_2) == 0x0001E8, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_Y_2) == 0x0001EC, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_BreakVector_Z_2) == 0x0001F0, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_Less_IntInt_ReturnValue) == 0x0001F4, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001F5, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint, CallFunc_IsValid_ReturnValue) == 0x0001F6, "Member 'BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBackupAttackParamOld
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_SetBackupAttackParamOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectBrainFieldAttackType            Attack_type_in;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      L_capsule;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetBackupAttackParamOld) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetBackupAttackParamOld");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetBackupAttackParamOld) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_SetBackupAttackParamOld");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBackupAttackParamOld, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetBackupAttackParamOld::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBackupAttackParamOld, Attack_type_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetBackupAttackParamOld::Attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBackupAttackParamOld, L_capsule) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetBackupAttackParamOld::L_capsule' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddCheckChildObj
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_AddCheckChildObj final
{
public:
	class ABP_PsychicObjectBasic_C*               Child_obj_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Coll_profile_in;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Focus_in;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_in;                                        // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C3[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddCheckChildObj) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddCheckChildObj");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddCheckChildObj) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_AddCheckChildObj");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCheckChildObj, Child_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddCheckChildObj::Child_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCheckChildObj, Coll_profile_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddCheckChildObj::Coll_profile_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCheckChildObj, Focus_in) == 0x000009, "Member 'BP_PsychicObjectComponent_C_AddCheckChildObj::Focus_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCheckChildObj, Capture_in) == 0x00000A, "Member 'BP_PsychicObjectComponent_C_AddCheckChildObj::Capture_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCheckChildObj, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_AddCheckChildObj::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCheckChildObj, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_AddCheckChildObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjCollisionProfileIgnore
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Skip_check_obj_type_in;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C4[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_Mesh;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C5[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C6[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, Skip_check_obj_type_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::Skip_check_obj_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, L_Mesh) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, L_psyObj) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002D, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCameraLookAtPos
// 0x0044 (0x0044 - 0x0000)
struct BP_PsychicObjectComponent_C_GetCameraLookAtPos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C7[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBrainFieldDropLookAtPos_pos;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C8[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLookAtPos_pos;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetCameraLookAtPos) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetCameraLookAtPos");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetCameraLookAtPos) == 0x000044, "Wrong size on BP_PsychicObjectComponent_C_GetCameraLookAtPos");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraLookAtPos, Pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetCameraLookAtPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraLookAtPos, Temp_bool_Variable) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetCameraLookAtPos::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraLookAtPos, CallFunc_GetBrainFieldDropLookAtPos_pos) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetCameraLookAtPos::CallFunc_GetBrainFieldDropLookAtPos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraLookAtPos, CallFunc_GetMeshBoundCentrePos_pos) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_GetCameraLookAtPos::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraLookAtPos, K2Node_Select_Default) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetCameraLookAtPos::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraLookAtPos, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_GetCameraLookAtPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraLookAtPos, CallFunc_GetCameraLookAtPos_pos) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetCameraLookAtPos::CallFunc_GetCameraLookAtPos_pos' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjLocationRotation
// 0x0350 (0x0350 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjLocationRotation final
{
public:
	bool                                          Location_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72C9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pos_in;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotation_in;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72CA[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rot_in;                                            // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Mesh_in;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72CB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Center_in;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Swing_center_in;                                   // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72CC[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               L_rot;                                             // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72CD[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        L_cenComp;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         L_Mesh;                                            // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72CE[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0124(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x01AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72CF[0x2];                                     // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0238(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D0[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x02C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjLocationRotation");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation) == 0x000350, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjLocationRotation");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Location_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Location_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Pos_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Rotation_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Rotation_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Rot_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Mesh_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Mesh_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Mesh_comp_in) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Center_in) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Center_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Swing_center_in) == 0x000031, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Swing_center_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, L_rot) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::L_rot' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, L_pos) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, L_cenComp) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::L_cenComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, L_Mesh) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, Temp_bool_Variable) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_NegateRotator_ReturnValue) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, K2Node_Select_Default) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000084, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000124, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x0001AC, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_IsValid_ReturnValue) == 0x000234, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000235, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000238, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0002C0, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0002C4, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjLocationRotation, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00034C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjLocationRotation::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CallUniqueAttackSuccess
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_CallUniqueAttackSuccess final
{
public:
	EPsychicObjectUniqueMontageIndex              Montage_index_in;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left_in;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D1[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetUniqueObjectPlayerMontage_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CallUniqueAttackSuccess) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_CallUniqueAttackSuccess");
static_assert(sizeof(BP_PsychicObjectComponent_C_CallUniqueAttackSuccess) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_CallUniqueAttackSuccess");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallUniqueAttackSuccess, Montage_index_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CallUniqueAttackSuccess::Montage_index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallUniqueAttackSuccess, Left_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CallUniqueAttackSuccess::Left_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallUniqueAttackSuccess, Return) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CallUniqueAttackSuccess::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallUniqueAttackSuccess, CallFunc_GetUniqueObjectPlayerMontage_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_CallUniqueAttackSuccess::CallFunc_GetUniqueObjectPlayerMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallUniqueAttackSuccess, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_CallUniqueAttackSuccess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallUniqueAttackSuccess, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_PsychicObjectComponent_C_CallUniqueAttackSuccess::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjCollisionProfileNoColl
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Skip_check_obj_type_in;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_Mesh;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D3[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D4[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, Skip_check_obj_type_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::Skip_check_obj_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, L_Mesh) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, L_psyObj) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002D, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetPsyObjCollisionProfile
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile final
{
public:
	class UMeshComponent*                         L_Mesh;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile");
static_assert(sizeof(BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile, L_Mesh) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile, L_psyObj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_ResetPsyObjCollisionProfile::L_psyObj' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckAttackType
// 0x000C (0x000C - 0x0000)
struct BP_PsychicObjectComponent_C_CheckAttackType final
{
public:
	bool                                          Direct_drop_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectBrainFieldAttackType            Attack_type_in;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72D5[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckAttackType) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_CheckAttackType");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckAttackType) == 0x00000C, "Wrong size on BP_PsychicObjectComponent_C_CheckAttackType");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckAttackType, Direct_drop_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckAttackType::Direct_drop_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckAttackType, Attack_type_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CheckAttackType::Attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckAttackType, Level_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CheckAttackType::Level_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckAttackType, Temp_int_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_CheckAttackType::Temp_int_Variable' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSkipAttack
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSkipAttack final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSkipAttack) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetSkipAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSkipAttack) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetSkipAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSkipAttack, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSkipAttack::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhasePullOut
// 0x03F0 (0x03F0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPhasePullOut final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D7[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72D8[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos_1;              // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72D9[0xB];                                     // 0x0165(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0170(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72DA[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x01C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x01D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DB[0x1];                                     // 0x0263(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72DC[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x02E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72DD[0xC];                                     // 0x0334(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x0340(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPhasePullOutUnqObj_dummy;              // 0x03DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x03DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return_1;               // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPhasePullOut) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetPhasePullOut");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPhasePullOut) == 0x0003F0, "Wrong size on BP_PsychicObjectComponent_C_SetPhasePullOut");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, Temp_object_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, Temp_object_Variable_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_GetMeshBoundCentrePos_pos) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_Y) == 0x000084, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_Z) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_DegAtan2_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_Add_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_GetMeshBoundCentrePos_pos_1) == 0x000094, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_GetMeshBoundCentrePos_pos_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_X_1) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_Y_1) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_Z_1) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_MakeVector_ReturnValue) == 0x0000C4, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000164, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_GetTransform_ReturnValue) == 0x000170, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Location) == 0x0001A0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Rotation) == 0x0001AC, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Scale) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, K2Node_MakeArray_Array_1) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x0001D8, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x000260, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_bBlockingHit) == 0x000261, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_bInitialOverlap) == 0x000262, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_Time) == 0x000264, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_Distance) == 0x000268, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_Location) == 0x00026C, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_ImpactPoint) == 0x000278, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_Normal) == 0x000284, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_ImpactNormal) == 0x000290, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_PhysMat) == 0x0002A0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_HitActor) == 0x0002A8, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_HitComponent) == 0x0002B0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_HitBoneName) == 0x0002B8, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_HitItem) == 0x0002C0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_FaceIndex) == 0x0002C4, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_TraceStart) == 0x0002C8, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakHitResult_TraceEnd) == 0x0002D4, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_GetTransform_ReturnValue_1) == 0x0002E0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Location_1) == 0x000310, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Rotation_1) == 0x00031C, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Scale_1) == 0x000328, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_GetTransform_ReturnValue_2) == 0x000340, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Location_2) == 0x000370, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Rotation_2) == 0x00037C, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakTransform_Scale_2) == 0x000388, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000394, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_GetForwardVector_ReturnValue) == 0x0003A0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_X_2) == 0x0003AC, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_Y_2) == 0x0003B0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_BreakVector_Z_2) == 0x0003B4, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_MakeVector_ReturnValue_1) == 0x0003B8, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003C4, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_Normal_ReturnValue) == 0x0003D0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0003DC, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_IsValid_ReturnValue) == 0x0003DD, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_SetPhasePullOutUnqObj_dummy) == 0x0003DE, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_SetPhasePullOutUnqObj_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_SetProcedurePhase_return) == 0x0003DF, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPhasePullOut, CallFunc_SetProcedurePhase_return_1) == 0x0003E0, "Member 'BP_PsychicObjectComponent_C_SetPhasePullOut::CallFunc_SetProcedurePhase_return_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdatePullOut
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdatePullOut final
{
public:
	bool                                          CallFunc_CallUniqueAttackSuccess_return;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdatePullOutCurve_end;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdatePullOutUnqObj_dummy;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdatePullOut) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_UpdatePullOut");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdatePullOut) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_UpdatePullOut");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOut, CallFunc_CallUniqueAttackSuccess_return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdatePullOut::CallFunc_CallUniqueAttackSuccess_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOut, CallFunc_UpdatePullOutCurve_end) == 0x000001, "Member 'BP_PsychicObjectComponent_C_UpdatePullOut::CallFunc_UpdatePullOutCurve_end' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOut, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_UpdatePullOut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOut, CallFunc_UpdatePullOutUnqObj_dummy) == 0x000003, "Member 'BP_PsychicObjectComponent_C_UpdatePullOut::CallFunc_UpdatePullOutUnqObj_dummy' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectUniqueType
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectUniqueType final
{
public:
	EPsychicObjectUniqueType                      Unique_type_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectUniqueType) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectUniqueType");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectUniqueType) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectUniqueType");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectUniqueType, Unique_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectUniqueType::Unique_type_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckPsychicObjectUniqueType
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType final
{
public:
	EPsychicObjectUniqueType                      Unique_type_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType, Unique_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType::Unique_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType, Return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureVibrate
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCaptureVibrate final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Handle_in;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCaptureVibrate) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetCaptureVibrate");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCaptureVibrate) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetCaptureVibrate");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureVibrate, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCaptureVibrate::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureVibrate, Handle_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetCaptureVibrate::Handle_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureVibrateAngle
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCaptureVibrateAngle final
{
public:
	float                                         Vt_speed_in;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hz_speed_in;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle_range_in;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCaptureVibrateAngle) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetCaptureVibrateAngle");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCaptureVibrateAngle) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_SetCaptureVibrateAngle");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureVibrateAngle, Vt_speed_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCaptureVibrateAngle::Vt_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureVibrateAngle, Hz_speed_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetCaptureVibrateAngle::Hz_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureVibrateAngle, Angle_range_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetCaptureVibrateAngle::Angle_range_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureVibrateAngle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetCaptureVibrateAngle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPullOut
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPullOut final
{
public:
	bool                                          Capture_to_pull_out_in;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Pos_curve_in;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Angle_curve_in;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Handle_in;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Rot_curve_in;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Check_wall_in;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPullOut) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPullOut");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPullOut) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_SetPullOut");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, Capture_to_pull_out_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPullOut::Capture_to_pull_out_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, Pos_curve_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPullOut::Pos_curve_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, Angle_curve_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPullOut::Angle_curve_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, Handle_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPullOut::Handle_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, Rot_curve_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPullOut::Rot_curve_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, Check_wall_in) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPullOut::Check_wall_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, CallFunc_GetTimeRange_MinTime) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetPullOut::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, CallFunc_GetTimeRange_MaxTime) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPullOut::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetPullOut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOut, CallFunc_IsValid_ReturnValue_1) == 0x000035, "Member 'BP_PsychicObjectComponent_C_SetPullOut::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdatePullOutCurve
// 0x013C (0x013C - 0x0000)
struct BP_PsychicObjectComponent_C_UpdatePullOutCurve final
{
public:
	bool                                          End;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_rate;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E2[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetElapsedTime_ReturnValue_1;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_2;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotatorAxisAndAngle_outRot;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_3;            // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotatorAxisAndAngle_outRot_1;         // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetElapsedTime_ReturnValue_2;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_3;             // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdatePullOutCurve) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdatePullOutCurve");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdatePullOutCurve) == 0x00013C, "Wrong size on BP_PsychicObjectComponent_C_UpdatePullOutCurve");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, End) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::End' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, L_rate) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_SelectFloat_ReturnValue_1) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_IsOver_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetVectorValue_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_Y) == 0x000024, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_RLerp_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetVectorValue_ReturnValue_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetElapsedTime_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_X_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_Y_1) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_Z_1) == 0x000050, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_VLerp_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_MakeRotFromX_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetElapsedTime_ReturnValue_1) == 0x000078, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_NegateRotator_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_ComposeRotators_ReturnValue) == 0x000088, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetVectorValue_ReturnValue_2) == 0x000094, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetVectorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_X_2) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_Y_2) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_Z_2) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_MakeRotator_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_ComposeRotators_ReturnValue_1) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_ComposeRotators_ReturnValue_2) == 0x0000C4, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_MakeRotatorAxisAndAngle_outRot) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_MakeRotatorAxisAndAngle_outRot' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_ComposeRotators_ReturnValue_3) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_ComposeRotators_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetRate_ReturnValue) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetFloatValue_ReturnValue) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_X_3) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_Y_3) == 0x000100, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_BreakVector_Z_3) == 0x000104, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_DegAtan2_ReturnValue) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_Add_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_MakeRotatorAxisAndAngle_outRot_1) == 0x000114, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_MakeRotatorAxisAndAngle_outRot_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetElapsedTime_ReturnValue_2) == 0x000120, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetElapsedTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GetVectorValue_ReturnValue_3) == 0x000124, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GetVectorValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePullOutCurve, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000130, "Member 'BP_PsychicObjectComponent_C_UpdatePullOutCurve::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetUniqueObjectPlayerMontage
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage final
{
public:
	EPsychicObjectUniqueMontageIndex              Montage_index_in;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left_in;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E3[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCaptureOwnerMale_return;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_male;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E4[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetUniqueObjectPlayerMontage_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage, Montage_index_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage::Montage_index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage, Left_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage::Left_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage, Montage) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage::Montage' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage, CallFunc_IsCaptureOwnerMale_return) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage::CallFunc_IsCaptureOwnerMale_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage, CallFunc_IsCaptureOwnerMale_male) == 0x000011, "Member 'BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage::CallFunc_IsCaptureOwnerMale_male' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage, CallFunc_GetUniqueObjectPlayerMontage_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage::CallFunc_GetUniqueObjectPlayerMontage_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSplinePointEx
// 0x0080 (0x0080 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSplinePointEx final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tangent_in;                                        // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot_in;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESplinePointType                              Type_in;                                           // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update_in;                                         // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E5[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplinePoint                           K2Node_MakeStruct_SplinePoint;                     // 0x0038(0x0044)(NoDestructor)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSplinePointEx) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetSplinePointEx");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSplinePointEx) == 0x000080, "Wrong size on BP_PsychicObjectComponent_C_SetSplinePointEx");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, Pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, Tangent_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::Tangent_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, Rot_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, Type_in) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::Type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, Update_in) == 0x000025, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::Update_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, L_index) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::L_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, Temp_int_Variable) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, K2Node_MakeStruct_SplinePoint) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::K2Node_MakeStruct_SplinePoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplinePointEx, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_SetSplinePointEx::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDrawSpline
// 0x0080 (0x0080 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDrawSpline final
{
public:
	float                                         Time_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_dist;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_totalDist;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_num;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E6[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetDirectionAtSplinePoint_ReturnValue;    // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E7[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDrawSpline) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDrawSpline");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDrawSpline) == 0x000080, "Wrong size on BP_PsychicObjectComponent_C_DebugDrawSpline");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, Time_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::Time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, L_dist) == 0x000004, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::L_dist' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, L_totalDist) == 0x000008, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::L_totalDist' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, L_num) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::L_num' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, Temp_int_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_GetDirectionAtSplinePoint_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_GetDirectionAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000064, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDrawSpline, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_DebugDrawSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSplineAboveEnemy
// 0x0160 (0x0160 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSplineAboveEnemy final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Dst_pos_offest_in;                                 // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Dist_curve_in;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dst_angle_offset_in;                               // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Actor_location_in;                                 // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72E9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_posTgt;                                          // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_dirTgtPlyHz;                                     // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyTopWeakPoint_weak_pos;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72EA[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetSplineAboveEnemy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy) == 0x000160, "Wrong size on BP_PsychicObjectComponent_C_SetSplineAboveEnemy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, Dst_pos_offest_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::Dst_pos_offest_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, Dist_curve_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::Dist_curve_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, Dst_angle_offset_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::Dst_angle_offset_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, Actor_location_in) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::Actor_location_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, L_posTgt) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::L_posTgt' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, L_dirTgtPlyHz) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::L_dirTgtPlyHz' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_GetEnemyTopWeakPoint_weak_pos) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_GetEnemyTopWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Y) == 0x000054, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_X_1) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Y_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Z_1) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_X_2) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Y_2) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Z_2) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_MakeVector_ReturnValue_1) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_X_3) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Y_3) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Z_3) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_MakeVector_ReturnValue_2) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakTransform_Location) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakTransform_Scale) == 0x000114, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_X_4) == 0x000120, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Y_4) == 0x000124, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_BreakVector_Z_4) == 0x000128, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_MakeVector_ReturnValue_3) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_Normal_ReturnValue) == 0x000138, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_RotateAngleAxis_ReturnValue) == 0x000144, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_MakeRotFromX_ReturnValue) == 0x000150, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineAboveEnemy, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00015C, "Member 'BP_PsychicObjectComponent_C_SetSplineAboveEnemy::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcSplineAboveEnemy
// 0x0178 (0x0178 - 0x0000)
struct BP_PsychicObjectComponent_C_CalcSplineAboveEnemy final
{
public:
	struct FVector                                L_dirCen;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_dirStt;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_workTan;                                         // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rotCen;                                          // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_posCen;                                          // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyTopWeakPoint_weak_pos;            // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_CalcSplineAboveEnemy");
static_assert(sizeof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy) == 0x000178, "Wrong size on BP_PsychicObjectComponent_C_CalcSplineAboveEnemy");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, L_dirCen) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::L_dirCen' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, L_dirStt) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::L_dirStt' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, L_workTan) == 0x000018, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::L_workTan' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, L_rotCen) == 0x000024, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::L_rotCen' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, L_posCen) == 0x000030, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::L_posCen' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_GetEnemyTopWeakPoint_weak_pos) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_GetEnemyTopWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_X_1) == 0x000054, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Z_1) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_X_2) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Y_2) == 0x000070, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Z_2) == 0x000074, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_X_3) == 0x000084, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Y_3) == 0x000088, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Z_3) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_MakeVector_ReturnValue_1) == 0x000090, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Normal_ReturnValue) == 0x000108, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000114, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_Normal_ReturnValue_1) == 0x000120, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_RLerp_ReturnValue) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_VLerp_ReturnValue) == 0x000138, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_VLerp_ReturnValue_1) == 0x000144, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_X_4) == 0x000150, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Y_4) == 0x000154, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Z_4) == 0x000158, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_X_5) == 0x00015C, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Y_5) == 0x000160, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_BreakVector_Z_5) == 0x000164, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_MakeVector_ReturnValue_2) == 0x000168, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CalcSplineAboveEnemy, CallFunc_IsValid_ReturnValue) == 0x000174, "Member 'BP_PsychicObjectComponent_C_CalcSplineAboveEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCollisionNew
// 0x0810 (0x0810 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackCollisionNew final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectBrainFieldAttackType            brain_field_attack_type_in;                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72EB[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius_in;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_capsule_in;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72EC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_OutString;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UBoxComponent*                          L_box;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_attachSkip;                                      // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectBrainFieldAttackType            L_attackType;                                      // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72ED[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               L_rotPrim;                                         // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_posPrim;                                         // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCHitEffectInfo                       L_effectInfo;                                      // 0x0044(0x0008)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_72EE[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCSkillCommonInfo                     L_skillInfo;                                       // 0x0050(0x00F0)(Edit, BlueprintVisible)
	struct FHCCollisionCommonInfo                 L_commonInfo;                                      // 0x0140(0x0070)(Edit, BlueprintVisible)
	class UHitCheckComponent*                     L_hitCheckComp;                                    // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_attacker;                                        // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        L_arrowComp;                                       // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_radius;                                          // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72EF[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       L_sphere;                                          // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      L_capsule;                                         // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F0[0x5];                                     // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCSkillCommonInfo                     CallFunc_SetAttackSkillInfo_skill_info;            // 0x01E8(0x00F0)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPsychicObjectOccupied_occupied;    // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUniqueAttackCollision_dummy;           // 0x02DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x02F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CheckBrainFieldAttackCollision_return_;   // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F1[0x3];                                     // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F2[0x2];                                     // 0x03FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F3[0x3];                                     // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x044C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F4[0x3];                                     // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F5[0x7];                                     // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCCollisionCommonInfo                 CallFunc_GetAttackParameter_common_info;           // 0x04E8(0x0070)()
	struct FHCSkillCommonInfo                     CallFunc_GetAttackParameter_skill_info;            // 0x0558(0x00F0)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F6[0x7];                                     // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCSkillCommonInfo                     CallFunc_SetAttackSkillInfo_skill_info_1;          // 0x0650(0x00F0)()
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F7[0x7];                                     // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitCheckComponent*                     CallFunc_GetHitCheckComponentFromActor_ReturnValue; // 0x0750(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default;                             // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectBrainFieldAttackType            K2Node_Select_Default_1;                           // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F8[0x2];                                     // 0x0762(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotatorAxisAndAngle_outRot;           // 0x0764(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0770(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x077C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackCollisionNew) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackCollisionNew");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackCollisionNew) == 0x000810, "Wrong size on BP_PsychicObjectComponent_C_SetAttackCollisionNew");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, brain_field_attack_type_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::brain_field_attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, Radius_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::Radius_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, Use_capsule_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::Use_capsule_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_OutString) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_OutString' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_box) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_box' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_attachSkip) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_attachSkip' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_attackType) == 0x000029, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_attackType' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_rotPrim) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_rotPrim' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_posPrim) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_posPrim' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_effectInfo) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_effectInfo' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_skillInfo) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_skillInfo' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_commonInfo) == 0x000140, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_commonInfo' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_hitCheckComp) == 0x0001B0, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_hitCheckComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_attacker) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_attacker' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_arrowComp) == 0x0001C0, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_arrowComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_radius) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_radius' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_sphere) == 0x0001D0, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_sphere' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, L_capsule) == 0x0001D8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::L_capsule' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001E0, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, Temp_bool_Variable) == 0x0001E1, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0001E2, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_SetAttackSkillInfo_skill_info) == 0x0001E8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_SetAttackSkillInfo_skill_info' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_Not_PreBool_ReturnValue) == 0x0002D8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_BooleanAND_ReturnValue) == 0x0002D9, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_IsEnemyPsychicObjectOccupied_occupied) == 0x0002DA, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_IsEnemyPsychicObjectOccupied_occupied' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002DB, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_BooleanAND_ReturnValue_1) == 0x0002DC, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, K2Node_SwitchEnum_CmpSuccess) == 0x0002DD, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_IsValid_ReturnValue) == 0x0002DE, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_SetUniqueAttackCollision_dummy) == 0x0002DF, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_SetUniqueAttackCollision_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0002E0, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GetMeshBoundCentrePos_pos) == 0x0002EC, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0002F8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_CheckBrainFieldAttackCollision_return_) == 0x000380, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_CheckBrainFieldAttackCollision_return_' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000384, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000390, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_BreakTransform_Location) == 0x0003C0, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_BreakTransform_Rotation) == 0x0003CC, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_BreakTransform_Scale) == 0x0003D8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0003E4, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_Add_VectorVector_ReturnValue) == 0x0003F0, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, Temp_bool_Variable_1) == 0x0003FC, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0003FD, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_ComposeRotators_ReturnValue) == 0x000400, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x00040C, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000418, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000424, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000430, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_MakeVector_ReturnValue) == 0x00043C, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000448, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x00044C, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_IsValid_ReturnValue_1) == 0x0004D4, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x0004D8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_IsValid_ReturnValue_2) == 0x0004E0, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GetAttackParameter_common_info) == 0x0004E8, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GetAttackParameter_common_info' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GetAttackParameter_skill_info) == 0x000558, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GetAttackParameter_skill_info' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_IsValid_ReturnValue_3) == 0x000648, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_SetAttackSkillInfo_skill_info_1) == 0x000650, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_SetAttackSkillInfo_skill_info_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GetHitManager_Manager) == 0x000740, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_IsValid_ReturnValue_4) == 0x000748, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_GetHitCheckComponentFromActor_ReturnValue) == 0x000750, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_GetHitCheckComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, K2Node_Select_Default) == 0x000758, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, K2Node_Select_Default_1) == 0x000760, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000761, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_MakeRotatorAxisAndAngle_outRot) == 0x000764, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_MakeRotatorAxisAndAngle_outRot' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_ComposeRotators_ReturnValue_1) == 0x000770, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackCollisionNew, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00077C, "Member 'BP_PsychicObjectComponent_C_SetAttackCollisionNew::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyAttackParameter
// 0x0168 (0x0168 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEnemyAttackParameter final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72F9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCCollisionCommonInfo                 Common_info_in;                                    // 0x0008(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FHCSkillCommonInfo                     Skill_info_in;                                     // 0x0078(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEnemyAttackParameter) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEnemyAttackParameter");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEnemyAttackParameter) == 0x000168, "Wrong size on BP_PsychicObjectComponent_C_SetEnemyAttackParameter");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyAttackParameter, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEnemyAttackParameter::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyAttackParameter, Common_info_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEnemyAttackParameter::Common_info_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyAttackParameter, Skill_info_in) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetEnemyAttackParameter::Skill_info_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleFix
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandleFix final
{
public:
	int32                                         L_sizeIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandleFix) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandleFix");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandleFix) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_SetHandleFix");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleFix, L_sizeIndex) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandleFix::L_sizeIndex' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleSimulatePhysics
// 0x0007 (0x0007 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandleSimulatePhysics final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_gravity;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_simulate;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             L_collisionEnable;                                 // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandleSimulatePhysics");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics) == 0x000007, "Wrong size on BP_PsychicObjectComponent_C_SetHandleSimulatePhysics");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandleSimulatePhysics::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics, L_gravity) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetHandleSimulatePhysics::L_gravity' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics, L_simulate) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetHandleSimulatePhysics::L_simulate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics, L_collisionEnable) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetHandleSimulatePhysics::L_collisionEnable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetHandleSimulatePhysics::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics, CallFunc_IsGravityEnabled_ReturnValue) == 0x000005, "Member 'BP_PsychicObjectComponent_C_SetHandleSimulatePhysics::CallFunc_IsGravityEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleSimulatePhysics, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000006, "Member 'BP_PsychicObjectComponent_C_SetHandleSimulatePhysics::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandlePosRot
// 0x001C (0x001C - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandlePosRot final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot_in;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         L_sizeIndex;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandlePosRot) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandlePosRot");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandlePosRot) == 0x00001C, "Wrong size on BP_PsychicObjectComponent_C_SetHandlePosRot");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandlePosRot, Pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandlePosRot::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandlePosRot, Rot_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetHandlePosRot::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandlePosRot, L_sizeIndex) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetHandlePosRot::L_sizeIndex' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSplineFollowTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_SetSplineFollowTarget final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72FA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pos_in;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetSplineFollowTarget) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetSplineFollowTarget");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetSplineFollowTarget) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_SetSplineFollowTarget");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineFollowTarget, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetSplineFollowTarget::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetSplineFollowTarget, Pos_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetSplineFollowTarget::Pos_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsCopyPsychicObject
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_IsCopyPsychicObject final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsCopyPsychicObject) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsCopyPsychicObject");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsCopyPsychicObject) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_IsCopyPsychicObject");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCopyPsychicObject, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsCopyPsychicObject::Return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetupCopyPsychicObject
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectComponent_C_SetupCopyPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos_in;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Direct_drop_in;                                    // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72FB[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Combo_level_in;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Copy_index_in;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetupCopyPsychicObject");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject) == 0x000030, "Wrong size on BP_PsychicObjectComponent_C_SetupCopyPsychicObject");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject, Parent_obj_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetupCopyPsychicObject::Parent_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject, Pos_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetupCopyPsychicObject::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject, Direct_drop_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetupCopyPsychicObject::Direct_drop_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject, Combo_in) == 0x000015, "Member 'BP_PsychicObjectComponent_C_SetupCopyPsychicObject::Combo_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject, Combo_level_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetupCopyPsychicObject::Combo_level_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject, Copy_index_in) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetupCopyPsychicObject::Copy_index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetupCopyPsychicObject, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetupCopyPsychicObject::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCopyAppear
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCopyAppear final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72FC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCopyAppear) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetCopyAppear");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCopyAppear) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_SetCopyAppear");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAppear, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCopyAppear::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAppear, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetCopyAppear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAppear, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetCopyAppear::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAppear, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetCopyAppear::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCopyAppear
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateCopyAppear final
{
public:
	class UParticleSystem*                        L_effectAppear;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72FD[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectAttack_return_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_2;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72FE[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_3;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateCopyAppear) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateCopyAppear");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateCopyAppear) == 0x000030, "Wrong size on BP_PsychicObjectComponent_C_UpdateCopyAppear");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, L_effectAppear) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::L_effectAppear' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_IsOver_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_IsOver_ReturnValue_1) == 0x000009, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_SetPsychicObjectAttack_return) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_SetPsychicObjectAttack_return_1) == 0x000021, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_SetPsychicObjectAttack_return_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_IsOver_ReturnValue_2) == 0x000022, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_IsOver_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_GetRate_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAppear, CallFunc_IsOver_ReturnValue_3) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAppear::CallFunc_IsOver_ReturnValue_3' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AttackCopyPsychicObject
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_AttackCopyPsychicObject final
{
public:
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AttackCopyPsychicObject) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_AttackCopyPsychicObject");
static_assert(sizeof(BP_PsychicObjectComponent_C_AttackCopyPsychicObject) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_AttackCopyPsychicObject");
static_assert(offsetof(BP_PsychicObjectComponent_C_AttackCopyPsychicObject, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AttackCopyPsychicObject::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCameraShakeData
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_GetCameraShakeData final
{
public:
	class UClass*                                 CameraShakeType;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraShakeScale;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72FF[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetCameraShakeUnqObj_camera_shake;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraShakeUnqObj_camera_shake_scale;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetCameraShakeData) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetCameraShakeData");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetCameraShakeData) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_GetCameraShakeData");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraShakeData, CameraShakeType) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetCameraShakeData::CameraShakeType' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraShakeData, CameraShakeScale) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetCameraShakeData::CameraShakeScale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraShakeData, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetCameraShakeData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraShakeData, CallFunc_GetCameraShakeUnqObj_camera_shake) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetCameraShakeData::CallFunc_GetCameraShakeUnqObj_camera_shake' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraShakeData, CallFunc_GetCameraShakeUnqObj_camera_shake_scale) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetCameraShakeData::CallFunc_GetCameraShakeUnqObj_camera_shake_scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCameraShakeData, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_GetCameraShakeData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMeshVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_SetMeshVisibility final
{
public:
	class UMeshComponent*                         Mesh_in;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag_in;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetMeshVisibility) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetMeshVisibility");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetMeshVisibility) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_SetMeshVisibility");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshVisibility, Mesh_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetMeshVisibility::Mesh_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMeshVisibility, Flag_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetMeshVisibility::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetParameterCopy
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetParameterCopy final
{
public:
	float                                         Rate_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetParameterCopy) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetParameterCopy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetParameterCopy) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetParameterCopy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterCopy, Rate_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetParameterCopy::Rate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetParameterCopy, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetParameterCopy::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleFixAngular
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandleFixAngular final
{
public:
	int32                                         L_sizeIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandleFixAngular) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandleFixAngular");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandleFixAngular) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_SetHandleFixAngular");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleFixAngular, L_sizeIndex) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandleFixAngular::L_sizeIndex' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAttackParameterIndex
// 0x01E0 (0x01E0 - 0x0000)
struct BP_PsychicObjectComponent_C_GetAttackParameterIndex final
{
public:
	int32                                         Attack_index;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_rowName;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bMale;                                           // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_check;                                           // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7300[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_attackdx;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_typeIdx;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_buttonIdx;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sizeIdx;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7301[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7302[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7303[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7304[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_6;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7305[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossEnemy_bBoss;                        // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7306[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCaptureOwnerMale_return;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_male;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7307[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7308[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7309[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_730A[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_5;                           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_730B[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_730C[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_730D[0x2];                                     // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_4;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_5;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetAttackParameterIndex) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetAttackParameterIndex");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetAttackParameterIndex) == 0x0001E0, "Wrong size on BP_PsychicObjectComponent_C_GetAttackParameterIndex");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Attack_index) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Attack_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, L_rowName) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::L_rowName' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, L_bMale) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::L_bMale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, L_check) == 0x00000D, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::L_check' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, L_attackdx) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::L_attackdx' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, L_typeIdx) == 0x000014, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::L_typeIdx' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, L_buttonIdx) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::L_buttonIdx' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, L_sizeIdx) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::L_sizeIdx' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_bool_Variable) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_name_Variable) == 0x000024, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_name_Variable_1) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_bool_Variable_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_name_Variable_2) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_name_Variable_3) == 0x000040, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_bool_Variable_2) == 0x000048, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_name_Variable_4) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_name_Variable_5) == 0x000054, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_bool_Variable_3) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_name_Variable_6) == 0x000060, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_name_Variable_7) == 0x000068, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable) == 0x000070, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_1) == 0x000074, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_2) == 0x000078, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_3) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_4) == 0x000080, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_5) == 0x000084, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_6) == 0x000088, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_7) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_8) == 0x000090, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_9) == 0x000094, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_10) == 0x000098, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, Temp_int_Variable_11) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_SelectInt_ReturnValue) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_IsBossEnemy_bBoss) == 0x0000BA, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_IsBossEnemy_bBoss' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000BB, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Conv_NameToString_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Conv_StringToName_ReturnValue) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_IsCaptureOwnerMale_return) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_IsCaptureOwnerMale_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_IsCaptureOwnerMale_male) == 0x0000E9, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_IsCaptureOwnerMale_male' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_Select_Default) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_Select_Default_1) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_Select_Default_2) == 0x0000FC, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_Select_Default_3) == 0x000104, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_Select_Default_4) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_NotEqual_NameName_ReturnValue) == 0x000110, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000118, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Array_Find_ReturnValue) == 0x000124, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_SelectInt_ReturnValue_1) == 0x000128, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_Select_Default_5) == 0x000130, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_SelectInt_ReturnValue_2) == 0x000138, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Conv_IntToString_ReturnValue) == 0x000140, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000150, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000160, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000170, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000180, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000190, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0001A0, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0001B0, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_SwitchInteger_CmpSuccess) == 0x0001C4, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C8, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_SwitchInteger_CmpSuccess_1) == 0x0001CC, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_SwitchEnum_CmpSuccess) == 0x0001CD, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_SelectInt_ReturnValue_3) == 0x0001D0, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_SelectInt_ReturnValue_4) == 0x0001D4, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_SelectInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, CallFunc_SelectInt_ReturnValue_5) == 0x0001D8, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::CallFunc_SelectInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackParameterIndex, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001DC, "Member 'BP_PsychicObjectComponent_C_GetAttackParameterIndex::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleGrabLock
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandleGrabLock final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_730E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_sizeIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandleGrabLock) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandleGrabLock");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandleGrabLock) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetHandleGrabLock");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabLock, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabLock::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabLock, L_sizeIndex) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabLock::L_sizeIndex' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCopyAttackThrow
// 0x009C (0x009C - 0x0000)
struct BP_PsychicObjectComponent_C_SetCopyAttackThrow final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_730F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraTransform_location;              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraTransform_rotate;                // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraTransform_direction;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7310[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7311[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCopyAttackThrow) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetCopyAttackThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCopyAttackThrow) == 0x00009C, "Wrong size on BP_PsychicObjectComponent_C_SetCopyAttackThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_GetCameraTransform_location) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_GetCameraTransform_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_GetCameraTransform_rotate) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_GetCameraTransform_rotate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_GetCameraTransform_direction) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_GetCameraTransform_direction' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_BreakVector_X) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_BreakVector_Z) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_Normal_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_Normal_ReturnValue_1) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_IsValid_ReturnValue_1) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCopyAttackThrow, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetCopyAttackThrow::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCopyAttackThrow
// 0x0194 (0x0194 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateCopyAttackThrow final
{
public:
	float                                         L_pntDist;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rateSpeed;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_deltaAngle;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_axis;                                            // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_diffAngle;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_tgtDir;                                          // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rateDeltaSpeed;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_rateAdd;                                         // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_objPos;                                          // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_pntPos;                                          // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_tgtPos;                                          // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_ratePos;                                         // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_dist;                                            // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7312[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7313[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_1;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_2;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7314[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7315[0x2];                                     // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7316[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7317[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateCopyAttackThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow) == 0x000194, "Wrong size on BP_PsychicObjectComponent_C_UpdateCopyAttackThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_pntDist) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_pntDist' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_rateSpeed) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_rateSpeed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_deltaAngle) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_deltaAngle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_axis) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_axis' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_diffAngle) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_diffAngle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_tgtDir) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_tgtDir' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_rateDeltaSpeed) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_rateDeltaSpeed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_rateAdd) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_rateAdd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_objPos) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_objPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_pntPos) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_pntPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_tgtPos) == 0x000050, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_tgtPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_ratePos) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_ratePos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_rate) == 0x000068, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, L_dist) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::L_dist' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_IsOver_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Less_FloatFloat_ReturnValue) == 0x000071, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000074, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_VSize_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000094, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_FMin_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_GetDeltaSecond_delta_second) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_GetDeltaSecond_delta_second_1) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_GetDeltaSecond_delta_second_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_GetDeltaSecond_delta_second_2) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_GetDeltaSecond_delta_second_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_FMin_ReturnValue_1) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Ease_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000E4, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_DegAcos_ReturnValue) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Normal_ReturnValue) == 0x000104, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000110, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_IsValid_ReturnValue) == 0x000111, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_VSize_ReturnValue_1) == 0x000114, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_RotateAngleAxis_ReturnValue) == 0x000118, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000124, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000128, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000134, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000140, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00014C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000158, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000164, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_IsValid_ReturnValue_1) == 0x000170, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_VSize_ReturnValue_2) == 0x000174, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_IsValid_ReturnValue_2) == 0x000178, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00017C, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCopyAttackThrow, CallFunc_SelectVector_ReturnValue) == 0x000188, "Member 'BP_PsychicObjectComponent_C_UpdateCopyAttackThrow::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetDeltaSecond
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_GetDeltaSecond final
{
public:
	float                                         Delta_second;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7318[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetDeltaSecond) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetDeltaSecond");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetDeltaSecond) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_GetDeltaSecond");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetDeltaSecond, Delta_second) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetDeltaSecond::Delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetDeltaSecond, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetDeltaSecond::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetDeltaSecond, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetDeltaSecond::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetDeltaSecond, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetDeltaSecond::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectAnimation final
{
public:
	class UAnimationAsset*                        Animation_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop_in;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7319[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Play_rate_in;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectAnimation) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectAnimation");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectAnimation) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectAnimation");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAnimation, Animation_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAnimation::Animation_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAnimation, Loop_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAnimation::Loop_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAnimation, Play_rate_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAnimation::Play_rate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAnimation, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAnimation::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectAnimation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.EndPhaseAttract
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_EndPhaseAttract final
{
public:
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_EndPhaseAttract) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_EndPhaseAttract");
static_assert(sizeof(BP_PsychicObjectComponent_C_EndPhaseAttract) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_EndPhaseAttract");
static_assert(offsetof(BP_PsychicObjectComponent_C_EndPhaseAttract, CallFunc_SetProcedurePhase_return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_EndPhaseAttract::CallFunc_SetProcedurePhase_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InterceptAttack
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_InterceptAttack final
{
public:
	class ARSBattleCharacter_C*                   Interceprter_in;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   New_target_in;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InterceptAttack) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InterceptAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_InterceptAttack) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_InterceptAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_InterceptAttack, Interceprter_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InterceptAttack::Interceprter_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InterceptAttack, New_target_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InterceptAttack::New_target_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InterceptAttack, CallFunc_SetPsychicObjectAttack_return) == 0x000010, "Member 'BP_PsychicObjectComponent_C_InterceptAttack::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InterceptAttack, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000018, "Member 'BP_PsychicObjectComponent_C_InterceptAttack::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InterceptAttack, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_InterceptAttack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InterceptAttack, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PsychicObjectComponent_C_InterceptAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddFocusMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_AddFocusMesh final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddFocusMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddFocusMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddFocusMesh) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_AddFocusMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddFocusMesh, Mesh_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddFocusMesh::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddFocusMesh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddFocusMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddFocusMesh, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_AddFocusMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddFocusMesh, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_AddFocusMesh::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddFocusMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_AddFocusMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveFocusMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_RemoveFocusMesh final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_RemoveFocusMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_RemoveFocusMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_RemoveFocusMesh) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_RemoveFocusMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveFocusMesh, Mesh_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_RemoveFocusMesh::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveFocusMesh, L_index) == 0x000008, "Member 'BP_PsychicObjectComponent_C_RemoveFocusMesh::L_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveFocusMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_RemoveFocusMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveFocusMesh, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_RemoveFocusMesh::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddCaptureMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_AddCaptureMesh final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddCaptureMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddCaptureMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddCaptureMesh) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_AddCaptureMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureMesh, Mesh_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddCaptureMesh::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureMesh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddCaptureMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureMesh, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_AddCaptureMesh::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_AddCaptureMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddCaptureMesh, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_AddCaptureMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveCaptureMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_RemoveCaptureMesh final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_RemoveCaptureMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_RemoveCaptureMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_RemoveCaptureMesh) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_RemoveCaptureMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveCaptureMesh, Mesh_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_RemoveCaptureMesh::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveCaptureMesh, L_index) == 0x000008, "Member 'BP_PsychicObjectComponent_C_RemoveCaptureMesh::L_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveCaptureMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_RemoveCaptureMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveCaptureMesh, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_RemoveCaptureMesh::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetMeshComp
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_GetMeshComp final
{
public:
	class UStaticMesh*                            Mesh_comp;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7320[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7321[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMeshCompUnqObj_return;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7322[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_GetMeshCompUnqObj_mesh_comp;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshCompUnqObj_scale;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetMeshComp) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetMeshComp");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetMeshComp) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_GetMeshComp");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, Mesh_comp) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::Mesh_comp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, Scale) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, CallFunc_GetMeshCompUnqObj_return) == 0x000031, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::CallFunc_GetMeshCompUnqObj_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, CallFunc_GetMeshCompUnqObj_mesh_comp) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::CallFunc_GetMeshCompUnqObj_mesh_comp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshComp, CallFunc_GetMeshCompUnqObj_scale) == 0x000040, "Member 'BP_PsychicObjectComponent_C_GetMeshComp::CallFunc_GetMeshCompUnqObj_scale' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyCapsuleRadius
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7323[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7324[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius, Radius) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestructibleSetting
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetDestructibleSetting final
{
public:
	class UClass*                                 Class_in;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetDestructibleSetting) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetDestructibleSetting");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetDestructibleSetting) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetDestructibleSetting");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestructibleSetting, Class_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetDestructibleSetting::Class_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SpawnDestructibleActor
// 0x0090 (0x0090 - 0x0000)
struct BP_PsychicObjectComponent_C_SpawnDestructibleActor final
{
public:
	struct FVector                                Impulse_dir_in;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Impulse_value_in;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7325[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7326[0xE];                                     // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7327[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectDestructibleBasic_C*   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectDestructibleBasic_C*   K2Node_DynamicCast_AsBP_Psychic_Object_Destructible_Basic; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SpawnDestructibleActor) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SpawnDestructibleActor");
static_assert(sizeof(BP_PsychicObjectComponent_C_SpawnDestructibleActor) == 0x000090, "Wrong size on BP_PsychicObjectComponent_C_SpawnDestructibleActor");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, Impulse_dir_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::Impulse_dir_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, Impulse_value_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::Impulse_value_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, CallFunc_MakeLiteralByte_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, K2Node_DynamicCast_AsBP_Psychic_Object_Destructible_Basic) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::K2Node_DynamicCast_AsBP_Psychic_Object_Destructible_Basic' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SpawnDestructibleActor, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SpawnDestructibleActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DestroyDestructibleActor
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_DestroyDestructibleActor final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DestroyDestructibleActor) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_DestroyDestructibleActor");
static_assert(sizeof(BP_PsychicObjectComponent_C_DestroyDestructibleActor) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_DestroyDestructibleActor");
static_assert(offsetof(BP_PsychicObjectComponent_C_DestroyDestructibleActor, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DestroyDestructibleActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DestroyDestructibleActor, CallFunc_Array_RemoveItem_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_DestroyDestructibleActor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DestroyDestructibleActor, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_PsychicObjectComponent_C_DestroyDestructibleActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RestoreSimulatePhysics
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_RestoreSimulatePhysics final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_RestoreSimulatePhysics) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_RestoreSimulatePhysics");
static_assert(sizeof(BP_PsychicObjectComponent_C_RestoreSimulatePhysics) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_RestoreSimulatePhysics");
static_assert(offsetof(BP_PsychicObjectComponent_C_RestoreSimulatePhysics, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_RestoreSimulatePhysics::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RestoreSimulatePhysics, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_RestoreSimulatePhysics::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RestoreSimulatePhysics, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_RestoreSimulatePhysics::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RestoreSimulatePhysics, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_PsychicObjectComponent_C_RestoreSimulatePhysics::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPullOutOption
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPullOutOption final
{
public:
	bool                                          Use_end_pos_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7328[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                End_pos_in;                                        // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_end_rot_in;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7329[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               End_rot_in;                                        // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPullOutOption) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetPullOutOption");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPullOutOption) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_SetPullOutOption");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOutOption, Use_end_pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPullOutOption::Use_end_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOutOption, End_pos_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPullOutOption::End_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOutOption, Use_end_rot_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPullOutOption::Use_end_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPullOutOption, End_rot_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetPullOutOption::End_rot_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectAppear
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEffectAppear final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Reverse_in;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732A[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectStatic_C*              K2Node_DynamicCast_AsBP_Psychic_Object_Static;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEffectAppear) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEffectAppear");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEffectAppear) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_SetEffectAppear");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAppear, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEffectAppear::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAppear, Reverse_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetEffectAppear::Reverse_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAppear, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetEffectAppear::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAppear, K2Node_DynamicCast_AsBP_Psychic_Object_Static) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEffectAppear::K2Node_DynamicCast_AsBP_Psychic_Object_Static' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAppear, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEffectAppear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEffectAppear, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000011, "Member 'BP_PsychicObjectComponent_C_SetEffectAppear::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateEffectAppear
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateEffectAppear final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732B[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateEffectAppear) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateEffectAppear");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateEffectAppear) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_UpdateEffectAppear");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectAppear, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateEffectAppear::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectAppear, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_UpdateEffectAppear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectAppear, CallFunc_GetRate_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateEffectAppear::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectAppear, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateEffectAppear::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEffectAppear, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateEffectAppear::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldObjPosRot
// 0x004C (0x004C - 0x0000)
struct BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_pos;                                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBrainFieldPos_pos;                     // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot) == 0x00004C, "Wrong size on BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot, Pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot::Pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot, L_pos) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot, CallFunc_RandomRotator_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot, CallFunc_GetBrainFieldPos_pos) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot::CallFunc_GetBrainFieldPos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckBrainFieldAttackCollision
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision final
{
public:
	bool                                          Return_;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision, Return_) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision::Return_' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldAttackCollision
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetBrainFieldAttackCollision final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetBrainFieldAttackCollision) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetBrainFieldAttackCollision");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetBrainFieldAttackCollision) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetBrainFieldAttackCollision");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldAttackCollision, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldAttackCollision::Flag_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CallAttackDirectDrop
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_CallAttackDirectDrop final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CallAttackDirectDrop) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CallAttackDirectDrop");
static_assert(sizeof(BP_PsychicObjectComponent_C_CallAttackDirectDrop) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_CallAttackDirectDrop");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallAttackDirectDrop, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CallAttackDirectDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCheckTimeDilation
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateCheckTimeDilation final
{
public:
	bool                                          L_dilation;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_timedilation;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        L_hero;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTimeDilation_return;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732E[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectProcedure                       CallFunc_GetProcedurePhase_return;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_732F[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7330[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTimeDilationApply_updated;             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateCheckTimeDilation");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation) == 0x0000A8, "Wrong size on BP_PsychicObjectComponent_C_UpdateCheckTimeDilation");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, L_dilation) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::L_dilation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, L_timedilation) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::L_timedilation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, L_hero) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::L_hero' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_CheckTimeDilation_return) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_CheckTimeDilation_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_GetRate_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_GetTimeRange_MinTime) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_GetTimeRange_MaxTime) == 0x000048, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_GetMeshBoundCentrePos_pos) == 0x000058, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_GetProcedurePhase_return) == 0x000064, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_GetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A1, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCheckTimeDilation, CallFunc_SetTimeDilationApply_updated) == 0x0000A2, "Member 'BP_PsychicObjectComponent_C_UpdateCheckTimeDilation::CallFunc_SetTimeDilationApply_updated' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetBoundsOffset
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PsychicObjectComponent_C_GetBoundsOffset final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7331[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetBoundsOffset) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_GetBoundsOffset");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetBoundsOffset) == 0x0000A0, "Wrong size on BP_PsychicObjectComponent_C_GetBoundsOffset");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, Offset) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::Offset' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, CallFunc_GetMeshBoundCentrePos_pos) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, CallFunc_NegateRotator_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBoundsOffset, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_GetBoundsOffset::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureTimeDilation
// 0x003C (0x003C - 0x0000)
struct BP_PsychicObjectComponent_C_SetCaptureTimeDilation final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success_in;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7332[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTimeDilationApply_updated;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7333[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetCaptureTimeDilation");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation) == 0x00003C, "Wrong size on BP_PsychicObjectComponent_C_SetCaptureTimeDilation");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, Success_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::Success_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, CallFunc_GetMeshBoundCentrePos_pos) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, CallFunc_SetTimeDilationApply_updated) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::CallFunc_SetTimeDilationApply_updated' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureTimeDilation, CallFunc_MakeVector_ReturnValue_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetCaptureTimeDilation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCaptureTimeDilation
// 0x00BC (0x00BC - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation final
{
public:
	struct FRotator                               L_workRot;                                         // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_workPos;                                         // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rotOfs;                                          // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_posCen;                                          // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoundsOffset_offset;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation) == 0x0000BC, "Wrong size on BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, L_workRot) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::L_workRot' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, L_workPos) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::L_workPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, L_rotOfs) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::L_rotOfs' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, L_posCen) == 0x000024, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::L_posCen' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_GetRate_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_VLerp_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_GetBoundsOffset_offset) == 0x000048, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_GetBoundsOffset_offset' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_ComposeRotators_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_GetVectorValue_ReturnValue) == 0x000084, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_MakeRotator_ReturnValue) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation, CallFunc_IsEnable_ReturnValue) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_UpdateCaptureTimeDilation::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTimeDilationApply
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_SetTimeDilationApply final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Updated;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetTimeDilationApply) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetTimeDilationApply");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetTimeDilationApply) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_SetTimeDilationApply");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationApply, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationApply::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationApply, Updated) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationApply::Updated' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationApply, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationApply::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTimeDilationPull
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetTimeDilationPull final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7334[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Target_pos_in;                                     // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_rot_in;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7335[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rot_in;                                            // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Interpolate_speed_in;                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7336[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7337[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetTimeDilationPull) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetTimeDilationPull");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetTimeDilationPull) == 0x0000B0, "Wrong size on BP_PsychicObjectComponent_C_SetTimeDilationPull");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, Target_pos_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::Target_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, Set_rot_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::Set_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, Rot_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, Interpolate_speed_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::Interpolate_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_GetMeshBoundCentrePos_pos) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_SelectFloat_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_SelectRotator_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationPull, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationPull::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateTimeDilationPull
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateTimeDilationPull final
{
public:
	float                                         L_rate;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7338[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBoundsOffset_offset;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateTimeDilationPull");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_UpdateTimeDilationPull");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull, L_rate) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateTimeDilationPull::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull, CallFunc_IsOver_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateTimeDilationPull::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull, CallFunc_GetBoundsOffset_offset) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateTimeDilationPull::CallFunc_GetBoundsOffset_offset' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull, CallFunc_RLerp_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateTimeDilationPull::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateTimeDilationPull::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull, CallFunc_VEase_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateTimeDilationPull::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_UpdateTimeDilationPull::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateTimeDilationPull, CallFunc_GetRate_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_UpdateTimeDilationPull::CallFunc_GetRate_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleGrabNew
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandleGrabNew final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Pull_in;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Set_pos_in;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7339[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pos_in;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_rot_in;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rot_in;                                            // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Interpolate_speed_in;                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rot;                                             // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733B[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandleGrabNew) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandleGrabNew");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandleGrabNew) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_SetHandleGrabNew");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, Pull_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::Pull_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, Set_pos_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::Set_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, Pos_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, Set_rot_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::Set_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, Rot_in) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, Interpolate_speed_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::Interpolate_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, L_rot) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::L_rot' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, L_pos) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleGrabNew, CallFunc_Less_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetHandleGrabNew::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleTargetNew
// 0x001C (0x001C - 0x0000)
struct BP_PsychicObjectComponent_C_SetHandleTargetNew final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_rot_in;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rot_in;                                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetHandleTargetNew) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetHandleTargetNew");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetHandleTargetNew) == 0x00001C, "Wrong size on BP_PsychicObjectComponent_C_SetHandleTargetNew");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleTargetNew, Pos_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetHandleTargetNew::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleTargetNew, Set_rot_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetHandleTargetNew::Set_rot_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetHandleTargetNew, Rot_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetHandleTargetNew::Rot_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTimeDilationAttack
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_SetTimeDilationAttack final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_partsObj;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_flag;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTimeDilationAttackUnqObj_dummy;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetTimeDilationAttack) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetTimeDilationAttack");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetTimeDilationAttack) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_SetTimeDilationAttack");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationAttack, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationAttack::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationAttack, L_partsObj) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationAttack::L_partsObj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationAttack, L_flag) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationAttack::L_flag' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationAttack, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationAttack, CallFunc_SetTimeDilationAttackUnqObj_dummy) == 0x000012, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationAttack::CallFunc_SetTimeDilationAttackUnqObj_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTimeDilationAttack, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000013, "Member 'BP_PsychicObjectComponent_C_SetTimeDilationAttack::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectEffect
// 0x0140 (0x0140 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectEffect final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Emitter_in;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         Effect_component_in;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attach_in;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Attach_comp_in;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Attach_socket_in;                                  // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Location_in;                                       // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7340[0xF];                                     // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform_in;                                      // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class URSParticleSystemComponentBase*         ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bPrintScreen;                                    // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7341[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         L_eftComp;                                         // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7342[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7343[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectEffect");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect) == 0x000140, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectEffect");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, Emitter_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::Emitter_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, Effect_component_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::Effect_component_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, Attach_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::Attach_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, Attach_comp_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::Attach_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, Attach_socket_in) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::Attach_socket_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, Location_in) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::Location_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, Transform_in) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::Transform_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, L_bPrintScreen) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::L_bPrintScreen' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, L_eftComp) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::L_eftComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_GetDisplayName_ReturnValue) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_GetDisplayName_ReturnValue_2) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_BreakTransform_Location) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_BreakTransform_Rotation) == 0x0000F4, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_IsValid_ReturnValue) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_Array_Find_ReturnValue) == 0x000110, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000120, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000128, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_IsValid_ReturnValue_1) == 0x000130, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_IsValid_ReturnValue_2) == 0x000131, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectEffect, CallFunc_Array_RemoveItem_ReturnValue) == 0x000132, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectEffect::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdatePsychicObjectEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect final
{
public:
	class URSParticleSystemComponentBase*         L_eftComp;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_str;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect, L_eftComp) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect::L_eftComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect, L_str) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdatePsychicObjectEffect::L_str' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsAcceleratorValid
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_IsAcceleratorValid final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsAcceleratorValid) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsAcceleratorValid");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsAcceleratorValid) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_IsAcceleratorValid");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsAcceleratorValid, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsAcceleratorValid::Return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBackUpSimulatePhysics
// 0x0005 (0x0005 - 0x0000)
struct BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Mesh_collision_in;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Simulate_in;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Gravity_in;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics) == 0x000005, "Wrong size on BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics, Mesh_collision_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics::Mesh_collision_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics, Simulate_in) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics::Simulate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics, Gravity_in) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics::Gravity_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitMaterialCaptureStartParam
// 0x0208 (0x0208 - 0x0000)
struct BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam final
{
public:
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_material_param; // 0x0008(0x00A0)(HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_material_param_1; // 0x00A8(0x00A0)(HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_material_param_2; // 0x0148(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7344[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector_1; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector_2; // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam) == 0x000208, "Wrong size on BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam, CallFunc_GetPsychicCaptureMaterialParameter_material_param) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam::CallFunc_GetPsychicCaptureMaterialParameter_material_param' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam, CallFunc_GetPsychicCaptureMaterialParameter_material_param_1) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam::CallFunc_GetPsychicCaptureMaterialParameter_material_param_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam, CallFunc_GetPsychicCaptureMaterialParameter_material_param_2) == 0x000148, "Member 'BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam::CallFunc_GetPsychicCaptureMaterialParameter_material_param_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam, CallFunc_IsValid_ReturnValue) == 0x0001E8, "Member 'BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam, CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector) == 0x0001F0, "Member 'BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam::CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam, CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector_1) == 0x0001F8, "Member 'BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam::CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam, CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector_2) == 0x000200, "Member 'BP_PsychicObjectComponent_C_InitMaterialCaptureStartParam::CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.LoadMaterialCaptureStartCurve
// 0x00C8 (0x00C8 - 0x0000)
struct BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve final
{
public:
	struct FSPsychicCaptureMaterial               SPsychicCaptureMaterial;                           // 0x0000(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UCurveVector*                           AsCurve_Vector;                                    // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7345[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           K2Node_DynamicCast_AsCurve_Vector;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve");
static_assert(sizeof(BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve) == 0x0000C8, "Wrong size on BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve");
static_assert(offsetof(BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve, SPsychicCaptureMaterial) == 0x000000, "Member 'BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve::SPsychicCaptureMaterial' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve, AsCurve_Vector) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve::AsCurve_Vector' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve, CallFunc_LoadSoftObject_ReturnValue) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve, K2Node_DynamicCast_AsCurve_Vector) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve::K2Node_DynamicCast_AsCurve_Vector' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetMaterialCaptureStartParam
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam final
{
public:
	E_SASKind                                     Sas_kind_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7346[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSPsychicCaptureMaterial               Material_param;                                    // 0x0008(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam) == 0x0000B0, "Wrong size on BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam, Sas_kind_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam, Material_param) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam::Material_param' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetMaterialCaptureStartCurve
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve final
{
public:
	E_SASKind                                     Sas_kind_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7347[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Material_curve;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve, Sas_kind_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve, Material_curve) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve::Material_curve' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMaterialCaptureStart
// 0x0128 (0x0128 - 0x0000)
struct BP_PsychicObjectComponent_C_SetMaterialCaptureStart final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7348[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_Mesh;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7349[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734A[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734B[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734C[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734D[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734E[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetupStartPsychicCaptureMaterial_Finish;  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734F[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_GetMaterialCaptureStartCurve_material_curve; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetMaterialCaptureStartParam_material_param; // 0x0088(0x00A0)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetMaterialCaptureStart");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart) == 0x000128, "Wrong size on BP_PsychicObjectComponent_C_SetMaterialCaptureStart");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, L_Mesh) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Num_Variable_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Counter_Variable_2) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Num_Variable_2) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Counter_Variable_3) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Num_Variable_3) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue_3) == 0x000054, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Array_Index_Variable_2) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, Temp_int_Array_Index_Variable_3) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Array_Length_ReturnValue_2) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_Array_Length_ReturnValue_3) == 0x000074, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_SetupStartPsychicCaptureMaterial_Finish) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_SetupStartPsychicCaptureMaterial_Finish' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000079, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_GetMaterialCaptureStartCurve_material_curve) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_GetMaterialCaptureStartCurve_material_curve' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStart, CallFunc_GetMaterialCaptureStartParam_material_param) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStart::CallFunc_GetMaterialCaptureStartParam_material_param' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateMaterialCaptureStart
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart final
{
public:
	class UMeshComponent*                         L_Mesh;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7350[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetupStartPsychicCaptureMaterial_Finish;  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7351[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart) == 0x000030, "Wrong size on BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, L_Mesh) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, CallFunc_SetupStartPsychicCaptureMaterial_Finish) == 0x000021, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::CallFunc_SetupStartPsychicCaptureMaterial_Finish' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, CallFunc_GetDeltaSecond_delta_second) == 0x000024, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateMaterialCaptureStart::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ClearMaterialCaptureStart
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_ClearMaterialCaptureStart final
{
public:
	class UMeshComponent*                         L_Mesh;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7352[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_ClearMaterialCaptureStart");
static_assert(sizeof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_ClearMaterialCaptureStart");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart, L_Mesh) == 0x000000, "Member 'BP_PsychicObjectComponent_C_ClearMaterialCaptureStart::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_ClearMaterialCaptureStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_ClearMaterialCaptureStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_ClearMaterialCaptureStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_ClearMaterialCaptureStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'BP_PsychicObjectComponent_C_ClearMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_ClearMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_ClearMaterialCaptureStart, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_ClearMaterialCaptureStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMIParameterAura
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_SetMIParameterAura final
{
public:
	float                                         Rate_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7353[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_Mesh;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7354[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetMIParameterAura) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetMIParameterAura");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetMIParameterAura) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_SetMIParameterAura");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, Rate_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::Rate_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, L_Mesh) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMIParameterAura, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetMIParameterAura::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackSkillInfo
// 0x04D0 (0x04D0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackSkillInfo final
{
public:
	struct FHCSkillCommonInfo                     Skill_info_in;                                     // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FHCSkillCommonInfo                     Skill_info;                                        // 0x00F0(0x00F0)(Parm, OutParm)
	TArray<EHCSkillExtraType>                     L_extraType;                                       // 0x01E0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FHCSkillCommonInfo                     L_skillInfo;                                       // 0x01F0(0x00F0)(Edit, BlueprintVisible)
	float                                         L_Power;                                           // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Crash;                                           // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Value;                                           // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7355[0x3];                                     // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7356[0x3];                                     // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7357[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHCSkillAttribute>                     K2Node_MakeArray_Array;                            // 0x0318(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	EHCSkillAttribute                             Temp_byte_Variable;                                // 0x0328(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7358[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHCSkillAttribute>                     K2Node_MakeArray_Array_1;                          // 0x0330(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7359[0x3];                                     // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_735A[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_735B[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_735C[0x6];                                     // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x03CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_735D[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UParticleSystem>> CallFunc_GetEffectHit_UniqueEffectList;            // 0x0470(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetEffectHit_UniqueEffectSocketList;      // 0x0480(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GetEffectHit_UniqueEffectScaleList;       // 0x0490(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<bool>                                  CallFunc_GetEffectHit_UniqueEffectApplyThrowRotList; // 0x04A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetEffectHit_SkipNormalEffect;            // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPsychicObjectOccupied_occupied;    // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_735E[0x2];                                     // 0x04B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHCSkillAttribute                             Temp_byte_Variable_1;                              // 0x04B8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_735F[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7360[0x3];                                     // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackSkillInfo) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackSkillInfo");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackSkillInfo) == 0x0004D0, "Wrong size on BP_PsychicObjectComponent_C_SetAttackSkillInfo");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Skill_info_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Skill_info_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Skill_info) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Skill_info' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, L_extraType) == 0x0001E0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::L_extraType' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, L_skillInfo) == 0x0001F0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::L_skillInfo' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, L_Power) == 0x0002E0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::L_Power' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, L_Crash) == 0x0002E4, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::L_Crash' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, L_Value) == 0x0002E8, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::L_Value' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Temp_int_Array_Index_Variable) == 0x0002EC, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Temp_int_Loop_Num_Variable) == 0x0002F0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Temp_int_Loop_Counter_Variable) == 0x0002F4, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0002F8, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Temp_int_Array_Index_Variable_1) == 0x0002FC, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Temp_int_Loop_Num_Variable_1) == 0x000300, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000304, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Temp_int_Loop_Counter_Variable_1) == 0x000308, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x00030C, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000310, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, K2Node_MakeArray_Array) == 0x000318, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Temp_byte_Variable) == 0x000328, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, K2Node_MakeArray_Array_1) == 0x000330, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Array_Find_ReturnValue) == 0x000340, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Less_IntInt_ReturnValue_2) == 0x000344, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, K2Node_DynamicCast_AsPlayer_Interface) == 0x000348, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, K2Node_DynamicCast_bSuccess) == 0x000358, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_GetDisplayName_ReturnValue) == 0x000360, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_IsAIPlayer_ReturnValue) == 0x000370, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000378, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000388, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000398, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_IsValid_ReturnValue) == 0x000399, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Conv_FloatToString_ReturnValue) == 0x0003A0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0003B0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003C0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0003C1, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_BooleanAND_ReturnValue) == 0x0003C2, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_BooleanAND_ReturnValue_1) == 0x0003C3, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_SelectFloat_ReturnValue) == 0x0003C4, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_SelectFloat_ReturnValue_1) == 0x0003C8, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0003CC, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0003CD, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_BooleanAND_ReturnValue_2) == 0x0003CE, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_BooleanAND_ReturnValue_3) == 0x0003CF, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_SelectFloat_ReturnValue_2) == 0x0003D0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_SelectFloat_ReturnValue_3) == 0x0003D4, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0003D8, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x0003E8, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0003F8, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000408, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000418, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000428, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000438, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000448, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000458, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_IsValid_ReturnValue_1) == 0x000468, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_GetEffectHit_UniqueEffectList) == 0x000470, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_GetEffectHit_UniqueEffectList' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_GetEffectHit_UniqueEffectSocketList) == 0x000480, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_GetEffectHit_UniqueEffectSocketList' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_GetEffectHit_UniqueEffectScaleList) == 0x000490, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_GetEffectHit_UniqueEffectScaleList' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_GetEffectHit_UniqueEffectApplyThrowRotList) == 0x0004A0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_GetEffectHit_UniqueEffectApplyThrowRotList' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_GetEffectHit_SkipNormalEffect) == 0x0004B0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_GetEffectHit_SkipNormalEffect' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_IsEnemyPsychicObjectOccupied_occupied) == 0x0004B1, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_IsEnemyPsychicObjectOccupied_occupied' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Array_Length_ReturnValue) == 0x0004B4, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, Temp_byte_Variable_1) == 0x0004B8, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Array_Find_ReturnValue_1) == 0x0004BC, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004C0, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, CallFunc_Array_Length_ReturnValue_1) == 0x0004C4, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackSkillInfo, K2Node_SwitchEnum_CmpSuccess) == 0x0004C8, "Member 'BP_PsychicObjectComponent_C_SetAttackSkillInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddExtraType
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_AddExtraType final
{
public:
	TArray<EHCSkillExtraType>                     Extra_type_in;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	EHCSkillExtraType                             Add_type_in;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7361[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHCSkillExtraType>                     L_extraType;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7362[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddExtraType) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddExtraType");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddExtraType) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_AddExtraType");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtraType, Extra_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddExtraType::Extra_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtraType, Add_type_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_AddExtraType::Add_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtraType, L_extraType) == 0x000018, "Member 'BP_PsychicObjectComponent_C_AddExtraType::L_extraType' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtraType, CallFunc_Array_Find_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_AddExtraType::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtraType, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_AddExtraType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtraType, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_AddExtraType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectSound
// 0x00D8 (0x00D8 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectSound final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7363[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   Atom_comp_in;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Sound_atom_in;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attach;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7364[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Attach_comp_in;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Attach_socket_in;                                  // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Location;                                          // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7365[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location_in;                                       // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   Rs_atom_comp;                                      // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bPrintScreen;                                    // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7366[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   L_atomComp;                                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7367[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7368[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAttachedRS_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectSound) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectSound");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectSound) == 0x0000D8, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectSound");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Atom_comp_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Atom_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Sound_atom_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Sound_atom_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Attach) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Attach' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Attach_comp_in) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Attach_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Attach_socket_in) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Attach_socket_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Location) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Location_in) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Location_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, Rs_atom_comp) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::Rs_atom_comp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, L_bPrintScreen) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::L_bPrintScreen' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, L_atomComp) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::L_atomComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_GetDisplayName_ReturnValue_1) == 0x000088, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_GetDisplayName_ReturnValue_2) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_SpawnSoundAttachedRS_ReturnValue) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_SpawnSoundAttachedRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSound, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSound::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMaterialCaptureStartInstance
// 0x00D0 (0x00D0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance final
{
public:
	class UMeshComponent*                         L_Mesh;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7369[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_736A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_GetMaterialCaptureStartCurve_material_curve; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetMaterialCaptureStartParam_material_param; // 0x0030(0x00A0)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance) == 0x0000D0, "Wrong size on BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, L_Mesh) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, CallFunc_GetMaterialCaptureStartCurve_material_curve) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::CallFunc_GetMaterialCaptureStartCurve_material_curve' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance, CallFunc_GetMaterialCaptureStartParam_material_param) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetMaterialCaptureStartInstance::CallFunc_GetMaterialCaptureStartParam_material_param' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureOwner
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_SetCaptureOwner final
{
public:
	class ARsBattleHero_C*                        Capture_owner_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_736B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_736C[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetCaptureOwner) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetCaptureOwner");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetCaptureOwner) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_SetCaptureOwner");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, Capture_owner_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::Capture_owner_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, K2Node_DynamicCast_AsPlayer_Interface) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis) == 0x000031, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, CallFunc_IsAIPlayer_ReturnValue) == 0x000032, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetCaptureOwner, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000049, "Member 'BP_PsychicObjectComponent_C_SetCaptureOwner::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAnimOwner
// 0x0040 (0x0040 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAnimOwner final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Attach_in;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_736D[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        Hero_in;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicAnimObject_C*                   Anim_owner;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_736E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicAnimObject_C*                   CallFunc_GetAnimObject_anim_obj;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAnimOwner) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetAnimOwner");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAnimOwner) == 0x000040, "Wrong size on BP_PsychicObjectComponent_C_SetAnimOwner");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, Attach_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::Attach_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, Psy_obj_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, Hero_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::Hero_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, Anim_owner) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::Anim_owner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, CallFunc_GetAnimObject_anim_obj) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::CallFunc_GetAnimObject_anim_obj' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimOwner, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'BP_PsychicObjectComponent_C_SetAnimOwner::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetMeshBoundCentrePos
// 0x002C (0x002C - 0x0000)
struct BP_PsychicObjectComponent_C_GetMeshBoundCentrePos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetMeshBoundCentrePos) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetMeshBoundCentrePos");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetMeshBoundCentrePos) == 0x00002C, "Wrong size on BP_PsychicObjectComponent_C_GetMeshBoundCentrePos");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshBoundCentrePos, Pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetMeshBoundCentrePos::Pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshBoundCentrePos, CallFunc_GetComponentBounds_Origin) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetMeshBoundCentrePos::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshBoundCentrePos, CallFunc_GetComponentBounds_BoxExtent) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetMeshBoundCentrePos::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshBoundCentrePos, CallFunc_GetComponentBounds_SphereRadius) == 0x000024, "Member 'BP_PsychicObjectComponent_C_GetMeshBoundCentrePos::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetMeshBoundCentrePos, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetMeshBoundCentrePos::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetBrainFieldDropLookAtPos
// 0x0040 (0x0040 - 0x0000)
struct BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_736F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7370[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLookAtPos_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7371[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos) == 0x000040, "Wrong size on BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos, Pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos, K2Node_DynamicCast_AsCamera_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos, CallFunc_GetCameraLookAtPos_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos::CallFunc_GetCameraLookAtPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos, CallFunc_VLerp_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos::CallFunc_VLerp_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldSetting
// 0x0040 (0x0040 - 0x0000)
struct BP_PsychicObjectComponent_C_SetBrainFieldSetting final
{
public:
	EPsychicObjectBrainFieldAttackType            brain_field_attack_type_in;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7372[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Attack_index_in;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Swing_pos_list_in;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7373[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetBrainFieldAttachOffset_offset_pos;     // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetBrainFieldSetting) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetBrainFieldSetting");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetBrainFieldSetting) == 0x000040, "Wrong size on BP_PsychicObjectComponent_C_SetBrainFieldSetting");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, brain_field_attack_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::brain_field_attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, Attack_index_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::Attack_index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, Swing_pos_list_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::Swing_pos_list_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001A, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001B, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_BooleanOR_ReturnValue_1) == 0x00001E, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_BooleanOR_ReturnValue_2) == 0x00001F, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_BooleanOR_ReturnValue_3) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_RandomFloatInRange_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSetting, CallFunc_GetBrainFieldAttachOffset_offset_pos) == 0x000034, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSetting::CallFunc_GetBrainFieldAttachOffset_offset_pos' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDirectSwingCollision
// 0x0140 (0x0140 - 0x0000)
struct BP_PsychicObjectComponent_C_SetDirectSwingCollision final
{
public:
	struct FVector                                L_posPly;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rotDirectColl;                                   // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_dirDirectColl;                                   // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7374[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_roation;                // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetDirectSwingCollision) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetDirectSwingCollision");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetDirectSwingCollision) == 0x000140, "Wrong size on BP_PsychicObjectComponent_C_SetDirectSwingCollision");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, L_posPly) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::L_posPly' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, L_rotDirectColl) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::L_rotDirectColl' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, L_dirDirectColl) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::L_dirDirectColl' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_MakeRotFromZ_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_GetAttachParent_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_GetSocketRotation_roation) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_GetSocketRotation_roation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_GetSocketLocation_location) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_GetUpVector_ReturnValue) == 0x000104, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000110, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00011C, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000128, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDirectSwingCollision, CallFunc_Normal_ReturnValue) == 0x000134, "Member 'BP_PsychicObjectComponent_C_SetDirectSwingCollision::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicFieldSetting
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicFieldSetting final
{
public:
	int32                                         Attack_index_in;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Obj_num_in;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7375[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicFieldSetting");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicFieldSetting");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting, Attack_index_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicFieldSetting::Attack_index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting, Obj_num_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetPsychicFieldSetting::Obj_num_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting, Temp_int_Variable) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicFieldSetting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting, Temp_int_Variable_1) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetPsychicFieldSetting::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsychicFieldSetting::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsychicFieldSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_SetPsychicFieldSetting::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicFieldSetting, CallFunc_Array_Add_ReturnValue_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsychicFieldSetting::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddExtendExtraType
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_AddExtendExtraType final
{
public:
	EHCSkillExtraType                             Extra_type_in;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7376[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHCSkillExtraType>                     L_extraType;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddExtendExtraType) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddExtendExtraType");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddExtendExtraType) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_AddExtendExtraType");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtendExtraType, Extra_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddExtendExtraType::Extra_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtendExtraType, L_extraType) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddExtendExtraType::L_extraType' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtendExtraType, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_AddExtendExtraType::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtendExtraType, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_AddExtendExtraType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddExtendExtraType, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_AddExtendExtraType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestroyComp
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetDestroyComp final
{
public:
	bool                                          CallFunc_SetDestroyMain_return;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetDestroyComp) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetDestroyComp");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetDestroyComp) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetDestroyComp");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestroyComp, CallFunc_SetDestroyMain_return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetDestroyComp::CallFunc_SetDestroyMain_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsParent
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_IsParent final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsParent) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsParent");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsParent) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_IsParent");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsParent, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsParent::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsParent, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_IsParent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsParent, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'BP_PsychicObjectComponent_C_IsParent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsParent, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_IsParent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyEffectSas
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEnemyEffectSas final
{
public:
	E_SASKind                                     Sas_kind_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEnemyEffectSas) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetEnemyEffectSas");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEnemyEffectSas) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetEnemyEffectSas");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyEffectSas, Sas_kind_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEnemyEffectSas::Sas_kind_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitEnemyPsychicObject
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PsychicObjectComponent_C_InitEnemyPsychicObject final
{
public:
	class ARSBattleCharacter_C*                   Enemy_owner_in;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Sas_kind_in;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Drop_type_in;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Random_obj_in;                                     // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7377[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7378[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFloatObjectExist_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7379[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectTick_return;              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_737A[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_737B[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_737C[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSUniqueIdInterface>  K2Node_DynamicCast_AsRSUnique_Id_Interface;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectTick_return_1;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_737D[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUniqueId_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_2;   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_737E[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_3;   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue_1;     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue_1;    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitEnemyPsychicObject");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject) == 0x0000B0, "Wrong size on BP_PsychicObjectComponent_C_InitEnemyPsychicObject");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, Enemy_owner_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::Enemy_owner_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, Sas_kind_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, Drop_type_in) == 0x000009, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::Drop_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, Random_obj_in) == 0x00000A, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::Random_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000020, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_IsFloatObjectExist_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_IsFloatObjectExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, Temp_int_Variable) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000032, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_SetPsychicObjectTick_return) == 0x000033, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_SetPsychicObjectTick_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_BooleanOR_ReturnValue_1) == 0x000035, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000038, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x000049, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000050, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_SetPsychicObjectActiveC_ReturnValue) == 0x000061, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_SetPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_AsRSUnique_Id_Interface) == 0x000068, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_AsRSUnique_Id_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_SetPsychicObjectTick_return_1) == 0x000079, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_SetPsychicObjectTick_return_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_GetUniqueId_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_GetUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface_2) == 0x000080, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface_3) == 0x000098, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_SetPsychicObjectInUseC_ReturnValue_1) == 0x0000A9, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_SetPsychicObjectInUseC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitEnemyPsychicObject, CallFunc_SetPsychicObjectActiveC_ReturnValue_1) == 0x0000AA, "Member 'BP_PsychicObjectComponent_C_InitEnemyPsychicObject::CallFunc_SetPsychicObjectActiveC_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyPsychicObjectActive
// 0x0208 (0x0208 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive final
{
public:
	bool                                          Active_in;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_737F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Obj_pos_in;                                        // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             NewLocalVar_3;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7380[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCSkillCommonInfo                     L_skillInfo;                                       // 0x0018(0x00F0)(Edit, BlueprintVisible)
	struct FHCCollisionCommonInfo                 L_commonInfo;                                      // 0x0108(0x0070)(Edit, BlueprintVisible)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7381[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue;      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectTick_return;              // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7382[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_2;   // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7383[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_3;   // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue_1;     // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue_1;    // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7384[0x5];                                     // 0x01D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_4;   // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue_2;    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7385[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_5;   // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue_2;     // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive) == 0x000208, "Wrong size on BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, Active_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::Active_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, Obj_pos_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::Obj_pos_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, NewLocalVar_3) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::NewLocalVar_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, L_skillInfo) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::L_skillInfo' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, L_commonInfo) == 0x000108, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::L_commonInfo' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000178, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000190, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_bSuccess_1) == 0x0001A0, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, CallFunc_SetPsychicObjectActiveC_ReturnValue) == 0x0001A1, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::CallFunc_SetPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x0001A2, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_SwitchEnum_CmpSuccess) == 0x0001A3, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, CallFunc_SetPsychicObjectTick_return) == 0x0001A4, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::CallFunc_SetPsychicObjectTick_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_AsPsychic_Object_Interface_2) == 0x0001A8, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_AsPsychic_Object_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_bSuccess_2) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_AsPsychic_Object_Interface_3) == 0x0001C0, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_AsPsychic_Object_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_bSuccess_3) == 0x0001D0, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, CallFunc_SetPsychicObjectInUseC_ReturnValue_1) == 0x0001D1, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::CallFunc_SetPsychicObjectInUseC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, CallFunc_SetPsychicObjectActiveC_ReturnValue_1) == 0x0001D2, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::CallFunc_SetPsychicObjectActiveC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_AsPsychic_Object_Interface_4) == 0x0001D8, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_AsPsychic_Object_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_bSuccess_4) == 0x0001E8, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, CallFunc_SetPsychicObjectActiveC_ReturnValue_2) == 0x0001E9, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::CallFunc_SetPsychicObjectActiveC_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_AsPsychic_Object_Interface_5) == 0x0001F0, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_AsPsychic_Object_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_DynamicCast_bSuccess_5) == 0x000200, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, CallFunc_SetPsychicObjectInUseC_ReturnValue_2) == 0x000201, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::CallFunc_SetPsychicObjectInUseC_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive, K2Node_SwitchEnum_CmpSuccess_1) == 0x000202, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyWeakPoint
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_GetEnemyWeakPoint final
{
public:
	struct FVector                                Weak_pos;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7386[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWeakTargetPoint_Point;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetEnemyWeakPoint) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetEnemyWeakPoint");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetEnemyWeakPoint) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_GetEnemyWeakPoint");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyWeakPoint, Weak_pos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetEnemyWeakPoint::Weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyWeakPoint, CallFunc_GetMeshBoundCentrePos_pos) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetEnemyWeakPoint::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyWeakPoint, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetEnemyWeakPoint::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyWeakPoint, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetEnemyWeakPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyWeakPoint, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_PsychicObjectComponent_C_GetEnemyWeakPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyWeakPoint, CallFunc_GetWeakTargetPoint_Point) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_GetEnemyWeakPoint::CallFunc_GetWeakTargetPoint_Point' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackEffectInfo
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttackEffectInfo final
{
public:
	struct FHCHitEffectInfo                       Effect_info_in;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttackEffectInfo) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttackEffectInfo");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttackEffectInfo) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetAttackEffectInfo");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttackEffectInfo, Effect_info_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttackEffectInfo::Effect_info_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAnimationBrainField
// 0x0180 (0x0180 - 0x0000)
struct BP_PsychicObjectComponent_C_GetAnimationBrainField final
{
public:
	EPsychicObjectBrainFieldAttackType            brain_field_attack_type_in;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7387[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Anim_sequence;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bMale;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7388[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7389[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_738A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_738B[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_738C[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_8;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_9;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_738D[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_10;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_11;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_738E[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_12;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_13;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_738F[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_14;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_15;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7390[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_16;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_17;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7391[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_18;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_19;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7392[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Temp_object_Variable_20;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Temp_object_Variable_21;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_return;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_male;                  // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7393[0x5];                                     // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_1;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_2;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_3;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_4;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_5;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_6;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_7;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_8;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_9;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default_10;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetAnimationBrainField) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetAnimationBrainField");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetAnimationBrainField) == 0x000180, "Wrong size on BP_PsychicObjectComponent_C_GetAnimationBrainField");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, brain_field_attack_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::brain_field_attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Anim_sequence) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Anim_sequence' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, L_bMale) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::L_bMale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_2) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_3) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_4) == 0x000048, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_5) == 0x000050, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_2) == 0x000058, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_6) == 0x000060, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_7) == 0x000068, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_3) == 0x000070, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_8) == 0x000078, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_9) == 0x000080, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_4) == 0x000088, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_10) == 0x000090, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_11) == 0x000098, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_5) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_12) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_13) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_6) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_14) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_15) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_7) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_16) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_17) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_8) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_18) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_19) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_9) == 0x000100, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_20) == 0x000108, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_object_Variable_21) == 0x000110, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, Temp_bool_Variable_10) == 0x000118, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, CallFunc_IsCaptureOwnerMale_return) == 0x000119, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::CallFunc_IsCaptureOwnerMale_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, CallFunc_IsCaptureOwnerMale_male) == 0x00011A, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::CallFunc_IsCaptureOwnerMale_male' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default) == 0x000120, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_1) == 0x000128, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_2) == 0x000130, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_3) == 0x000138, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_4) == 0x000140, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_5) == 0x000148, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_6) == 0x000150, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_7) == 0x000158, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_8) == 0x000160, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_9) == 0x000168, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_Select_Default_10) == 0x000170, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAnimationBrainField, K2Node_SwitchEnum_CmpSuccess) == 0x000178, "Member 'BP_PsychicObjectComponent_C_GetAnimationBrainField::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetBrainFieldAttachOffset
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset final
{
public:
	int32                                         Attack_index_in;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset_pos;                                        // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7394[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, Attack_index_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::Attack_index_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, Offset_pos) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::Offset_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_BreakVector_X_1) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_BreakVector_Y_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_BreakVector_Z_1) == 0x000024, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldSwingLerp
// 0x000C (0x000C - 0x0000)
struct BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7395[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lerp_time_in;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Update_time_in;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp) == 0x00000C, "Wrong size on BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp, Lerp_time_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp::Lerp_time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp, Update_time_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp::Update_time_in' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetJustDodge
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_SetJustDodge final
{
public:
	class ARSBattleCharacter_C*                   Owner_in;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   Target_in;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        L_hero;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7396[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7397[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChkPsyObjMan_return;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetJustDodge) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetJustDodge");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetJustDodge) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_SetJustDodge");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, Owner_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::Owner_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, Target_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::Target_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, L_hero) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::L_hero' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, CallFunc_ChkPsyObjMan_return) == 0x000041, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::CallFunc_ChkPsyObjMan_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, CallFunc_SetPsychicObjectAttack_return) == 0x000042, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetJustDodge, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x000043, "Member 'BP_PsychicObjectComponent_C_SetJustDodge::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetIntercept
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicObjectComponent_C_SetIntercept final
{
public:
	class ARSBattleCharacter_C*                   Owner_in;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   Target_in;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_attractTime;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bHeroOwner;                                      // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7398[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        L_hero;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7399[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChkPsyObjMan_return;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetIntercept) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetIntercept");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetIntercept) == 0x000048, "Wrong size on BP_PsychicObjectComponent_C_SetIntercept");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, Owner_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetIntercept::Owner_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, Target_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetIntercept::Target_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, L_attractTime) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetIntercept::L_attractTime' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, L_bHeroOwner) == 0x000014, "Member 'BP_PsychicObjectComponent_C_SetIntercept::L_bHeroOwner' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, L_hero) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetIntercept::L_hero' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetIntercept::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetIntercept::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_PsychicObjectComponent_C_SetIntercept::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, CallFunc_SetPsychicObjectAttack_return) == 0x00002A, "Member 'BP_PsychicObjectComponent_C_SetIntercept::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetIntercept::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetIntercept::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x000041, "Member 'BP_PsychicObjectComponent_C_SetIntercept::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetIntercept, CallFunc_ChkPsyObjMan_return) == 0x000042, "Member 'BP_PsychicObjectComponent_C_SetIntercept::CallFunc_ChkPsyObjMan_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetInterceptEnemy
// 0x0180 (0x0180 - 0x0000)
struct BP_PsychicObjectComponent_C_SetInterceptEnemy final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_739A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Enemy_obj_in;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   Owner_in;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   Target_in;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        L_hero;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_739B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Intercept_C>      K2Node_DynamicCast_AsBPI_Intercept;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InterceptAttack_bDummy;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_739C[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_739D[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739E[0xC];                                     // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetInterceptEnemy) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetInterceptEnemy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetInterceptEnemy) == 0x000180, "Wrong size on BP_PsychicObjectComponent_C_SetInterceptEnemy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, Enemy_obj_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::Enemy_obj_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, Owner_in) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::Owner_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, Target_in) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::Target_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, L_hero) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::L_hero' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, K2Node_DynamicCast_AsRSBattle_Character) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, K2Node_DynamicCast_AsBPI_Intercept) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::K2Node_DynamicCast_AsBPI_Intercept' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, CallFunc_InterceptAttack_bDummy) == 0x000049, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::CallFunc_InterceptAttack_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000050, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, CallFunc_BreakTransform_Location) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptEnemy, CallFunc_SetPsychicObjectAttack_return) == 0x000178, "Member 'BP_PsychicObjectComponent_C_SetInterceptEnemy::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitInterceptObject
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_InitInterceptObject final
{
public:
	bool                                          CallFunc_SetPsychicObjectTick_return;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_739F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A0[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue;      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitInterceptObject) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_InitInterceptObject");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitInterceptObject) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_InitInterceptObject");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitInterceptObject, CallFunc_SetPsychicObjectTick_return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitInterceptObject::CallFunc_SetPsychicObjectTick_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitInterceptObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000008, "Member 'BP_PsychicObjectComponent_C_InitInterceptObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitInterceptObject, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PsychicObjectComponent_C_InitInterceptObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitInterceptObject, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_InitInterceptObject::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitInterceptObject, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_InitInterceptObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitInterceptObject, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x000031, "Member 'BP_PsychicObjectComponent_C_InitInterceptObject::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitInterceptObject, CallFunc_SetPsychicObjectActiveC_ReturnValue) == 0x000032, "Member 'BP_PsychicObjectComponent_C_InitInterceptObject::CallFunc_SetPsychicObjectActiveC_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetInterceptObjectActive
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_SetInterceptObjectActive final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectTick_return;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A1[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetInterceptObjectActive) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetInterceptObjectActive");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetInterceptObjectActive) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_SetInterceptObjectActive");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptObjectActive, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetInterceptObjectActive::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptObjectActive, CallFunc_SetPsychicObjectTick_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetInterceptObjectActive::CallFunc_SetPsychicObjectTick_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptObjectActive, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetInterceptObjectActive::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptObjectActive, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetInterceptObjectActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptObjectActive, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetInterceptObjectActive::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptObjectActive, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetInterceptObjectActive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptObjectActive, CallFunc_SetPsychicObjectActiveC_ReturnValue) == 0x000031, "Member 'BP_PsychicObjectComponent_C_SetInterceptObjectActive::CallFunc_SetPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetInterceptObjectActive, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x000032, "Member 'BP_PsychicObjectComponent_C_SetInterceptObjectActive::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CallEnemyIntercpetableThrow
// 0x0007 (0x0007 - 0x0000)
struct BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow final
{
public:
	bool                                          CallFunc_ChkPsyObjMan_return;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow) == 0x000007, "Wrong size on BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow, CallFunc_ChkPsyObjMan_return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow::CallFunc_ChkPsyObjMan_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow, CallFunc_BooleanOR_ReturnValue_1) == 0x000003, "Member 'BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow, CallFunc_BooleanOR_ReturnValue_2) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow, CallFunc_BooleanOR_ReturnValue_3) == 0x000005, "Member 'BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow, CallFunc_BooleanOR_ReturnValue_4) == 0x000006, "Member 'BP_PsychicObjectComponent_C_CallEnemyIntercpetableThrow::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCaptureOwnerHalfHeight
// 0x000C (0x000C - 0x0000)
struct BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight final
{
public:
	float                                         Half_height;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight) == 0x00000C, "Wrong size on BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight, Half_height) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight::Half_height' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestroyExplosionProc
// 0x0050 (0x0050 - 0x0000)
struct BP_PsychicObjectComponent_C_SetDestroyExplosionProc final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A4[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class URSParticleSystemComponentBase*         CallFunc_SetPsychicObjectEffect_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetDestroyExplosionProc) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetDestroyExplosionProc");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetDestroyExplosionProc) == 0x000050, "Wrong size on BP_PsychicObjectComponent_C_SetDestroyExplosionProc");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestroyExplosionProc, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetDestroyExplosionProc::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestroyExplosionProc, Return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetDestroyExplosionProc::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestroyExplosionProc, CallFunc_GetMeshBoundCentrePos_pos) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetDestroyExplosionProc::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestroyExplosionProc, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetDestroyExplosionProc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestroyExplosionProc, CallFunc_SetPsychicObjectEffect_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetDestroyExplosionProc::CallFunc_SetPsychicObjectEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestroyExplosionProc, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_SetDestroyExplosionProc::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateDestroyExplosionProc
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDestroyExplosionProc_return;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc) == 0x000010, "Wrong size on BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc, CallFunc_SetDestroyExplosionProc_return) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc::CallFunc_SetDestroyExplosionProc_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc, CallFunc_IsOver_ReturnValue) == 0x000009, "Member 'BP_PsychicObjectComponent_C_UpdateDestroyExplosionProc::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAnimationScaleLerp
// 0x001C (0x001C - 0x0000)
struct BP_PsychicObjectComponent_C_SetAnimationScaleLerp final
{
public:
	float                                         Letp_time_in;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Dst_scale_in;                                      // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAnimationScaleLerp) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetAnimationScaleLerp");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAnimationScaleLerp) == 0x00001C, "Wrong size on BP_PsychicObjectComponent_C_SetAnimationScaleLerp");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimationScaleLerp, Letp_time_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAnimationScaleLerp::Letp_time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimationScaleLerp, Dst_scale_in) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetAnimationScaleLerp::Dst_scale_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimationScaleLerp, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAnimationScaleLerp::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAnimationScaleLerp
// 0x0014 (0x0014 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A5[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp) == 0x000014, "Wrong size on BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp, CallFunc_GetRate_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp, CallFunc_VLerp_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateAnimationScaleLerp::CallFunc_VLerp_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAnimationScaleIntercept
// 0x000C (0x000C - 0x0000)
struct BP_PsychicObjectComponent_C_SetAnimationScaleIntercept final
{
public:
	float                                         Letp_time_in;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAnimationScaleIntercept) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetAnimationScaleIntercept");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAnimationScaleIntercept) == 0x00000C, "Wrong size on BP_PsychicObjectComponent_C_SetAnimationScaleIntercept");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimationScaleIntercept, Letp_time_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAnimationScaleIntercept::Letp_time_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimationScaleIntercept, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetAnimationScaleIntercept::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAnimationScaleIntercept, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAnimationScaleIntercept::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsCaptureOwnerMale
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_IsCaptureOwnerMale final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Male;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A7[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsCaptureOwnerMale) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_IsCaptureOwnerMale");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsCaptureOwnerMale) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_IsCaptureOwnerMale");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCaptureOwnerMale, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsCaptureOwnerMale::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCaptureOwnerMale, Male) == 0x000001, "Member 'BP_PsychicObjectComponent_C_IsCaptureOwnerMale::Male' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCaptureOwnerMale, CallFunc_GetPlayerID_self_CastInput) == 0x000008, "Member 'BP_PsychicObjectComponent_C_IsCaptureOwnerMale::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCaptureOwnerMale, CallFunc_GetPlayerID_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_IsCaptureOwnerMale::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCaptureOwnerMale, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_PsychicObjectComponent_C_IsCaptureOwnerMale::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCaptureOwnerMale, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_PsychicObjectComponent_C_IsCaptureOwnerMale::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetFellOutOfWorld
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicObjectComponent_C_SetFellOutOfWorld final
{
public:
	const class UDamageType*                      Dmg_type_in;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> CallFunc_SetPsychicObjectActiveC_self_CastInput;   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetFellOutOfWorld) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetFellOutOfWorld");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetFellOutOfWorld) == 0x000028, "Wrong size on BP_PsychicObjectComponent_C_SetFellOutOfWorld");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFellOutOfWorld, Dmg_type_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetFellOutOfWorld::Dmg_type_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFellOutOfWorld, CallFunc_SetProcedurePhase_return) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetFellOutOfWorld::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFellOutOfWorld, CallFunc_SetPsychicObjectActiveC_self_CastInput) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetFellOutOfWorld::CallFunc_SetPsychicObjectActiveC_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFellOutOfWorld, CallFunc_SetPsychicObjectActiveC_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetFellOutOfWorld::CallFunc_SetPsychicObjectActiveC_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckStillInWorld
// 0x0024 (0x0024 - 0x0000)
struct BP_PsychicObjectComponent_C_CheckStillInWorld final
{
public:
	float                                         KillZ_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A9[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_CheckStillInWorld) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_CheckStillInWorld");
static_assert(sizeof(BP_PsychicObjectComponent_C_CheckStillInWorld) == 0x000024, "Wrong size on BP_PsychicObjectComponent_C_CheckStillInWorld");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckStillInWorld, KillZ_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_CheckStillInWorld::KillZ_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckStillInWorld, Return) == 0x000004, "Member 'BP_PsychicObjectComponent_C_CheckStillInWorld::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckStillInWorld, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_PsychicObjectComponent_C_CheckStillInWorld::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckStillInWorld, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_CheckStillInWorld::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckStillInWorld, CallFunc_BreakVector_X) == 0x000014, "Member 'BP_PsychicObjectComponent_C_CheckStillInWorld::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckStillInWorld, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_PsychicObjectComponent_C_CheckStillInWorld::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckStillInWorld, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_CheckStillInWorld::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_CheckStillInWorld, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_CheckStillInWorld::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetThrowHoming
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetThrowHoming final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetThrowHoming) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetThrowHoming");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetThrowHoming) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetThrowHoming");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetThrowHoming, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetThrowHoming::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetThrowHoming, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetThrowHoming::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttractDecel
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAttractDecel final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAttractDecel) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetAttractDecel");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAttractDecel) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetAttractDecel");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttractDecel, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAttractDecel::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAttractDecel, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAttractDecel::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttractDecel
// 0x002C (0x002C - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAttractDecel final
{
public:
	float                                         L_rate;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73AA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAttractDecel) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAttractDecel");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAttractDecel) == 0x00002C, "Wrong size on BP_PsychicObjectComponent_C_UpdateAttractDecel");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractDecel, L_rate) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAttractDecel::L_rate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractDecel, CallFunc_IsOver_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateAttractDecel::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractDecel, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateAttractDecel::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractDecel, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractDecel::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractDecel, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateAttractDecel::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractDecel, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractDecel::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractDecel, CallFunc_GetRate_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateAttractDecel::CallFunc_GetRate_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddAuraMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_AddAuraMesh final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73AB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_AddAuraMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_AddAuraMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_AddAuraMesh) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_AddAuraMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddAuraMesh, Mesh_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_AddAuraMesh::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddAuraMesh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_AddAuraMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddAuraMesh, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_AddAuraMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddAuraMesh, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_AddAuraMesh::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_AddAuraMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_PsychicObjectComponent_C_AddAuraMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveAuraMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PsychicObjectComponent_C_RemoveAuraMesh final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73AC[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_RemoveAuraMesh) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_RemoveAuraMesh");
static_assert(sizeof(BP_PsychicObjectComponent_C_RemoveAuraMesh) == 0x000018, "Wrong size on BP_PsychicObjectComponent_C_RemoveAuraMesh");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveAuraMesh, Mesh_comp_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_RemoveAuraMesh::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveAuraMesh, L_index) == 0x000008, "Member 'BP_PsychicObjectComponent_C_RemoveAuraMesh::L_index' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveAuraMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_RemoveAuraMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_RemoveAuraMesh, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_RemoveAuraMesh::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjDestroy
// 0x00E0 (0x00E0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjDestroy final
{
public:
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73AD[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73AE[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetProcedurePhase_return;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73AF[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectActiveC_ReturnValue;      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetDestroyUnqObj_dummy;                   // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BulletDestroyReport_dummy;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjDestroy) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjDestroy) == 0x0000E0, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_GetDebuggingManager_Manager) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_SetProcedurePhase_return) == 0x0000C1, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_SetProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_SetPsychicObjectActiveC_ReturnValue) == 0x0000D9, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_SetPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_IsValid_ReturnValue_2) == 0x0000DA, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_SetDestroyUnqObj_dummy) == 0x0000DB, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_SetDestroyUnqObj_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_IsValid_ReturnValue_3) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_BulletDestroyReport_dummy) == 0x0000DD, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_BulletDestroyReport_dummy' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDestroy, CallFunc_IsValid_ReturnValue_4) == 0x0000DE, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDestroy::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyAttackThrowTargetPoint
// 0x0250 (0x0250 - 0x0000)
struct BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint final
{
public:
	struct FVector                                TargetPos;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_TargetHeight;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_hitNormal;                                       // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_hitPoint;                                        // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             L_hitResult;                                       // 0x0028(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                L_targetPos;                                       // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B0[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73B1[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B2[0x5];                                     // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0150(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B3[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x01B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B4[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint) == 0x000250, "Wrong size on BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, TargetPos) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::TargetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, L_TargetHeight) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::L_TargetHeight' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, L_hitNormal) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::L_hitNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, L_hitPoint) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::L_hitPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, L_hitResult) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::L_hitResult' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, L_targetPos) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::L_targetPos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_X) == 0x0000BC, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_Y) == 0x0000C0, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_Z) == 0x0000C4, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C8, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C9, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_Time) == 0x0000CC, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_Distance) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_Location) == 0x0000D4, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E0, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_Normal) == 0x0000EC, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_PhysMat) == 0x000108, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_HitActor) == 0x000110, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_HitComponent) == 0x000118, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000120, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_HitItem) == 0x000128, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_FaceIndex) == 0x00012C, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_TraceStart) == 0x000130, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakHitResult_TraceEnd) == 0x00013C, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_Less_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000149, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00014A, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, Temp_object_Variable) == 0x000150, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_X_1) == 0x000160, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_Y_1) == 0x000164, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_Z_1) == 0x000168, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_X_2) == 0x00016C, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_Y_2) == 0x000170, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_Z_2) == 0x000174, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_Add_FloatFloat_ReturnValue) == 0x000178, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_MakeVector_ReturnValue) == 0x00017C, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_X_3) == 0x000188, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_Y_3) == 0x00018C, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_BreakVector_Z_3) == 0x000190, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000194, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000198, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x00019C, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, K2Node_MakeArray_Array) == 0x0001A8, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0001B8, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000240, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_IsValid_ReturnValue) == 0x000241, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000244, "Member 'BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetFloatObject
// 0x000C (0x000C - 0x0000)
struct BP_PsychicObjectComponent_C_SetFloatObject final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAngularDamping_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearDamping_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetFloatObject) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_SetFloatObject");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetFloatObject) == 0x00000C, "Wrong size on BP_PsychicObjectComponent_C_SetFloatObject");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFloatObject, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetFloatObject::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFloatObject, CallFunc_GetAngularDamping_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetFloatObject::CallFunc_GetAngularDamping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetFloatObject, CallFunc_GetLinearDamping_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetFloatObject::CallFunc_GetLinearDamping_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyPsychicObjectThrow
// 0x0178 (0x0178 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow final
{
public:
	class AActor*                                 Target_actor_in;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Throw_speed_in;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Homing_speed_in;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCSkillCommonInfo                     L_skillInfo;                                       // 0x0010(0x00F0)(Edit, BlueprintVisible)
	struct FHCCollisionCommonInfo                 L_commonInfo;                                      // 0x0100(0x0070)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow) == 0x000178, "Wrong size on BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow, Target_actor_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow::Target_actor_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow, Throw_speed_in) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow::Throw_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow, Homing_speed_in) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow::Homing_speed_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow, L_skillInfo) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow::L_skillInfo' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow, L_commonInfo) == 0x000100, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow::L_commonInfo' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow, CallFunc_SetPsychicObjectAttack_return) == 0x000171, "Member 'BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAchievementThrowObject
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectComponent_C_SetAchievementThrowObject final
{
public:
	bool                                          Force_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_check;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClearGetterManager*                    CallFunc_GetClearGetterManager_ClearGetterManager; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAchievementThrowObject_return;       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B7[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAchievementManager*                    CallFunc_GetAchievementManager_AchievementManager; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetAchievementThrowObject) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetAchievementThrowObject");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetAchievementThrowObject) == 0x000038, "Wrong size on BP_PsychicObjectComponent_C_SetAchievementThrowObject");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, Force_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::Force_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, L_check) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::L_check' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, CallFunc_GetClearGetterManager_ClearGetterManager) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::CallFunc_GetClearGetterManager_ClearGetterManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, K2Node_DynamicCast_AsPlayer_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, CallFunc_IsAIPlayer_ReturnValue) == 0x000022, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, CallFunc_IsValid_ReturnValue_1) == 0x000023, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, CallFunc_CheckAchievementThrowObject_return) == 0x000024, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::CallFunc_CheckAchievementThrowObject_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, CallFunc_GetAchievementManager_AchievementManager) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::CallFunc_GetAchievementManager_AchievementManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetAchievementThrowObject, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'BP_PsychicObjectComponent_C_SetAchievementThrowObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttractBrainField
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateAttractBrainField final
{
public:
	float                                         L_angleYaw;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_pos;                                             // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B8[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B9[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73BA[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73BB[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73BC[0x1];                                     // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateAttractBrainField) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateAttractBrainField");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateAttractBrainField) == 0x0000A0, "Wrong size on BP_PsychicObjectComponent_C_UpdateAttractBrainField");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, L_angleYaw) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::L_angleYaw' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, L_pos) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::L_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, K2Node_DynamicCast_AsPlayer_Interface) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_IsAIPlayer_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000034, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, K2Node_DynamicCast_AsCamera_Interface) == 0x000050, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_BreakVector_X) == 0x000064, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_BreakVector_Y) == 0x000068, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_BreakVector_Z) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_GetPlayerCameraRotation_ReturnValue) == 0x000070, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_GetPlayerCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_DegAtan2_ReturnValue) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_BreakRotator_Roll) == 0x000080, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_BreakRotator_Pitch) == 0x000084, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_BreakRotator_Yaw) == 0x000088, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_IsValid_ReturnValue_1) == 0x00008D, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_IsValid_ReturnValue_2) == 0x00008E, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateAttractBrainField, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'BP_PsychicObjectComponent_C_UpdateAttractBrainField::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAttackDirection
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_GetAttackDirection final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73BD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direction;                                         // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAttackDirectionUnqObj_return;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73BE[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAttackDirectionUnqObj_direction;       // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetAttackDirection) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetAttackDirection");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetAttackDirection) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_GetAttackDirection");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackDirection, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetAttackDirection::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackDirection, Direction) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetAttackDirection::Direction' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackDirection, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetAttackDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackDirection, CallFunc_GetAttackDirectionUnqObj_return) == 0x000011, "Member 'BP_PsychicObjectComponent_C_GetAttackDirection::CallFunc_GetAttackDirectionUnqObj_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetAttackDirection, CallFunc_GetAttackDirectionUnqObj_direction) == 0x000014, "Member 'BP_PsychicObjectComponent_C_GetAttackDirection::CallFunc_GetAttackDirectionUnqObj_direction' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetRespawnRestrictRadius
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_GetRespawnRestrictRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetRespawnRestrictRadius) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_GetRespawnRestrictRadius");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetRespawnRestrictRadius) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_GetRespawnRestrictRadius");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetRespawnRestrictRadius, Radius) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetRespawnRestrictRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetRespawnRestrictRadius, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetRespawnRestrictRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsCompTickEnable
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicObjectComponent_C_IsCompTickEnable final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_return;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsCompTickEnable) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsCompTickEnable");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsCompTickEnable) == 0x000004, "Wrong size on BP_PsychicObjectComponent_C_IsCompTickEnable");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCompTickEnable, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsCompTickEnable::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCompTickEnable, L_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_IsCompTickEnable::L_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCompTickEnable, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_IsCompTickEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsCompTickEnable, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_IsCompTickEnable::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateEnemyInterceptRot
// 0x0064 (0x0064 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot final
{
public:
	struct FVector                                L_normal;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Vector_IsNormal_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73BF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot) == 0x000004, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot) == 0x000064, "Wrong size on BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, L_normal) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::L_normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_MakeRotFromX_ReturnValue) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_Vector_IsNormal_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_Vector_IsNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_GetRate_ReturnValue) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_GetFloatValue_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_RLerp_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_GetSocketLocation_location) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_Normal_ReturnValue) == 0x000054, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_PsychicObjectComponent_C_UpdateEnemyInterceptRot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDraw
// 0x0090 (0x0090 - 0x0000)
struct BP_PsychicObjectComponent_C_DebugDraw final
{
public:
	class UObject*                                L_dbgMan;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_roation;                // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C0[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_DebugDraw) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_DebugDraw");
static_assert(sizeof(BP_PsychicObjectComponent_C_DebugDraw) == 0x000090, "Wrong size on BP_PsychicObjectComponent_C_DebugDraw");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, L_dbgMan) == 0x000000, "Member 'BP_PsychicObjectComponent_C_DebugDraw::L_dbgMan' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_GetDebuggingManager_Manager) == 0x000008, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_GetSocketRotation_roation) == 0x000010, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_GetSocketRotation_roation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_GetSocketLocation_location) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_DebugDraw, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_PsychicObjectComponent_C_DebugDraw::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitSimulateDefault
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_InitSimulateDefault final
{
public:
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_InitSimulateDefault) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_InitSimulateDefault");
static_assert(sizeof(BP_PsychicObjectComponent_C_InitSimulateDefault) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_InitSimulateDefault");
static_assert(offsetof(BP_PsychicObjectComponent_C_InitSimulateDefault, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_InitSimulateDefault::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetKeepSimulate
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetKeepSimulate final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetKeepSimulate) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetKeepSimulate");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetKeepSimulate) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetKeepSimulate");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetKeepSimulate, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetKeepSimulate::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetKeepSimulate, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetKeepSimulate::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateKeepSimulate
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectComponent_C_UpdateKeepSimulate final
{
public:
	float                                         L_deltaSecond;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_UpdateKeepSimulate) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_UpdateKeepSimulate");
static_assert(sizeof(BP_PsychicObjectComponent_C_UpdateKeepSimulate) == 0x000030, "Wrong size on BP_PsychicObjectComponent_C_UpdateKeepSimulate");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateKeepSimulate, L_deltaSecond) == 0x000000, "Member 'BP_PsychicObjectComponent_C_UpdateKeepSimulate::L_deltaSecond' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateKeepSimulate, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'BP_PsychicObjectComponent_C_UpdateKeepSimulate::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateKeepSimulate, CallFunc_IsOver_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_UpdateKeepSimulate::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateKeepSimulate, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_PsychicObjectComponent_C_UpdateKeepSimulate::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateKeepSimulate, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_UpdateKeepSimulate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateKeepSimulate, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'BP_PsychicObjectComponent_C_UpdateKeepSimulate::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateKeepSimulate, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_PsychicObjectComponent_C_UpdateKeepSimulate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_UpdateKeepSimulate, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_UpdateKeepSimulate::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectSimulateControl
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_success_in;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C4[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectSimulateControlC_ReturnValue; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl) == 0x000020, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl, Capture_success_in) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl::Capture_success_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl, CallFunc_SetPsychicObjectSimulateControlC_ReturnValue) == 0x000019, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl::CallFunc_SetPsychicObjectSimulateControlC_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectSimulateControlAwake
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControlAwake final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControlAwake) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControlAwake");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControlAwake) == 0x000001, "Wrong size on BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControlAwake");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControlAwake, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControlAwake::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyPhysicsCollisionActive
// 0x00F0 (0x00F0 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C5[0xE];                                     // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C6[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive) == 0x000010, "Wrong alignment on BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive) == 0x0000F0, "Wrong size on BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive, FlagIn) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000064, "Member 'BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000068, "Member 'BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.EnemyPhysicsCollisionOnHitComponentFunc
// 0x0140 (0x0140 - 0x0000)
struct BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C7[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C8[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc");
static_assert(sizeof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc) == 0x000140, "Wrong size on BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, HitComponent) == 0x000000, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, OtherActor) == 0x000008, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, OtherComp) == 0x000010, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, NormalImpulse) == 0x000018, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, Hit) == 0x000024, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::Hit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_bBlockingHit) == 0x0000AC, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000AD, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_Time) == 0x0000B0, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_Distance) == 0x0000B4, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_Location) == 0x0000B8, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C4, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_Normal) == 0x0000D0, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_ImpactNormal) == 0x0000DC, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_PhysMat) == 0x0000E8, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_HitActor) == 0x0000F0, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_HitComponent) == 0x0000F8, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_HitBoneName) == 0x000100, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_HitItem) == 0x000108, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_FaceIndex) == 0x00010C, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_TraceStart) == 0x000110, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_BreakHitResult_TraceEnd) == 0x00011C, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000130, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEventSetting
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEventSetting final
{
public:
	bool                                          Event_start_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEventSetting) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetEventSetting");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEventSetting) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_SetEventSetting");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventSetting, Event_start_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEventSetting::Event_start_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventSetting, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetEventSetting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventSetting, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetEventSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEventBackupPhysic
// 0x0009 (0x0009 - 0x0000)
struct BP_PsychicObjectComponent_C_SetEventBackupPhysic final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_gravity;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_simulate;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             L_collisionEnable;                                 // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetEventBackupPhysic) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetEventBackupPhysic");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetEventBackupPhysic) == 0x000009, "Wrong size on BP_PsychicObjectComponent_C_SetEventBackupPhysic");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, L_gravity) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::L_gravity' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, L_simulate) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::L_simulate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, L_collisionEnable) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::L_collisionEnable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, Temp_bool_Variable) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000005, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, K2Node_Select_Default) == 0x000006, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, CallFunc_IsGravityEnabled_ReturnValue) == 0x000007, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::CallFunc_IsGravityEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetEventBackupPhysic, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetEventBackupPhysic::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestructibleVisibility
// 0x0003 (0x0003 - 0x0000)
struct BP_PsychicObjectComponent_C_SetDestructibleVisibility final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetDestructibleVisibility) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetDestructibleVisibility");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetDestructibleVisibility) == 0x000003, "Wrong size on BP_PsychicObjectComponent_C_SetDestructibleVisibility");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestructibleVisibility, FlagIn) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetDestructibleVisibility::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestructibleVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetDestructibleVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetDestructibleVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetDestructibleVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjCollisionEnable
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable final
{
public:
	ECollisionEnabled                             Mesh_collision_in;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73C9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable) == 0x000030, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable, Mesh_collision_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable::Mesh_collision_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable, CallFunc_IsGravityEnabled_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable::CallFunc_IsGravityEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000029, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable, CallFunc_GetCollisionEnabled_ReturnValue) == 0x00002A, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002B, "Member 'BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjDistanceDestroy
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy, Return) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy, CallFunc_CheckPsychicObjectState_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsInterceptFail
// 0x0002 (0x0002 - 0x0000)
struct BP_PsychicObjectComponent_C_IsInterceptFail final
{
public:
	bool                                          bFail;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckProcedurePhase_return;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_IsInterceptFail) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_IsInterceptFail");
static_assert(sizeof(BP_PsychicObjectComponent_C_IsInterceptFail) == 0x000002, "Wrong size on BP_PsychicObjectComponent_C_IsInterceptFail");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsInterceptFail, bFail) == 0x000000, "Member 'BP_PsychicObjectComponent_C_IsInterceptFail::bFail' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_IsInterceptFail, CallFunc_CheckProcedurePhase_return) == 0x000001, "Member 'BP_PsychicObjectComponent_C_IsInterceptFail::CallFunc_CheckProcedurePhase_return' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTenpCollisionProfile
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicObjectComponent_C_SetTenpCollisionProfile final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile) == 0x000001, "Wrong alignment on BP_PsychicObjectComponent_C_SetTenpCollisionProfile");
static_assert(sizeof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile) == 0x000008, "Wrong size on BP_PsychicObjectComponent_C_SetTenpCollisionProfile");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile, Flag_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_SetTenpCollisionProfile::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000001, "Member 'BP_PsychicObjectComponent_C_SetTenpCollisionProfile::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'BP_PsychicObjectComponent_C_SetTenpCollisionProfile::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile, CallFunc_NotEqual_NameName_ReturnValue) == 0x000003, "Member 'BP_PsychicObjectComponent_C_SetTenpCollisionProfile::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000004, "Member 'BP_PsychicObjectComponent_C_SetTenpCollisionProfile::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000005, "Member 'BP_PsychicObjectComponent_C_SetTenpCollisionProfile::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x000006, "Member 'BP_PsychicObjectComponent_C_SetTenpCollisionProfile::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_SetTenpCollisionProfile, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x000007, "Member 'BP_PsychicObjectComponent_C_SetTenpCollisionProfile::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetInterceptThrowParameter
// 0x0078 (0x0078 - 0x0000)
struct BP_PsychicObjectComponent_C_GetInterceptThrowParameter final
{
public:
	float                                         Throw_speed;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Homing_speed;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPsychicObjectThrowParameter_apply;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73CA[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPsychicObjectThrowParameter_directshot_throw_speed; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_directshot_homing_speed; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_combo_throw_speed; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_combo_homing_speed; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_brainfield_throw_speed; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_brainfield_homing_speed; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_intercept_throw_speed; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_intercept_homing_speed; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73CB[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73CC[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_7;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetInterceptThrowParameter");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter) == 0x000078, "Wrong size on BP_PsychicObjectComponent_C_GetInterceptThrowParameter");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, Throw_speed) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::Throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, Homing_speed) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::Homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_apply) == 0x000019, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_apply' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_directshot_throw_speed) == 0x00001C, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_directshot_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_directshot_homing_speed) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_directshot_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_combo_throw_speed) == 0x000024, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_combo_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_combo_homing_speed) == 0x000028, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_combo_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_brainfield_throw_speed) == 0x00002C, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_brainfield_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_brainfield_homing_speed) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_brainfield_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_intercept_throw_speed) == 0x000034, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_intercept_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPsychicObjectThrowParameter_intercept_homing_speed) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPsychicObjectThrowParameter_intercept_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPlayerID_self_CastInput) == 0x000040, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_GetPlayerID_ReturnValue) == 0x000050, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000052, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000053, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000054, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000055, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000056, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_SelectFloat_ReturnValue_1) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_SelectFloat_ReturnValue_2) == 0x000060, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_SelectFloat_ReturnValue_3) == 0x000064, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_SelectFloat_ReturnValue_4) == 0x000068, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_SelectFloat_ReturnValue_5) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_SelectFloat_ReturnValue_6) == 0x000070, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetInterceptThrowParameter, CallFunc_SelectFloat_ReturnValue_7) == 0x000074, "Member 'BP_PsychicObjectComponent_C_GetInterceptThrowParameter::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyThrowParameter
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PsychicObjectComponent_C_GetEnemyThrowParameter final
{
public:
	bool                                          brain_field_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73CD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Throw_speed;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Homing_speed;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lem8400;                                           // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73CE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73CF[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73D0[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPsychicObjectThrowParameter_apply;     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73D1[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPsychicObjectThrowParameter_directshot_throw_speed; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_directshot_homing_speed; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_combo_throw_speed; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_combo_homing_speed; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_brainfield_throw_speed; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_brainfield_homing_speed; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_intercept_throw_speed; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicObjectThrowParameter_intercept_homing_speed; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73D2[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_7;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73D3[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_8;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_9;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_10;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_11;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_12;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_13;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_14;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_15;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter) == 0x000008, "Wrong alignment on BP_PsychicObjectComponent_C_GetEnemyThrowParameter");
static_assert(sizeof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter) == 0x0000A8, "Wrong size on BP_PsychicObjectComponent_C_GetEnemyThrowParameter");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, brain_field_in) == 0x000000, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::brain_field_in' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, Throw_speed) == 0x000004, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::Throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, Homing_speed) == 0x000008, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::Homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, Lem8400) == 0x00000C, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::Lem8400' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_1) == 0x000014, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_2) == 0x000018, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000020, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPlayerID_self_CastInput) == 0x000038, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPlayerID_ReturnValue) == 0x000048, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_apply) == 0x000049, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_apply' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_directshot_throw_speed) == 0x00004C, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_directshot_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_directshot_homing_speed) == 0x000050, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_directshot_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_combo_throw_speed) == 0x000054, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_combo_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_combo_homing_speed) == 0x000058, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_combo_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_brainfield_throw_speed) == 0x00005C, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_brainfield_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_brainfield_homing_speed) == 0x000060, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_brainfield_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_intercept_throw_speed) == 0x000064, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_intercept_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_GetPsychicObjectThrowParameter_intercept_homing_speed) == 0x000068, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_GetPsychicObjectThrowParameter_intercept_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006C, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_3) == 0x000070, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_4) == 0x000074, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_5) == 0x000078, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_6) == 0x00007C, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_7) == 0x000080, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_8) == 0x000088, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_9) == 0x00008C, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_10) == 0x000090, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_11) == 0x000094, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_12) == 0x000098, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_13) == 0x00009C, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_14) == 0x0000A0, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectComponent_C_GetEnemyThrowParameter, CallFunc_SelectFloat_ReturnValue_15) == 0x0000A4, "Member 'BP_PsychicObjectComponent_C_GetEnemyThrowParameter::CallFunc_SelectFloat_ReturnValue_15' has a wrong offset!");

}

