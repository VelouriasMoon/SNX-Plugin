#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TriggerBoxBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TriggerBoxBase.BP_TriggerBoxBase_C
// 0x0028 (0x0260 - 0x0238)
class ABP_TriggerBoxBase_C : public ATriggerBox
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsEventValid;                                      // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOneshot;                                         // 0x0241(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayed;                                          // 0x0242(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAfterEventReturnPlayerMove;                      // 0x0243(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnIsWalk;                                      // 0x0244(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5756[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnMoveDistance;                                // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerVelocity;                                    // 0x024C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEventBeforeFadeOut;                              // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TriggerBoxBase(int32 EntryPoint);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void OnEvent(class AActor* OtherActor, bool* Played);
	void IsValidEvent(bool* IsValid);
	void SetReturnMovePlayer(class AActor* Actor);
	void CheckEnableEventBase(bool* Return);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TriggerBoxBase_C">();
	}
	static class ABP_TriggerBoxBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TriggerBoxBase_C>();
	}
};
static_assert(alignof(ABP_TriggerBoxBase_C) == 0x000008, "Wrong alignment on ABP_TriggerBoxBase_C");
static_assert(sizeof(ABP_TriggerBoxBase_C) == 0x000260, "Wrong size on ABP_TriggerBoxBase_C");
static_assert(offsetof(ABP_TriggerBoxBase_C, UberGraphFrame) == 0x000238, "Member 'ABP_TriggerBoxBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBoxBase_C, IsEventValid) == 0x000240, "Member 'ABP_TriggerBoxBase_C::IsEventValid' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBoxBase_C, IsOneshot) == 0x000241, "Member 'ABP_TriggerBoxBase_C::IsOneshot' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBoxBase_C, IsPlayed) == 0x000242, "Member 'ABP_TriggerBoxBase_C::IsPlayed' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBoxBase_C, IsAfterEventReturnPlayerMove) == 0x000243, "Member 'ABP_TriggerBoxBase_C::IsAfterEventReturnPlayerMove' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBoxBase_C, ReturnIsWalk) == 0x000244, "Member 'ABP_TriggerBoxBase_C::ReturnIsWalk' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBoxBase_C, ReturnMoveDistance) == 0x000248, "Member 'ABP_TriggerBoxBase_C::ReturnMoveDistance' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBoxBase_C, PlayerVelocity) == 0x00024C, "Member 'ABP_TriggerBoxBase_C::PlayerVelocity' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBoxBase_C, IsEventBeforeFadeOut) == 0x000258, "Member 'ABP_TriggerBoxBase_C::IsEventBeforeFadeOut' has a wrong offset!");

}

