#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AppleVision

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum AppleVision.EDetectedFaceFeatureType
// NumValues: 0x000E
enum class EDetectedFaceFeatureType : uint8
{
	Unkown                                   = 0,
	FaceContour                              = 1,
	InnerLips                                = 2,
	LeftEye                                  = 3,
	LeftEyebrow                              = 4,
	LeftPupil                                = 5,
	MedianLine                               = 6,
	Nose                                     = 7,
	NoseCrest                                = 8,
	OuterLips                                = 9,
	RightEye                                 = 10,
	RightEyebrow                             = 11,
	RightPupil                               = 12,
	EDetectedFaceFeatureType_MAX             = 13,
};

// ScriptStruct AppleVision.DetectedFeature
// 0x0004 (0x0004 - 0x0000)
struct FDetectedFeature
{
public:
	float                                         Confidence;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDetectedFeature) == 0x000004, "Wrong alignment on FDetectedFeature");
static_assert(sizeof(FDetectedFeature) == 0x000004, "Wrong size on FDetectedFeature");
static_assert(offsetof(FDetectedFeature, Confidence) == 0x000000, "Member 'FDetectedFeature::Confidence' has a wrong offset!");

// ScriptStruct AppleVision.DetectedFeature2D
// 0x0014 (0x0018 - 0x0004)
struct FDetectedFeature2D : public FDetectedFeature
{
public:
	struct FBox2D                                 BoundingBox;                                       // 0x0004(0x0014)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDetectedFeature2D) == 0x000004, "Wrong alignment on FDetectedFeature2D");
static_assert(sizeof(FDetectedFeature2D) == 0x000018, "Wrong size on FDetectedFeature2D");
static_assert(offsetof(FDetectedFeature2D, BoundingBox) == 0x000004, "Member 'FDetectedFeature2D::BoundingBox' has a wrong offset!");

// ScriptStruct AppleVision.DetectedFaceFeature2D
// 0x0004 (0x001C - 0x0018)
struct FDetectedFaceFeature2D final : public FDetectedFeature2D
{
public:
	EDetectedFaceFeatureType                      FeatureType;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108B[0x3];                                     // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDetectedFaceFeature2D) == 0x000004, "Wrong alignment on FDetectedFaceFeature2D");
static_assert(sizeof(FDetectedFaceFeature2D) == 0x00001C, "Wrong size on FDetectedFaceFeature2D");
static_assert(offsetof(FDetectedFaceFeature2D, FeatureType) == 0x000018, "Member 'FDetectedFaceFeature2D::FeatureType' has a wrong offset!");

// ScriptStruct AppleVision.DetectedFeatureRegion
// 0x0014 (0x0018 - 0x0004)
struct FDetectedFeatureRegion : public FDetectedFeature
{
public:
	uint8                                         Pad_108C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Points;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDetectedFeatureRegion) == 0x000008, "Wrong alignment on FDetectedFeatureRegion");
static_assert(sizeof(FDetectedFeatureRegion) == 0x000018, "Wrong size on FDetectedFeatureRegion");
static_assert(offsetof(FDetectedFeatureRegion, Points) == 0x000008, "Member 'FDetectedFeatureRegion::Points' has a wrong offset!");

// ScriptStruct AppleVision.DetectedFaceFeatureRegion
// 0x0008 (0x0020 - 0x0018)
struct FDetectedFaceFeatureRegion final : public FDetectedFeatureRegion
{
public:
	EDetectedFaceFeatureType                      FeatureType;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108D[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDetectedFaceFeatureRegion) == 0x000008, "Wrong alignment on FDetectedFaceFeatureRegion");
static_assert(sizeof(FDetectedFaceFeatureRegion) == 0x000020, "Wrong size on FDetectedFaceFeatureRegion");
static_assert(offsetof(FDetectedFaceFeatureRegion, FeatureType) == 0x000018, "Member 'FDetectedFaceFeatureRegion::FeatureType' has a wrong offset!");

// ScriptStruct AppleVision.DetectedFace
// 0x0038 (0x0050 - 0x0018)
struct FDetectedFace final : public FDetectedFeatureRegion
{
public:
	struct FBox2D                                 BoundingBox;                                       // 0x0018(0x0014)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_108E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDetectedFaceFeature2D>         Features;                                          // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDetectedFaceFeatureRegion>     FeatureRegions;                                    // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDetectedFace) == 0x000008, "Wrong alignment on FDetectedFace");
static_assert(sizeof(FDetectedFace) == 0x000050, "Wrong size on FDetectedFace");
static_assert(offsetof(FDetectedFace, BoundingBox) == 0x000018, "Member 'FDetectedFace::BoundingBox' has a wrong offset!");
static_assert(offsetof(FDetectedFace, Features) == 0x000030, "Member 'FDetectedFace::Features' has a wrong offset!");
static_assert(offsetof(FDetectedFace, FeatureRegions) == 0x000040, "Member 'FDetectedFace::FeatureRegions' has a wrong offset!");

// ScriptStruct AppleVision.FaceDetectionResult
// 0x0010 (0x0010 - 0x0000)
struct FFaceDetectionResult final
{
public:
	TArray<struct FDetectedFace>                  DetectedFaces;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFaceDetectionResult) == 0x000008, "Wrong alignment on FFaceDetectionResult");
static_assert(sizeof(FFaceDetectionResult) == 0x000010, "Wrong size on FFaceDetectionResult");
static_assert(offsetof(FFaceDetectionResult, DetectedFaces) == 0x000000, "Member 'FFaceDetectionResult::DetectedFaces' has a wrong offset!");

}

