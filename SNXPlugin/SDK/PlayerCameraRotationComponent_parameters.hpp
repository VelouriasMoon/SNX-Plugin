#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerCameraRotationComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PlayerCameraRotationComponent.PlayerCameraRotationComponent_C.ExecuteUbergraph_PlayerCameraRotationComponent
// 0x0028 (0x0028 - 0x0000)
struct PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Delta;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent) == 0x000004, "Wrong alignment on PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent");
static_assert(sizeof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent) == 0x000028, "Wrong size on PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent");
static_assert(offsetof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent, EntryPoint) == 0x000000, "Member 'PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent, CallFunc_RLerp_ReturnValue) == 0x00000C, "Member 'PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent, K2Node_CustomEvent_Delta) == 0x000018, "Member 'PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent::K2Node_CustomEvent_Delta' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'PlayerCameraRotationComponent_C_ExecuteUbergraph_PlayerCameraRotationComponent::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PlayerCameraRotationComponent.PlayerCameraRotationComponent_C.Update
// 0x0004 (0x0004 - 0x0000)
struct PlayerCameraRotationComponent_C_Update final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerCameraRotationComponent_C_Update) == 0x000004, "Wrong alignment on PlayerCameraRotationComponent_C_Update");
static_assert(sizeof(PlayerCameraRotationComponent_C_Update) == 0x000004, "Wrong size on PlayerCameraRotationComponent_C_Update");
static_assert(offsetof(PlayerCameraRotationComponent_C_Update, Delta) == 0x000000, "Member 'PlayerCameraRotationComponent_C_Update::Delta' has a wrong offset!");

// Function PlayerCameraRotationComponent.PlayerCameraRotationComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PlayerCameraRotationComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerCameraRotationComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on PlayerCameraRotationComponent_C_ReceiveTick");
static_assert(sizeof(PlayerCameraRotationComponent_C_ReceiveTick) == 0x000004, "Wrong size on PlayerCameraRotationComponent_C_ReceiveTick");
static_assert(offsetof(PlayerCameraRotationComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PlayerCameraRotationComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PlayerCameraRotationComponent.PlayerCameraRotationComponent_C.SetRotation
// 0x0028 (0x0028 - 0x0000)
struct PlayerCameraRotationComponent_C_SetRotation final
{
public:
	struct FRotator                               Param_End;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Param_Sec;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Param_Controller;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Param_Start;                                       // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerCameraRotationComponent_C_SetRotation) == 0x000008, "Wrong alignment on PlayerCameraRotationComponent_C_SetRotation");
static_assert(sizeof(PlayerCameraRotationComponent_C_SetRotation) == 0x000028, "Wrong size on PlayerCameraRotationComponent_C_SetRotation");
static_assert(offsetof(PlayerCameraRotationComponent_C_SetRotation, Param_End) == 0x000000, "Member 'PlayerCameraRotationComponent_C_SetRotation::Param_End' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_SetRotation, Param_Sec) == 0x00000C, "Member 'PlayerCameraRotationComponent_C_SetRotation::Param_Sec' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_SetRotation, Param_Controller) == 0x000010, "Member 'PlayerCameraRotationComponent_C_SetRotation::Param_Controller' has a wrong offset!");
static_assert(offsetof(PlayerCameraRotationComponent_C_SetRotation, Param_Start) == 0x000018, "Member 'PlayerCameraRotationComponent_C_SetRotation::Param_Start' has a wrong offset!");

}

