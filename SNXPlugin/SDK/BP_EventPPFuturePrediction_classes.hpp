#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventPPFuturePrediction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_EventTypeSwitchBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EventPPFuturePrediction.BP_EventPPFuturePrediction_C
// 0x0040 (0x02B0 - 0x0270)
class ABP_EventPPFuturePrediction_C final : public ABP_EventTypeSwitchBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_EventPPFuturePrediction_C;       // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Rate;                                              // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         DistortionRate;                                    // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         ChromAber;                                         // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Nega;                                              // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         RadialPower;                                       // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NoiseColor;                                        // 0x028C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BrainFieldNoiseColor;                              // 0x029C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseBrainFieldNoiseColor;                          // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)

public:
	void ExecuteUbergraph_BP_EventPPFuturePrediction(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void EndPlayDynamicCutScene();
	void UpdateDynamicCutScene();
	void BeginPlayDynamicCutScene();
	void EndPlayStaticCutScene();
	void UpdateStaticCutScene();
	void BeginPlayStaticCutScene();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EventPPFuturePrediction_C">();
	}
	static class ABP_EventPPFuturePrediction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EventPPFuturePrediction_C>();
	}
};
static_assert(alignof(ABP_EventPPFuturePrediction_C) == 0x000008, "Wrong alignment on ABP_EventPPFuturePrediction_C");
static_assert(sizeof(ABP_EventPPFuturePrediction_C) == 0x0002B0, "Wrong size on ABP_EventPPFuturePrediction_C");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, UberGraphFrame_BP_EventPPFuturePrediction_C) == 0x000270, "Member 'ABP_EventPPFuturePrediction_C::UberGraphFrame_BP_EventPPFuturePrediction_C' has a wrong offset!");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, Rate) == 0x000278, "Member 'ABP_EventPPFuturePrediction_C::Rate' has a wrong offset!");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, DistortionRate) == 0x00027C, "Member 'ABP_EventPPFuturePrediction_C::DistortionRate' has a wrong offset!");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, ChromAber) == 0x000280, "Member 'ABP_EventPPFuturePrediction_C::ChromAber' has a wrong offset!");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, Nega) == 0x000284, "Member 'ABP_EventPPFuturePrediction_C::Nega' has a wrong offset!");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, RadialPower) == 0x000288, "Member 'ABP_EventPPFuturePrediction_C::RadialPower' has a wrong offset!");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, NoiseColor) == 0x00028C, "Member 'ABP_EventPPFuturePrediction_C::NoiseColor' has a wrong offset!");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, BrainFieldNoiseColor) == 0x00029C, "Member 'ABP_EventPPFuturePrediction_C::BrainFieldNoiseColor' has a wrong offset!");
static_assert(offsetof(ABP_EventPPFuturePrediction_C, bUseBrainFieldNoiseColor) == 0x0002AC, "Member 'ABP_EventPPFuturePrediction_C::bUseBrainFieldNoiseColor' has a wrong offset!");

}

