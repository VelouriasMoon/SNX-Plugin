#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_WorldMap_Parts_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C
// 0x0120 (0x04A8 - 0x0388)
class UWB_ui_WorldMap_Parts_1_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Cancel_2_here;                                     // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision_2_here;                                   // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_2_here;                                     // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision_here;                                     // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unselect_select_in_here;                           // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unselect_select_here;                              // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unselect_here;                                     // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_in_here;                                    // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_here;                                       // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_here;                                      // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Cancel_2;                                          // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision_2;                                        // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_2;                                          // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision;                                          // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unselect_select_in;                                // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unselect_select;                                   // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unselect;                                          // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_in;                                         // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select;                                            // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_none;                                      // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Base_1;                                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_black;                                        // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_select;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_1;                                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_kizuna_1;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_main_1;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_new;                                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_sub_1;                                        // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_sub_2;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_worldmap_mapname_1;                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsEnable;                                          // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnableChange;                                    // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSelect;                                          // 0x048A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDecide;                                          // 0x048B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLock;                                            // 0x048C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsWait;                                            // 0x048D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CEF[0x2];                                     // 0x048E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSlateColor>                    TextColorList;                                     // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsCurrent;                                         // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsChangeDirect;                                    // 0x04A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_WorldMap_Parts_1(int32 EntryPoint);
	void Destruct();
	void OnInitialized();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void StateNone(int32 SubState);
	void StateLoop(int32 SubState);
	void SetEnable(bool Param_IsEnable);
	void SetSelect(bool Param_IsSelect);
	void SetAreaText(const class FString& Text);
	void SetMainQuest(bool IsMainQuest);
	void SetSubQuest(bool IsSubQuest);
	void SetNew(bool IsNew);
	void Decide(bool Param_IsLock, bool Param_IsWait);
	void StateLoopSelect(int32 SubState);
	void IsDecideAnimation(bool* Param_IsDecide);
	void SetCurrentArea(bool Param_IsCurrent);
	void ResetLock();
	void ResetWait();
	void SetCurrentFontColor();
	void StateLoopCurrent(int32 SubState);
	void StateLoopCurrentSelect(int32 SubState);
	void SetKizunaQuest(bool IsKizunaQuest);
	void SetSubQuestRequest(bool IsSubQuestRequest);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_WorldMap_Parts_1_C">();
	}
	static class UWB_ui_WorldMap_Parts_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_WorldMap_Parts_1_C>();
	}
};
static_assert(alignof(UWB_ui_WorldMap_Parts_1_C) == 0x000008, "Wrong alignment on UWB_ui_WorldMap_Parts_1_C");
static_assert(sizeof(UWB_ui_WorldMap_Parts_1_C) == 0x0004A8, "Wrong size on UWB_ui_WorldMap_Parts_1_C");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_WorldMap_Parts_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Cancel_2_here) == 0x000390, "Member 'UWB_ui_WorldMap_Parts_1_C::Cancel_2_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Decision_2_here) == 0x000398, "Member 'UWB_ui_WorldMap_Parts_1_C::Decision_2_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Select_2_here) == 0x0003A0, "Member 'UWB_ui_WorldMap_Parts_1_C::Select_2_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Decision_here) == 0x0003A8, "Member 'UWB_ui_WorldMap_Parts_1_C::Decision_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Unselect_select_in_here) == 0x0003B0, "Member 'UWB_ui_WorldMap_Parts_1_C::Unselect_select_in_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Unselect_select_here) == 0x0003B8, "Member 'UWB_ui_WorldMap_Parts_1_C::Unselect_select_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Unselect_here) == 0x0003C0, "Member 'UWB_ui_WorldMap_Parts_1_C::Unselect_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Select_in_here) == 0x0003C8, "Member 'UWB_ui_WorldMap_Parts_1_C::Select_in_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Select_here) == 0x0003D0, "Member 'UWB_ui_WorldMap_Parts_1_C::Select_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Default_here) == 0x0003D8, "Member 'UWB_ui_WorldMap_Parts_1_C::Default_here' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Cancel_2) == 0x0003E0, "Member 'UWB_ui_WorldMap_Parts_1_C::Cancel_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Decision_2) == 0x0003E8, "Member 'UWB_ui_WorldMap_Parts_1_C::Decision_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Select_2) == 0x0003F0, "Member 'UWB_ui_WorldMap_Parts_1_C::Select_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Decision) == 0x0003F8, "Member 'UWB_ui_WorldMap_Parts_1_C::Decision' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Unselect_select_in) == 0x000400, "Member 'UWB_ui_WorldMap_Parts_1_C::Unselect_select_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Unselect_select) == 0x000408, "Member 'UWB_ui_WorldMap_Parts_1_C::Unselect_select' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Unselect) == 0x000410, "Member 'UWB_ui_WorldMap_Parts_1_C::Unselect' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Select_in) == 0x000418, "Member 'UWB_ui_WorldMap_Parts_1_C::Select_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Select) == 0x000420, "Member 'UWB_ui_WorldMap_Parts_1_C::Select' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Default_none) == 0x000428, "Member 'UWB_ui_WorldMap_Parts_1_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Default) == 0x000430, "Member 'UWB_ui_WorldMap_Parts_1_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Base_1) == 0x000438, "Member 'UWB_ui_WorldMap_Parts_1_C::Base_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Base_black) == 0x000440, "Member 'UWB_ui_WorldMap_Parts_1_C::Base_black' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Base_select) == 0x000448, "Member 'UWB_ui_WorldMap_Parts_1_C::Base_select' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Frame_1) == 0x000450, "Member 'UWB_ui_WorldMap_Parts_1_C::Frame_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Icon_kizuna_1) == 0x000458, "Member 'UWB_ui_WorldMap_Parts_1_C::Icon_kizuna_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Icon_main_1) == 0x000460, "Member 'UWB_ui_WorldMap_Parts_1_C::Icon_main_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Icon_new) == 0x000468, "Member 'UWB_ui_WorldMap_Parts_1_C::Icon_new' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Icon_sub_1) == 0x000470, "Member 'UWB_ui_WorldMap_Parts_1_C::Icon_sub_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Icon_sub_2) == 0x000478, "Member 'UWB_ui_WorldMap_Parts_1_C::Icon_sub_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, Text_worldmap_mapname_1) == 0x000480, "Member 'UWB_ui_WorldMap_Parts_1_C::Text_worldmap_mapname_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, IsEnable) == 0x000488, "Member 'UWB_ui_WorldMap_Parts_1_C::IsEnable' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, IsEnableChange) == 0x000489, "Member 'UWB_ui_WorldMap_Parts_1_C::IsEnableChange' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, IsSelect) == 0x00048A, "Member 'UWB_ui_WorldMap_Parts_1_C::IsSelect' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, IsDecide) == 0x00048B, "Member 'UWB_ui_WorldMap_Parts_1_C::IsDecide' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, IsLock) == 0x00048C, "Member 'UWB_ui_WorldMap_Parts_1_C::IsLock' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, IsWait) == 0x00048D, "Member 'UWB_ui_WorldMap_Parts_1_C::IsWait' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, TextColorList) == 0x000490, "Member 'UWB_ui_WorldMap_Parts_1_C::TextColorList' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, IsCurrent) == 0x0004A0, "Member 'UWB_ui_WorldMap_Parts_1_C::IsCurrent' has a wrong offset!");
static_assert(offsetof(UWB_ui_WorldMap_Parts_1_C, IsChangeDirect) == 0x0004A1, "Member 'UWB_ui_WorldMap_Parts_1_C::IsChangeDirect' has a wrong offset!");

}

