#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyTransformationComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C
// 0x0130 (0x01F0 - 0x00C0)
class UBP_EnemyTransformationComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftObjectPtr<class UMaterialInterface>      MaterialTransformationAsset;                       // 0x00C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialTransformation;                            // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcessComponent;                              // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetSkeletalMesh;                                // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         TargetWeaponMeshes;                                // 0x0110(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501F[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSecondsTransformation;                         // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           TimelineCurveAsset;                                // 0x0128(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayIn;                                            // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5020[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ED_ActorChanged;                                   // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         RestoreCustomStencil;                              // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5021[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      MaterialDamageAsset;                               // 0x0150(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialDamage;                                    // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            TimelineCurveDamageAsset;                          // 0x0180(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSecondsDamage;                                 // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ActiveTransform;                                   // 0x018C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ActiveDamage;                                      // 0x018D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_5022[0x2];                                     // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TargetRect;                                        // 0x0190(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SkeletalMeshMaterial;                              // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSecondsRibbonEffect;                           // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KickedEffect;                                      // 0x01AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5023[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectStartInWaitSeconds;                          // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffectStartOutWaitSeconds;                         // 0x01B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SuperArmorClaimantName;                            // 0x01B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CancelTimelineCurveAsset;                          // 0x01C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CurrentCurveAsset;                                 // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         RibbonParticle;                                    // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           BfCancelTimelineCurveAsset;                        // 0x01D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBfCancel;                                         // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5024[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         FlushParticle;                                     // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ED_ActorChanged__DelegateSignature();
	void ExecuteUbergraph_BP_EnemyTransformationComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Initialize(class AActor* ParentActor, class USkeletalMeshComponent* ParentSkeletalMesh);
	void StartIn(bool bCancel);
	void PrivateUpdateTransformation(float DeltaSeconds);
	void PrivateStart();
	void Start_Out(bool bCancel, bool Param_bBfCancel);
	void OnDamage();
	void PrivateUpdateDamage(float DeltaSeconds);
	void PrivatePostUpdate(float DeltaSeconds);
	void SetCustomStencil(int32 StencilValue);
	void CancelTransformation(bool* bDummy);

	void IsExecTransformation(bool* bExec) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EnemyTransformationComponent_C">();
	}
	static class UBP_EnemyTransformationComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EnemyTransformationComponent_C>();
	}
};
static_assert(alignof(UBP_EnemyTransformationComponent_C) == 0x000008, "Wrong alignment on UBP_EnemyTransformationComponent_C");
static_assert(sizeof(UBP_EnemyTransformationComponent_C) == 0x0001F0, "Wrong size on UBP_EnemyTransformationComponent_C");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, UberGraphFrame) == 0x0000C0, "Member 'UBP_EnemyTransformationComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, MaterialTransformationAsset) == 0x0000C8, "Member 'UBP_EnemyTransformationComponent_C::MaterialTransformationAsset' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, MaterialTransformation) == 0x0000F0, "Member 'UBP_EnemyTransformationComponent_C::MaterialTransformation' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, PostProcessComponent) == 0x0000F8, "Member 'UBP_EnemyTransformationComponent_C::PostProcessComponent' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TargetActor) == 0x000100, "Member 'UBP_EnemyTransformationComponent_C::TargetActor' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TargetSkeletalMesh) == 0x000108, "Member 'UBP_EnemyTransformationComponent_C::TargetSkeletalMesh' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TargetWeaponMeshes) == 0x000110, "Member 'UBP_EnemyTransformationComponent_C::TargetWeaponMeshes' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, Valid) == 0x000120, "Member 'UBP_EnemyTransformationComponent_C::Valid' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TimeSecondsTransformation) == 0x000124, "Member 'UBP_EnemyTransformationComponent_C::TimeSecondsTransformation' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TimelineCurveAsset) == 0x000128, "Member 'UBP_EnemyTransformationComponent_C::TimelineCurveAsset' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, PlayIn) == 0x000130, "Member 'UBP_EnemyTransformationComponent_C::PlayIn' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, ED_ActorChanged) == 0x000138, "Member 'UBP_EnemyTransformationComponent_C::ED_ActorChanged' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, RestoreCustomStencil) == 0x000148, "Member 'UBP_EnemyTransformationComponent_C::RestoreCustomStencil' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, MaterialDamageAsset) == 0x000150, "Member 'UBP_EnemyTransformationComponent_C::MaterialDamageAsset' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, MaterialDamage) == 0x000178, "Member 'UBP_EnemyTransformationComponent_C::MaterialDamage' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TimelineCurveDamageAsset) == 0x000180, "Member 'UBP_EnemyTransformationComponent_C::TimelineCurveDamageAsset' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TimeSecondsDamage) == 0x000188, "Member 'UBP_EnemyTransformationComponent_C::TimeSecondsDamage' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, ActiveTransform) == 0x00018C, "Member 'UBP_EnemyTransformationComponent_C::ActiveTransform' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, ActiveDamage) == 0x00018D, "Member 'UBP_EnemyTransformationComponent_C::ActiveDamage' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TargetRect) == 0x000190, "Member 'UBP_EnemyTransformationComponent_C::TargetRect' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, SkeletalMeshMaterial) == 0x0001A0, "Member 'UBP_EnemyTransformationComponent_C::SkeletalMeshMaterial' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, TimeSecondsRibbonEffect) == 0x0001A8, "Member 'UBP_EnemyTransformationComponent_C::TimeSecondsRibbonEffect' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, KickedEffect) == 0x0001AC, "Member 'UBP_EnemyTransformationComponent_C::KickedEffect' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, EffectStartInWaitSeconds) == 0x0001B0, "Member 'UBP_EnemyTransformationComponent_C::EffectStartInWaitSeconds' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, EffectStartOutWaitSeconds) == 0x0001B4, "Member 'UBP_EnemyTransformationComponent_C::EffectStartOutWaitSeconds' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, SuperArmorClaimantName) == 0x0001B8, "Member 'UBP_EnemyTransformationComponent_C::SuperArmorClaimantName' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, CancelTimelineCurveAsset) == 0x0001C0, "Member 'UBP_EnemyTransformationComponent_C::CancelTimelineCurveAsset' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, CurrentCurveAsset) == 0x0001C8, "Member 'UBP_EnemyTransformationComponent_C::CurrentCurveAsset' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, RibbonParticle) == 0x0001D0, "Member 'UBP_EnemyTransformationComponent_C::RibbonParticle' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, BfCancelTimelineCurveAsset) == 0x0001D8, "Member 'UBP_EnemyTransformationComponent_C::BfCancelTimelineCurveAsset' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, bBfCancel) == 0x0001E0, "Member 'UBP_EnemyTransformationComponent_C::bBfCancel' has a wrong offset!");
static_assert(offsetof(UBP_EnemyTransformationComponent_C, FlushParticle) == 0x0001E8, "Member 'UBP_EnemyTransformationComponent_C::FlushParticle' has a wrong offset!");

}

