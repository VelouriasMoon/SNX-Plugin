#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DriveShockWave

#include "Basic.hpp"

#include "BP_DriveShockWave_classes.hpp"
#include "BP_DriveShockWave_parameters.hpp"


namespace SDK
{

// Function BP_DriveShockWave.BP_DriveShockWave_C.ExecuteUbergraph_BP_DriveShockWave
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriveShockWave_C::ExecuteUbergraph_BP_DriveShockWave(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriveShockWave_C", "ExecuteUbergraph_BP_DriveShockWave");

	Params::BP_DriveShockWave_C_ExecuteUbergraph_BP_DriveShockWave Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriveShockWave.BP_DriveShockWave_C.EndAttackCollision
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_DriveShockWave_C::EndAttackCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriveShockWave_C", "EndAttackCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DriveShockWave.BP_DriveShockWave_C.StartAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_AttackOwner                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriveShockWave_C::StartAttack(class AActor* Param_AttackOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriveShockWave_C", "StartAttack");

	Params::BP_DriveShockWave_C_StartAttack Parms{};

	Parms.Param_AttackOwner = Param_AttackOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriveShockWave.BP_DriveShockWave_C.SetCollisionSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLarge                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DriveShockWave_C::SetCollisionSize(bool bLarge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriveShockWave_C", "SetCollisionSize");

	Params::BP_DriveShockWave_C_SetCollisionSize Parms{};

	Parms.bLarge = bLarge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DriveShockWave.BP_DriveShockWave_C.GetPrimitive
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              Primitive                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DriveShockWave_C::GetPrimitive(class UPrimitiveComponent** Primitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriveShockWave_C", "GetPrimitive");

	Params::BP_DriveShockWave_C_GetPrimitive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Primitive != nullptr)
		*Primitive = Parms.Primitive;
}


// Function BP_DriveShockWave.BP_DriveShockWave_C.IsFinish
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DriveShockWave_C::IsFinish(bool* bEnd) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DriveShockWave_C", "IsFinish");

	Params::BP_DriveShockWave_C_IsFinish Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}

}

