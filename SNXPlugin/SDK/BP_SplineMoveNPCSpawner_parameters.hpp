#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineMoveNPCSpawner

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.ExecuteUbergraph_BP_SplineMoveNPCSpawner
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TownPeopleCrowd_C*                  CallFunc_SpawnTownPeopleCrowd_Spawned;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A20[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSplinePathAtRandom_Spline;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner) == 0x000048, "Wrong size on BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, EntryPoint) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_SpawnTownPeopleCrowd_Spawned) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_SpawnTownPeopleCrowd_Spawned' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, K2Node_Event_EndPlayReason) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_GetSplinePathAtRandom_Spline) == 0x000018, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_GetSplinePathAtRandom_Spline' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000020, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x00002C, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_IsValid_ReturnValue) == 0x000045, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000046, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000047, "Member 'BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SplineMoveNPCSpawner_C_ReceiveTick");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_ReceiveTick) == 0x000004, "Wrong size on BP_SplineMoveNPCSpawner_C_ReceiveTick");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SplineMoveNPCSpawner_C_ReceiveEndPlay");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SplineMoveNPCSpawner_C_ReceiveEndPlay");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetRouteSplineAtRandom
// 0x0018 (0x0018 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom final
{
public:
	class USplineComponent*                       SplineComponent;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom) == 0x000018, "Wrong size on BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom, SplineComponent) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00000C, "Member 'BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetFlatSpline
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_GetFlatSpline final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_GetFlatSpline) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_GetFlatSpline");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_GetFlatSpline) == 0x000048, "Wrong size on BP_SplineMoveNPCSpawner_C_GetFlatSpline");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, Spline) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::Spline' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, Result) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::Result' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, Temp_int_Variable) == 0x000018, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000020, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetFlatSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_SplineMoveNPCSpawner_C_GetFlatSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.SpawnTownPeopleCrowd
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd final
{
public:
	class ABP_TownPeopleCrowd_C*                  Spawned;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TownPeopleCrowd_C*                  SpawnedActor;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       PathSpline;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNpcTownPeopleCrowdType                CallFunc_GetRandomCrowdType_CrowdType;             // 0x0018(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A21[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSplinePathAtRandom_Spline;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A22[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TownPeopleCrowd_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd) == 0x000010, "Wrong alignment on BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd) == 0x0000C0, "Wrong size on BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, Spawned) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::Spawned' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, SpawnedActor) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::SpawnedActor' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, PathSpline) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::PathSpline' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_GetRandomCrowdType_CrowdType) == 0x000018, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_GetRandomCrowdType_CrowdType' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_GetSplinePathAtRandom_Spline) == 0x000030, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_GetSplinePathAtRandom_Spline' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_GetSplineLength_ReturnValue) == 0x000038, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x00003C, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000048, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2) == 0x000054, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_FindLookAtRotation_ReturnValue) == 0x000090, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B0, "Member 'BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetSplinePathAtRandom
// 0x0018 (0x0018 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom) == 0x000018, "Wrong size on BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom, Spline) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom::Spline' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00000C, "Member 'BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.InitializeSplinePaths
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_InitializeSplinePaths final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A23[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A24[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A25[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       K2Node_DynamicCast_AsSpline_Component;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A26[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_InitializeSplinePaths");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths) == 0x000048, "Wrong size on BP_SplineMoveNPCSpawner_C_InitializeSplinePaths");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, K2Node_DynamicCast_AsSpline_Component) == 0x000038, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::K2Node_DynamicCast_AsSpline_Component' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSplinePaths, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSplinePaths::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.UpdateSpawnIntervalTime
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime final
{
public:
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime) == 0x000004, "Wrong alignment on BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime) == 0x000010, "Wrong size on BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime, CallFunc_Abs_ReturnValue) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_SplineMoveNPCSpawner_C_UpdateSpawnIntervalTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.InitializeSpawn
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_InitializeSpawn final
{
public:
	int32                                         SpawnActorNum;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocalVar_0;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnActorMax;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTime;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxPathLength_MaxPathLength;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A27[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxPathLength_MaxPathLength_1;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A28[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TownPeopleCrowd_C*                  CallFunc_SpawnTownPeopleCrowd_Spawned;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_InitializeSpawn) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_InitializeSpawn");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_InitializeSpawn) == 0x000048, "Wrong size on BP_SplineMoveNPCSpawner_C_InitializeSpawn");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, SpawnActorNum) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::SpawnActorNum' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, NewLocalVar_0) == 0x000004, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, SpawnActorMax) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::SpawnActorMax' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, MaxTime) == 0x000014, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::MaxTime' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, Time) == 0x000018, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::Time' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_GetMaxPathLength_MaxPathLength) == 0x00001C, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_GetMaxPathLength_MaxPathLength' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_GetMaxPathLength_MaxPathLength_1) == 0x000034, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_GetMaxPathLength_MaxPathLength_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_InitializeSpawn, CallFunc_SpawnTownPeopleCrowd_Spawned) == 0x000040, "Member 'BP_SplineMoveNPCSpawner_C_InitializeSpawn::CallFunc_SpawnTownPeopleCrowd_Spawned' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetMaxPathLength
// 0x0030 (0x0030 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_GetMaxPathLength final
{
public:
	float                                         MaxPathLength;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A29[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_GetMaxPathLength");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength) == 0x000030, "Wrong size on BP_SplineMoveNPCSpawner_C_GetMaxPathLength");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, MaxPathLength) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::MaxPathLength' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, Max) == 0x000004, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::Max' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, CallFunc_GetSplineLength_ReturnValue) == 0x000024, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetMaxPathLength, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SplineMoveNPCSpawner_C_GetMaxPathLength::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetRandomCrowdType
// 0x0050 (0x0050 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_GetRandomCrowdType final
{
public:
	struct FNpcTownPeopleCrowdType                CrowdType;                                         // 0x0000(0x0010)(Parm, OutParm)
	struct FNpcTownPeopleCrowdType                Result;                                            // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNpcTownPeopleCrowdType                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_GetRandomCrowdType");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType) == 0x000050, "Wrong size on BP_SplineMoveNPCSpawner_C_GetRandomCrowdType");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType, CrowdType) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_GetRandomCrowdType::CrowdType' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType, Result) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_GetRandomCrowdType::Result' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BP_SplineMoveNPCSpawner_C_GetRandomCrowdType::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'BP_SplineMoveNPCSpawner_C_GetRandomCrowdType::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000034, "Member 'BP_SplineMoveNPCSpawner_C_GetRandomCrowdType::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_SplineMoveNPCSpawner_C_GetRandomCrowdType::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_GetRandomCrowdType, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_SplineMoveNPCSpawner_C_GetRandomCrowdType::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.MoveNPCDeadCallback
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback final
{
public:
	class ABP_TownPeopleCrowd_C*                  Dead;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback) == 0x000010, "Wrong size on BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback, Dead) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback::Dead' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.DestroyAllNPC
// 0x0030 (0x0030 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_DestroyAllNPC final
{
public:
	TArray<class AActor*>                         TmpActors;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A2A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A2B[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_DestroyAllNPC");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC) == 0x000030, "Wrong size on BP_SplineMoveNPCSpawner_C_DestroyAllNPC");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC, TmpActors) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_DestroyAllNPC::TmpActors' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SplineMoveNPCSpawner_C_DestroyAllNPC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SplineMoveNPCSpawner_C_DestroyAllNPC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SplineMoveNPCSpawner_C_DestroyAllNPC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_SplineMoveNPCSpawner_C_DestroyAllNPC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineMoveNPCSpawner_C_DestroyAllNPC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_DestroyAllNPC, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SplineMoveNPCSpawner_C_DestroyAllNPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.CountNPC
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineMoveNPCSpawner_C_CountNPC final
{
public:
	int32                                         ActiveNum;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A2C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A2D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A2E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANpcTownPeopleBase*                     K2Node_DynamicCast_AsNpc_Town_People_Base;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A2F[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMoveNPCSpawner_C_CountNPC) == 0x000008, "Wrong alignment on BP_SplineMoveNPCSpawner_C_CountNPC");
static_assert(sizeof(BP_SplineMoveNPCSpawner_C_CountNPC) == 0x000048, "Wrong size on BP_SplineMoveNPCSpawner_C_CountNPC");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, ActiveNum) == 0x000000, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::ActiveNum' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, K2Node_DynamicCast_AsNpc_Town_People_Base) == 0x000038, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::K2Node_DynamicCast_AsNpc_Town_People_Base' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineMoveNPCSpawner_C_CountNPC, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_SplineMoveNPCSpawner_C_CountNPC::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

}

