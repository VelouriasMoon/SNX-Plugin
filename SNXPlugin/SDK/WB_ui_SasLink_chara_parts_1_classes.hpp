#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_SasLink_chara_parts_1

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "Enum_ui_saslink_chara_parts_1_animation_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_SasLink_chara_parts_1.WB_ui_SasLink_chara_parts_1_C
// 0x00B8 (0x0440 - 0x0388)
class UWB_ui_SasLink_chara_parts_1_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Default_out_max;                                   // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_in_max;                                    // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_out;                                       // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_in;                                        // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_in_max_2;                                   // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_in_2;                                       // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision_max;                                      // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_in_max;                                     // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_max;                                        // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unselect_max;                                      // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_max;                                       // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision;                                          // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_in;                                         // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select;                                            // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unselect;                                          // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Face_a2;                                           // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Select_Base;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_saslink_bond_3_num;                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         BondLv;                                            // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagSelect;                                        // 0x0434(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagDecision;                                      // 0x0435(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagAnimation;                                     // 0x0436(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EPlayerID                                     CharaID;                                           // 0x0437(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagFirst;                                         // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableFlag;                                        // 0x0439(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_SasLink_chara_parts_1(int32 EntryPoint);
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void OnInitialized();
	void StateNone(int32 SubState);
	void StateLoop(int32 SubState);
	void StateLoopSelect(int32 SubState);
	void SetParam(EPlayerID Param_CharaID, int32 Param_BondLv);
	void GetCurrentAnimationIndex(Enum_ui_saslink_chara_parts_1_animation Animation, int32* Param_Index);
	void SetSelectFlag(bool IsSelect);
	void Decide();
	void IsDecideAnimation(bool* IsAnimation);
	void SetFirstFlag(bool IsFirst);
	void PlaySasLinkAnimation(int32 BaseIndex, float Speed, bool IsLoop);
	void StateLoopUnSelect(int32 SubState);
	void SetEnableFlag(bool IsEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_SasLink_chara_parts_1_C">();
	}
	static class UWB_ui_SasLink_chara_parts_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_SasLink_chara_parts_1_C>();
	}
};
static_assert(alignof(UWB_ui_SasLink_chara_parts_1_C) == 0x000008, "Wrong alignment on UWB_ui_SasLink_chara_parts_1_C");
static_assert(sizeof(UWB_ui_SasLink_chara_parts_1_C) == 0x000440, "Wrong size on UWB_ui_SasLink_chara_parts_1_C");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_SasLink_chara_parts_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Default_out_max) == 0x000390, "Member 'UWB_ui_SasLink_chara_parts_1_C::Default_out_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Default_in_max) == 0x000398, "Member 'UWB_ui_SasLink_chara_parts_1_C::Default_in_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Default_out) == 0x0003A0, "Member 'UWB_ui_SasLink_chara_parts_1_C::Default_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Default_in) == 0x0003A8, "Member 'UWB_ui_SasLink_chara_parts_1_C::Default_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Select_in_max_2) == 0x0003B0, "Member 'UWB_ui_SasLink_chara_parts_1_C::Select_in_max_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Select_in_2) == 0x0003B8, "Member 'UWB_ui_SasLink_chara_parts_1_C::Select_in_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Decision_max) == 0x0003C0, "Member 'UWB_ui_SasLink_chara_parts_1_C::Decision_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Select_in_max) == 0x0003C8, "Member 'UWB_ui_SasLink_chara_parts_1_C::Select_in_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Select_max) == 0x0003D0, "Member 'UWB_ui_SasLink_chara_parts_1_C::Select_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Unselect_max) == 0x0003D8, "Member 'UWB_ui_SasLink_chara_parts_1_C::Unselect_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Default_max) == 0x0003E0, "Member 'UWB_ui_SasLink_chara_parts_1_C::Default_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Decision) == 0x0003E8, "Member 'UWB_ui_SasLink_chara_parts_1_C::Decision' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Select_in) == 0x0003F0, "Member 'UWB_ui_SasLink_chara_parts_1_C::Select_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Select) == 0x0003F8, "Member 'UWB_ui_SasLink_chara_parts_1_C::Select' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Unselect) == 0x000400, "Member 'UWB_ui_SasLink_chara_parts_1_C::Unselect' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Default) == 0x000408, "Member 'UWB_ui_SasLink_chara_parts_1_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Face_a2) == 0x000410, "Member 'UWB_ui_SasLink_chara_parts_1_C::Face_a2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Frame) == 0x000418, "Member 'UWB_ui_SasLink_chara_parts_1_C::Frame' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Select_Base) == 0x000420, "Member 'UWB_ui_SasLink_chara_parts_1_C::Select_Base' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, Text_saslink_bond_3_num) == 0x000428, "Member 'UWB_ui_SasLink_chara_parts_1_C::Text_saslink_bond_3_num' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, BondLv) == 0x000430, "Member 'UWB_ui_SasLink_chara_parts_1_C::BondLv' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, FlagSelect) == 0x000434, "Member 'UWB_ui_SasLink_chara_parts_1_C::FlagSelect' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, FlagDecision) == 0x000435, "Member 'UWB_ui_SasLink_chara_parts_1_C::FlagDecision' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, FlagAnimation) == 0x000436, "Member 'UWB_ui_SasLink_chara_parts_1_C::FlagAnimation' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, CharaID) == 0x000437, "Member 'UWB_ui_SasLink_chara_parts_1_C::CharaID' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, FlagFirst) == 0x000438, "Member 'UWB_ui_SasLink_chara_parts_1_C::FlagFirst' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_chara_parts_1_C, EnableFlag) == 0x000439, "Member 'UWB_ui_SasLink_chara_parts_1_C::EnableFlag' has a wrong offset!");

}

