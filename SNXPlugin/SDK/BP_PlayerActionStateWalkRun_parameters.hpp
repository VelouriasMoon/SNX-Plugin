#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateWalkRun

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C.ExecuteUbergraph_BP_PlayerActionStateWalkRun
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPlayerWalkRunStateKind Kind)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun) == 0x000004, "Wrong alignment on BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun");
static_assert(sizeof(BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun) == 0x000014, "Wrong size on BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun, EntryPoint) == 0x000000, "Member 'BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_PlayerActionStateWalkRun_C_ExecuteUbergraph_BP_PlayerActionStateWalkRun::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C.Enter
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerActionStateWalkRun_C_Enter final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Enter_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAcceleration_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistAnimRequest_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimIdleWalkRun_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlaySASCodeDirection_bDummy;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateWalkRun_C_Enter) == 0x000008, "Wrong alignment on BP_PlayerActionStateWalkRun_C_Enter");
static_assert(sizeof(BP_PlayerActionStateWalkRun_C_Enter) == 0x000030, "Wrong size on BP_PlayerActionStateWalkRun_C_Enter");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, Param) == 0x000000, "Member 'BP_PlayerActionStateWalkRun_C_Enter::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateWalkRun_C_Enter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, CallFunc_Enter_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateWalkRun_C_Enter::CallFunc_Enter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, CallFunc_GetMaxAcceleration_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateWalkRun_C_Enter::CallFunc_GetMaxAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateWalkRun_C_Enter::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, CallFunc_IsExistAnimRequest_ReturnValue) == 0x000011, "Member 'BP_PlayerActionStateWalkRun_C_Enter::CallFunc_IsExistAnimRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, CallFunc_IsAnimIdleWalkRun_ReturnValue) == 0x000012, "Member 'BP_PlayerActionStateWalkRun_C_Enter::CallFunc_IsAnimIdleWalkRun_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'BP_PlayerActionStateWalkRun_C_Enter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000018, "Member 'BP_PlayerActionStateWalkRun_C_Enter::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerActionStateWalkRun_C_Enter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Enter, CallFunc_PlaySASCodeDirection_bDummy) == 0x000029, "Member 'BP_PlayerActionStateWalkRun_C_Enter::CallFunc_PlaySASCodeDirection_bDummy' has a wrong offset!");

// Function BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C.Update
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerActionStateWalkRun_C_Update final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LDetaSeconds;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLeftStickZero_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerWalkRunStateKind                       CallFunc_GetWalkRunStateKind_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F2[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Update_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateWalkRun_C_Update) == 0x000004, "Wrong alignment on BP_PlayerActionStateWalkRun_C_Update");
static_assert(sizeof(BP_PlayerActionStateWalkRun_C_Update) == 0x000018, "Wrong size on BP_PlayerActionStateWalkRun_C_Update");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Update, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateWalkRun_C_Update::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Update, LDetaSeconds) == 0x000004, "Member 'BP_PlayerActionStateWalkRun_C_Update::LDetaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Update, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x000008, "Member 'BP_PlayerActionStateWalkRun_C_Update::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Update, CallFunc_IsLeftStickZero_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateWalkRun_C_Update::CallFunc_IsLeftStickZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Update, CallFunc_GetWalkRunStateKind_ReturnValue) == 0x00000D, "Member 'BP_PlayerActionStateWalkRun_C_Update::CallFunc_GetWalkRunStateKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Update, CallFunc_Update_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateWalkRun_C_Update::CallFunc_Update_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateWalkRun_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C.Exit
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerActionStateWalkRun_C_Exit final
{
public:
	int32                                         NextStateIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LMontage;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Exit_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F4[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetAnimMontageFromSet_Montage;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F5[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_StopSASCodeDirection_self_CastInput;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopSASCodeDirection_bDummy;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateWalkRun_C_Exit) == 0x000008, "Wrong alignment on BP_PlayerActionStateWalkRun_C_Exit");
static_assert(sizeof(BP_PlayerActionStateWalkRun_C_Exit) == 0x000058, "Wrong size on BP_PlayerActionStateWalkRun_C_Exit");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, NextStateIndex) == 0x000000, "Member 'BP_PlayerActionStateWalkRun_C_Exit::NextStateIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateWalkRun_C_Exit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, LMontage) == 0x000008, "Member 'BP_PlayerActionStateWalkRun_C_Exit::LMontage' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_Exit_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_Exit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_SetLookAtEnable_self_CastInput) == 0x000018, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_SetLookAtEnable_bResult) == 0x000028, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_IsPlayerStatus_Result) == 0x00002A, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_PlayAnimMontage_ReturnValue) == 0x00002C, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_GetAnimMontageFromSet_Montage) == 0x000030, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_GetAnimMontageFromSet_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_Conv_IntToByte_ReturnValue) == 0x000038, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_GetValidValue_ReturnValue) == 0x000039, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_StopSASCodeDirection_self_CastInput) == 0x000040, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_StopSASCodeDirection_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_StopSASCodeDirection_bDummy) == 0x000050, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_StopSASCodeDirection_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_Exit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_PlayerActionStateWalkRun_C_Exit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C.UpdateRotate
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerActionStateWalkRun_C_UpdateRotate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateWalkRun_C_UpdateRotate) == 0x000004, "Wrong alignment on BP_PlayerActionStateWalkRun_C_UpdateRotate");
static_assert(sizeof(BP_PlayerActionStateWalkRun_C_UpdateRotate) == 0x000004, "Wrong size on BP_PlayerActionStateWalkRun_C_UpdateRotate");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRotate, DeltaSeconds) == 0x000000, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRotate::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C.OnChangeWalkRunStateKind
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind final
{
public:
	EPlayerWalkRunStateKind                       Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F6[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UASCharacterMovementComponent*          K2Node_DynamicCast_AsASCharacter_Movement_Component; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerWalkRunStateKind                       Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F8[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind) == 0x000008, "Wrong alignment on BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind");
static_assert(sizeof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind) == 0x000058, "Wrong size on BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, Kind) == 0x000000, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::Kind' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, Temp_bool_Variable) == 0x000001, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, Temp_bool_Variable_1) == 0x000003, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, Temp_bool_Variable_2) == 0x000004, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, Temp_bool_Variable_3) == 0x000005, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, Temp_bool_Variable_4) == 0x000006, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, CallFunc_GetActorForwardVector_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, K2Node_DynamicCast_AsASCharacter_Movement_Component) == 0x000020, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::K2Node_DynamicCast_AsASCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x00002C, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, Temp_byte_Variable) == 0x000038, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, K2Node_Select_Default) == 0x000039, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, CallFunc_SetLookAtEnable_self_CastInput) == 0x000040, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind, CallFunc_SetLookAtEnable_bResult) == 0x000050, "Member 'BP_PlayerActionStateWalkRun_C_OnChangeWalkRunStateKind::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");

// Function BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C.CheckRootMotionMode
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerActionStateWalkRun_C_CheckRootMotionMode final
{
public:
	float                                         LRemainingTime;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LAnimationLength;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LCurrentTime;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRate;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentASNodeAssetTime_ReturnValue;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentASNodeAssetLength_ReturnValue;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode) == 0x000004, "Wrong alignment on BP_PlayerActionStateWalkRun_C_CheckRootMotionMode");
static_assert(sizeof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode) == 0x000020, "Wrong size on BP_PlayerActionStateWalkRun_C_CheckRootMotionMode");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode, LRemainingTime) == 0x000000, "Member 'BP_PlayerActionStateWalkRun_C_CheckRootMotionMode::LRemainingTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode, LAnimationLength) == 0x000004, "Member 'BP_PlayerActionStateWalkRun_C_CheckRootMotionMode::LAnimationLength' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode, LCurrentTime) == 0x000008, "Member 'BP_PlayerActionStateWalkRun_C_CheckRootMotionMode::LCurrentTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode, LRate) == 0x00000C, "Member 'BP_PlayerActionStateWalkRun_C_CheckRootMotionMode::LRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateWalkRun_C_CheckRootMotionMode::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode, CallFunc_GetCurrentASNodeAssetTime_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateWalkRun_C_CheckRootMotionMode::CallFunc_GetCurrentASNodeAssetTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode, CallFunc_GetCurrentASNodeAssetLength_ReturnValue) == 0x000018, "Member 'BP_PlayerActionStateWalkRun_C_CheckRootMotionMode::CallFunc_GetCurrentASNodeAssetLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_CheckRootMotionMode, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_PlayerActionStateWalkRun_C_CheckRootMotionMode::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C.UpdateRootMotionInterp
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45FA[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp) == 0x000004, "Wrong alignment on BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp");
static_assert(sizeof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp) == 0x0000C0, "Wrong size on BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, DeltaSeconds) == 0x000000, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00002C, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000B4, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_PlayerActionStateWalkRun_C_UpdateRootMotionInterp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

