#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PsychicGrabAttachment

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "FSASCommand_structs.hpp"
#include "Engine_structs.hpp"
#include "E_SASKind_structs.hpp"
#include "PsychicGrabPosData_structs.hpp"
#include "FSASElectricParam_structs.hpp"
#include "FSASFireParam_structs.hpp"
#include "FSASSeeThroughParam_structs.hpp"
#include "FSASMetalParam_structs.hpp"
#include "FSASTelepoParam_structs.hpp"
#include "FSASStealthParam_structs.hpp"
#include "FSASCopyParam_structs.hpp"
#include "FSASPsychicParam_structs.hpp"
#include "AcceleratorParam_structs.hpp"


namespace SDK::Params
{

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.ExecuteUbergraph_PsychicGrabAttachment
// 0x0168 (0x0168 - 0x0000)
struct PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7868[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSParallelObjectManager*               CallFunc_GetParallelObjectManager_NewParam;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASElectricParam                     K2Node_Event_param_15;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7869[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_17;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param_14;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_786A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_16;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_8;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_13;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_786B[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_15;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_12;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_786C[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_14;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_7;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_11;                             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_786D[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_13;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_10;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_786E[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_12;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_6;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASSeeThroughParam                   K2Node_Event_param_9;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_786F[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_11;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASSeeThroughParam                   K2Node_Event_param_8;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7870[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_10;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_5;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASTelepoParam                       K2Node_Event_param_7;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7871[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_9;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASTelepoParam                       K2Node_Event_param_6;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7872[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_8;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_4;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_5;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7873[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_7;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_4;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7874[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_6;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_3;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param_3;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7875[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_5;                              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param_2;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7876[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_4;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_2;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param_1;                              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7877[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_3;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7878[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_2;                              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_1;                         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAcceleratorParam                      K2Node_Event_Parameter_1;                          // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7879[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_1;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram_1;                          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_787A[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAcceleratorParam                      K2Node_Event_Parameter;                            // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner;                                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram;                            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_787B[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ARSParallelObjectManager*               CallFunc_GetParallelObjectManager_NewParam_1;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterObject_ReturnValue;               // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment");
static_assert(sizeof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment) == 0x000168, "Wrong size on PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, EntryPoint) == 0x000000, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::EntryPoint' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, CallFunc_GetParallelObjectManager_NewParam) == 0x000008, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::CallFunc_GetParallelObjectManager_NewParam' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_15) == 0x000011, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_15' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_17) == 0x000018, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_17' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_14) == 0x000020, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_14' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_16) == 0x000028, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_16' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime_8) == 0x000030, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime_8' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_13) == 0x000034, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_13' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_15) == 0x000038, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_15' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_12) == 0x000040, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_12' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_14) == 0x000048, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_14' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime_7) == 0x000050, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime_7' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_11) == 0x000054, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_11' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_13) == 0x000058, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_13' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_10) == 0x000060, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_10' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_12) == 0x000068, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_12' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime_6) == 0x000070, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_9) == 0x000074, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_9' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_11) == 0x000078, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_11' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_8) == 0x000080, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_8' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_10) == 0x000088, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_10' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime_5) == 0x000090, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_7) == 0x000094, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_7' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_9) == 0x000098, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_9' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_6) == 0x0000A0, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_8) == 0x0000A8, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_8' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime_4) == 0x0000B0, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_5) == 0x0000B4, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_7) == 0x0000B8, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_7' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_4) == 0x0000C0, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_6) == 0x0000C8, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime_3) == 0x0000D0, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_3) == 0x0000D4, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_5) == 0x0000D8, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_2) == 0x0000E0, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_4) == 0x0000E8, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime_2) == 0x0000F0, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param_1) == 0x0000F4, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_3) == 0x0000F8, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_param) == 0x000100, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_2) == 0x000108, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime_1) == 0x000110, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_DeltaTime) == 0x000114, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Parameter_1) == 0x000118, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Parameter_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner_1) == 0x000128, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_bHologram_1) == 0x000130, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_bHologram_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Parameter) == 0x000134, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Parameter' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_Owner) == 0x000140, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_RemainTime) == 0x000148, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_RemainTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_bHologram) == 0x00014C, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_bHologram' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_DeltaSeconds) == 0x000150, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, Temp_bool_IsClosed_Variable) == 0x000154, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, Temp_bool_Has_Been_Initd_Variable) == 0x000155, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, K2Node_Event_EndPlayReason) == 0x000156, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000157, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, CallFunc_GetParallelObjectManager_NewParam_1) == 0x000158, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::CallFunc_GetParallelObjectManager_NewParam_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, CallFunc_IsValid_ReturnValue_1) == 0x000160, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment, CallFunc_RegisterObject_ReturnValue) == 0x000161, "Member 'PsychicGrabAttachment_C_ExecuteUbergraph_PsychicGrabAttachment::CallFunc_RegisterObject_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PsychicGrabAttachment_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_ReceiveEndPlay");
static_assert(sizeof(PsychicGrabAttachment_C_ReceiveEndPlay) == 0x000001, "Wrong size on PsychicGrabAttachment_C_ReceiveEndPlay");
static_assert(offsetof(PsychicGrabAttachment_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PsychicGrabAttachment_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PsychicGrabAttachment_C_ReceiveTick final
{
public:
	float                                         Param_DeltaSeconds;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_ReceiveTick) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_ReceiveTick");
static_assert(sizeof(PsychicGrabAttachment_C_ReceiveTick) == 0x000004, "Wrong size on PsychicGrabAttachment_C_ReceiveTick");
static_assert(offsetof(PsychicGrabAttachment_C_ReceiveTick, Param_DeltaSeconds) == 0x000000, "Member 'PsychicGrabAttachment_C_ReceiveTick::Param_DeltaSeconds' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnAcceleratorEnd
// 0x0020 (0x0020 - 0x0000)
struct PsychicGrabAttachment_C_OnAcceleratorEnd final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_787C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_OnAcceleratorEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnAcceleratorEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnAcceleratorEnd) == 0x000020, "Wrong size on PsychicGrabAttachment_C_OnAcceleratorEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnAcceleratorEnd, Parameter) == 0x000000, "Member 'PsychicGrabAttachment_C_OnAcceleratorEnd::Parameter' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnAcceleratorEnd, Param_Owner) == 0x000010, "Member 'PsychicGrabAttachment_C_OnAcceleratorEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnAcceleratorEnd, RemainTime) == 0x000018, "Member 'PsychicGrabAttachment_C_OnAcceleratorEnd::RemainTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnAcceleratorEnd, bHologram) == 0x00001C, "Member 'PsychicGrabAttachment_C_OnAcceleratorEnd::bHologram' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnAcceleratorStart
// 0x0020 (0x0020 - 0x0000)
struct PsychicGrabAttachment_C_OnAcceleratorStart final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_787D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_OnAcceleratorStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnAcceleratorStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnAcceleratorStart) == 0x000020, "Wrong size on PsychicGrabAttachment_C_OnAcceleratorStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnAcceleratorStart, Parameter) == 0x000000, "Member 'PsychicGrabAttachment_C_OnAcceleratorStart::Parameter' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnAcceleratorStart, Param_Owner) == 0x000010, "Member 'PsychicGrabAttachment_C_OnAcceleratorStart::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnAcceleratorStart, bHologram) == 0x000018, "Member 'PsychicGrabAttachment_C_OnAcceleratorStart::bHologram' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.ParallelTick
// 0x0004 (0x0004 - 0x0000)
struct PsychicGrabAttachment_C_ParallelTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_ParallelTick) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_ParallelTick");
static_assert(sizeof(PsychicGrabAttachment_C_ParallelTick) == 0x000004, "Wrong size on PsychicGrabAttachment_C_ParallelTick");
static_assert(offsetof(PsychicGrabAttachment_C_ParallelTick, DeltaTime) == 0x000000, "Member 'PsychicGrabAttachment_C_ParallelTick::DeltaTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnPsychicEnd
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_OnPsychicEnd final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_787E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnPsychicEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnPsychicEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnPsychicEnd) == 0x000018, "Wrong size on PsychicGrabAttachment_C_OnPsychicEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnPsychicEnd, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnPsychicEnd::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnPsychicEnd, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnPsychicEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnPsychicEnd, RemainTime) == 0x000010, "Member 'PsychicGrabAttachment_C_OnPsychicEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnPsychicStart
// 0x0010 (0x0010 - 0x0000)
struct PsychicGrabAttachment_C_OnPsychicStart final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_787F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnPsychicStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnPsychicStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnPsychicStart) == 0x000010, "Wrong size on PsychicGrabAttachment_C_OnPsychicStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnPsychicStart, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnPsychicStart::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnPsychicStart, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnPsychicStart::Param_Owner' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnCopyEnd
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_OnCopyEnd final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7880[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnCopyEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnCopyEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnCopyEnd) == 0x000018, "Wrong size on PsychicGrabAttachment_C_OnCopyEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnCopyEnd, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnCopyEnd::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnCopyEnd, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnCopyEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnCopyEnd, RemainTime) == 0x000010, "Member 'PsychicGrabAttachment_C_OnCopyEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnCopyStart
// 0x0010 (0x0010 - 0x0000)
struct PsychicGrabAttachment_C_OnCopyStart final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7881[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnCopyStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnCopyStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnCopyStart) == 0x000010, "Wrong size on PsychicGrabAttachment_C_OnCopyStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnCopyStart, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnCopyStart::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnCopyStart, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnCopyStart::Param_Owner' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnStealthEnd
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_OnStealthEnd final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7882[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnStealthEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnStealthEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnStealthEnd) == 0x000018, "Wrong size on PsychicGrabAttachment_C_OnStealthEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnStealthEnd, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnStealthEnd::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnStealthEnd, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnStealthEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnStealthEnd, RemainTime) == 0x000010, "Member 'PsychicGrabAttachment_C_OnStealthEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnStealthStart
// 0x0010 (0x0010 - 0x0000)
struct PsychicGrabAttachment_C_OnStealthStart final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7883[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnStealthStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnStealthStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnStealthStart) == 0x000010, "Wrong size on PsychicGrabAttachment_C_OnStealthStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnStealthStart, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnStealthStart::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnStealthStart, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnStealthStart::Param_Owner' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnTelepoEnd
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_OnTelepoEnd final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7884[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnTelepoEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnTelepoEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnTelepoEnd) == 0x000018, "Wrong size on PsychicGrabAttachment_C_OnTelepoEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnTelepoEnd, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnTelepoEnd::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnTelepoEnd, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnTelepoEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnTelepoEnd, RemainTime) == 0x000010, "Member 'PsychicGrabAttachment_C_OnTelepoEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnTelepoStart
// 0x0010 (0x0010 - 0x0000)
struct PsychicGrabAttachment_C_OnTelepoStart final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7885[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnTelepoStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnTelepoStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnTelepoStart) == 0x000010, "Wrong size on PsychicGrabAttachment_C_OnTelepoStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnTelepoStart, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnTelepoStart::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnTelepoStart, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnTelepoStart::Param_Owner' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnSeeThroughEnd
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_OnSeeThroughEnd final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7886[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnSeeThroughEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnSeeThroughEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnSeeThroughEnd) == 0x000018, "Wrong size on PsychicGrabAttachment_C_OnSeeThroughEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnSeeThroughEnd, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnSeeThroughEnd::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnSeeThroughEnd, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnSeeThroughEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnSeeThroughEnd, RemainTime) == 0x000010, "Member 'PsychicGrabAttachment_C_OnSeeThroughEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnSeeThroughStart
// 0x0010 (0x0010 - 0x0000)
struct PsychicGrabAttachment_C_OnSeeThroughStart final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7887[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnSeeThroughStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnSeeThroughStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnSeeThroughStart) == 0x000010, "Wrong size on PsychicGrabAttachment_C_OnSeeThroughStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnSeeThroughStart, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnSeeThroughStart::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnSeeThroughStart, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnSeeThroughStart::Param_Owner' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnMetalEnd
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_OnMetalEnd final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7888[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnMetalEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnMetalEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnMetalEnd) == 0x000018, "Wrong size on PsychicGrabAttachment_C_OnMetalEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnMetalEnd, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnMetalEnd::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnMetalEnd, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnMetalEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnMetalEnd, RemainTime) == 0x000010, "Member 'PsychicGrabAttachment_C_OnMetalEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnMetalStart
// 0x0010 (0x0010 - 0x0000)
struct PsychicGrabAttachment_C_OnMetalStart final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7889[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnMetalStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnMetalStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnMetalStart) == 0x000010, "Wrong size on PsychicGrabAttachment_C_OnMetalStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnMetalStart, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnMetalStart::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnMetalStart, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnMetalStart::Param_Owner' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnFireEnd
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_OnFireEnd final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_788A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnFireEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnFireEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnFireEnd) == 0x000018, "Wrong size on PsychicGrabAttachment_C_OnFireEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnFireEnd, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnFireEnd::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnFireEnd, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnFireEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnFireEnd, RemainTime) == 0x000010, "Member 'PsychicGrabAttachment_C_OnFireEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnFireStart
// 0x0010 (0x0010 - 0x0000)
struct PsychicGrabAttachment_C_OnFireStart final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_788B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnFireStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnFireStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnFireStart) == 0x000010, "Wrong size on PsychicGrabAttachment_C_OnFireStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnFireStart, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnFireStart::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnFireStart, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnFireStart::Param_Owner' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnElectricEnd
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_OnElectricEnd final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_788C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnElectricEnd) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnElectricEnd");
static_assert(sizeof(PsychicGrabAttachment_C_OnElectricEnd) == 0x000018, "Wrong size on PsychicGrabAttachment_C_OnElectricEnd");
static_assert(offsetof(PsychicGrabAttachment_C_OnElectricEnd, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnElectricEnd::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnElectricEnd, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnElectricEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnElectricEnd, RemainTime) == 0x000010, "Member 'PsychicGrabAttachment_C_OnElectricEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.OnElectricStart
// 0x0010 (0x0010 - 0x0000)
struct PsychicGrabAttachment_C_OnElectricStart final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_788D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_OnElectricStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_OnElectricStart");
static_assert(sizeof(PsychicGrabAttachment_C_OnElectricStart) == 0x000010, "Wrong size on PsychicGrabAttachment_C_OnElectricStart");
static_assert(offsetof(PsychicGrabAttachment_C_OnElectricStart, Param) == 0x000000, "Member 'PsychicGrabAttachment_C_OnElectricStart::Param' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_OnElectricStart, Param_Owner) == 0x000008, "Member 'PsychicGrabAttachment_C_OnElectricStart::Param_Owner' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.Initialize
// 0x0158 (0x0158 - 0x0000)
struct PsychicGrabAttachment_C_Initialize final
{
public:
	class ARsBattleHero_C*                        Grab_owner;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Reload_time;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGrabPos_grab_pos;                      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_788E[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicGrabPosData                    CallFunc_GetGrabPosData_grab_pos_data;             // 0x00CC(0x003C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_788F[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_Initialize) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_Initialize");
static_assert(sizeof(PsychicGrabAttachment_C_Initialize) == 0x000158, "Wrong size on PsychicGrabAttachment_C_Initialize");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, Grab_owner) == 0x000000, "Member 'PsychicGrabAttachment_C_Initialize::Grab_owner' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, Param_Index) == 0x000008, "Member 'PsychicGrabAttachment_C_Initialize::Param_Index' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, Reload_time) == 0x00000C, "Member 'PsychicGrabAttachment_C_Initialize::Reload_time' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_GetGrabPos_grab_pos) == 0x000010, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_GetGrabPos_grab_pos' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x00001C, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000A4, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_MakeRotator_ReturnValue) == 0x0000B4, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x0000C0, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000C8, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_GetGrabPosData_grab_pos_data) == 0x0000CC, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_GetGrabPosData_grab_pos_data' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_Array_Add_ReturnValue_1) == 0x00010C, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_Array_Add_ReturnValue_2) == 0x000110, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_Array_Add_ReturnValue_3) == 0x000114, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_Array_Add_ReturnValue_4) == 0x000118, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000120, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000128, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_BreakRotator_Roll) == 0x000134, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_BreakRotator_Pitch) == 0x000138, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_BreakRotator_Yaw) == 0x00013C, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_MakeRotator_ReturnValue_1) == 0x000140, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Initialize, CallFunc_ComposeRotators_ReturnValue) == 0x00014C, "Member 'PsychicGrabAttachment_C_Initialize::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.Update
// 0x0028 (0x0028 - 0x0000)
struct PsychicGrabAttachment_C_Update final
{
public:
	class FString                                 L_str;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ARSParallelObjectManager*               CallFunc_GetParallelObjectManager_NewParam;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterObject_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7890[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetGrabPos_grab_pos;                      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_Update) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_Update");
static_assert(sizeof(PsychicGrabAttachment_C_Update) == 0x000028, "Wrong size on PsychicGrabAttachment_C_Update");
static_assert(offsetof(PsychicGrabAttachment_C_Update, L_str) == 0x000000, "Member 'PsychicGrabAttachment_C_Update::L_str' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Update, CallFunc_GetParallelObjectManager_NewParam) == 0x000010, "Member 'PsychicGrabAttachment_C_Update::CallFunc_GetParallelObjectManager_NewParam' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Update, CallFunc_RegisterObject_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_Update::CallFunc_RegisterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Update, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'PsychicGrabAttachment_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_Update, CallFunc_GetGrabPos_grab_pos) == 0x00001C, "Member 'PsychicGrabAttachment_C_Update::CallFunc_GetGrabPos_grab_pos' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.UpdatePosRot
// 0x0348 (0x0348 - 0x0000)
struct PsychicGrabAttachment_C_UpdatePosRot final
{
public:
	struct FVector                                DstPos;                                            // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AxisSlope;                                         // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VecFront;                                          // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VecMove;                                           // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotTarget;                                         // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                PosTarget;                                         // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0150(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7891[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_1;              // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcMoveVector_move_vector;               // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcMoveVector_bBounce;                   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcMoveVector_bFinish;                   // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7892[0x2];                                     // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0268(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7893[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdatePosRot) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_UpdatePosRot");
static_assert(sizeof(PsychicGrabAttachment_C_UpdatePosRot) == 0x000348, "Wrong size on PsychicGrabAttachment_C_UpdatePosRot");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, DstPos) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdatePosRot::DstPos' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, AxisSlope) == 0x00000C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::AxisSlope' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, VecFront) == 0x000018, "Member 'PsychicGrabAttachment_C_UpdatePosRot::VecFront' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, VecMove) == 0x000024, "Member 'PsychicGrabAttachment_C_UpdatePosRot::VecMove' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, RotTarget) == 0x000030, "Member 'PsychicGrabAttachment_C_UpdatePosRot::RotTarget' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, PosTarget) == 0x00003C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::PosTarget' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_X) == 0x000058, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Y) == 0x00005C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Z) == 0x000060, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_X_1) == 0x000064, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Y_1) == 0x000068, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Z_1) == 0x00006C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_X_2) == 0x000070, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Y_2) == 0x000074, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Z_2) == 0x000078, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000080, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_MakeVector_ReturnValue) == 0x000084, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_X_3) == 0x000090, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Y_3) == 0x000094, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Z_3) == 0x000098, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x00009C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_ComposeRotators_ReturnValue) == 0x0000A8, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_SelectRotator_ReturnValue) == 0x0000B4, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_MakeVector_ReturnValue_1) == 0x0000C0, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000CC, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_X_4) == 0x0000D8, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Y_4) == 0x0000DC, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Z_4) == 0x0000E0, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_MakeVector_ReturnValue_2) == 0x0000E4, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000F0, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_MakeRotator_ReturnValue) == 0x0000FC, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_RLerp_ReturnValue) == 0x000108, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000114, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000120, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Add_VectorVector_ReturnValue) == 0x00012C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_X_5) == 0x000138, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Y_5) == 0x00013C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Z_5) == 0x000140, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000144, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000148, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00014C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000150, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0001D8, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0001DC, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_GetSocketRotation_ReturnValue) == 0x0001E8, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_NegateRotator_ReturnValue) == 0x0001F4, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_ComposeRotators_ReturnValue_1) == 0x000200, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_NegateRotator_ReturnValue_1) == 0x00020C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_NegateRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakRotator_Roll) == 0x000218, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakRotator_Pitch) == 0x00021C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakRotator_Yaw) == 0x000220, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_CalcMoveVector_move_vector) == 0x000224, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_CalcMoveVector_move_vector' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_CalcMoveVector_bBounce) == 0x000230, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_CalcMoveVector_bBounce' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_CalcMoveVector_bFinish) == 0x000231, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_CalcMoveVector_bFinish' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000234, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000238, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00023C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000240, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_X_6) == 0x000244, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Y_6) == 0x000248, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakVector_Z_6) == 0x00024C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000250, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000254, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_MakeRotator_ReturnValue_1) == 0x000258, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x000264, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000268, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_MakeVector_ReturnValue_3) == 0x0002F0, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000300, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_VSize_ReturnValue) == 0x000308, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x00030C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_FMin_ReturnValue) == 0x000318, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakRotator_Roll_1) == 0x00031C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakRotator_Pitch_1) == 0x000320, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_BreakRotator_Yaw_1) == 0x000324, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000328, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_MakeRotator_ReturnValue_2) == 0x00032C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_GetFloatValue_ReturnValue) == 0x000338, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRot, CallFunc_ComposeRotators_ReturnValue_2) == 0x00033C, "Member 'PsychicGrabAttachment_C_UpdatePosRot::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetAttach
// 0x0038 (0x0038 - 0x0000)
struct PsychicGrabAttachment_C_SetAttach final
{
public:
	bool                                          Param_bAttach;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7894[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Play_rate;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos_rate;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rot_rate;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               Psychic_object_in;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNewAttach_return;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewAttach_return_1;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7895[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_SetAttach) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_SetAttach");
static_assert(sizeof(PsychicGrabAttachment_C_SetAttach) == 0x000038, "Wrong size on PsychicGrabAttachment_C_SetAttach");
static_assert(offsetof(PsychicGrabAttachment_C_SetAttach, Param_bAttach) == 0x000000, "Member 'PsychicGrabAttachment_C_SetAttach::Param_bAttach' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetAttach, Play_rate) == 0x000004, "Member 'PsychicGrabAttachment_C_SetAttach::Play_rate' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetAttach, Pos_rate) == 0x000008, "Member 'PsychicGrabAttachment_C_SetAttach::Pos_rate' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetAttach, Rot_rate) == 0x000014, "Member 'PsychicGrabAttachment_C_SetAttach::Rot_rate' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetAttach, Psychic_object_in) == 0x000020, "Member 'PsychicGrabAttachment_C_SetAttach::Psychic_object_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetAttach, CallFunc_IsNewAttach_return) == 0x000028, "Member 'PsychicGrabAttachment_C_SetAttach::CallFunc_IsNewAttach_return' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetAttach, CallFunc_IsNewAttach_return_1) == 0x000029, "Member 'PsychicGrabAttachment_C_SetAttach::CallFunc_IsNewAttach_return_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetAttach, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'PsychicGrabAttachment_C_SetAttach::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetMove
// 0x0030 (0x0030 - 0x0000)
struct PsychicGrabAttachment_C_SetMove final
{
public:
	bool                                          Param_bMove;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnim;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7896[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7897[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_SetMove) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_SetMove");
static_assert(sizeof(PsychicGrabAttachment_C_SetMove) == 0x000030, "Wrong size on PsychicGrabAttachment_C_SetMove");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, Param_bMove) == 0x000000, "Member 'PsychicGrabAttachment_C_SetMove::Param_bMove' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, bAnim) == 0x000001, "Member 'PsychicGrabAttachment_C_SetMove::bAnim' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, Temp_object_Variable) == 0x000008, "Member 'PsychicGrabAttachment_C_SetMove::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, Temp_object_Variable_1) == 0x000010, "Member 'PsychicGrabAttachment_C_SetMove::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_SetMove::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'PsychicGrabAttachment_C_SetMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, Temp_bool_Variable) == 0x00001D, "Member 'PsychicGrabAttachment_C_SetMove::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, K2Node_Select_Default) == 0x000020, "Member 'PsychicGrabAttachment_C_SetMove::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'PsychicGrabAttachment_C_SetMove::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetMove, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'PsychicGrabAttachment_C_SetMove::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetObjSize
// 0x0014 (0x0014 - 0x0000)
struct PsychicGrabAttachment_C_SetObjSize final
{
public:
	EPsychicObjectSizeType                        Obj_size;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7898[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7899[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_SetObjSize) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_SetObjSize");
static_assert(sizeof(PsychicGrabAttachment_C_SetObjSize) == 0x000014, "Wrong size on PsychicGrabAttachment_C_SetObjSize");
static_assert(offsetof(PsychicGrabAttachment_C_SetObjSize, Obj_size) == 0x000000, "Member 'PsychicGrabAttachment_C_SetObjSize::Obj_size' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetObjSize, L_index) == 0x000004, "Member 'PsychicGrabAttachment_C_SetObjSize::L_index' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetObjSize, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'PsychicGrabAttachment_C_SetObjSize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetObjSize, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'PsychicGrabAttachment_C_SetObjSize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetObjSize, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_SetObjSize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.ResetPos
// 0x00D0 (0x00D0 - 0x0000)
struct PsychicGrabAttachment_C_ResetPos final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789A[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_ResetPos) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_ResetPos");
static_assert(sizeof(PsychicGrabAttachment_C_ResetPos) == 0x0000D0, "Wrong size on PsychicGrabAttachment_C_ResetPos");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x00000C, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000094, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000098, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000A0, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_BreakRotator_Roll) == 0x0000AC, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_BreakRotator_Pitch) == 0x0000B0, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_BreakRotator_Yaw) == 0x0000B4, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_MakeRotator_ReturnValue_1) == 0x0000B8, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetPos, CallFunc_ComposeRotators_ReturnValue) == 0x0000C4, "Member 'PsychicGrabAttachment_C_ResetPos::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.AdjustPsyObjPos
// 0x00FC (0x00FC - 0x0000)
struct PsychicGrabAttachment_C_AdjustPsyObjPos final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789B[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorToCentre_vector;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_1;              // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_AdjustPsyObjPos) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_AdjustPsyObjPos");
static_assert(sizeof(PsychicGrabAttachment_C_AdjustPsyObjPos) == 0x0000FC, "Wrong size on PsychicGrabAttachment_C_AdjustPsyObjPos");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_NegateRotator_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_ComposeRotators_ReturnValue) == 0x000024, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_GetSocketLocation_ReturnValue) == 0x000034, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_GetVectorToCentre_vector) == 0x000040, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_GetVectorToCentre_vector' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_NegateRotator_ReturnValue_1) == 0x00004C, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_NegateRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_ComposeRotators_ReturnValue_1) == 0x000064, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000070, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_AdjustPsyObjPos, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000F8, "Member 'PsychicGrabAttachment_C_AdjustPsyObjPos::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetAdjustPos
// 0x0001 (0x0001 - 0x0000)
struct PsychicGrabAttachment_C_SetAdjustPos final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_SetAdjustPos) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_SetAdjustPos");
static_assert(sizeof(PsychicGrabAttachment_C_SetAdjustPos) == 0x000001, "Wrong size on PsychicGrabAttachment_C_SetAdjustPos");
static_assert(offsetof(PsychicGrabAttachment_C_SetAdjustPos, Flag) == 0x000000, "Member 'PsychicGrabAttachment_C_SetAdjustPos::Flag' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetEffectTrail
// 0x0020 (0x0020 - 0x0000)
struct PsychicGrabAttachment_C_SetEffectTrail final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Effect_trail_in;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789D[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_SetEffectTrail) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_SetEffectTrail");
static_assert(sizeof(PsychicGrabAttachment_C_SetEffectTrail) == 0x000020, "Wrong size on PsychicGrabAttachment_C_SetEffectTrail");
static_assert(offsetof(PsychicGrabAttachment_C_SetEffectTrail, Flag) == 0x000000, "Member 'PsychicGrabAttachment_C_SetEffectTrail::Flag' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetEffectTrail, Effect_trail_in) == 0x000008, "Member 'PsychicGrabAttachment_C_SetEffectTrail::Effect_trail_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetEffectTrail, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_SetEffectTrail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetEffectTrail, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'PsychicGrabAttachment_C_SetEffectTrail::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetEffectTrail, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_SetEffectTrail::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.GetGrabPos
// 0x0068 (0x0068 - 0x0000)
struct PsychicGrabAttachment_C_GetGrabPos final
{
public:
	struct FVector                                Grab_pos;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_GetGrabPos) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_GetGrabPos");
static_assert(sizeof(PsychicGrabAttachment_C_GetGrabPos) == 0x000068, "Wrong size on PsychicGrabAttachment_C_GetGrabPos");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, Grab_pos) == 0x000000, "Member 'PsychicGrabAttachment_C_GetGrabPos::Grab_pos' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_FMax_ReturnValue) == 0x00003C, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00004C, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'PsychicGrabAttachment_C_GetGrabPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.GetGrabFloatSpeed
// 0x0008 (0x0008 - 0x0000)
struct PsychicGrabAttachment_C_GetGrabFloatSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_GetGrabFloatSpeed) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_GetGrabFloatSpeed");
static_assert(sizeof(PsychicGrabAttachment_C_GetGrabFloatSpeed) == 0x000008, "Wrong size on PsychicGrabAttachment_C_GetGrabFloatSpeed");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabFloatSpeed, Speed) == 0x000000, "Member 'PsychicGrabAttachment_C_GetGrabFloatSpeed::Speed' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabFloatSpeed, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'PsychicGrabAttachment_C_GetGrabFloatSpeed::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.GetGrabFloatHeight
// 0x0008 (0x0008 - 0x0000)
struct PsychicGrabAttachment_C_GetGrabFloatHeight final
{
public:
	float                                         Height;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_GetGrabFloatHeight) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_GetGrabFloatHeight");
static_assert(sizeof(PsychicGrabAttachment_C_GetGrabFloatHeight) == 0x000008, "Wrong size on PsychicGrabAttachment_C_GetGrabFloatHeight");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabFloatHeight, Height) == 0x000000, "Member 'PsychicGrabAttachment_C_GetGrabFloatHeight::Height' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabFloatHeight, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'PsychicGrabAttachment_C_GetGrabFloatHeight::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetRandomParam
// 0x0008 (0x0008 - 0x0000)
struct PsychicGrabAttachment_C_SetRandomParam final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_SetRandomParam) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_SetRandomParam");
static_assert(sizeof(PsychicGrabAttachment_C_SetRandomParam) == 0x000008, "Wrong size on PsychicGrabAttachment_C_SetRandomParam");
static_assert(offsetof(PsychicGrabAttachment_C_SetRandomParam, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_SetRandomParam::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetRandomParam, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000004, "Member 'PsychicGrabAttachment_C_SetRandomParam::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.updatePosRotRise
// 0x00C0 (0x00C0 - 0x0000)
struct PsychicGrabAttachment_C_UpdatePosRotRise final
{
public:
	float                                         NewLocalVar_0;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              L_vecPrev;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789F[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A0[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A1[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDodgeDistance_return;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A2[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A3[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGrabFloatHeight_height;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A4[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdatePosRotRise) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_UpdatePosRotRise");
static_assert(sizeof(PsychicGrabAttachment_C_UpdatePosRotRise) == 0x0000C0, "Wrong size on PsychicGrabAttachment_C_UpdatePosRotRise");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, NewLocalVar_0) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, L_vecPrev) == 0x000004, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::L_vecPrev' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000D, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000015, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Less_IntInt_ReturnValue) == 0x000016, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_GetTimeRange_MinTime) == 0x000030, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_GetTimeRange_MaxTime) == 0x000034, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_FMax_ReturnValue_1) == 0x000038, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_GetTimeRange_MinTime_1) == 0x00004C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_GetTimeRange_MaxTime_1) == 0x000050, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_FMin_ReturnValue) == 0x000054, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_BreakVector_X) == 0x000064, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_BreakVector_Y) == 0x000068, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_BreakVector_Z) == 0x00006C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_MakeVector2D_ReturnValue) == 0x000074, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_RandomFloatInRange_ReturnValue) == 0x00007C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000080, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_CheckDodgeDistance_return) == 0x000081, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_CheckDodgeDistance_return' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000084, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000088, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_GetGrabFloatHeight_height) == 0x00008C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_GetGrabFloatHeight_height' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_GetFloatValue_ReturnValue_1) == 0x000090, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000094, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000098, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00009C, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000A0, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000A4, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_FMax_ReturnValue_2) == 0x0000A8, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000AC, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_FMin_ReturnValue_1) == 0x0000B0, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_VSize2D_ReturnValue) == 0x0000B4, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B8, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdatePosRotRise, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0000BC, "Member 'PsychicGrabAttachment_C_UpdatePosRotRise::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.InitBrainSwing
// 0x0094 (0x0094 - 0x0000)
struct PsychicGrabAttachment_C_InitBrainSwing final
{
public:
	struct FRotator                               CallFunc_GetRelativeRot_relative_rot;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PsychicGrabAttachment_C_InitBrainSwing) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_InitBrainSwing");
static_assert(sizeof(PsychicGrabAttachment_C_InitBrainSwing) == 0x000094, "Wrong size on PsychicGrabAttachment_C_InitBrainSwing");
static_assert(offsetof(PsychicGrabAttachment_C_InitBrainSwing, CallFunc_GetRelativeRot_relative_rot) == 0x000000, "Member 'PsychicGrabAttachment_C_InitBrainSwing::CallFunc_GetRelativeRot_relative_rot' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_InitBrainSwing, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00000C, "Member 'PsychicGrabAttachment_C_InitBrainSwing::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.UpdateAttachPos
// 0x00E0 (0x00E0 - 0x0000)
struct PsychicGrabAttachment_C_UpdateAttachPos final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGrabPos_grab_pos;                      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdateAttachPos) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_UpdateAttachPos");
static_assert(sizeof(PsychicGrabAttachment_C_UpdateAttachPos) == 0x0000E0, "Wrong size on PsychicGrabAttachment_C_UpdateAttachPos");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_GetGrabPos_grab_pos) == 0x000018, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_GetGrabPos_grab_pos' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_MakeRotator_ReturnValue_1) == 0x00003C, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_ComposeRotators_ReturnValue) == 0x000048, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000054, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateAttachPos, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000DC, "Member 'PsychicGrabAttachment_C_UpdateAttachPos::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetTickEnable
// 0x0002 (0x0002 - 0x0000)
struct PsychicGrabAttachment_C_SetTickEnable final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Actor_only;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_SetTickEnable) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_SetTickEnable");
static_assert(sizeof(PsychicGrabAttachment_C_SetTickEnable) == 0x000002, "Wrong size on PsychicGrabAttachment_C_SetTickEnable");
static_assert(offsetof(PsychicGrabAttachment_C_SetTickEnable, Flag_in) == 0x000000, "Member 'PsychicGrabAttachment_C_SetTickEnable::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetTickEnable, Actor_only) == 0x000001, "Member 'PsychicGrabAttachment_C_SetTickEnable::Actor_only' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.CheckDodgeDistance
// 0x0028 (0x0028 - 0x0000)
struct PsychicGrabAttachment_C_CheckDodgeDistance final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   L_enemy;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         L_EnemyList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         L_dodgeRadius;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bDodge;                                          // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_CheckDodgeDistance) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_CheckDodgeDistance");
static_assert(sizeof(PsychicGrabAttachment_C_CheckDodgeDistance) == 0x000028, "Wrong size on PsychicGrabAttachment_C_CheckDodgeDistance");
static_assert(offsetof(PsychicGrabAttachment_C_CheckDodgeDistance, Return) == 0x000000, "Member 'PsychicGrabAttachment_C_CheckDodgeDistance::Return' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CheckDodgeDistance, L_enemy) == 0x000008, "Member 'PsychicGrabAttachment_C_CheckDodgeDistance::L_enemy' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CheckDodgeDistance, L_EnemyList) == 0x000010, "Member 'PsychicGrabAttachment_C_CheckDodgeDistance::L_EnemyList' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CheckDodgeDistance, L_dodgeRadius) == 0x000020, "Member 'PsychicGrabAttachment_C_CheckDodgeDistance::L_dodgeRadius' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CheckDodgeDistance, L_bDodge) == 0x000024, "Member 'PsychicGrabAttachment_C_CheckDodgeDistance::L_bDodge' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.ResetAttachPos
// 0x00C8 (0x00C8 - 0x0000)
struct PsychicGrabAttachment_C_ResetAttachPos final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_ResetAttachPos) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_ResetAttachPos");
static_assert(sizeof(PsychicGrabAttachment_C_ResetAttachPos) == 0x0000C8, "Wrong size on PsychicGrabAttachment_C_ResetAttachPos");
static_assert(offsetof(PsychicGrabAttachment_C_ResetAttachPos, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_ResetAttachPos::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetAttachPos, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00000C, "Member 'PsychicGrabAttachment_C_ResetAttachPos::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetAttachPos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_ResetAttachPos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetAttachPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'PsychicGrabAttachment_C_ResetAttachPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetAttachPos, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000030, "Member 'PsychicGrabAttachment_C_ResetAttachPos::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetAttachPos, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x00003C, "Member 'PsychicGrabAttachment_C_ResetAttachPos::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_ResetAttachPos, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000C4, "Member 'PsychicGrabAttachment_C_ResetAttachPos::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.GetBaseRot
// 0x000C (0x000C - 0x0000)
struct PsychicGrabAttachment_C_GetBaseRot final
{
public:
	struct FRotator                               base_rot;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_GetBaseRot) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_GetBaseRot");
static_assert(sizeof(PsychicGrabAttachment_C_GetBaseRot) == 0x00000C, "Wrong size on PsychicGrabAttachment_C_GetBaseRot");
static_assert(offsetof(PsychicGrabAttachment_C_GetBaseRot, base_rot) == 0x000000, "Member 'PsychicGrabAttachment_C_GetBaseRot::base_rot' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.GetTargetRot
// 0x0030 (0x0030 - 0x0000)
struct PsychicGrabAttachment_C_GetTargetRot final
{
public:
	struct FRotator                               Target_rot;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetBaseRot_base_rot;                      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCameraRotation_cam_rot_out;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_GetTargetRot) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_GetTargetRot");
static_assert(sizeof(PsychicGrabAttachment_C_GetTargetRot) == 0x000030, "Wrong size on PsychicGrabAttachment_C_GetTargetRot");
static_assert(offsetof(PsychicGrabAttachment_C_GetTargetRot, Target_rot) == 0x000000, "Member 'PsychicGrabAttachment_C_GetTargetRot::Target_rot' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetTargetRot, CallFunc_GetBaseRot_base_rot) == 0x00000C, "Member 'PsychicGrabAttachment_C_GetTargetRot::CallFunc_GetBaseRot_base_rot' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetTargetRot, CallFunc_GetCameraRotation_cam_rot_out) == 0x000018, "Member 'PsychicGrabAttachment_C_GetTargetRot::CallFunc_GetCameraRotation_cam_rot_out' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetTargetRot, CallFunc_ComposeRotators_ReturnValue) == 0x000024, "Member 'PsychicGrabAttachment_C_GetTargetRot::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.GetRelativeRot
// 0x000C (0x000C - 0x0000)
struct PsychicGrabAttachment_C_GetRelativeRot final
{
public:
	struct FRotator                               Relative_rot;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_GetRelativeRot) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_GetRelativeRot");
static_assert(sizeof(PsychicGrabAttachment_C_GetRelativeRot) == 0x00000C, "Wrong size on PsychicGrabAttachment_C_GetRelativeRot");
static_assert(offsetof(PsychicGrabAttachment_C_GetRelativeRot, Relative_rot) == 0x000000, "Member 'PsychicGrabAttachment_C_GetRelativeRot::Relative_rot' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetGrabGauge
// 0x000C (0x000C - 0x0000)
struct PsychicGrabAttachment_C_SetGrabGauge final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Gauge_time_in;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_SetGrabGauge) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_SetGrabGauge");
static_assert(sizeof(PsychicGrabAttachment_C_SetGrabGauge) == 0x00000C, "Wrong size on PsychicGrabAttachment_C_SetGrabGauge");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabGauge, Flag_in) == 0x000000, "Member 'PsychicGrabAttachment_C_SetGrabGauge::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabGauge, Gauge_time_in) == 0x000004, "Member 'PsychicGrabAttachment_C_SetGrabGauge::Gauge_time_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabGauge, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000008, "Member 'PsychicGrabAttachment_C_SetGrabGauge::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.UpdateGrabGauge
// 0x0001 (0x0001 - 0x0000)
struct PsychicGrabAttachment_C_UpdateGrabGauge final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdateGrabGauge) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_UpdateGrabGauge");
static_assert(sizeof(PsychicGrabAttachment_C_UpdateGrabGauge) == 0x000001, "Wrong size on PsychicGrabAttachment_C_UpdateGrabGauge");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabGauge, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdateGrabGauge::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetGrabStart
// 0x0190 (0x0190 - 0x0000)
struct PsychicGrabAttachment_C_SetGrabStart final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_rate_in;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Move_rate_in;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate_rate_in;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lift_up_delay_in;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rotObj;                                          // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_vecPlayerFront;                                  // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_vecPsyObj;                                       // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A9[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78AA[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78AB[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78AC[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78AD[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78AE[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_SetGrabStart) == 0x000010, "Wrong alignment on PsychicGrabAttachment_C_SetGrabStart");
static_assert(sizeof(PsychicGrabAttachment_C_SetGrabStart) == 0x000190, "Wrong size on PsychicGrabAttachment_C_SetGrabStart");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, Flag_in) == 0x000000, "Member 'PsychicGrabAttachment_C_SetGrabStart::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, Time_rate_in) == 0x000004, "Member 'PsychicGrabAttachment_C_SetGrabStart::Time_rate_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, Move_rate_in) == 0x000008, "Member 'PsychicGrabAttachment_C_SetGrabStart::Move_rate_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, Rotate_rate_in) == 0x00000C, "Member 'PsychicGrabAttachment_C_SetGrabStart::Rotate_rate_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, Lift_up_delay_in) == 0x000010, "Member 'PsychicGrabAttachment_C_SetGrabStart::Lift_up_delay_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, L_rotObj) == 0x000014, "Member 'PsychicGrabAttachment_C_SetGrabStart::L_rotObj' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, L_vecPlayerFront) == 0x000020, "Member 'PsychicGrabAttachment_C_SetGrabStart::L_vecPlayerFront' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, L_vecPsyObj) == 0x00002C, "Member 'PsychicGrabAttachment_C_SetGrabStart::L_vecPsyObj' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, Temp_bool_Variable) == 0x000038, "Member 'PsychicGrabAttachment_C_SetGrabStart::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000054, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000060, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_Cross_VectorVector_ReturnValue) == 0x00006C, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_X) == 0x000078, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_Y) == 0x00007C, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_Z) == 0x000080, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_MakeVector_ReturnValue_1) == 0x000084, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_Less_FloatFloat_ReturnValue) == 0x000090, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000094, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_X_1) == 0x0000A4, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_Z_1) == 0x0000AC, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0000B4, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_X_2) == 0x0000F0, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_Y_2) == 0x0000F4, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_Z_2) == 0x0000F8, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakTransform_Location) == 0x0000FC, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakTransform_Scale) == 0x000114, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000120, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakRotator_Roll) == 0x000124, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakRotator_Pitch) == 0x000128, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakRotator_Yaw) == 0x00012C, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, K2Node_Select_Default) == 0x000130, "Member 'PsychicGrabAttachment_C_SetGrabStart::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_MakeRotator_ReturnValue) == 0x000134, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_SelectFloat_ReturnValue) == 0x000140, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000144, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_X_3) == 0x000150, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_Y_3) == 0x000154, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_BreakVector_Z_3) == 0x000158, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_MakeVector_ReturnValue_2) == 0x00015C, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_MakeVector_ReturnValue_3) == 0x000168, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000174, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_Normal_ReturnValue) == 0x000180, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabStart, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00018C, "Member 'PsychicGrabAttachment_C_SetGrabStart::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.UpdateGrabStart
// 0x0050 (0x0050 - 0x0000)
struct PsychicGrabAttachment_C_UpdateGrabStart final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78AF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B0[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B1[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdateGrabStart) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_UpdateGrabStart");
static_assert(sizeof(PsychicGrabAttachment_C_UpdateGrabStart) == 0x000050, "Wrong size on PsychicGrabAttachment_C_UpdateGrabStart");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_FMin_ReturnValue) == 0x00000C, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000018, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000020, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_MakeRotator_ReturnValue) == 0x000024, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_FMin_ReturnValue_1) == 0x000030, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_GetFloatValue_ReturnValue_1) == 0x000034, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000038, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00003C, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000040, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabStart, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'PsychicGrabAttachment_C_UpdateGrabStart::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetGrabLiftup
// 0x0038 (0x0038 - 0x0000)
struct PsychicGrabAttachment_C_SetGrabLiftup final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lift_up_time_in;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lift_up_height_in;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Lift_up_curve_in;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B4[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_SetGrabLiftup) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_SetGrabLiftup");
static_assert(sizeof(PsychicGrabAttachment_C_SetGrabLiftup) == 0x000038, "Wrong size on PsychicGrabAttachment_C_SetGrabLiftup");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, Flag_in) == 0x000000, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, Lift_up_time_in) == 0x000004, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::Lift_up_time_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, Lift_up_height_in) == 0x000008, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::Lift_up_height_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, Lift_up_curve_in) == 0x000010, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::Lift_up_curve_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, CallFunc_BreakVector_X) == 0x000028, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, CallFunc_BreakVector_Y) == 0x00002C, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabLiftup, CallFunc_BreakVector_Z) == 0x000030, "Member 'PsychicGrabAttachment_C_SetGrabLiftup::CallFunc_BreakVector_Z' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.UpdateGrabLiftup
// 0x0054 (0x0054 - 0x0000)
struct PsychicGrabAttachment_C_UpdateGrabLiftup final
{
public:
	float                                         L_TargetHeight;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B5[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdateGrabLiftup) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_UpdateGrabLiftup");
static_assert(sizeof(PsychicGrabAttachment_C_UpdateGrabLiftup) == 0x000054, "Wrong size on PsychicGrabAttachment_C_UpdateGrabLiftup");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, L_TargetHeight) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::L_TargetHeight' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, L_rate) == 0x000004, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::L_rate' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_BreakVector_X) == 0x000014, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_BreakVector_Y) == 0x000018, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_BreakVector_Z) == 0x00001C, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_BreakVector_X_1) == 0x000020, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_BreakVector_Y_1) == 0x000024, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_BreakVector_Z_1) == 0x000028, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_IsOver_ReturnValue) == 0x00003C, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_GetRate_ReturnValue) == 0x000040, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_GetFloatValue_ReturnValue) == 0x000044, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabLiftup, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'PsychicGrabAttachment_C_UpdateGrabLiftup::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetGrabMove
// 0x0080 (0x0080 - 0x0000)
struct PsychicGrabAttachment_C_SetGrabMove final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Force_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Reload_in;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_bBrainField;                                     // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B6[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B7[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGrabMoveTime_time;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_SetGrabMove) == 0x000010, "Wrong alignment on PsychicGrabAttachment_C_SetGrabMove");
static_assert(sizeof(PsychicGrabAttachment_C_SetGrabMove) == 0x000080, "Wrong size on PsychicGrabAttachment_C_SetGrabMove");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, Flag_in) == 0x000000, "Member 'PsychicGrabAttachment_C_SetGrabMove::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, Force_in) == 0x000001, "Member 'PsychicGrabAttachment_C_SetGrabMove::Force_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, Combo_in) == 0x000002, "Member 'PsychicGrabAttachment_C_SetGrabMove::Combo_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, Reload_in) == 0x000003, "Member 'PsychicGrabAttachment_C_SetGrabMove::Reload_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, L_bBrainField) == 0x000004, "Member 'PsychicGrabAttachment_C_SetGrabMove::L_bBrainField' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_SetGrabMove::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, CallFunc_BreakTransform_Location) == 0x000040, "Member 'PsychicGrabAttachment_C_SetGrabMove::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'PsychicGrabAttachment_C_SetGrabMove::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'PsychicGrabAttachment_C_SetGrabMove::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, CallFunc_GetBrainFieldManager_Manager) == 0x000068, "Member 'PsychicGrabAttachment_C_SetGrabMove::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, CallFunc_GetGrabMoveTime_time) == 0x000070, "Member 'PsychicGrabAttachment_C_SetGrabMove::CallFunc_GetGrabMoveTime_time' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, CallFunc_InBranField_InBrainDield) == 0x000074, "Member 'PsychicGrabAttachment_C_SetGrabMove::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabMove, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000075, "Member 'PsychicGrabAttachment_C_SetGrabMove::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.UpdateGrabMove
// 0x02C0 (0x02C0 - 0x0000)
struct PsychicGrabAttachment_C_UpdateGrabMove final
{
public:
	float                                         L_calcRate;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveSlopeMax;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveSlopeDistSq;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotFrontRate;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DstPos;                                            // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AxisSlope;                                         // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VecFront;                                          // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PosTarget;                                         // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_actorPos;                                        // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B8[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetTargetRot_target_rot;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetGrabPos_grab_pos;                      // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTargetRot_target_rot_1;                // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetTargetRot_target_rot_2;                // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetGrabPos_grab_pos_1;                    // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78B9[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78BA[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_3;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78BB[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue_4;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_2;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_2;    // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_2;         // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78BC[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78BD[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_Select_Default;                             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_5;              // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_3;                       // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdateGrabMove) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_UpdateGrabMove");
static_assert(sizeof(PsychicGrabAttachment_C_UpdateGrabMove) == 0x0002C0, "Wrong size on PsychicGrabAttachment_C_UpdateGrabMove");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, L_calcRate) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::L_calcRate' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, GrabMoveSlopeMax) == 0x000004, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::GrabMoveSlopeMax' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, GrabMoveSlopeDistSq) == 0x000008, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::GrabMoveSlopeDistSq' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, RotFrontRate) == 0x00000C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::RotFrontRate' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, DstPos) == 0x000010, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::DstPos' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, AxisSlope) == 0x00001C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::AxisSlope' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, VecFront) == 0x000028, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::VecFront' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, PosTarget) == 0x000034, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::PosTarget' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, L_actorPos) == 0x000040, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::L_actorPos' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00004D, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetTargetRot_target_rot) == 0x000050, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetTargetRot_target_rot' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetGrabPos_grab_pos) == 0x00005C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetGrabPos_grab_pos' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetTargetRot_target_rot_1) == 0x000068, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetTargetRot_target_rot_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetTargetRot_target_rot_2) == 0x000074, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetTargetRot_target_rot_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetGrabPos_grab_pos_1) == 0x000080, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetGrabPos_grab_pos_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, Temp_bool_Variable) == 0x000098, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_VSizeSquared_ReturnValue) == 0x00009C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A4, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A8, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_VSizeSquared_ReturnValue_1) == 0x0000AC, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_FClamp_ReturnValue_1) == 0x0000B0, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000BC, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000C0, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetFloatValue_ReturnValue) == 0x0000C4, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetFloatValue_ReturnValue_1) == 0x0000C8, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_SelectFloat_ReturnValue) == 0x0000CC, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0000D0, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x0000D1, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D4, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetFloatValue_ReturnValue_2) == 0x0000EC, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_VLerp_ReturnValue) == 0x0000F0, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetFloatValue_ReturnValue_3) == 0x0000FC, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetFloatValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000100, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetTimeRange_MinTime) == 0x00010C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetTimeRange_MaxTime) == 0x000110, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetTimeRange_MinTime_1) == 0x000114, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetTimeRange_MaxTime_1) == 0x000118, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x00011C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetFloatValue_ReturnValue_4) == 0x000120, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetFloatValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000124, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_MakeVector_ReturnValue) == 0x000130, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_ComposeRotators_ReturnValue) == 0x00013C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Cross_VectorVector_ReturnValue) == 0x000148, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Normal_ReturnValue) == 0x000154, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000160, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00016C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000178, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x000184, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_ComposeRotators_ReturnValue_1) == 0x000190, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_MakeVector_ReturnValue_1) == 0x00019C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0001A8, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_VSizeSquared_ReturnValue_2) == 0x0001B4, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_VSizeSquared_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Normal_ReturnValue_1) == 0x0001B8, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_FClamp_ReturnValue_2) == 0x0001C4, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0001C8, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0001CC, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_RotatorFromAxisAndAngle_ReturnValue_2) == 0x0001D0, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_RotatorFromAxisAndAngle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_ComposeRotators_ReturnValue_2) == 0x0001DC, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_MakeVector_ReturnValue_2) == 0x0001E8, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Cross_VectorVector_ReturnValue_2) == 0x0001F4, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Cross_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Normal_ReturnValue_2) == 0x000200, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x00020C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_RLerp_ReturnValue) == 0x000218, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000224, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_FMin_ReturnValue) == 0x000228, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x00022C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Add_FloatFloat_ReturnValue) == 0x000230, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_FMin_ReturnValue_1) == 0x000234, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000238, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00023C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_FMin_ReturnValue_2) == 0x000240, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000244, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000250, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x00025C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x000268, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x00026C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Less_FloatFloat_ReturnValue) == 0x000278, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, K2Node_Select_Default) == 0x000280, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000288, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_GetFloatValue_ReturnValue_5) == 0x00028C, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_GetFloatValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_FMin_ReturnValue_3) == 0x000290, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_FMin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000294, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_MakeVector_ReturnValue_3) == 0x000298, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002A4, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_VLerp_ReturnValue_1) == 0x0002B0, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabMove, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0002BC, "Member 'PsychicGrabAttachment_C_UpdateGrabMove::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.CanPsyAction
// 0x000B (0x000B - 0x0000)
struct PsychicGrabAttachment_C_CanPsyAction final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_CanPsyAction) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_CanPsyAction");
static_assert(sizeof(PsychicGrabAttachment_C_CanPsyAction) == 0x00000B, "Wrong size on PsychicGrabAttachment_C_CanPsyAction");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, Return) == 0x000000, "Member 'PsychicGrabAttachment_C_CanPsyAction::Return' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_BooleanOR_ReturnValue_1) == 0x000004, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_Not_PreBool_ReturnValue_2) == 0x000005, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_BooleanOR_ReturnValue_2) == 0x000006, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_Not_PreBool_ReturnValue_3) == 0x000007, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_BooleanAND_ReturnValue_1) == 0x000009, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_CanPsyAction, CallFunc_BooleanAND_ReturnValue_2) == 0x00000A, "Member 'PsychicGrabAttachment_C_CanPsyAction::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetGrabFloat
// 0x0002 (0x0002 - 0x0000)
struct PsychicGrabAttachment_C_SetGrabFloat final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_SetGrabFloat) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_SetGrabFloat");
static_assert(sizeof(PsychicGrabAttachment_C_SetGrabFloat) == 0x000002, "Wrong size on PsychicGrabAttachment_C_SetGrabFloat");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabFloat, Flag_in) == 0x000000, "Member 'PsychicGrabAttachment_C_SetGrabFloat::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetGrabFloat, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'PsychicGrabAttachment_C_SetGrabFloat::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.UpdateGrabFloat
// 0x01EC (0x01EC - 0x0000)
struct PsychicGrabAttachment_C_UpdateGrabFloat final
{
public:
	struct FVector                                L_axisSlope;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_vecFront;                                        // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_dstPos;                                          // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_vecMove;                                         // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rotTarget;                                       // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_posTarget;                                       // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTargetRot_target_rot;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcMoveVector_move_vector;               // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcMoveVector_bBounce;                   // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcMoveVector_bFinish;                   // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78BE[0x2];                                     // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_1;              // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdateGrabFloat) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_UpdateGrabFloat");
static_assert(sizeof(PsychicGrabAttachment_C_UpdateGrabFloat) == 0x0001EC, "Wrong size on PsychicGrabAttachment_C_UpdateGrabFloat");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, L_axisSlope) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::L_axisSlope' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, L_vecFront) == 0x00000C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::L_vecFront' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, L_dstPos) == 0x000018, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::L_dstPos' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, L_vecMove) == 0x000024, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::L_vecMove' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, L_rotTarget) == 0x000030, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::L_rotTarget' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, L_posTarget) == 0x00003C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::L_posTarget' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_FMax_ReturnValue) == 0x000054, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_X) == 0x000064, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Y) == 0x000068, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Z) == 0x00006C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_X_1) == 0x000070, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Y_1) == 0x000074, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_X_2) == 0x00007C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Y_2) == 0x000080, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Z_2) == 0x000084, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_X_3) == 0x000088, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Y_3) == 0x00008C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Z_3) == 0x000090, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000098, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_MakeVector_ReturnValue) == 0x00009C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_X_4) == 0x0000A8, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Y_4) == 0x0000AC, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Z_4) == 0x0000B0, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0000B8, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000C4, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_MakeVector_ReturnValue_1) == 0x0000C8, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_ComposeRotators_ReturnValue) == 0x0000D4, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_VSize_ReturnValue) == 0x0000E0, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_FMin_ReturnValue) == 0x0000E4, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E8, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_SelectRotator_ReturnValue) == 0x0000EC, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_GetFloatValue_ReturnValue) == 0x0000F8, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Add_VectorVector_ReturnValue) == 0x0000FC, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_MakeVector_ReturnValue_2) == 0x000108, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Cross_VectorVector_ReturnValue) == 0x000114, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_X_5) == 0x000120, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Y_5) == 0x000124, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Z_5) == 0x000128, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_MakeVector_ReturnValue_3) == 0x00012C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000138, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_GetTargetRot_target_rot) == 0x000144, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_GetTargetRot_target_rot' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_X_6) == 0x000150, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Y_6) == 0x000154, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakVector_Z_6) == 0x000158, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00015C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000160, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000164, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000168, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_GetSocketRotation_ReturnValue) == 0x000174, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_NegateRotator_ReturnValue) == 0x000180, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_ComposeRotators_ReturnValue_1) == 0x00018C, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_CalcMoveVector_move_vector) == 0x000198, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_CalcMoveVector_move_vector' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_CalcMoveVector_bBounce) == 0x0001A4, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_CalcMoveVector_bBounce' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_CalcMoveVector_bFinish) == 0x0001A5, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_CalcMoveVector_bFinish' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_NegateRotator_ReturnValue_1) == 0x0001A8, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_NegateRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakRotator_Roll) == 0x0001B4, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakRotator_Pitch) == 0x0001B8, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_BreakRotator_Yaw) == 0x0001BC, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001C0, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_RLerp_ReturnValue) == 0x0001C4, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001D0, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001D4, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001D8, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x0001DC, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateGrabFloat, CallFunc_MakeRotator_ReturnValue) == 0x0001E0, "Member 'PsychicGrabAttachment_C_UpdateGrabFloat::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.UpdateParallel
// 0x0018 (0x0018 - 0x0000)
struct PsychicGrabAttachment_C_UpdateParallel final
{
public:
	int32                                         L_index;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78BF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_UpdateParallel) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_UpdateParallel");
static_assert(sizeof(PsychicGrabAttachment_C_UpdateParallel) == 0x000018, "Wrong size on PsychicGrabAttachment_C_UpdateParallel");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateParallel, L_index) == 0x000000, "Member 'PsychicGrabAttachment_C_UpdateParallel::L_index' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateParallel, L_psyObj) == 0x000008, "Member 'PsychicGrabAttachment_C_UpdateParallel::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateParallel, L_rate) == 0x000010, "Member 'PsychicGrabAttachment_C_UpdateParallel::L_rate' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_UpdateParallel, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'PsychicGrabAttachment_C_UpdateParallel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetPostParallel
// 0x02A0 (0x02A0 - 0x0000)
struct PsychicGrabAttachment_C_SetPostParallel final
{
public:
	bool                                          CallFunc_IsNewAttach_return;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0004(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C1[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C2[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C3[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2; // 0x018C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2; // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C4[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0218(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PsychicGrabAttachment_C_SetPostParallel) == 0x000010, "Wrong alignment on PsychicGrabAttachment_C_SetPostParallel");
static_assert(sizeof(PsychicGrabAttachment_C_SetPostParallel) == 0x0002A0, "Wrong size on PsychicGrabAttachment_C_SetPostParallel");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_IsNewAttach_return) == 0x000000, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_IsNewAttach_return' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000004, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x00008C, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_BooleanOR_ReturnValue) == 0x0000C0, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_BreakTransform_Location) == 0x0000C4, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_BreakTransform_Rotation) == 0x0000D0, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_BreakTransform_Scale) == 0x0000DC, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_ComposeRotators_ReturnValue) == 0x0000E8, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F4, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x000100, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x000188, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2) == 0x00018C, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2) == 0x000214, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SetPostParallel, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000218, "Member 'PsychicGrabAttachment_C_SetPostParallel::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.InitCluster
// 0x0094 (0x0094 - 0x0000)
struct PsychicGrabAttachment_C_InitCluster final
{
public:
	struct FRotator                               CallFunc_GetRelativeRot_relative_rot;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PsychicGrabAttachment_C_InitCluster) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_InitCluster");
static_assert(sizeof(PsychicGrabAttachment_C_InitCluster) == 0x000094, "Wrong size on PsychicGrabAttachment_C_InitCluster");
static_assert(offsetof(PsychicGrabAttachment_C_InitCluster, CallFunc_GetRelativeRot_relative_rot) == 0x000000, "Member 'PsychicGrabAttachment_C_InitCluster::CallFunc_GetRelativeRot_relative_rot' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_InitCluster, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00000C, "Member 'PsychicGrabAttachment_C_InitCluster::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.IsNewAttach
// 0x0003 (0x0003 - 0x0000)
struct PsychicGrabAttachment_C_IsNewAttach final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewAttach_return;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_IsNewAttach) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_IsNewAttach");
static_assert(sizeof(PsychicGrabAttachment_C_IsNewAttach) == 0x000003, "Wrong size on PsychicGrabAttachment_C_IsNewAttach");
static_assert(offsetof(PsychicGrabAttachment_C_IsNewAttach, Return) == 0x000000, "Member 'PsychicGrabAttachment_C_IsNewAttach::Return' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_IsNewAttach, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PsychicGrabAttachment_C_IsNewAttach::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_IsNewAttach, CallFunc_IsNewAttach_return) == 0x000002, "Member 'PsychicGrabAttachment_C_IsNewAttach::CallFunc_IsNewAttach_return' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.GetGrabMoveTime
// 0x003C (0x003C - 0x0000)
struct PsychicGrabAttachment_C_GetGrabMoveTime final
{
public:
	bool                                          Is_reload;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_combo;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_brain_field;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C5[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_time;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGrabIndex_grab_index;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C6[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_GetGrabMoveTime) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_GetGrabMoveTime");
static_assert(sizeof(PsychicGrabAttachment_C_GetGrabMoveTime) == 0x00003C, "Wrong size on PsychicGrabAttachment_C_GetGrabMoveTime");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, Is_reload) == 0x000000, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::Is_reload' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, Is_combo) == 0x000001, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::Is_combo' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, Is_brain_field) == 0x000002, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::Is_brain_field' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, Time) == 0x000004, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::Time' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, L_time) == 0x000008, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::L_time' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_GetGrabIndex_grab_index) == 0x000014, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_GetGrabIndex_grab_index' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_GetTimeRange_MinTime) == 0x000024, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_GetTimeRange_MaxTime) == 0x000028, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_SelectFloat_ReturnValue_1) == 0x000030, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_SelectFloat_ReturnValue_2) == 0x000034, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_GetGrabMoveTime, CallFunc_SelectFloat_ReturnValue_3) == 0x000038, "Member 'PsychicGrabAttachment_C_GetGrabMoveTime::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SetSkillReloadTime
// 0x0004 (0x0004 - 0x0000)
struct PsychicGrabAttachment_C_SetSkillReloadTime final
{
public:
	float                                         Time_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_SetSkillReloadTime) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_SetSkillReloadTime");
static_assert(sizeof(PsychicGrabAttachment_C_SetSkillReloadTime) == 0x000004, "Wrong size on PsychicGrabAttachment_C_SetSkillReloadTime");
static_assert(offsetof(PsychicGrabAttachment_C_SetSkillReloadTime, Time_in) == 0x000000, "Member 'PsychicGrabAttachment_C_SetSkillReloadTime::Time_in' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SAS_CommonEnd
// 0x0008 (0x0008 - 0x0000)
struct PsychicGrabAttachment_C_SAS_CommonEnd final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancelSASCost;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78C7[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemainTime;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_SAS_CommonEnd) == 0x000004, "Wrong alignment on PsychicGrabAttachment_C_SAS_CommonEnd");
static_assert(sizeof(PsychicGrabAttachment_C_SAS_CommonEnd) == 0x000008, "Wrong size on PsychicGrabAttachment_C_SAS_CommonEnd");
static_assert(offsetof(PsychicGrabAttachment_C_SAS_CommonEnd, SAS_Kind) == 0x000000, "Member 'PsychicGrabAttachment_C_SAS_CommonEnd::SAS_Kind' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SAS_CommonEnd, bCancelSASCost) == 0x000001, "Member 'PsychicGrabAttachment_C_SAS_CommonEnd::bCancelSASCost' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SAS_CommonEnd, bDummy) == 0x000002, "Member 'PsychicGrabAttachment_C_SAS_CommonEnd::bDummy' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SAS_CommonEnd, RemainTime) == 0x000004, "Member 'PsychicGrabAttachment_C_SAS_CommonEnd::RemainTime' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.SAS_CommonStart
// 0x0038 (0x0038 - 0x0000)
struct PsychicGrabAttachment_C_SAS_CommonStart final
{
public:
	struct FFSASCommand                           SAS_Command;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_SAS_CommonStart) == 0x000008, "Wrong alignment on PsychicGrabAttachment_C_SAS_CommonStart");
static_assert(sizeof(PsychicGrabAttachment_C_SAS_CommonStart) == 0x000038, "Wrong size on PsychicGrabAttachment_C_SAS_CommonStart");
static_assert(offsetof(PsychicGrabAttachment_C_SAS_CommonStart, SAS_Command) == 0x000000, "Member 'PsychicGrabAttachment_C_SAS_CommonStart::SAS_Command' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_SAS_CommonStart, Dummy) == 0x000030, "Member 'PsychicGrabAttachment_C_SAS_CommonStart::Dummy' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.IsEnableParallelTick
// 0x0006 (0x0006 - 0x0000)
struct PsychicGrabAttachment_C_IsEnableParallelTick final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewAttach_return;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_IsEnableParallelTick) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_IsEnableParallelTick");
static_assert(sizeof(PsychicGrabAttachment_C_IsEnableParallelTick) == 0x000006, "Wrong size on PsychicGrabAttachment_C_IsEnableParallelTick");
static_assert(offsetof(PsychicGrabAttachment_C_IsEnableParallelTick, ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_IsEnableParallelTick::ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_IsEnableParallelTick, Temp_bool_Variable) == 0x000001, "Member 'PsychicGrabAttachment_C_IsEnableParallelTick::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_IsEnableParallelTick, CallFunc_IsNewAttach_return) == 0x000002, "Member 'PsychicGrabAttachment_C_IsEnableParallelTick::CallFunc_IsNewAttach_return' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_IsEnableParallelTick, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000003, "Member 'PsychicGrabAttachment_C_IsEnableParallelTick::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_IsEnableParallelTick, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'PsychicGrabAttachment_C_IsEnableParallelTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicGrabAttachment_C_IsEnableParallelTick, K2Node_Select_Default) == 0x000005, "Member 'PsychicGrabAttachment_C_IsEnableParallelTick::K2Node_Select_Default' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.GetParallelTiming
// 0x0001 (0x0001 - 0x0000)
struct PsychicGrabAttachment_C_GetParallelTiming final
{
public:
	ERSParallelTiming                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicGrabAttachment_C_GetParallelTiming) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_GetParallelTiming");
static_assert(sizeof(PsychicGrabAttachment_C_GetParallelTiming) == 0x000001, "Wrong size on PsychicGrabAttachment_C_GetParallelTiming");
static_assert(offsetof(PsychicGrabAttachment_C_GetParallelTiming, ReturnValue) == 0x000000, "Member 'PsychicGrabAttachment_C_GetParallelTiming::ReturnValue' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.IsAcceleratorValid
// 0x0001 (0x0001 - 0x0000)
struct PsychicGrabAttachment_C_IsAcceleratorValid final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_IsAcceleratorValid) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_IsAcceleratorValid");
static_assert(sizeof(PsychicGrabAttachment_C_IsAcceleratorValid) == 0x000001, "Wrong size on PsychicGrabAttachment_C_IsAcceleratorValid");
static_assert(offsetof(PsychicGrabAttachment_C_IsAcceleratorValid, Valid) == 0x000000, "Member 'PsychicGrabAttachment_C_IsAcceleratorValid::Valid' has a wrong offset!");

// Function PsychicGrabAttachment.PsychicGrabAttachment_C.IsAccelerating
// 0x0001 (0x0001 - 0x0000)
struct PsychicGrabAttachment_C_IsAccelerating final
{
public:
	bool                                          Accelerating;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicGrabAttachment_C_IsAccelerating) == 0x000001, "Wrong alignment on PsychicGrabAttachment_C_IsAccelerating");
static_assert(sizeof(PsychicGrabAttachment_C_IsAccelerating) == 0x000001, "Wrong size on PsychicGrabAttachment_C_IsAccelerating");
static_assert(offsetof(PsychicGrabAttachment_C_IsAccelerating, Accelerating) == 0x000000, "Member 'PsychicGrabAttachment_C_IsAccelerating::Accelerating' has a wrong offset!");

}

