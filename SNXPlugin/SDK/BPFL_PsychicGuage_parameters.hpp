#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_PsychicGuage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BPFL_PsychicGuage.BPFL_PsychicGuage_C.LoadGaugeTableDatas
// 0x0188 (0x0188 - 0x0000)
struct BPFL_PsychicGuage_C_LoadGaugeTableDatas final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FPsychicGuageDataCell> Return;                                            // 0x0008(0x0050)(Parm, OutParm)
	TMap<class FName, struct FPsychicGuageDataCell> ReturnData;                                        // 0x0058(0x0050)(Edit, BlueprintVisible)
	class FName                                   Param_Name;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             LoadedTable;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UDataTable>              Table;                                             // 0x00B8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           Names;                                             // 0x00E0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D61[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D62[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0110(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FPsychicGuageDataCell                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0120(0x0048)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D63[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PsychicGuage_C_LoadGaugeTableDatas) == 0x000008, "Wrong alignment on BPFL_PsychicGuage_C_LoadGaugeTableDatas");
static_assert(sizeof(BPFL_PsychicGuage_C_LoadGaugeTableDatas) == 0x000188, "Wrong size on BPFL_PsychicGuage_C_LoadGaugeTableDatas");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, __WorldContext) == 0x000000, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, Return) == 0x000008, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::Return' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, ReturnData) == 0x000058, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::ReturnData' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, Param_Name) == 0x0000A8, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::Param_Name' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, LoadedTable) == 0x0000B0, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::LoadedTable' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, Table) == 0x0000B8, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::Table' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, Names) == 0x0000E0, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::Names' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, Temp_int_Array_Index_Variable) == 0x0000F4, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_Array_Get_Item) == 0x0000FC, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000110, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_GetDataTableRowFromName_OutRow) == 0x000120, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000168, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_LoadSoftObject_ReturnValue) == 0x000170, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, K2Node_DynamicCast_AsData_Table) == 0x000178, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadGaugeTableDatas, CallFunc_IsValid_ReturnValue) == 0x000181, "Member 'BPFL_PsychicGuage_C_LoadGaugeTableDatas::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_PsychicGuage.BPFL_PsychicGuage_C.SetPsychicGaugeState
// 0x0080 (0x0080 - 0x0000)
struct BPFL_PsychicGuage_C_SetPsychicGaugeState final
{
public:
	struct FPsychicGuageDataCell                  InputState;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMaterialInstanceDynamic*               DynamiMaterialInstance;                            // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PsychicGuage_C_SetPsychicGaugeState) == 0x000008, "Wrong alignment on BPFL_PsychicGuage_C_SetPsychicGaugeState");
static_assert(sizeof(BPFL_PsychicGuage_C_SetPsychicGaugeState) == 0x000080, "Wrong size on BPFL_PsychicGuage_C_SetPsychicGaugeState");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeState, InputState) == 0x000000, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeState::InputState' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeState, DynamiMaterialInstance) == 0x000048, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeState::DynamiMaterialInstance' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeState, __WorldContext) == 0x000050, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeState, Material) == 0x000058, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeState::Material' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeState, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000060, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeState::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeState, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000070, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeState::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");

// Function BPFL_PsychicGuage.BPFL_PsychicGuage_C.SetPsychicGaugeStateLerp
// 0x0130 (0x0130 - 0x0000)
struct BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp final
{
public:
	struct FPsychicGuageDataCell                  InputStateA;                                       // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FPsychicGuageDataCell                  InputStateB;                                       // 0x0048(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         LerpAlpha;                                         // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D64[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamiMaterialInstance;                            // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D65[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Material;                                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_2;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_3;    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp) == 0x000008, "Wrong alignment on BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp");
static_assert(sizeof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp) == 0x000130, "Wrong size on BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, InputStateA) == 0x000000, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::InputStateA' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, InputStateB) == 0x000048, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::InputStateB' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, LerpAlpha) == 0x000090, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::LerpAlpha' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, DynamiMaterialInstance) == 0x000098, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::DynamiMaterialInstance' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, __WorldContext) == 0x0000A0, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, Alpha) == 0x0000A8, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::Alpha' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, Material) == 0x0000B0, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::Material' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x0000B8, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x0000C8, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Conv_ColorToLinearColor_ReturnValue_2) == 0x0000D8, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Conv_ColorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_LinearColorLerp_ReturnValue) == 0x0000E8, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Conv_ColorToLinearColor_ReturnValue_3) == 0x0000F8, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Conv_ColorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000108, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Lerp_ReturnValue) == 0x000118, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Lerp_ReturnValue_1) == 0x00011C, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Lerp_ReturnValue_2) == 0x000120, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Lerp_ReturnValue_3) == 0x000124, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Lerp_ReturnValue_4) == 0x000128, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp, CallFunc_Lerp_ReturnValue_5) == 0x00012C, "Member 'BPFL_PsychicGuage_C_SetPsychicGaugeStateLerp::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");

// Function BPFL_PsychicGuage.BPFL_PsychicGuage_C.LoadDroneGaugeTableDatas
// 0x0150 (0x0150 - 0x0000)
struct BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FPsychicDroneGuageDataCell> Return;                                            // 0x0008(0x0050)(Parm, OutParm)
	TMap<class FName, struct FPsychicDroneGuageDataCell> ReturnData;                                        // 0x0058(0x0050)(Edit, BlueprintVisible)
	class FName                                   Param_Name;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Names;                                             // 0x00B0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UDataTable*                             LoadedTable;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UDataTable>              Table;                                             // 0x00C8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D66[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D67[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0110(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FPsychicDroneGuageDataCell             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0120(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D68[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas) == 0x000008, "Wrong alignment on BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas");
static_assert(sizeof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas) == 0x000150, "Wrong size on BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, __WorldContext) == 0x000000, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, Return) == 0x000008, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::Return' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, ReturnData) == 0x000058, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::ReturnData' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, Param_Name) == 0x0000A8, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::Param_Name' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, Names) == 0x0000B0, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::Names' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, LoadedTable) == 0x0000C0, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::LoadedTable' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, Table) == 0x0000C8, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::Table' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, Temp_int_Array_Index_Variable) == 0x0000F4, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_Array_Get_Item) == 0x0000FC, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000110, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_GetDataTableRowFromName_OutRow) == 0x000120, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_LoadSoftObject_ReturnValue) == 0x000138, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, K2Node_DynamicCast_AsData_Table) == 0x000140, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas, CallFunc_IsValid_ReturnValue) == 0x000149, "Member 'BPFL_PsychicGuage_C_LoadDroneGaugeTableDatas::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_PsychicGuage.BPFL_PsychicGuage_C.SetPsychicDroneGaugeState
// 0x0048 (0x0048 - 0x0000)
struct BPFL_PsychicGuage_C_SetPsychicDroneGaugeState final
{
public:
	struct FPsychicDroneGuageDataCell             InpuState;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMaterialInstanceDynamic*               DynamiMaterialInstance;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PsychicGuage_C_SetPsychicDroneGaugeState) == 0x000008, "Wrong alignment on BPFL_PsychicGuage_C_SetPsychicDroneGaugeState");
static_assert(sizeof(BPFL_PsychicGuage_C_SetPsychicDroneGaugeState) == 0x000048, "Wrong size on BPFL_PsychicGuage_C_SetPsychicDroneGaugeState");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicDroneGaugeState, InpuState) == 0x000000, "Member 'BPFL_PsychicGuage_C_SetPsychicDroneGaugeState::InpuState' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicDroneGaugeState, DynamiMaterialInstance) == 0x000010, "Member 'BPFL_PsychicGuage_C_SetPsychicDroneGaugeState::DynamiMaterialInstance' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicDroneGaugeState, __WorldContext) == 0x000018, "Member 'BPFL_PsychicGuage_C_SetPsychicDroneGaugeState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicDroneGaugeState, Material) == 0x000020, "Member 'BPFL_PsychicGuage_C_SetPsychicDroneGaugeState::Material' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicDroneGaugeState, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000028, "Member 'BPFL_PsychicGuage_C_SetPsychicDroneGaugeState::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicGuage_C_SetPsychicDroneGaugeState, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000038, "Member 'BPFL_PsychicGuage_C_SetPsychicDroneGaugeState::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");

}

