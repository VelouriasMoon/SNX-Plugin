#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessOverraySystem

#include "Basic.hpp"

#include "BP_PostProcessOverraySystem_classes.hpp"
#include "BP_PostProcessOverraySystem_parameters.hpp"


namespace SDK
{

// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.ExecuteUbergraph_BP_PostProcessOverraySystem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::ExecuteUbergraph_BP_PostProcessOverraySystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "ExecuteUbergraph_BP_PostProcessOverraySystem");

	Params::BP_PostProcessOverraySystem_C_ExecuteUbergraph_BP_PostProcessOverraySystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.RemoveOverrayVolume
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PostProcessOverrayVolume_C*   Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::RemoveOverrayVolume(class ABP_PostProcessOverrayVolume_C* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "RemoveOverrayVolume");

	Params::BP_PostProcessOverraySystem_C_RemoveOverrayVolume Parms{};

	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.AddOverrayVolume
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PostProcessOverrayVolume_C*   Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::AddOverrayVolume(class ABP_PostProcessOverrayVolume_C* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "AddOverrayVolume");

	Params::BP_PostProcessOverraySystem_C_AddOverrayVolume Parms{};

	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.RemoveOvarrayScreenLight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PostProcessOverrayScreenLight_C*ScreenLight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::RemoveOvarrayScreenLight(class ABP_PostProcessOverrayScreenLight_C* ScreenLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "RemoveOvarrayScreenLight");

	Params::BP_PostProcessOverraySystem_C_RemoveOvarrayScreenLight Parms{};

	Parms.ScreenLight = ScreenLight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.AddOverayScreenLight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PostProcessOverrayScreenLight_C*ScreenLight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::AddOverayScreenLight(class ABP_PostProcessOverrayScreenLight_C* ScreenLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "AddOverayScreenLight");

	Params::BP_PostProcessOverraySystem_C_AddOverayScreenLight Parms{};

	Parms.ScreenLight = ScreenLight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "ReceiveTick");

	Params::BP_PostProcessOverraySystem_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.RemoveOverrayGradiation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PostProcessOverrayGradiation_C*Gradiation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::RemoveOverrayGradiation(class ABP_PostProcessOverrayGradiation_C* Gradiation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "RemoveOverrayGradiation");

	Params::BP_PostProcessOverraySystem_C_RemoveOverrayGradiation Parms{};

	Parms.Gradiation = Gradiation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.AddOverrayGradiation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PostProcessOverrayGradiation_C*Gradiation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::AddOverrayGradiation(class ABP_PostProcessOverrayGradiation_C* Gradiation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "AddOverrayGradiation");

	Params::BP_PostProcessOverraySystem_C_AddOverrayGradiation Parms{};

	Parms.Gradiation = Gradiation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PostProcessOverraySystem_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.TicksOverrayGradiation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::TicksOverrayGradiation(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "TicksOverrayGradiation");

	Params::BP_PostProcessOverraySystem_C_TicksOverrayGradiation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.SetupParameterOverrayScreenLight
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   No                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::SetupParameterOverrayScreenLight(int32 No, float Intensity, float Size, const struct FLinearColor& ScreenPosition, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "SetupParameterOverrayScreenLight");

	Params::BP_PostProcessOverraySystem_C_SetupParameterOverrayScreenLight Parms{};

	Parms.No = No;
	Parms.Intensity = Intensity;
	Parms.Size = Size;
	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.TicksOverrayScreenLight
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::TicksOverrayScreenLight(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "TicksOverrayScreenLight");

	Params::BP_PostProcessOverraySystem_C_TicksOverrayScreenLight Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.CalcScreenPosition
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Vector                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::CalcScreenPosition(class AActor* Actor, struct FLinearColor* Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "CalcScreenPosition");

	Params::BP_PostProcessOverraySystem_C_CalcScreenPosition Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Vector != nullptr)
		*Vector = std::move(Parms.Vector);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.CopyScreenLight
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PostProcessOverrayScreenLight_C*ScreenLight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CameraLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CameraRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PostProcessOverraySystem_C::CopyScreenLight(class ABP_PostProcessOverrayScreenLight_C* ScreenLight, int32 Param_Index, const struct FVector& CameraLocation, const struct FRotator& CameraRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "CopyScreenLight");

	Params::BP_PostProcessOverraySystem_C_CopyScreenLight Parms{};

	Parms.ScreenLight = ScreenLight;
	Parms.Param_Index = Param_Index;
	Parms.CameraLocation = std::move(CameraLocation);
	Parms.CameraRotation = std::move(CameraRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.CalcRate
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CameraVector                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CameraRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PostProcessOverrayBase_C*     Overray                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGradiation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InAnyVolume                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::CalcRate(const struct FVector& CameraVector, const struct FRotator& CameraRotation, class ABP_PostProcessOverrayBase_C* Overray, bool IsGradiation, bool InAnyVolume, float* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "CalcRate");

	Params::BP_PostProcessOverraySystem_C_CalcRate Parms{};

	Parms.CameraVector = std::move(CameraVector);
	Parms.CameraRotation = std::move(CameraRotation);
	Parms.Overray = Overray;
	Parms.IsGradiation = IsGradiation;
	Parms.InAnyVolume = InAnyVolume;

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.CheckAnyVolume
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGradiation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InVolume                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PostProcessOverraySystem_C::CheckAnyVolume(bool IsGradiation, bool* InVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "CheckAnyVolume");

	Params::BP_PostProcessOverraySystem_C_CheckAnyVolume Parms{};

	Parms.IsGradiation = IsGradiation;

	UObject::ProcessEvent(Func, &Parms);

	if (InVolume != nullptr)
		*InVolume = Parms.InVolume;
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.GetSortedList
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<float>                           OutputKeyList                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class ABP_PostProcessOverrayBase_C*>OutputObjectList                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    IsGradiation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class ABP_PostProcessOverrayBase_C*>OverrayList                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::GetSortedList(TArray<float>& OutputKeyList, TArray<class ABP_PostProcessOverrayBase_C*>& OutputObjectList, bool IsGradiation, TArray<class ABP_PostProcessOverrayBase_C*>& OverrayList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "GetSortedList");

	Params::BP_PostProcessOverraySystem_C_GetSortedList Parms{};

	Parms.OutputKeyList = std::move(OutputKeyList);
	Parms.OutputObjectList = std::move(OutputObjectList);
	Parms.IsGradiation = IsGradiation;
	Parms.OverrayList = std::move(OverrayList);

	UObject::ProcessEvent(Func, &Parms);

	OutputKeyList = std::move(Parms.OutputKeyList);
	OutputObjectList = std::move(Parms.OutputObjectList);
	OverrayList = std::move(Parms.OverrayList);
}


// Function BP_PostProcessOverraySystem.BP_PostProcessOverraySystem_C.RemoveScreenLight
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PostProcessOverrayScreenLight_C*ScreenLight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessOverraySystem_C::RemoveScreenLight(class ABP_PostProcessOverrayScreenLight_C* ScreenLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessOverraySystem_C", "RemoveScreenLight");

	Params::BP_PostProcessOverraySystem_C_RemoveScreenLight Parms{};

	Parms.ScreenLight = ScreenLight;

	UObject::ProcessEvent(Func, &Parms);
}

}

