#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateFall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerActionStateFall.BP_PlayerActionStateFall_C.Enter
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerActionStateFall_C_Enter final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93B6[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Enter_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnablePrevVelocity_bEnable;             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93B7[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_5;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFallActionParam                              Temp_byte_Variable_6;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              K2Node_Select_Default;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93B8[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRecentAverageVelocity_ReturnValue;     // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateFall_C_Enter) == 0x000004, "Wrong alignment on BP_PlayerActionStateFall_C_Enter");
static_assert(sizeof(BP_PlayerActionStateFall_C_Enter) == 0x000060, "Wrong size on BP_PlayerActionStateFall_C_Enter");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, Param) == 0x000000, "Member 'BP_PlayerActionStateFall_C_Enter::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateFall_C_Enter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, Temp_byte_Variable) == 0x000008, "Member 'BP_PlayerActionStateFall_C_Enter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_Enter_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_Enter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, Temp_byte_Variable_1) == 0x000011, "Member 'BP_PlayerActionStateFall_C_Enter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_GetValidValue_ReturnValue) == 0x000012, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, Temp_byte_Variable_2) == 0x000013, "Member 'BP_PlayerActionStateFall_C_Enter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, Temp_byte_Variable_3) == 0x000014, "Member 'BP_PlayerActionStateFall_C_Enter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, Temp_byte_Variable_4) == 0x000015, "Member 'BP_PlayerActionStateFall_C_Enter::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_IsEnablePrevVelocity_bEnable) == 0x000016, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_IsEnablePrevVelocity_bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, Temp_byte_Variable_5) == 0x000030, "Member 'BP_PlayerActionStateFall_C_Enter::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_SetFootIKEnable_Dummy) == 0x000031, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, K2Node_SwitchEnum_CmpSuccess) == 0x000032, "Member 'BP_PlayerActionStateFall_C_Enter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, Temp_byte_Variable_6) == 0x000033, "Member 'BP_PlayerActionStateFall_C_Enter::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, K2Node_Select_Default) == 0x000034, "Member 'BP_PlayerActionStateFall_C_Enter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000038, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_GetRecentAverageVelocity_ReturnValue) == 0x00003C, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_GetRecentAverageVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_BreakVector_X_1) == 0x000048, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_BreakVector_Y_1) == 0x00004C, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_BreakVector_Z_1) == 0x000050, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Enter, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'BP_PlayerActionStateFall_C_Enter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateFall.BP_PlayerActionStateFall_C.Transition
// 0x003C (0x003C - 0x0000)
struct BP_PlayerActionStateFall_C_Transition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EJumpActionParam                              LDodgeJumpActionParam;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterBadStatusFlooded_ReturnValue;  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLeftStickZero_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterBadStatusOil_ReturnValue;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisableAction_bEnable;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFallActionParam                              Temp_byte_Variable_5;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI_1;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93B9[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Transition_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJumpActionParam                              K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93BA[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateFall_C_Transition) == 0x000004, "Wrong alignment on BP_PlayerActionStateFall_C_Transition");
static_assert(sizeof(BP_PlayerActionStateFall_C_Transition) == 0x00003C, "Wrong size on BP_PlayerActionStateFall_C_Transition");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateFall_C_Transition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, LDodgeJumpActionParam) == 0x000001, "Member 'BP_PlayerActionStateFall_C_Transition::LDodgeJumpActionParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, Temp_byte_Variable) == 0x000002, "Member 'BP_PlayerActionStateFall_C_Transition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, Temp_byte_Variable_1) == 0x000003, "Member 'BP_PlayerActionStateFall_C_Transition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, Temp_byte_Variable_2) == 0x000004, "Member 'BP_PlayerActionStateFall_C_Transition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, Temp_byte_Variable_3) == 0x000005, "Member 'BP_PlayerActionStateFall_C_Transition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, Temp_byte_Variable_4) == 0x000006, "Member 'BP_PlayerActionStateFall_C_Transition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_IsCharacterBadStatusFlooded_ReturnValue) == 0x000007, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_IsCharacterBadStatusFlooded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_IsLeftStickZero_ReturnValue) == 0x000009, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_IsLeftStickZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_IsControlAI_bAI) == 0x00000A, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_IsCharacterBadStatusOil_ReturnValue) == 0x00000B, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_IsCharacterBadStatusOil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000C, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_IsDisableAction_bEnable) == 0x00000D, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_IsDisableAction_bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000E, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, Temp_byte_Variable_5) == 0x00000F, "Member 'BP_PlayerActionStateFall_C_Transition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_IsControlAI_bAI_1) == 0x000011, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_IsControlAI_bAI_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_BreakVector_Y) == 0x000024, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_Transition_ReturnValue) == 0x000031, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_Transition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, K2Node_Select_Default) == 0x000032, "Member 'BP_PlayerActionStateFall_C_Transition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000034, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_IsFalling_ReturnValue) == 0x000038, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Transition, CallFunc_Not_PreBool_ReturnValue_3) == 0x000039, "Member 'BP_PlayerActionStateFall_C_Transition::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerActionStateFall.BP_PlayerActionStateFall_C.Update
// 0x00D0 (0x00D0 - 0x0000)
struct BP_PlayerActionStateFall_C_Update final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnablePrevVelocity_bEnable;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93BB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceLandCheck_bLand;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93BC[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TraceLandCheck_LandHeight;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Update_ReturnValue;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateFall_C_Update) == 0x000004, "Wrong alignment on BP_PlayerActionStateFall_C_Update");
static_assert(sizeof(BP_PlayerActionStateFall_C_Update) == 0x0000D0, "Wrong size on BP_PlayerActionStateFall_C_Update");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateFall_C_Update::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_IsEnablePrevVelocity_bEnable) == 0x000004, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_IsEnablePrevVelocity_bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x00000C, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_TraceLandCheck_bLand) == 0x000018, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_TraceLandCheck_bLand' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_TraceLandCheck_LandHeight) == 0x00001C, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_TraceLandCheck_LandHeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_VEase_ReturnValue) == 0x00002C, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_GetVelocity_ReturnValue) == 0x000038, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x000044, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Update, CallFunc_Update_ReturnValue) == 0x0000CC, "Member 'BP_PlayerActionStateFall_C_Update::CallFunc_Update_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateFall.BP_PlayerActionStateFall_C.Exit
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerActionStateFall_C_Exit final
{
public:
	int32                                         NextStateIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Exit_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateFall_C_Exit) == 0x000004, "Wrong alignment on BP_PlayerActionStateFall_C_Exit");
static_assert(sizeof(BP_PlayerActionStateFall_C_Exit) == 0x000010, "Wrong size on BP_PlayerActionStateFall_C_Exit");
static_assert(offsetof(BP_PlayerActionStateFall_C_Exit, NextStateIndex) == 0x000000, "Member 'BP_PlayerActionStateFall_C_Exit::NextStateIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Exit, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateFall_C_Exit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Exit, CallFunc_Exit_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateFall_C_Exit::CallFunc_Exit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_Exit, CallFunc_SetFootIKEnable_Dummy) == 0x00000C, "Member 'BP_PlayerActionStateFall_C_Exit::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");

// Function BP_PlayerActionStateFall.BP_PlayerActionStateFall_C.IsEnablePrevVelocity
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerActionStateFall_C_IsEnablePrevVelocity final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerActionKind                             LPrevAction;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbEnable;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93BD[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_IsActiveSAS_Telepo_self_CastInput;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveSAS_Telepo_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93BE[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPrevStateIndex_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity) == 0x000008, "Wrong alignment on BP_PlayerActionStateFall_C_IsEnablePrevVelocity");
static_assert(sizeof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity) == 0x000028, "Wrong size on BP_PlayerActionStateFall_C_IsEnablePrevVelocity");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, bEnable) == 0x000000, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, LPrevAction) == 0x000001, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::LPrevAction' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, LbEnable) == 0x000002, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::LbEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, CallFunc_IsActiveSAS_Telepo_self_CastInput) == 0x000008, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::CallFunc_IsActiveSAS_Telepo_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, CallFunc_IsActiveSAS_Telepo_ReturnValue) == 0x000018, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::CallFunc_IsActiveSAS_Telepo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, CallFunc_GetPrevStateIndex_ReturnValue) == 0x00001C, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::CallFunc_GetPrevStateIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, CallFunc_GetValidValue_ReturnValue) == 0x000021, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateFall_C_IsEnablePrevVelocity, K2Node_SwitchEnum_CmpSuccess_1) == 0x000022, "Member 'BP_PlayerActionStateFall_C_IsEnablePrevVelocity::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

}

