#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ui_menu_battle_control

#include "Basic.hpp"

#include "Ui_menu_battle_control_classes.hpp"
#include "Ui_menu_battle_control_parameters.hpp"


namespace SDK
{

// Function ui_menu_battle_control.ui_menu_battle_control_C.ExecuteUbergraph_ui_menu_battle_control
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::ExecuteUbergraph_ui_menu_battle_control(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ExecuteUbergraph_ui_menu_battle_control");

	Params::Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetVisibleIntercept
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsVisible                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetVisibleIntercept(bool Param_IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetVisibleIntercept");

	Params::Ui_menu_battle_control_C_SetVisibleIntercept Parms{};

	Parms.Param_IsVisible = Param_IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.Event_SelectableChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNotSelectable                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::Event_SelectableChange(bool IsNotSelectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "Event_SelectableChange");

	Params::Ui_menu_battle_control_C_Event_SelectableChange Parms{};

	Parms.IsNotSelectable = IsNotSelectable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.Event_ContentsRestricted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EOperationRestriction                   Contents                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOpen                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::Event_ContentsRestricted(EOperationRestriction Contents, bool bOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "Event_ContentsRestricted");

	Params::Ui_menu_battle_control_C_Event_ContentsRestricted Parms{};

	Parms.Contents = Contents;
	Parms.bOpen = bOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUi_menu_battle_control_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUi_menu_battle_control_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.Event_ContentsOpened
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EContentsOpening                        Contents                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOpen                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::Event_ContentsOpened(EContentsOpening Contents, bool bOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "Event_ContentsOpened");

	Params::Ui_menu_battle_control_C_Event_ContentsOpened Parms{};

	Parms.Contents = Contents;
	Parms.bOpen = bOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.Event_SasEquipExtend
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bExtend                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::Event_SasEquipExtend(bool bExtend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "Event_SasEquipExtend");

	Params::Ui_menu_battle_control_C_Event_SasEquipExtend Parms{};

	Parms.bExtend = bExtend;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::UpdateState(int32 State, int32 SubState, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateState");

	Params::Ui_menu_battle_control_C_UpdateState Parms{};

	Parms.State = State;
	Parms.SubState = SubState;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateWidgetEnemyHp
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateWidgetEnemyHp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateWidgetEnemyHp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateTargetCursor
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateTargetCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateTargetCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateBrainTargetCursor
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateBrainTargetCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateBrainTargetCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.IsFlagPlayUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsFlagPlayUI                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::IsFlagPlayUI(bool* Param_IsFlagPlayUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "IsFlagPlayUI");

	Params::Ui_menu_battle_control_C_IsFlagPlayUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsFlagPlayUI != nullptr)
		*Param_IsFlagPlayUI = Parms.Param_IsFlagPlayUI;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateGameOver
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateBossName
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateBossName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateBossName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ChangePlayUI
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlay                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::ChangePlayUI(bool IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ChangePlayUI");

	Params::Ui_menu_battle_control_C_ChangePlayUI Parms{};

	Parms.IsPlay = IsPlay;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateInterceptIcon
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateInterceptIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateInterceptIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ReleaseInterceptIcon
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::ReleaseInterceptIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ReleaseInterceptIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetIntercept
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetIntercept(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetIntercept");

	Params::Ui_menu_battle_control_C_SetIntercept Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ResetIntercept
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::ResetIntercept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ResetIntercept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.InterceptUpdate
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::InterceptUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "InterceptUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.InterceptUpdatePosition
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::InterceptUpdatePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "InterceptUpdatePosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateCrushBonus
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateCrushBonus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateCrushBonus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ChangeTown
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTown                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsAjito                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::ChangeTown(bool IsTown, bool IsAjito)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ChangeTown");

	Params::Ui_menu_battle_control_C_ChangeTown Parms{};

	Parms.IsTown = IsTown;
	Parms.IsAjito = IsAjito;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.StartBrainCrashOverwrite
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::StartBrainCrashOverwrite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "StartBrainCrashOverwrite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetPsychicGauge(float Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicGauge");

	Params::Ui_menu_battle_control_C_SetPsychicGauge Parms{};

	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.StartPsychicWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsExObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::StartPsychicWeightGauge(Enum_ui_pk_weight_gauge_button Button, class AActor* Target, bool IsExObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "StartPsychicWeightGauge");

	Params::Ui_menu_battle_control_C_StartPsychicWeightGauge Parms{};

	Parms.Button = Button;
	Parms.Target = Target;
	Parms.IsExObject = IsExObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicWeightGaugeButton               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicWeightGaugeSize                 Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetPsychicWeightGaugeStyle(EPsychicWeightGaugeButton Button, EPsychicWeightGaugeSize Size, int32 MaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicWeightGaugeStyle");

	Params::Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle Parms{};

	Parms.Button = Button;
	Parms.Size = Size;
	Parms.MaxLevel = MaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicWeightGaugeButton               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetPsychicWeightGauge(EPsychicWeightGaugeButton Button, int32 Level, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicWeightGauge");

	Params::Ui_menu_battle_control_C_SetPsychicWeightGauge Parms{};

	Parms.Button = Button;
	Parms.Level = Level;
	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.EndPsychicWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::EndPsychicWeightGauge(Enum_ui_pk_weight_gauge_button Button, bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "EndPsychicWeightGauge");

	Params::Ui_menu_battle_control_C_EndPsychicWeightGauge Parms{};

	Parms.Button = Button;
	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.StartPursuitIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectUniqueInputType           LeftInput                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputButton         LeftButton                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputType           CenterInput                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputButton         CenterButton                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputType           RightInput                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputButton         RightButton                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlagSasFire                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// Enum_ui_action_icon_device_type         DeviceType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlagDrawMouse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::StartPursuitIcon(EPsychicObjectUniqueInputType LeftInput, EPsychicObjectUniqueInputButton LeftButton, EPsychicObjectUniqueInputType CenterInput, EPsychicObjectUniqueInputButton CenterButton, EPsychicObjectUniqueInputType RightInput, EPsychicObjectUniqueInputButton RightButton, bool FlagSasFire, Enum_ui_action_icon_device_type DeviceType, bool FlagDrawMouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "StartPursuitIcon");

	Params::Ui_menu_battle_control_C_StartPursuitIcon Parms{};

	Parms.LeftInput = LeftInput;
	Parms.LeftButton = LeftButton;
	Parms.CenterInput = CenterInput;
	Parms.CenterButton = CenterButton;
	Parms.RightInput = RightInput;
	Parms.RightButton = RightButton;
	Parms.FlagSasFire = FlagSasFire;
	Parms.DeviceType = DeviceType;
	Parms.FlagDrawMouse = FlagDrawMouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.EndPursuitIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::EndPursuitIcon(bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "EndPursuitIcon");

	Params::Ui_menu_battle_control_C_EndPursuitIcon Parms{};

	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreatePsychicWeightGauge
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreatePsychicWeightGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreatePsychicWeightGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsVisible                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetPsychicWeightGaugeVisible(Enum_ui_pk_weight_gauge_button Button, bool Param_IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicWeightGaugeVisible");

	Params::Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible Parms{};

	Parms.Button = Button;
	Parms.Param_IsVisible = Param_IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeReverse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReverse                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetPsychicWeightGaugeReverse(bool IsReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicWeightGaugeReverse");

	Params::Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse Parms{};

	Parms.IsReverse = IsReverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.GetPsychicWeightGaugeReverseFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsReverse                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::GetPsychicWeightGaugeReverseFlag(bool* IsReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "GetPsychicWeightGaugeReverseFlag");

	Params::Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReverse != nullptr)
		*IsReverse = Parms.IsReverse;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UsePsychicGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   UsePercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::UsePsychicGauge(float UsePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UsePsychicGauge");

	Params::Ui_menu_battle_control_C_UsePsychicGauge Parms{};

	Parms.UsePercent = UsePercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ErrorPsychicGauge
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::ErrorPsychicGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ErrorPsychicGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetCrushBonus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   bonus                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::SetCrushBonus(class ARSCharacterBase* Target, int32 bonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetCrushBonus");

	Params::Ui_menu_battle_control_C_SetCrushBonus Parms{};

	Parms.Target = Target;
	Parms.bonus = bonus;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.PlayDamageEffect
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCritical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::PlayDamageEffect(bool IsCritical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "PlayDamageEffect");

	Params::Ui_menu_battle_control_C_PlayDamageEffect Parms{};

	Parms.IsCritical = IsCritical;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeEnableFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetPsychicWeightGaugeEnableFlag(Enum_ui_pk_weight_gauge_button Button, bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicWeightGaugeEnableFlag");

	Params::Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag Parms{};

	Parms.Button = Button;
	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.LevelUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::LevelUp(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "LevelUp");

	Params::Ui_menu_battle_control_C_LevelUp Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SasChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Page                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SasChangePage(int32 Page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SasChangePage");

	Params::Ui_menu_battle_control_C_SasChangePage Parms{};

	Parms.Page = Page;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DebugSasSetHideLockIconFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DebugSasSetHideLockIconFlag(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DebugSasSetHideLockIconFlag");

	Params::Ui_menu_battle_control_C_DebugSasSetHideLockIconFlag Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DebugSasSetHidePsychicGaugeFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DebugSasSetHidePsychicGaugeFlag(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DebugSasSetHidePsychicGaugeFlag");

	Params::Ui_menu_battle_control_C_DebugSasSetHidePsychicGaugeFlag Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdatePsychicWeightGauge
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdatePsychicWeightGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdatePsychicWeightGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.StartPsychicWeightGaugeReal
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicWeightGaugeButton               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ExFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::StartPsychicWeightGaugeReal(EPsychicWeightGaugeButton Button, class AActor* Target, bool ExFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "StartPsychicWeightGaugeReal");

	Params::Ui_menu_battle_control_C_StartPsychicWeightGaugeReal Parms{};

	Parms.Button = Button;
	Parms.Target = Target;
	Parms.ExFlag = ExFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.EndPsychicWeightGaugeReal
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicWeightGaugeButton               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::EndPsychicWeightGaugeReal(EPsychicWeightGaugeButton Button, bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "EndPsychicWeightGaugeReal");

	Params::Ui_menu_battle_control_C_EndPsychicWeightGaugeReal Parms{};

	Parms.Button = Button;
	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::DriveGaugeSetPercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetPercent");

	Params::Ui_menu_battle_control_C_DriveGaugeSetPercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetUnlockBrainField
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUnlock                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DriveGaugeSetUnlockBrainField(bool IsUnlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetUnlockBrainField");

	Params::Ui_menu_battle_control_C_DriveGaugeSetUnlockBrainField Parms{};

	Parms.IsUnlock = IsUnlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetDriveMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDriveMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DriveGaugeSetDriveMode(bool IsDriveMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetDriveMode");

	Params::Ui_menu_battle_control_C_DriveGaugeSetDriveMode Parms{};

	Parms.IsDriveMode = IsDriveMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetBrainFieldMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBrainField                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DriveGaugeSetBrainFieldMode(bool IsBrainField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetBrainFieldMode");

	Params::Ui_menu_battle_control_C_DriveGaugeSetBrainFieldMode Parms{};

	Parms.IsBrainField = IsBrainField;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.RushPursuitIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Left                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Center                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Right                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::RushPursuitIcon(bool Left, bool Center, bool Right)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "RushPursuitIcon");

	Params::Ui_menu_battle_control_C_RushPursuitIcon Parms{};

	Parms.Left = Left;
	Parms.Center = Center;
	Parms.Right = Right;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicGaugeEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetPsychicGaugeEffect(int32 Param_Index, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicGaugeEffect");

	Params::Ui_menu_battle_control_C_SetPsychicGaugeEffect Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicGaugeLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetPsychicGaugeLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicGaugeLevel");

	Params::Ui_menu_battle_control_C_SetPsychicGaugeLevel Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.InitSASObject
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::InitSASObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "InitSASObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.StartSasHologram
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCrashVision                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::StartSasHologram(EPlayerID CharaID, bool IsCrashVision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "StartSasHologram");

	Params::Ui_menu_battle_control_C_StartSasHologram Parms{};

	Parms.CharaID = CharaID;
	Parms.IsCrashVision = IsCrashVision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.StopSasHologram
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::StopSasHologram()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "StopSasHologram");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DecideSasHologram
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::DecideSasHologram()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DecideSasHologram");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateSasHologram
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateSasHologram()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateSasHologram");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeEnableComboFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetPsychicWeightGaugeEnableComboFlag(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPsychicWeightGaugeEnableComboFlag");

	Params::Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconStickHoldPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LeftPercent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CenterPercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightPercent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetPursuitIconStickHoldPercent(float LeftPercent, float CenterPercent, float RightPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPursuitIconStickHoldPercent");

	Params::Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent Parms{};

	Parms.LeftPercent = LeftPercent;
	Parms.CenterPercent = CenterPercent;
	Parms.RightPercent = RightPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconStickRoll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagCenter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagRight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetPursuitIconStickRoll(bool FlagLeft, bool FlagCenter, bool FlagRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPursuitIconStickRoll");

	Params::Ui_menu_battle_control_C_SetPursuitIconStickRoll Parms{};

	Parms.FlagLeft = FlagLeft;
	Parms.FlagCenter = FlagCenter;
	Parms.FlagRight = FlagRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconStickHold
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagCenter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagRight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetPursuitIconStickHold(bool FlagLeft, bool FlagCenter, bool FlagRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPursuitIconStickHold");

	Params::Ui_menu_battle_control_C_SetPursuitIconStickHold Parms{};

	Parms.FlagLeft = FlagLeft;
	Parms.FlagCenter = FlagCenter;
	Parms.FlagRight = FlagRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconRushPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LeftPercent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CenterPercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightPercent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetPursuitIconRushPercent(float LeftPercent, float CenterPercent, float RightPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPursuitIconRushPercent");

	Params::Ui_menu_battle_control_C_SetPursuitIconRushPercent Parms{};

	Parms.LeftPercent = LeftPercent;
	Parms.CenterPercent = CenterPercent;
	Parms.RightPercent = RightPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconStickRollStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagStartLeft                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagStartCenter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagStartRight                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetPursuitIconStickRollStart(bool FlagStartLeft, bool FlagStartCenter, bool FlagStartRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPursuitIconStickRollStart");

	Params::Ui_menu_battle_control_C_SetPursuitIconStickRollStart Parms{};

	Parms.FlagStartLeft = FlagStartLeft;
	Parms.FlagStartCenter = FlagStartCenter;
	Parms.FlagStartRight = FlagStartRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DroneGuideOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_object_guide                    ObjectID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::DroneGuideOpen(Enum_ui_object_guide ObjectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DroneGuideOpen");

	Params::Ui_menu_battle_control_C_DroneGuideOpen Parms{};

	Parms.ObjectID = ObjectID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DroneGuideClose
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::DroneGuideClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DroneGuideClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconButtonHoldPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LeftPercent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CenterPercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightPercent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::SetPursuitIconButtonHoldPercent(float LeftPercent, float CenterPercent, float RightPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPursuitIconButtonHoldPercent");

	Params::Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent Parms{};

	Parms.LeftPercent = LeftPercent;
	Parms.CenterPercent = CenterPercent;
	Parms.RightPercent = RightPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconButtonHold
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHoldLeft                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHoldCenter                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHoldRight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetPursuitIconButtonHold(bool IsHoldLeft, bool IsHoldCenter, bool IsHoldRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetPursuitIconButtonHold");

	Params::Ui_menu_battle_control_C_SetPursuitIconButtonHold Parms{};

	Parms.IsHoldLeft = IsHoldLeft;
	Parms.IsHoldCenter = IsHoldCenter;
	Parms.IsHoldRight = IsHoldRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeBattle
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeTown
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeTown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeTown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidget
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetHpMain
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetHpMain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetHpMain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetHpSub
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetHpSub()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetHpSub");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetBrainCrashGauge
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetBrainCrashGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetBrainCrashGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetItemMenu
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetItemMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetItemMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetSasMenu
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetSasMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetSasMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetOther
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetOther()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetOther");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeAjito
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeAjito()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeAjito");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeKaren
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeKaren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeKaren");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetLog
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetDroneGuide
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetDroneGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetDroneGuide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetPsychicGauge
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetPsychicGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetPsychicGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetBrainCrashGaugeEnemy
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetBrainCrashGaugeEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetBrainCrashGaugeEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeEM1500
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeEM1500()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeEM1500");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetMiniMap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::UpdateDrawWidgetMiniMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetMiniMap");

	Params::Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ExpBonusOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   bonus                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::ExpBonusOpen(float bonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ExpBonusOpen");

	Params::Ui_menu_battle_control_C_ExpBonusOpen Parms{};

	Parms.bonus = bonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ExpBonusClose
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::ExpBonusClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ExpBonusClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetExpBonus
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetExpBonus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetExpBonus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ExpBonusUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   bonus                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::ExpBonusUpdate(float bonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ExpBonusUpdate");

	Params::Ui_menu_battle_control_C_ExpBonusUpdate Parms{};

	Parms.bonus = bonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateWidgetBrainTutorial
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateWidgetBrainTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateWidgetBrainTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.PlayDecideAnimeBrainTuto
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::PlayDecideAnimeBrainTuto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "PlayDecideAnimeBrainTuto");

	Params::Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.OpenBrainTuto
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::OpenBrainTuto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "OpenBrainTuto");

	Params::Ui_menu_battle_control_C_OpenBrainTuto Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.isPlayBrainTuto
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::IsPlayBrainTuto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "isPlayBrainTuto");

	Params::Ui_menu_battle_control_C_IsPlayBrainTuto Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetDrivePercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::DriveGaugeSetDrivePercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetDrivePercent");

	Params::Ui_menu_battle_control_C_DriveGaugeSetDrivePercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetBrainPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::DriveGaugeSetBrainPercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetBrainPercent");

	Params::Ui_menu_battle_control_C_DriveGaugeSetBrainPercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetStockFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StockFlag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UseItemFlag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DriveGaugeSetStockFlag(bool StockFlag, bool UseItemFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetStockFlag");

	Params::Ui_menu_battle_control_C_DriveGaugeSetStockFlag Parms{};

	Parms.StockFlag = StockFlag;
	Parms.UseItemFlag = UseItemFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetDownFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DownFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DriveGaugeSetDownFlag(bool DownFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetDownFlag");

	Params::Ui_menu_battle_control_C_DriveGaugeSetDownFlag Parms{};

	Parms.DownFlag = DownFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetTeamBondLv
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetTeamBondLv()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetTeamBondLv");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeBattleBrainField
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeBattleBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeBattleBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeNaomi
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeNaomi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeNaomi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetDisableFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisableFlag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DriveGaugeSetDisableFlag(bool DisableFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetDisableFlag");

	Params::Ui_menu_battle_control_C_DriveGaugeSetDisableFlag Parms{};

	Parms.DisableFlag = DisableFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetRemainingSecond
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Second                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::DriveGaugeSetRemainingSecond(int32 Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetRemainingSecond");

	Params::Ui_menu_battle_control_C_DriveGaugeSetRemainingSecond Parms{};

	Parms.Second = Second;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetBrainChargePercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::DriveGaugeSetBrainChargePercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetBrainChargePercent");

	Params::Ui_menu_battle_control_C_DriveGaugeSetBrainChargePercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetVisibleBrainKeyGuide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibleflag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::DriveGaugeSetVisibleBrainKeyGuide(bool Visibleflag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "DriveGaugeSetVisibleBrainKeyGuide");

	Params::Ui_menu_battle_control_C_DriveGaugeSetVisibleBrainKeyGuide Parms{};

	Parms.Visibleflag = Visibleflag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TipsID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::MiniTipsOpen(int32 TipsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsOpen");

	Params::Ui_menu_battle_control_C_MiniTipsOpen Parms{};

	Parms.TipsID = TipsID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsClose
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetMiniTips
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetMiniTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetMiniTips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CloseMinimap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::CloseMinimap(bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CloseMinimap");

	Params::Ui_menu_battle_control_C_CloseMinimap Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.OpenMinimap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::OpenMinimap(bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "OpenMinimap");

	Params::Ui_menu_battle_control_C_OpenMinimap Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.GetEnemyLevel
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UUi_menu_battle_control_C::GetEnemyLevel(class ARSCharacterBase* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "GetEnemyLevel");

	Params::Ui_menu_battle_control_C_GetEnemyLevel Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SasFireStart
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SasFireStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SasFireStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SasFireEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SasFireEnd(bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SasFireEnd");

	Params::Ui_menu_battle_control_C_SasFireEnd Parms{};

	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SasFireRush
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SasFireRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SasFireRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateDiscoverIndexList
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIDiscover*                      UIDiscover                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UUi_menu_battle_control_C::CreateDiscoverIndexList(class UUIDiscover* UIDiscover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateDiscoverIndexList");

	Params::Ui_menu_battle_control_C_CreateDiscoverIndexList Parms{};

	Parms.UIDiscover = UIDiscover;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.RemoveDiscoverIndexList
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::RemoveDiscoverIndexList(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "RemoveDiscoverIndexList");

	Params::Ui_menu_battle_control_C_RemoveDiscoverIndexList Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsStartDraw
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHelpTutorial                           TipsID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::MiniTipsStartDraw(EHelpTutorial TipsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsStartDraw");

	Params::Ui_menu_battle_control_C_MiniTipsStartDraw Parms{};

	Parms.TipsID = TipsID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsStopDraw
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHelpTutorial                           TipsID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::MiniTipsStopDraw(EHelpTutorial TipsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsStopDraw");

	Params::Ui_menu_battle_control_C_MiniTipsStopDraw Parms{};

	Parms.TipsID = TipsID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsUpdate
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSetCurrentTips
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsSetCurrentTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsSetCurrentTips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsCurrentTipsFlagResetCheck
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsCurrentTipsFlagResetCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsCurrentTipsFlagResetCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.PsychicTimerOpen
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::PsychicTimerOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "PsychicTimerOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.PsychicTimerClose
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::PsychicTimerClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "PsychicTimerClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.PsychicTimerSetGaugePercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::PsychicTimerSetGaugePercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "PsychicTimerSetGaugePercent");

	Params::Ui_menu_battle_control_C_PsychicTimerSetGaugePercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsClearCurrentTips
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsClearCurrentTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsClearCurrentTips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CloseMiniTips
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHelpTutorial                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::CloseMiniTips(EHelpTutorial ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CloseMiniTips");

	Params::Ui_menu_battle_control_C_CloseMiniTips Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.GetCurrentMiniTipsID
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHelpTutorial                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EHelpTutorial UUi_menu_battle_control_C::GetCurrentMiniTipsID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "GetCurrentMiniTipsID");

	Params::Ui_menu_battle_control_C_GetCurrentMiniTipsID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSortList
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsSortList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsSortList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSwapList
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::MiniTipsSwapList(int32 Index0, int32 Index1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsSwapList");

	Params::Ui_menu_battle_control_C_MiniTipsSwapList Parms{};

	Parms.Index0 = Index0;
	Parms.Index1 = Index1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsDecrementTips
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsDecrementTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsDecrementTips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeBrainCrash
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeBrainCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeBrainCrash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetHpEnemyBoss
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetHpEnemyBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetHpEnemyBoss");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.ItemMenuGetCurrentItemID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemId                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::ItemMenuGetCurrentItemID(class FName* ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "ItemMenuGetCurrentItemID");

	Params::Ui_menu_battle_control_C_ItemMenuGetCurrentItemID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemId != nullptr)
		*ItemId = Parms.ItemId;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetShortcutGuide
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetShortcutGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetShortcutGuide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSuccessOpen
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsSuccessOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsSuccessOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSuccessClose
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsSuccessClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsSuccessClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateWidgetMiniTipsSuccess
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreateWidgetMiniTipsSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreateWidgetMiniTipsSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.EndMinimapBrainField
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::EndMinimapBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "EndMinimapBrainField");

	Params::Ui_menu_battle_control_C_EndMinimapBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.StartMinimapBrainField
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::StartMinimapBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "StartMinimapBrainField");

	Params::Ui_menu_battle_control_C_StartMinimapBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.PsychicTimerSetState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::PsychicTimerSetState(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "PsychicTimerSetState");

	Params::Ui_menu_battle_control_C_PsychicTimerSetState Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDebugFlagDrawShortcutGuide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDraw                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::SetDebugFlagDrawShortcutGuide(bool IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDebugFlagDrawShortcutGuide");

	Params::Ui_menu_battle_control_C_SetDebugFlagDrawShortcutGuide Parms{};

	Parms.IsDraw = IsDraw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.GetDebugFlagDrawShortcutGuide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsDraw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::GetDebugFlagDrawShortcutGuide(bool* IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "GetDebugFlagDrawShortcutGuide");

	Params::Ui_menu_battle_control_C_GetDebugFlagDrawShortcutGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDraw != nullptr)
		*IsDraw = Parms.IsDraw;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.Set Player Wait Flag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsWait                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::Set_Player_Wait_Flag(bool IsWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "Set Player Wait Flag");

	Params::Ui_menu_battle_control_C_Set_Player_Wait_Flag Parms{};

	Parms.IsWait = IsWait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateShortcutGuide
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateShortcutGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateShortcutGuide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetBrainTalk
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetBrainTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetBrainTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.CreatePkObjectTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::CreatePkObjectTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "CreatePkObjectTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetTutoOperation
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetTutoOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetTutoOperation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.Set Draw Mode Brain Crash Nomal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBrainCrash                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::Set_Draw_Mode_Brain_Crash_Nomal(bool IsBrainCrash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "Set Draw Mode Brain Crash Nomal");

	Params::Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal Parms{};

	Parms.IsBrainCrash = IsBrainCrash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SasSetChangePageReady
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReadyFlagL                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReadyFlagR                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::SasSetChangePageReady(bool ReadyFlagL, bool ReadyFlagR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SasSetChangePageReady");

	Params::Ui_menu_battle_control_C_SasSetChangePageReady Parms{};

	Parms.ReadyFlagL = ReadyFlagL;
	Parms.ReadyFlagR = ReadyFlagR;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetHUD
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetResurrection
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetResurrection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetResurrection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniMapModelDelete
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::MiniMapModelDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniMapModelDelete");

	Params::Ui_menu_battle_control_C_MiniMapModelDelete Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeYuitosChildhood
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeYuitosChildhood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeYuitosChildhood");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetLevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetLevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetLevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetSuccess
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSuccessUpdate
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::MiniTipsSuccessUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "MiniTipsSuccessUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.StartNexusDrive
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::StartNexusDrive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "StartNexusDrive");

	Params::Ui_menu_battle_control_C_StartNexusDrive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetNexusDrive
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetNexusDrive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetNexusDrive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.GetNexusDriveUsingAnimTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::GetNexusDriveUsingAnimTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "GetNexusDriveUsingAnimTime");

	Params::Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateGuide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::UpdateGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateGuide");

	Params::Ui_menu_battle_control_C_UpdateGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.GetNexusDriveDefaultAnimTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUi_menu_battle_control_C::GetNexusDriveDefaultAnimTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "GetNexusDriveDefaultAnimTime");

	Params::Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetVisionSimulatorTimer
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawWidgetVisionSimulatorTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawWidgetVisionSimulatorTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetVisionSimulatorTimerDraw
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDraw                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::SetVisionSimulatorTimerDraw(bool IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetVisionSimulatorTimerDraw");

	Params::Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw Parms{};

	Parms.IsDraw = IsDraw;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetVisionSimulatorTimerColor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ColorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::SetVisionSimulatorTimerColor(int32 ColorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetVisionSimulatorTimerColor");

	Params::Ui_menu_battle_control_C_SetVisionSimulatorTimerColor Parms{};

	Parms.ColorIndex = ColorIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDrawModeVisionSimulatorStart
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::SetDrawModeVisionSimulatorStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "SetDrawModeVisionSimulatorStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateNexusDriveNotice
// (Private, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateNexusDriveNotice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateNexusDriveNotice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawPkObjectTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UUi_menu_battle_control_C::UpdateDrawPkObjectTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "UpdateDrawPkObjectTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.IsDrawMiniTipsSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsDraw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUi_menu_battle_control_C::IsDrawMiniTipsSuccess(bool* IsDraw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "IsDrawMiniTipsSuccess");

	Params::Ui_menu_battle_control_C_IsDrawMiniTipsSuccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDraw != nullptr)
		*IsDraw = Parms.IsDraw;
}


// Function ui_menu_battle_control.ui_menu_battle_control_C.IsUsingBrainField
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUi_menu_battle_control_C::IsUsingBrainField() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ui_menu_battle_control_C", "IsUsingBrainField");

	Params::Ui_menu_battle_control_C_IsUsingBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

