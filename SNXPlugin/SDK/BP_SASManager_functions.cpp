#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SASManager

#include "Basic.hpp"

#include "BP_SASManager_classes.hpp"
#include "BP_SASManager_parameters.hpp"


namespace SDK
{

// Function BP_SASManager.BP_SASManager_C.ExecuteUbergraph_BP_SASManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::ExecuteUbergraph_BP_SASManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "ExecuteUbergraph_BP_SASManager");

	Params::BP_SASManager_C_ExecuteUbergraph_BP_SASManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.DelayBeginPlay
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::DelayBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "DelayBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SASManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "ReceiveEndPlay");

	Params::BP_SASManager_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "ReceiveTick");

	Params::BP_SASManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnPsychicEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASPsychicParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnPsychicEnd(const struct FFSASPsychicParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnPsychicEnd");

	Params::BP_SASManager_C_OnPsychicEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnPsychicStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASPsychicParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnPsychicStart(const struct FFSASPsychicParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnPsychicStart");

	Params::BP_SASManager_C_OnPsychicStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnCutInEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::OnCutInEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnCutInEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.OnCutInStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::OnCutInStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnCutInStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.OnCopyEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCopyParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnCopyEnd(const struct FFSASCopyParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnCopyEnd");

	Params::BP_SASManager_C_OnCopyEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnCopyStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCopyParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnCopyStart(const struct FFSASCopyParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnCopyStart");

	Params::BP_SASManager_C_OnCopyStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnStealthEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASStealthParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnStealthEnd(const struct FFSASStealthParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnStealthEnd");

	Params::BP_SASManager_C_OnStealthEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnStealthStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASStealthParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnStealthStart(const struct FFSASStealthParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnStealthStart");

	Params::BP_SASManager_C_OnStealthStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnTelepoEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASTelepoParam                 Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnTelepoEnd(const struct FFSASTelepoParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnTelepoEnd");

	Params::BP_SASManager_C_OnTelepoEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnTelepoStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASTelepoParam                 Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnTelepoStart(const struct FFSASTelepoParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnTelepoStart");

	Params::BP_SASManager_C_OnTelepoStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnSeeThroughEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASSeeThroughParam             Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnSeeThroughEnd(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnSeeThroughEnd");

	Params::BP_SASManager_C_OnSeeThroughEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnSeeThroughStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASSeeThroughParam             Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnSeeThroughStart(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnSeeThroughStart");

	Params::BP_SASManager_C_OnSeeThroughStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnMetalEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASMetalParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnMetalEnd(const struct FFSASMetalParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnMetalEnd");

	Params::BP_SASManager_C_OnMetalEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnMetalStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASMetalParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnMetalStart(const struct FFSASMetalParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnMetalStart");

	Params::BP_SASManager_C_OnMetalStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnFireEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASFireParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnFireEnd(const struct FFSASFireParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnFireEnd");

	Params::BP_SASManager_C_OnFireEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnFireStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASFireParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnFireStart(const struct FFSASFireParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnFireStart");

	Params::BP_SASManager_C_OnFireStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnElectricEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASElectricParam               Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnElectricEnd(const struct FFSASElectricParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnElectricEnd");

	Params::BP_SASManager_C_OnElectricEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnElectricStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASElectricParam               Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnElectricStart(const struct FFSASElectricParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnElectricStart");

	Params::BP_SASManager_C_OnElectricStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnAcceleratorEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::OnAcceleratorEnd(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, float RemainTime, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnAcceleratorEnd");

	Params::BP_SASManager_C_OnAcceleratorEnd Parms{};

	Parms.Parameter = std::move(Parameter);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnAcceleratorStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::OnAcceleratorStart(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnAcceleratorStart");

	Params::BP_SASManager_C_OnAcceleratorStart Parms{};

	Parms.Parameter = std::move(Parameter);
	Parms.Param_Owner = Param_Owner;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.UpdateSASCommand
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::UpdateSASCommand(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "UpdateSASCommand");

	Params::BP_SASManager_C_UpdateSASCommand Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.UpdateCutIn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::UpdateCutIn(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "UpdateCutIn");

	Params::BP_SASManager_C_UpdateCutIn Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.SetReservedFlag
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::SetReservedFlag(E_SASKind SasKind, bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "SetReservedFlag");

	Params::BP_SASManager_C_SetReservedFlag Parms{};

	Parms.SasKind = SasKind;
	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.OnSkillStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCommandInternal             Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::OnSkillStart(struct FFSASCommandInternal& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnSkillStart");

	Params::BP_SASManager_C_OnSkillStart Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);

	Command = std::move(Parms.Command);
}


// Function BP_SASManager.BP_SASManager_C.OnSkillEnd
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCommandInternal             Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCancelSASCost                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::OnSkillEnd(struct FFSASCommandInternal& Command, bool bCancelSASCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnSkillEnd");

	Params::BP_SASManager_C_OnSkillEnd Parms{};

	Parms.Command = std::move(Command);
	Parms.bCancelSASCost = bCancelSASCost;

	UObject::ProcessEvent(Func, &Parms);

	Command = std::move(Parms.Command);
}


// Function BP_SASManager.BP_SASManager_C.OnStopCutin
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::OnStopCutin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnStopCutin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.StartCutinSlow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::StartCutinSlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "StartCutinSlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.StopCutinSlow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::StopCutinSlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "StopCutinSlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.GetCurrentCutinSASType_Internal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SASType                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetCurrentCutinSASType_Internal(E_SASKind* SASType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetCurrentCutinSASType_Internal");

	Params::BP_SASManager_C_GetCurrentCutinSASType_Internal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SASType != nullptr)
		*SASType = Parms.SASType;
}


// Function BP_SASManager.BP_SASManager_C.ResetCharacters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::ResetCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "ResetCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.SetupActiveCutinActor
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::SetupActiveCutinActor(E_SASKind SasKind, bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "SetupActiveCutinActor");

	Params::BP_SASManager_C_SetupActiveCutinActor Parms{};

	Parms.SasKind = SasKind;
	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.LoadSASParamDataTable
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::LoadSASParamDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "LoadSASParamDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.GetSASLogoTexture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Texture                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetSASLogoTexture(E_SASKind SasKind, class UTexture2D** Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetSASLogoTexture");

	Params::BP_SASManager_C_GetSASLogoTexture Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (Texture != nullptr)
		*Texture = Parms.Texture;
}


// Function BP_SASManager.BP_SASManager_C.LoadAssets
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::LoadAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "LoadAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.GetSASCodeEmitterTemplates
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UParticleSystem*>          EmitterTemplates                                       (Parm, OutParm, HasGetValueTypeHash)
// TArray<struct FTransform>               Transforms                                             (Parm, OutParm, HasGetValueTypeHash)

void ABP_SASManager_C::GetSASCodeEmitterTemplates(TArray<class UParticleSystem*>* EmitterTemplates, TArray<struct FTransform>* Transforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetSASCodeEmitterTemplates");

	Params::BP_SASManager_C_GetSASCodeEmitterTemplates Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EmitterTemplates != nullptr)
		*EmitterTemplates = std::move(Parms.EmitterTemplates);

	if (Transforms != nullptr)
		*Transforms = std::move(Parms.Transforms);
}


// Function BP_SASManager.BP_SASManager_C.GetSASSequencer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULevelSequence*                   Sequencer                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetSASSequencer(E_SASKind SasKind, class ULevelSequence** Sequencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetSASSequencer");

	Params::BP_SASManager_C_GetSASSequencer Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (Sequencer != nullptr)
		*Sequencer = Parms.Sequencer;
}


// Function BP_SASManager.BP_SASManager_C.AcceleratorStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Param_AcceleratorParameter                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::AcceleratorStart(const struct FAcceleratorParam& Param_AcceleratorParameter, class AActor* Param_Owner, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "AcceleratorStart");

	Params::BP_SASManager_C_AcceleratorStart Parms{};

	Parms.Param_AcceleratorParameter = std::move(Param_AcceleratorParameter);
	Parms.Param_Owner = Param_Owner;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.AcceleratorEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::AcceleratorEnd(const struct FAcceleratorParam& InputPin, float RemainTime, class AActor* Param_Owner, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "AcceleratorEnd");

	Params::BP_SASManager_C_AcceleratorEnd Parms{};

	Parms.InputPin = std::move(InputPin);
	Parms.RemainTime = RemainTime;
	Parms.Param_Owner = Param_Owner;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.StopCutin
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::StopCutin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "StopCutin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.PlayBrainFieldHelpCutIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               HelpPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::PlayBrainFieldHelpCutIn(EPlayerID HelpPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "PlayBrainFieldHelpCutIn");

	Params::BP_SASManager_C_PlayBrainFieldHelpCutIn Parms{};

	Parms.HelpPlayerID = HelpPlayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.CancelBrainFieldHelpCutIn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::CancelBrainFieldHelpCutIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "CancelBrainFieldHelpCutIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.StartStopScene
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::StartStopScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "StartStopScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.StopStopScene
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::StopStopScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "StopStopScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.StartCableEnergy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::StartCableEnergy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "StartCableEnergy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.DetachCableEnergy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::DetachCableEnergy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "DetachCableEnergy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.EraseCableEnergy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::EraseCableEnergy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "EraseCableEnergy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.VisibleCableEnergy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::VisibleCableEnergy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "VisibleCableEnergy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.LoadExtraCutin
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::LoadExtraCutin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "LoadExtraCutin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.UnloadExtraCutin
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::UnloadExtraCutin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "UnloadExtraCutin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.StartExtraCutin
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESASCutinExtraID                        ExtraID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::StartExtraCutin(ESASCutinExtraID ExtraID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "StartExtraCutin");

	Params::BP_SASManager_C_StartExtraCutin Parms{};

	Parms.ExtraID = ExtraID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.IsPlayingCutinExtra
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASManager_C::IsPlayingCutinExtra()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsPlayingCutinExtra");

	Params::BP_SASManager_C_IsPlayingCutinExtra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASManager.BP_SASManager_C.EmitParticleCableEnergy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::EmitParticleCableEnergy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "EmitParticleCableEnergy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.SetMipPreStream
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::SetMipPreStream(E_SASKind SasKind, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "SetMipPreStream");

	Params::BP_SASManager_C_SetMipPreStream Parms{};

	Parms.SasKind = SasKind;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.SetHealedBrainFieldFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHealed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::SetHealedBrainFieldFlag(bool bHealed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "SetHealedBrainFieldFlag");

	Params::BP_SASManager_C_SetHealedBrainFieldFlag Parms{};

	Parms.bHealed = bHealed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.GetHealedBrainFieldFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHealed                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::GetHealedBrainFieldFlag(bool* IsHealed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetHealedBrainFieldFlag");

	Params::BP_SASManager_C_GetHealedBrainFieldFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsHealed != nullptr)
		*IsHealed = Parms.IsHealed;
}


// Function BP_SASManager.BP_SASManager_C.OnEndCutinSequencer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::OnEndCutinSequencer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "OnEndCutinSequencer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.DispTipsSAS
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::DispTipsSAS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "DispTipsSAS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.GetSASEffectFixParam
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         InKind                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct F_SASParamNative>         OutFixParam                                            (Parm, OutParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASManager_C::GetSASEffectFixParam(E_SASKindNative InKind, TArray<struct F_SASParamNative>* OutFixParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetSASEffectFixParam");

	Params::BP_SASManager_C_GetSASEffectFixParam Parms{};

	Parms.InKind = InKind;

	UObject::ProcessEvent(Func, &Parms);

	if (OutFixParam != nullptr)
		*OutFixParam = std::move(Parms.OutFixParam);

	return Parms.ReturnValue;
}


// Function BP_SASManager.BP_SASManager_C.SetExtraCutinDilation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Dilation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::SetExtraCutinDilation(float Dilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "SetExtraCutinDilation");

	Params::BP_SASManager_C_SetExtraCutinDilation Parms{};

	Parms.Dilation = Dilation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.IsNeedFrameWait
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASManager_C::IsNeedFrameWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsNeedFrameWait");

	Params::BP_SASManager_C_IsNeedFrameWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASManager.BP_SASManager_C.PauseExtraCutin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::PauseExtraCutin(bool IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "PauseExtraCutin");

	Params::BP_SASManager_C_PauseExtraCutin Parms{};

	Parms.IsPause = IsPause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.IsCutinPlayingNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASManager_C::IsCutinPlayingNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsCutinPlayingNative");

	Params::BP_SASManager_C_IsCutinPlayingNative Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASManager.BP_SASManager_C.CancelSASWhenPlayingCutin
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASManager_C::CancelSASWhenPlayingCutin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "CancelSASWhenPlayingCutin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASManager.BP_SASManager_C.SetOptionNoCutin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNoCutin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::SetOptionNoCutin(bool bNoCutin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "SetOptionNoCutin");

	Params::BP_SASManager_C_SetOptionNoCutin Parms{};

	Parms.bNoCutin = bNoCutin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASManager.BP_SASManager_C.Start
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCommand                     Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::Start(const struct FFSASCommand& Parameter, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "Start");

	Params::BP_SASManager_C_Start Parms{};

	Parms.Parameter = std::move(Parameter);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_SASManager.BP_SASManager_C.UnregisterActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::UnregisterActor(class AActor* Actor, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "UnregisterActor");

	Params::BP_SASManager_C_UnregisterActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_SASManager.BP_SASManager_C.RegisterActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::RegisterActor(class AActor* Actor, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "RegisterActor");

	Params::BP_SASManager_C_RegisterActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_SASManager.BP_SASManager_C.CancelSAS
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SAS_Kind                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCancelSASCost                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::CancelSAS(E_SASKind SAS_Kind, bool bCancelSASCost, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "CancelSAS");

	Params::BP_SASManager_C_CancelSAS Parms{};

	Parms.SAS_Kind = SAS_Kind;
	Parms.bCancelSASCost = bCancelSASCost;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_SASManager.BP_SASManager_C.EndSAS
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCommand                     Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::EndSAS(const struct FFSASCommand& Parameter, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "EndSAS");

	Params::BP_SASManager_C_EndSAS Parms{};

	Parms.Parameter = std::move(Parameter);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_SASManager.BP_SASManager_C.GetCurrentCutinSASType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SASType                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetCurrentCutinSASType(E_SASKind* SASType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetCurrentCutinSASType");

	Params::BP_SASManager_C_GetCurrentCutinSASType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SASType != nullptr)
		*SASType = Parms.SASType;
}


// Function BP_SASManager.BP_SASManager_C.SAS_CommonStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCommand                     SAS_Command                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::SAS_CommonStart(const struct FFSASCommand& SAS_Command, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "SAS_CommonStart");

	Params::BP_SASManager_C_SAS_CommonStart Parms{};

	Parms.SAS_Command = std::move(SAS_Command);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_SASManager.BP_SASManager_C.SAS_CommonEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SAS_Kind                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCancelSASCost                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   RemainTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::SAS_CommonEnd(E_SASKind SAS_Kind, bool bCancelSASCost, bool* bDummy, float* RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "SAS_CommonEnd");

	Params::BP_SASManager_C_SAS_CommonEnd Parms{};

	Parms.SAS_Kind = SAS_Kind;
	Parms.bCancelSASCost = bCancelSASCost;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;

	if (RemainTime != nullptr)
		*RemainTime = Parms.RemainTime;
}


// Function BP_SASManager.BP_SASManager_C.IsCutInPlaying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bCheckSASCutInStopped                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Playing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::IsCutInPlaying(bool bCheckSASCutInStopped, bool* Playing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsCutInPlaying");

	Params::BP_SASManager_C_IsCutInPlaying Parms{};

	Parms.bCheckSASCutInStopped = bCheckSASCutInStopped;

	UObject::ProcessEvent(Func, &Parms);

	if (Playing != nullptr)
		*Playing = Parms.Playing;
}


// Function BP_SASManager.BP_SASManager_C.GetAcceleratorParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FAcceleratorParam                Param_AcceleratorParameter                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetAcceleratorParameter(struct FAcceleratorParam* Param_AcceleratorParameter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetAcceleratorParameter");

	Params::BP_SASManager_C_GetAcceleratorParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AcceleratorParameter != nullptr)
		*Param_AcceleratorParameter = std::move(Parms.Param_AcceleratorParameter);
}


// Function BP_SASManager.BP_SASManager_C.GetCutinManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ABP_CutinManager_C*               CutinManager                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetCutinManager(class ABP_CutinManager_C** CutinManager) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetCutinManager");

	Params::BP_SASManager_C_GetCutinManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CutinManager != nullptr)
		*CutinManager = Parms.CutinManager;
}


// Function BP_SASManager.BP_SASManager_C.GetCutinRowNameByESASKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_SASManager_C::GetCutinRowNameByESASKind(E_SASKind Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetCutinRowNameByESASKind");

	Params::BP_SASManager_C_GetCutinRowNameByESASKind Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASManager.BP_SASManager_C.GetSASParamData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FF_SASParam                      Param                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetSASParamData(E_SASKind Kind, int32 Level, struct FF_SASParam* Param) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetSASParamData");

	Params::BP_SASManager_C_GetSASParamData Parms{};

	Parms.Kind = Kind;
	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);

	if (Param != nullptr)
		*Param = std::move(Parms.Param);
}


// Function BP_SASManager.BP_SASManager_C.GetSASParamDataNum
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_SASKindNative                         InKind                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DataNum                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetSASParamDataNum(E_SASKindNative InKind, int32* DataNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetSASParamDataNum");

	Params::BP_SASManager_C_GetSASParamDataNum Parms{};

	Parms.InKind = InKind;

	UObject::ProcessEvent(Func, &Parms);

	if (DataNum != nullptr)
		*DataNum = Parms.DataNum;
}


// Function BP_SASManager.BP_SASManager_C.IsOptionNoCutin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bNoCutin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::IsOptionNoCutin(bool* bNoCutin) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsOptionNoCutin");

	Params::BP_SASManager_C_IsOptionNoCutin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNoCutin != nullptr)
		*bNoCutin = Parms.bNoCutin;
}


// Function BP_SASManager.BP_SASManager_C.IsAnyReserved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Reserved                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::IsAnyReserved(bool* Reserved) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsAnyReserved");

	Params::BP_SASManager_C_IsAnyReserved Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Reserved != nullptr)
		*Reserved = Parms.Reserved;
}


// Function BP_SASManager.BP_SASManager_C.IsReserved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               SAS_Kind                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reserved                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::IsReserved(E_SASKind SAS_Kind, bool* Reserved) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsReserved");

	Params::BP_SASManager_C_IsReserved Parms{};

	Parms.SAS_Kind = SAS_Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (Reserved != nullptr)
		*Reserved = Parms.Reserved;
}


// Function BP_SASManager.BP_SASManager_C.IsAnyCutInReserved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Reserved                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::IsAnyCutInReserved(bool* Reserved) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsAnyCutInReserved");

	Params::BP_SASManager_C_IsAnyCutInReserved Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Reserved != nullptr)
		*Reserved = Parms.Reserved;
}


// Function BP_SASManager.BP_SASManager_C.IsCutInReserved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reserved                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::IsCutInReserved(E_SASKind SasKind, bool* Reserved) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsCutInReserved");

	Params::BP_SASManager_C_IsCutInReserved Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (Reserved != nullptr)
		*Reserved = Parms.Reserved;
}


// Function BP_SASManager.BP_SASManager_C.GetSASExtendTimeRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASManager_C::GetSASExtendTimeRate(float* Rate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "GetSASExtendTimeRate");

	Params::BP_SASManager_C_GetSASExtendTimeRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function BP_SASManager.BP_SASManager_C.IsAcceleratorValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::IsAcceleratorValid(bool* Valid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsAcceleratorValid");

	Params::BP_SASManager_C_IsAcceleratorValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_SASManager.BP_SASManager_C.IsAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Accelerating                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASManager_C::IsAccelerating(bool* Accelerating) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASManager_C", "IsAccelerating");

	Params::BP_SASManager_C_IsAccelerating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Accelerating != nullptr)
		*Accelerating = Parms.Accelerating;
}

}

