#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ui_SceneMap

#include "Basic.hpp"

#include "BP_ui_SceneMap_classes.hpp"
#include "BP_ui_SceneMap_parameters.hpp"


namespace SDK
{

// Function BP_ui_SceneMap.BP_ui_SceneMap_C.QuestIconDestination__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::QuestIconDestination__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "QuestIconDestination__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.ExecuteUbergraph_BP_ui_SceneMap
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::ExecuteUbergraph_BP_ui_SceneMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "ExecuteUbergraph_BP_ui_SceneMap");

	Params::BP_ui_SceneMap_C_ExecuteUbergraph_BP_ui_SceneMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.UpdateMapGimmickReuse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMapGimmickObject*                Gimmick                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::UpdateMapGimmickReuse(const class AMapGimmickObject* Gimmick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "UpdateMapGimmickReuse");

	Params::BP_ui_SceneMap_C_UpdateMapGimmickReuse Parms{};

	Parms.Gimmick = Gimmick;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.UpdateMapGimmick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMapGimmickObject*                Gimmick                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::UpdateMapGimmick(const class AMapGimmickObject* Gimmick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "UpdateMapGimmick");

	Params::BP_ui_SceneMap_C_UpdateMapGimmick Parms{};

	Parms.Gimmick = Gimmick;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.ChangeMinimapFloor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Floor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::ChangeMinimapFloor(int32 Floor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "ChangeMinimapFloor");

	Params::BP_ui_SceneMap_C_ChangeMinimapFloor Parms{};

	Parms.Floor = Floor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Event_UpdateTargetPoint
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DestinationDispFlag                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::Event_UpdateTargetPoint(bool DestinationDispFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Event_UpdateTargetPoint");

	Params::BP_ui_SceneMap_C_Event_UpdateTargetPoint Parms{};

	Parms.DestinationDispFlag = DestinationDispFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "ReceiveTick");

	Params::BP_ui_SceneMap_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ui_SceneMap_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Init
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_InitPerspective
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_InitPerspective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_InitPerspective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_InitOrthographic
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_InitOrthographic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_InitOrthographic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_UpdateMinimap
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_UpdateMinimap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_UpdateMinimap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_UpdateMinimapPerspective
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_UpdateMinimapPerspective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_UpdateMinimapPerspective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_UpdateMinimapOrthographic
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_UpdateMinimapOrthographic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_UpdateMinimapOrthographic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Player_Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Player_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Player_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Player Detaile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Player_Detaile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Player Detaile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_SetHeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::Camera_SetHeight(float Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_SetHeight");

	Params::BP_ui_SceneMap_C_Camera_SetHeight Parms{};

	Parms.Height = Height;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_SetScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::Camera_SetScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_SetScale");

	Params::BP_ui_SceneMap_C_Camera_SetScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_SetPerspective
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Isperspective                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::Camera_SetPerspective(bool Isperspective, bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_SetPerspective");

	Params::BP_ui_SceneMap_C_Camera_SetPerspective Parms{};

	Parms.Isperspective = Isperspective;
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_SetRotate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRotate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::Camera_SetRotate(bool IsRotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_SetRotate");

	Params::BP_ui_SceneMap_C_Camera_SetRotate Parms{};

	Parms.IsRotate = IsRotate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.PickUpPoint_Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::PickUpPoint_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "PickUpPoint_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.SetupMinimap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CurrentName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::SetupMinimap(class FName CurrentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "SetupMinimap");

	Params::BP_ui_SceneMap_C_SetupMinimap Parms{};

	Parms.CurrentName = CurrentName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.SetupDetailMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CurrentName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::SetupDetailMap(class FName CurrentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "SetupDetailMap");

	Params::BP_ui_SceneMap_C_SetupDetailMap Parms{};

	Parms.CurrentName = CurrentName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Icon_Init
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Icon_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Icon_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.AreaChange_Init
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::AreaChange_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "AreaChange_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.BgModel_Create
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsDetailMap                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             CurrentName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::BgModel_Create(bool Param_IsDetailMap, class FName CurrentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "BgModel_Create");

	Params::BP_ui_SceneMap_C_BgModel_Create Parms{};

	Parms.Param_IsDetailMap = Param_IsDetailMap;
	Parms.CurrentName = CurrentName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.BgModel_Release
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::BgModel_Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "BgModel_Release");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.IconManager_Init
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::IconManager_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "IconManager_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Icon_SetRenderLayer
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Layer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::Icon_SetRenderLayer(uint8 Layer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Icon_SetRenderLayer");

	Params::BP_ui_SceneMap_C_Icon_SetRenderLayer Parms{};

	Parms.Layer = Layer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Icon_SetVisible
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Visibleflag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::Icon_SetVisible(int32 Visibleflag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Icon_SetVisible");

	Params::BP_ui_SceneMap_C_Icon_SetVisible Parms{};

	Parms.Visibleflag = Visibleflag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.BgModel_SetUp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::BgModel_SetUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "BgModel_SetUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.BgModel_SetMaterialParamDivide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::BgModel_SetMaterialParamDivide(float Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "BgModel_SetMaterialParamDivide");

	Params::BP_ui_SceneMap_C_BgModel_SetMaterialParamDivide Parms{};

	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetAreaNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::GetAreaNum(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetAreaNum");

	Params::BP_ui_SceneMap_C_GetAreaNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetCurrentLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Level                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::GetCurrentLevel(int32* Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetCurrentLevel");

	Params::BP_ui_SceneMap_C_GetCurrentLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Level != nullptr)
		*Level = Parms.Level;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetCurrentArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Area                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::GetCurrentArea(int32* Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetCurrentArea");

	Params::BP_ui_SceneMap_C_GetCurrentArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Area != nullptr)
		*Area = Parms.Area;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.BgModel_LoadNextArea
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::BgModel_LoadNextArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "BgModel_LoadNextArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.BgModel_LoadPreviousArea
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::BgModel_LoadPreviousArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "BgModel_LoadPreviousArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Reset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TakeOverRotate                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::Camera_Reset(bool TakeOverRotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Reset");

	Params::BP_ui_SceneMap_C_Camera_Reset Parms{};

	Parms.TakeOverRotate = TakeOverRotate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Quest Icon Destination
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Quest_Icon_Destination()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Quest Icon Destination");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetCurrentAreaName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           Param_Name                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::GetCurrentAreaName(class FString* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetCurrentAreaName");

	Params::BP_ui_SceneMap_C_GetCurrentAreaName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.SasWall_Init
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reuse                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Gimmickname                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::SasWall_Init(bool Reuse, class FName Gimmickname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "SasWall_Init");

	Params::BP_ui_SceneMap_C_SasWall_Init Parms{};

	Parms.Reuse = Reuse;
	Parms.Gimmickname = Gimmickname;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Shop_Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Shop_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Shop_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.SavePoint_Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::SavePoint_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "SavePoint_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Detail_Location
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        StickL                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Mouse                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Update                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::Camera_Detail_Location(const struct FVector2D& StickL, float Delta, float Speed, bool Mouse, bool* Update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Detail_Location");

	Params::BP_ui_SceneMap_C_Camera_Detail_Location Parms{};

	Parms.StickL = std::move(StickL);
	Parms.Delta = Delta;
	Parms.Speed = Speed;
	Parms.Mouse = Mouse;

	UObject::ProcessEvent(Func, &Parms);

	if (Update != nullptr)
		*Update = Parms.Update;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Detail_Rotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Stickr                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Mouse                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Update                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::Camera_Detail_Rotation(const struct FVector2D& Stickr, float Delta, float Speed, bool Mouse, bool* Update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Detail_Rotation");

	Params::BP_ui_SceneMap_C_Camera_Detail_Rotation Parms{};

	Parms.Stickr = std::move(Stickr);
	Parms.Delta = Delta;
	Parms.Speed = Speed;
	Parms.Mouse = Mouse;

	UObject::ProcessEvent(Func, &Parms);

	if (Update != nullptr)
		*Update = Parms.Update;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Detail_Zoom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Mouse                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Update                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::Camera_Detail_Zoom(float Delta, float InputIn, float Speed, bool Mouse, bool* Update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Detail_Zoom");

	Params::BP_ui_SceneMap_C_Camera_Detail_Zoom Parms{};

	Parms.Delta = Delta;
	Parms.InputIn = InputIn;
	Parms.Speed = Speed;
	Parms.Mouse = Mouse;

	UObject::ProcessEvent(Func, &Parms);

	if (Update != nullptr)
		*Update = Parms.Update;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Detail_Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_Detail_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Detail_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.TreasureItem_Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::TreasureItem_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "TreasureItem_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.LastAreaInit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InfoBeforeIndex                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::LastAreaInit(int32* InfoBeforeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "LastAreaInit");

	Params::BP_ui_SceneMap_C_LastAreaInit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfoBeforeIndex != nullptr)
		*InfoBeforeIndex = Parms.InfoBeforeIndex;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.BgModel_ChangeFloor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Isleap                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::BgModel_ChangeFloor(bool Param_Isleap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "BgModel_ChangeFloor");

	Params::BP_ui_SceneMap_C_BgModel_ChangeFloor Parms{};

	Parms.Param_Isleap = Param_Isleap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetCurrentAreaCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::GetCurrentAreaCheck(bool* Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetCurrentAreaCheck");

	Params::BP_ui_SceneMap_C_GetCurrentAreaCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Flag != nullptr)
		*Flag = Parms.Flag;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_SetScaleConfig
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ScaleFlag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::Camera_SetScaleConfig(bool ScaleFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_SetScaleConfig");

	Params::BP_ui_SceneMap_C_Camera_SetScaleConfig Parms{};

	Parms.ScaleFlag = ScaleFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.InitMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::InitMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "InitMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetAssetFilePath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CurrentArea                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FilePath                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::GetAssetFilePath(class FName CurrentArea, class FString* FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetAssetFilePath");

	Params::BP_ui_SceneMap_C_GetAssetFilePath Parms{};

	Parms.CurrentArea = CurrentArea;

	UObject::ProcessEvent(Func, &Parms);

	if (FilePath != nullptr)
		*FilePath = std::move(Parms.FilePath);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Icon_All_Init
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Icon_All_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Icon_All_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Icon_Minimap_Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Icon_Minimap_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Icon_Minimap_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Reset_Floor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_Reset_Floor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Reset_Floor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.QuestIcon_Init
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::QuestIcon_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "QuestIcon_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.QuestIcon_Event
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::QuestIcon_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "QuestIcon_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.QuestIcon_Update
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINoticeMessageCallType                Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::QuestIcon_Update(EUINoticeMessageCallType Type, class FName Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "QuestIcon_Update");

	Params::BP_ui_SceneMap_C_QuestIcon_Update Parms{};

	Parms.Type = Type;
	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.QuestIcon_Active
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::QuestIcon_Active(class FName Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "QuestIcon_Active");

	Params::BP_ui_SceneMap_C_QuestIcon_Active Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.SetHelpWindowList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_help_window_type                HelpwindowIcon                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::SetHelpWindowList(Enum_ui_help_window_type HelpwindowIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "SetHelpWindowList");

	Params::BP_ui_SceneMap_C_SetHelpWindowList Parms{};

	Parms.HelpwindowIcon = HelpwindowIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Detail_Leap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_Detail_Leap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Detail_Leap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_Capture
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_Capture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_Capture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetFloorIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Inputpos                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Floorindex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::GetFloorIndex(const struct FVector& Inputpos, int32* Floorindex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetFloorIndex");

	Params::BP_ui_SceneMap_C_GetFloorIndex Parms{};

	Parms.Inputpos = std::move(Inputpos);

	UObject::ProcessEvent(Func, &Parms);

	if (Floorindex != nullptr)
		*Floorindex = Parms.Floorindex;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_UpdateDetailMap
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ui_SceneMap_C::Camera_UpdateDetailMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_UpdateDetailMap");

	Params::BP_ui_SceneMap_C_Camera_UpdateDetailMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.icon_TownNpc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Icon_TownNpc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "icon_TownNpc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetIconAdjustVector
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSubclassOf<class AActor>               ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class FName                             FindName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* ABP_ui_SceneMap_C::GetIconAdjustVector(TSubclassOf<class AActor> ActorClass, class FName FindName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetIconAdjustVector");

	Params::BP_ui_SceneMap_C_GetIconAdjustVector Parms{};

	Parms.ActorClass = ActorClass;
	Parms.FindName = FindName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetShopIconAdjust
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ActorName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OffsetType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Vectordata                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RetVector                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::GetShopIconAdjust(class FName ActorName, int32 OffsetType, const struct FVector& Vectordata, struct FVector* RetVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetShopIconAdjust");

	Params::BP_ui_SceneMap_C_GetShopIconAdjust Parms{};

	Parms.ActorName = ActorName;
	Parms.OffsetType = OffsetType;
	Parms.Vectordata = std::move(Vectordata);

	UObject::ProcessEvent(Func, &Parms);

	if (RetVector != nullptr)
		*RetVector = std::move(Parms.RetVector);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GetSaveIconAdjust
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ActorName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OffsetType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Vectordata                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RetVector                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ui_SceneMap_C::GetSaveIconAdjust(class FName ActorName, int32 OffsetType, const struct FVector& Vectordata, struct FVector* RetVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GetSaveIconAdjust");

	Params::BP_ui_SceneMap_C_GetSaveIconAdjust Parms{};

	Parms.ActorName = ActorName;
	Parms.OffsetType = OffsetType;
	Parms.Vectordata = std::move(Vectordata);

	UObject::ProcessEvent(Func, &Parms);

	if (RetVector != nullptr)
		*RetVector = std::move(Parms.RetVector);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.DebugUpdateIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ui_SceneMap_C::DebugUpdateIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "DebugUpdateIcon");

	Params::BP_ui_SceneMap_C_DebugUpdateIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.Camera_SubAreaOffset
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ui_SceneMap_C::Camera_SubAreaOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "Camera_SubAreaOffset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.GimmickUseCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActorName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ui_SceneMap_C::GimmickUseCheck(class FName ActorName, bool* IsUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "GimmickUseCheck");

	Params::BP_ui_SceneMap_C_GimmickUseCheck Parms{};

	Parms.ActorName = ActorName;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUse != nullptr)
		*IsUse = Parms.IsUse;
}


// Function BP_ui_SceneMap.BP_ui_SceneMap_C.CameraSetPerspectiveNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Isperspective                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_ui_SceneMap_C::CameraSetPerspectiveNative(bool Isperspective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ui_SceneMap_C", "CameraSetPerspectiveNative");

	Params::BP_ui_SceneMap_C_CameraSetPerspectiveNative Parms{};

	Parms.Isperspective = Isperspective;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

