#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueEffectComponent

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PsychicObjectSizeParameter_structs.hpp"
#include "Engine_structs.hpp"
#include "E_SASKind_structs.hpp"
#include "SPsychicCaptureMaterial_structs.hpp"


namespace SDK::Params
{

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.ExecuteUbergraph_BP_UniqueEffectComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4081[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4082[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent");
static_assert(sizeof(BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent) == 0x000020, "Wrong size on BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent");
static_assert(offsetof(BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent, EntryPoint) == 0x000000, "Member 'BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000008, "Member 'BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000010, "Member 'BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent, Temp_bool_IsClosed_Variable) == 0x000018, "Member 'BP_UniqueEffectComponent_C_ExecuteUbergraph_BP_UniqueEffectComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueEffectComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_ReceiveTick");
static_assert(sizeof(BP_UniqueEffectComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_UniqueEffectComponent_C_ReceiveTick");
static_assert(offsetof(BP_UniqueEffectComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_UniqueEffectComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetEffectCapture
// 0x00A0 (0x00A0 - 0x0000)
struct BP_UniqueEffectComponent_C_SetEffectCapture final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4083[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         L_particle;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         L_mesh_comp;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetEffectCaptureParam_sas_kind;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEffectCaptureParam_capture;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4084[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEffectCaptureParam_rate;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_size;               // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectCaptureParam_rateAura;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_sizeAura;           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4085[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnMeshEffect_particle_system;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     CallFunc_GetEffectCaptureParam_sas_kind_1;         // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEffectCaptureParam_capture_1;          // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4086[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEffectCaptureParam_rate_1;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_size_1;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectCaptureParam_rateAura_1;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_sizeAura_1;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4087[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class URSParticleSystemComponentBase*   Temp_object_Variable;                              // 0x0098(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetEffectCapture) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetEffectCapture");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetEffectCapture) == 0x0000A0, "Wrong size on BP_UniqueEffectComponent_C_SetEffectCapture");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, FlagIn) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, L_particle) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::L_particle' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, L_mesh_comp) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::L_mesh_comp' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, L_index) == 0x000018, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::L_index' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_sas_kind) == 0x000024, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_sas_kind' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_capture) == 0x000025, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_capture' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_rate) == 0x000028, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_size) == 0x00002C, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_size' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_rateAura) == 0x000038, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_rateAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_sizeAura) == 0x00003C, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_sizeAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_SpawnMeshEffect_particle_system) == 0x000058, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_SpawnMeshEffect_particle_system' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, Temp_int_Loop_Num_Variable) == 0x000068, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_sas_kind_1) == 0x00006D, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_sas_kind_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_capture_1) == 0x00006E, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_capture_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_rate_1) == 0x000070, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_rate_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_size_1) == 0x000074, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_size_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_rateAura_1) == 0x000080, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_rateAura_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_GetEffectCaptureParam_sizeAura_1) == 0x000084, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_GetEffectCaptureParam_sizeAura_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectCapture, Temp_object_Variable) == 0x000098, "Member 'BP_UniqueEffectComponent_C_SetEffectCapture::Temp_object_Variable' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetMaterialCaptureStart
// 0x00F0 (0x00F0 - 0x0000)
struct BP_UniqueEffectComponent_C_SetMaterialCaptureStart final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4088[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_Mesh;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4089[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408A[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_GetMaterialCaptureStartCurve_material_curve; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetMateralCaptureStartParam_MaterialParam; // 0x0038(0x00A0)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408B[0x2];                                     // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetupStartPsychicCaptureMaterial_Finish;  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetMaterialCaptureStart");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart) == 0x0000F0, "Wrong size on BP_UniqueEffectComponent_C_SetMaterialCaptureStart");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, FlagIn) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, L_Mesh) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_IsValid_ReturnValue_1) == 0x00002D, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_GetMaterialCaptureStartCurve_material_curve) == 0x000030, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_GetMaterialCaptureStartCurve_material_curve' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_GetMateralCaptureStartParam_MaterialParam) == 0x000038, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_GetMateralCaptureStartParam_MaterialParam' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, Temp_int_Loop_Num_Variable_1) == 0x0000D8, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000DC, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DD, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, Temp_int_Array_Index_Variable_1) == 0x0000E4, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMaterialCaptureStart, CallFunc_SetupStartPsychicCaptureMaterial_Finish) == 0x0000EC, "Member 'BP_UniqueEffectComponent_C_SetMaterialCaptureStart::CallFunc_SetupStartPsychicCaptureMaterial_Finish' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.GetEffectCaptureParam
// 0x0180 (0x0180 - 0x0000)
struct BP_UniqueEffectComponent_C_GetEffectCaptureParam final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Capture;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408C[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RateAura;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SizeAura;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_sizeAura;                                        // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_size;                                            // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rateAura;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408D[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectSizeParameter            L_param;                                           // 0x0048(0x0138)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_GetEffectCaptureParam) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_GetEffectCaptureParam");
static_assert(sizeof(BP_UniqueEffectComponent_C_GetEffectCaptureParam) == 0x000180, "Wrong size on BP_UniqueEffectComponent_C_GetEffectCaptureParam");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, SAS_Kind) == 0x000000, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::SAS_Kind' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, Capture) == 0x000001, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::Capture' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, Rate) == 0x000004, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::Rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, Size) == 0x000008, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::Size' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, RateAura) == 0x000014, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::RateAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, SizeAura) == 0x000018, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::SizeAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, L_sizeAura) == 0x000024, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::L_sizeAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, L_size) == 0x000030, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::L_size' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, L_rateAura) == 0x00003C, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::L_rateAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, L_rate) == 0x000040, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEffectCaptureParam, L_param) == 0x000048, "Member 'BP_UniqueEffectComponent_C_GetEffectCaptureParam::L_param' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SpawnEffect
// 0x0024 (0x0024 - 0x0000)
struct BP_UniqueEffectComponent_C_SpawnEffect final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture;                                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408E[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RateAura;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SizeAura;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SpawnEffect) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_SpawnEffect");
static_assert(sizeof(BP_UniqueEffectComponent_C_SpawnEffect) == 0x000024, "Wrong size on BP_UniqueEffectComponent_C_SpawnEffect");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnEffect, SasKind) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SpawnEffect::SasKind' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnEffect, Force) == 0x000001, "Member 'BP_UniqueEffectComponent_C_SpawnEffect::Force' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnEffect, Capture) == 0x000002, "Member 'BP_UniqueEffectComponent_C_SpawnEffect::Capture' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnEffect, Rate) == 0x000004, "Member 'BP_UniqueEffectComponent_C_SpawnEffect::Rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnEffect, Size) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SpawnEffect::Size' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnEffect, RateAura) == 0x000014, "Member 'BP_UniqueEffectComponent_C_SpawnEffect::RateAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnEffect, SizeAura) == 0x000018, "Member 'BP_UniqueEffectComponent_C_SpawnEffect::SizeAura' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SpawnMeshEffect
// 0x0330 (0x0330 - 0x0000)
struct BP_UniqueEffectComponent_C_SpawnMeshEffect final
{
public:
	class UMeshComponent*                         Mesh_in;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Sas_kind_in;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Capture_in;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408F[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate_in;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size_in;                                           // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RateAura_in;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SizeAura_in;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4090[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         Particle_system;                                   // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_skeletalMesh;                                   // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4091[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         L_effect;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4092[0xF];                                     // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0060(0x0080)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4093[0x8];                                     // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_1;              // 0x00F0(0x0080)(IsPlainOldData, NoDestructor)
	class UParticleSystem*                        CallFunc_GetEmitterTemplate_Template;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_2;              // 0x0180(0x0080)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4094[0x8];                                     // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_3;              // 0x0210(0x0080)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_4;              // 0x0290(0x0080)(IsPlainOldData, NoDestructor)
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x0310(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SpawnMeshEffect) == 0x000010, "Wrong alignment on BP_UniqueEffectComponent_C_SpawnMeshEffect");
static_assert(sizeof(BP_UniqueEffectComponent_C_SpawnMeshEffect) == 0x000330, "Wrong size on BP_UniqueEffectComponent_C_SpawnMeshEffect");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, Mesh_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::Mesh_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, Sas_kind_in) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, Capture_in) == 0x000009, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::Capture_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, Rate_in) == 0x00000C, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::Rate_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, Size_in) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::Size_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, RateAura_in) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::RateAura_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, SizeAura_in) == 0x000020, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::SizeAura_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, Particle_system) == 0x000030, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::Particle_system' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, Is_skeletalMesh) == 0x000038, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::Is_skeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, L_effect) == 0x000040, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::L_effect' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000048, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, K2Node_MakeStruct_ParticleSysParam) == 0x000060, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, CallFunc_GetOwner_ReturnValue) == 0x0000E0, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, K2Node_MakeStruct_ParticleSysParam_1) == 0x0000F0, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::K2Node_MakeStruct_ParticleSysParam_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, CallFunc_GetEmitterTemplate_Template) == 0x000170, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::CallFunc_GetEmitterTemplate_Template' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000178, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, K2Node_MakeStruct_ParticleSysParam_2) == 0x000180, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::K2Node_MakeStruct_ParticleSysParam_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, CallFunc_GetOwner_ReturnValue_1) == 0x000200, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, K2Node_MakeStruct_ParticleSysParam_3) == 0x000210, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::K2Node_MakeStruct_ParticleSysParam_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, K2Node_MakeStruct_ParticleSysParam_4) == 0x000290, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::K2Node_MakeStruct_ParticleSysParam_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, K2Node_MakeArray_Array) == 0x000310, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SpawnMeshEffect, CallFunc_IsValid_ReturnValue) == 0x000320, "Member 'BP_UniqueEffectComponent_C_SpawnMeshEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.DeactivateEffect
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueEffectComponent_C_DeactivateEffect final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Capture;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_DeactivateEffect) == 0x000001, "Wrong alignment on BP_UniqueEffectComponent_C_DeactivateEffect");
static_assert(sizeof(BP_UniqueEffectComponent_C_DeactivateEffect) == 0x000002, "Wrong size on BP_UniqueEffectComponent_C_DeactivateEffect");
static_assert(offsetof(BP_UniqueEffectComponent_C_DeactivateEffect, SasKind) == 0x000000, "Member 'BP_UniqueEffectComponent_C_DeactivateEffect::SasKind' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_DeactivateEffect, Capture) == 0x000001, "Member 'BP_UniqueEffectComponent_C_DeactivateEffect::Capture' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetAsyncCommon
// 0x000C (0x000C - 0x0000)
struct BP_UniqueEffectComponent_C_SetAsyncCommon final
{
public:
	class FName                                   RefNameIn;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagIn;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetAsyncCommon) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_SetAsyncCommon");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetAsyncCommon) == 0x00000C, "Wrong size on BP_UniqueEffectComponent_C_SetAsyncCommon");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAsyncCommon, RefNameIn) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetAsyncCommon::RefNameIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAsyncCommon, FlagIn) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetAsyncCommon::FlagIn' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.GetMateralCaptureStartParam
// 0x00A8 (0x00A8 - 0x0000)
struct BP_UniqueEffectComponent_C_GetMateralCaptureStartParam final
{
public:
	E_SASKind                                     SasKindIn;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4095[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSPsychicCaptureMaterial               MaterialParam;                                     // 0x0008(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_GetMateralCaptureStartParam) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_GetMateralCaptureStartParam");
static_assert(sizeof(BP_UniqueEffectComponent_C_GetMateralCaptureStartParam) == 0x0000A8, "Wrong size on BP_UniqueEffectComponent_C_GetMateralCaptureStartParam");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetMateralCaptureStartParam, SasKindIn) == 0x000000, "Member 'BP_UniqueEffectComponent_C_GetMateralCaptureStartParam::SasKindIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetMateralCaptureStartParam, MaterialParam) == 0x000008, "Member 'BP_UniqueEffectComponent_C_GetMateralCaptureStartParam::MaterialParam' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.GetMaterialCaptureStartCurve
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve final
{
public:
	E_SASKind                                     Sas_kind_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4096[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Material_curve;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve");
static_assert(sizeof(BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve) == 0x000010, "Wrong size on BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve, Sas_kind_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve, Material_curve) == 0x000008, "Member 'BP_UniqueEffectComponent_C_GetMaterialCaptureStartCurve::Material_curve' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.InitMaterialCaptureStartParam
// 0x00B8 (0x00B8 - 0x0000)
struct BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam final
{
public:
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_material_param; // 0x0008(0x00A0)(HasGetValueTypeHash)
	class UCurveVector*                           CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam");
static_assert(sizeof(BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam) == 0x0000B8, "Wrong size on BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam");
static_assert(offsetof(BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000000, "Member 'BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam, CallFunc_GetPsychicCaptureMaterialParameter_material_param) == 0x000008, "Member 'BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam::CallFunc_GetPsychicCaptureMaterialParameter_material_param' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam, CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector) == 0x0000A8, "Member 'BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam::CallFunc_LoadMaterialCaptureStartCurve_AsCurve_Vector' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_UniqueEffectComponent_C_InitMaterialCaptureStartParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.LoadMaterialCaptureStartCurve
// 0x00C8 (0x00C8 - 0x0000)
struct BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve final
{
public:
	struct FSPsychicCaptureMaterial               SPsychicCaptureMaterial;                           // 0x0000(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UCurveVector*                           AsCurve_Vector;                                    // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4097[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           K2Node_DynamicCast_AsCurve_Vector;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve");
static_assert(sizeof(BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve) == 0x0000C8, "Wrong size on BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve, SPsychicCaptureMaterial) == 0x000000, "Member 'BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve::SPsychicCaptureMaterial' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve, AsCurve_Vector) == 0x0000A0, "Member 'BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve::AsCurve_Vector' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve, CallFunc_LoadSoftObject_ReturnValue) == 0x0000A8, "Member 'BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000B0, "Member 'BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve, K2Node_DynamicCast_AsCurve_Vector) == 0x0000B8, "Member 'BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve::K2Node_DynamicCast_AsCurve_Vector' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_UniqueEffectComponent_C_LoadMaterialCaptureStartCurve::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.InitializeParameter
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueEffectComponent_C_InitializeParameter final
{
public:
	class URSParticleSystemComponentBase*         L_particle;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_InitializeParameter) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_InitializeParameter");
static_assert(sizeof(BP_UniqueEffectComponent_C_InitializeParameter) == 0x000008, "Wrong size on BP_UniqueEffectComponent_C_InitializeParameter");
static_assert(offsetof(BP_UniqueEffectComponent_C_InitializeParameter, L_particle) == 0x000000, "Member 'BP_UniqueEffectComponent_C_InitializeParameter::L_particle' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.Initialize Component
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueEffectComponent_C_Initialize_Component final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Arrow_comp_in;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Attack_sphere_in;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Attack_capsule_in;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPsychicSasParticleComponent_C*         PsychicSasParticleComp;                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_Initialize_Component) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_Initialize_Component");
static_assert(sizeof(BP_UniqueEffectComponent_C_Initialize_Component) == 0x000028, "Wrong size on BP_UniqueEffectComponent_C_Initialize_Component");
static_assert(offsetof(BP_UniqueEffectComponent_C_Initialize_Component, Mesh_comp_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_Initialize_Component::Mesh_comp_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Initialize_Component, Arrow_comp_in) == 0x000008, "Member 'BP_UniqueEffectComponent_C_Initialize_Component::Arrow_comp_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Initialize_Component, Attack_sphere_in) == 0x000010, "Member 'BP_UniqueEffectComponent_C_Initialize_Component::Attack_sphere_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Initialize_Component, Attack_capsule_in) == 0x000018, "Member 'BP_UniqueEffectComponent_C_Initialize_Component::Attack_capsule_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Initialize_Component, PsychicSasParticleComp) == 0x000020, "Member 'BP_UniqueEffectComponent_C_Initialize_Component::PsychicSasParticleComp' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.AddCaptureMesh
// 0x0048 (0x0048 - 0x0000)
struct BP_UniqueEffectComponent_C_AddCaptureMesh final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4098[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4099[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_AddCaptureMesh) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_AddCaptureMesh");
static_assert(sizeof(BP_UniqueEffectComponent_C_AddCaptureMesh) == 0x000048, "Wrong size on BP_UniqueEffectComponent_C_AddCaptureMesh");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, Mesh) == 0x000000, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, CallFunc_GetChildrenComponents_Children) == 0x000008, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, K2Node_DynamicCast_AsMesh_Component) == 0x000020, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_AddCaptureMesh, CallFunc_Array_Add_ReturnValue_1) == 0x000040, "Member 'BP_UniqueEffectComponent_C_AddCaptureMesh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdateAsync
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdateAsync final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdateAsync) == 0x000001, "Wrong alignment on BP_UniqueEffectComponent_C_UpdateAsync");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdateAsync) == 0x000001, "Wrong size on BP_UniqueEffectComponent_C_UpdateAsync");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateAsync, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdateAsync::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdateCheckTimeDilation
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdateCheckTimeDilation final
{
public:
	bool                                          L_dilation;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_timedilation;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        L_hero;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdateCheckTimeDilation) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_UpdateCheckTimeDilation");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdateCheckTimeDilation) == 0x000010, "Wrong size on BP_UniqueEffectComponent_C_UpdateCheckTimeDilation");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateCheckTimeDilation, L_dilation) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdateCheckTimeDilation::L_dilation' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateCheckTimeDilation, L_timedilation) == 0x000004, "Member 'BP_UniqueEffectComponent_C_UpdateCheckTimeDilation::L_timedilation' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateCheckTimeDilation, L_hero) == 0x000008, "Member 'BP_UniqueEffectComponent_C_UpdateCheckTimeDilation::L_hero' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdatePsychicObjectEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect final
{
public:
	class URSParticleSystemComponentBase*         L_eftComp;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_str;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect) == 0x000018, "Wrong size on BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect, L_eftComp) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect::L_eftComp' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect, L_str) == 0x000008, "Member 'BP_UniqueEffectComponent_C_UpdatePsychicObjectEffect::L_str' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdateMaterialCaptureStart
// 0x0030 (0x0030 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart final
{
public:
	class UMeshComponent*                         L_Mesh;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409B[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetupStartPsychicCaptureMaterial_Finish;  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409C[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeltaSecond_DeltaSecond;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart) == 0x000030, "Wrong size on BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, L_Mesh) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, CallFunc_SetupStartPsychicCaptureMaterial_Finish) == 0x000021, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::CallFunc_SetupStartPsychicCaptureMaterial_Finish' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, CallFunc_GetDeltaSecond_DeltaSecond) == 0x000024, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::CallFunc_GetDeltaSecond_DeltaSecond' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_UniqueEffectComponent_C_UpdateMaterialCaptureStart::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.GetDeltaSecond
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueEffectComponent_C_GetDeltaSecond final
{
public:
	float                                         DeltaSecond;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_GetDeltaSecond) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_GetDeltaSecond");
static_assert(sizeof(BP_UniqueEffectComponent_C_GetDeltaSecond) == 0x000008, "Wrong size on BP_UniqueEffectComponent_C_GetDeltaSecond");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetDeltaSecond, DeltaSecond) == 0x000000, "Member 'BP_UniqueEffectComponent_C_GetDeltaSecond::DeltaSecond' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetDeltaSecond, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'BP_UniqueEffectComponent_C_GetDeltaSecond::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetPhaseCapture
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueEffectComponent_C_SetPhaseCapture final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_success_in;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Air_in;                                            // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetPhaseCapture) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetPhaseCapture");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetPhaseCapture) == 0x000018, "Wrong size on BP_UniqueEffectComponent_C_SetPhaseCapture");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseCapture, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetPhaseCapture::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseCapture, Combo_in) == 0x000001, "Member 'BP_UniqueEffectComponent_C_SetPhaseCapture::Combo_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseCapture, Capture_success_in) == 0x000002, "Member 'BP_UniqueEffectComponent_C_SetPhaseCapture::Capture_success_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseCapture, Air_in) == 0x000003, "Member 'BP_UniqueEffectComponent_C_SetPhaseCapture::Air_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseCapture, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetPhaseCapture::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseCapture, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetPhaseCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseCapture, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_UniqueEffectComponent_C_SetPhaseCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetEffectAura
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueEffectComponent_C_SetEffectAura final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Instance_on_in;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409E[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetEffectAura) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetEffectAura");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetEffectAura) == 0x000018, "Wrong size on BP_UniqueEffectComponent_C_SetEffectAura");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAura, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetEffectAura::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAura, Instance_on_in) == 0x000001, "Member 'BP_UniqueEffectComponent_C_SetEffectAura::Instance_on_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAura, L_psyObj) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetEffectAura::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAura, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetEffectAura::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetPsychicObjectCapture
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueEffectComponent_C_SetPsychicObjectCapture final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        Capture_owner_in;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Capture_success_in;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Air_in;                                            // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0013(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetPsychicObjectCapture) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetPsychicObjectCapture");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetPsychicObjectCapture) == 0x000018, "Wrong size on BP_UniqueEffectComponent_C_SetPsychicObjectCapture");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectCapture, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectCapture::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectCapture, Capture_owner_in) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectCapture::Capture_owner_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectCapture, Capture_success_in) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectCapture::Capture_success_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectCapture, Combo_in) == 0x000011, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectCapture::Combo_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectCapture, Air_in) == 0x000012, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectCapture::Air_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectCapture, Return) == 0x000013, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectCapture::Return' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetPsychicObjectAttack
// 0x0030 (0x0030 - 0x0000)
struct BP_UniqueEffectComponent_C_SetPsychicObjectAttack final
{
public:
	class AActor*                                 Target_actor_in;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Direct_drop_in;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unique_in;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Air_combo_in;                                      // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          brain_field_in;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A0[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Combo_level_in;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Combo_index_in;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Attract_time_in;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Anim_seq_in;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectBrainFieldAttackType            Attack_type_in;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag_in;                                           // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x002A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_return;                                          // 0x002B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetPsychicObjectAttack");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack) == 0x000030, "Wrong size on BP_UniqueEffectComponent_C_SetPsychicObjectAttack");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Target_actor_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Target_actor_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Direct_drop_in) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Direct_drop_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Unique_in) == 0x000009, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Unique_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Combo_in) == 0x00000A, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Combo_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Air_combo_in) == 0x00000B, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Air_combo_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, brain_field_in) == 0x00000C, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::brain_field_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Combo_level_in) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Combo_level_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Combo_index_in) == 0x000014, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Combo_index_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Attract_time_in) == 0x000018, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Attract_time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Anim_seq_in) == 0x000020, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Anim_seq_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Attack_type_in) == 0x000028, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Attack_type_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Flag_in) == 0x000029, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, Return) == 0x00002A, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPsychicObjectAttack, L_return) == 0x00002B, "Member 'BP_UniqueEffectComponent_C_SetPsychicObjectAttack::L_return' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetEffectAuraGrow
// 0x0006 (0x0006 - 0x0000)
struct BP_UniqueEffectComponent_C_SetEffectAuraGrow final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Force_off;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Instance_on;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetEffectAuraGrow) == 0x000001, "Wrong alignment on BP_UniqueEffectComponent_C_SetEffectAuraGrow");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetEffectAuraGrow) == 0x000006, "Wrong size on BP_UniqueEffectComponent_C_SetEffectAuraGrow");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAuraGrow, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetEffectAuraGrow::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAuraGrow, Force_off) == 0x000001, "Member 'BP_UniqueEffectComponent_C_SetEffectAuraGrow::Force_off' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAuraGrow, Instance_on) == 0x000002, "Member 'BP_UniqueEffectComponent_C_SetEffectAuraGrow::Instance_on' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAuraGrow, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_UniqueEffectComponent_C_SetEffectAuraGrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAuraGrow, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'BP_UniqueEffectComponent_C_SetEffectAuraGrow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAuraGrow, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000005, "Member 'BP_UniqueEffectComponent_C_SetEffectAuraGrow::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetMIParameterAura
// 0x0030 (0x0030 - 0x0000)
struct BP_UniqueEffectComponent_C_SetMIParameterAura final
{
public:
	float                                         Value_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_Mesh;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A3[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A4[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetMIParameterAura) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetMIParameterAura");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetMIParameterAura) == 0x000030, "Wrong size on BP_UniqueEffectComponent_C_SetMIParameterAura");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, Value_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::Value_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, L_Mesh) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterAura, CallFunc_IsValid_ReturnValue_1) == 0x00002C, "Member 'BP_UniqueEffectComponent_C_SetMIParameterAura::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetOutline
// 0x000C (0x000C - 0x0000)
struct BP_UniqueEffectComponent_C_SetOutline final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_flag;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A5[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetOutline) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_SetOutline");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetOutline) == 0x00000C, "Wrong size on BP_UniqueEffectComponent_C_SetOutline");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetOutline, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetOutline::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetOutline, L_flag) == 0x000001, "Member 'BP_UniqueEffectComponent_C_SetOutline::L_flag' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetOutline, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'BP_UniqueEffectComponent_C_SetOutline::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetOutline, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'BP_UniqueEffectComponent_C_SetOutline::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetOutline, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetOutline::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetMIParameterEmission
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueEffectComponent_C_SetMIParameterEmission final
{
public:
	float                                         Value_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetMIParameterEmission) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_SetMIParameterEmission");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetMIParameterEmission) == 0x000004, "Wrong size on BP_UniqueEffectComponent_C_SetMIParameterEmission");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetMIParameterEmission, Value_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetMIParameterEmission::Value_in' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdateEffectAura
// 0x0034 (0x0034 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdateEffectAura final
{
public:
	float                                         AuraMax;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A6[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A7[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A8[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdateEffectAura) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_UpdateEffectAura");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdateEffectAura) == 0x000034, "Wrong size on BP_UniqueEffectComponent_C_UpdateEffectAura");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, AuraMax) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::AuraMax' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000021, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_FClamp_ReturnValue_1) == 0x000024, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000028, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectAura, CallFunc_FClamp_ReturnValue_2) == 0x000030, "Member 'BP_UniqueEffectComponent_C_UpdateEffectAura::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdatePsyCompOld
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdatePsyCompOld final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdatePsyCompOld) == 0x000001, "Wrong alignment on BP_UniqueEffectComponent_C_UpdatePsyCompOld");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdatePsyCompOld) == 0x000001, "Wrong size on BP_UniqueEffectComponent_C_UpdatePsyCompOld");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdatePsyCompOld, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdatePsyCompOld::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdateAsyncAttackThrow
// 0x000C (0x000C - 0x0000)
struct BP_UniqueEffectComponent_C_UpdateAsyncAttackThrow final
{
public:
	struct FVector                                L_axis;                                            // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdateAsyncAttackThrow) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_UpdateAsyncAttackThrow");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdateAsyncAttackThrow) == 0x00000C, "Wrong size on BP_UniqueEffectComponent_C_UpdateAsyncAttackThrow");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateAsyncAttackThrow, L_axis) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdateAsyncAttackThrow::L_axis' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdateDestroy
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdateDestroy final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdateDestroy) == 0x000001, "Wrong alignment on BP_UniqueEffectComponent_C_UpdateDestroy");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdateDestroy) == 0x000001, "Wrong size on BP_UniqueEffectComponent_C_UpdateDestroy");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateDestroy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdateDestroy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetEffectDestroy
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueEffectComponent_C_SetEffectDestroy final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetEffectDestroy) == 0x000001, "Wrong alignment on BP_UniqueEffectComponent_C_SetEffectDestroy");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetEffectDestroy) == 0x000001, "Wrong size on BP_UniqueEffectComponent_C_SetEffectDestroy");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectDestroy, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetEffectDestroy::Flag_in' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdateEffectDestroy
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdateEffectDestroy final
{
public:
	float                                         L_rate;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdateEffectDestroy) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_UpdateEffectDestroy");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdateEffectDestroy) == 0x000004, "Wrong size on BP_UniqueEffectComponent_C_UpdateEffectDestroy");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdateEffectDestroy, L_rate) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdateEffectDestroy::L_rate' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetParameterEffectFade
// 0x000C (0x000C - 0x0000)
struct BP_UniqueEffectComponent_C_SetParameterEffectFade final
{
public:
	float                                         Rate_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetParameterEffectFade) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_SetParameterEffectFade");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetParameterEffectFade) == 0x00000C, "Wrong size on BP_UniqueEffectComponent_C_SetParameterEffectFade");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetParameterEffectFade, Rate_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetParameterEffectFade::Rate_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetParameterEffectFade, L_rate) == 0x000004, "Member 'BP_UniqueEffectComponent_C_SetParameterEffectFade::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetParameterEffectFade, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetParameterEffectFade::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetParameterCopy
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueEffectComponent_C_SetParameterCopy final
{
public:
	float                                         Rate_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetParameterCopy) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_SetParameterCopy");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetParameterCopy) == 0x000004, "Wrong size on BP_UniqueEffectComponent_C_SetParameterCopy");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetParameterCopy, Rate_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetParameterCopy::Rate_in' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdatePsyMain
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueEffectComponent_C_UpdatePsyMain final
{
public:
	float                                         Delta_second;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_str;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdatePsyMain) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_UpdatePsyMain");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdatePsyMain) == 0x000018, "Wrong size on BP_UniqueEffectComponent_C_UpdatePsyMain");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdatePsyMain, Delta_second) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdatePsyMain::Delta_second' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdatePsyMain, L_str) == 0x000008, "Member 'BP_UniqueEffectComponent_C_UpdatePsyMain::L_str' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.UpdatePsychicDelta
// 0x000C (0x000C - 0x0000)
struct BP_UniqueEffectComponent_C_UpdatePsychicDelta final
{
public:
	float                                         Delta_second;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicDeltaSecond_delta_second;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicDeltaSecond_rate;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_UpdatePsychicDelta) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_UpdatePsychicDelta");
static_assert(sizeof(BP_UniqueEffectComponent_C_UpdatePsychicDelta) == 0x00000C, "Wrong size on BP_UniqueEffectComponent_C_UpdatePsychicDelta");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdatePsychicDelta, Delta_second) == 0x000000, "Member 'BP_UniqueEffectComponent_C_UpdatePsychicDelta::Delta_second' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdatePsychicDelta, CallFunc_GetPsychicDeltaSecond_delta_second) == 0x000004, "Member 'BP_UniqueEffectComponent_C_UpdatePsychicDelta::CallFunc_GetPsychicDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_UpdatePsychicDelta, CallFunc_GetPsychicDeltaSecond_rate) == 0x000008, "Member 'BP_UniqueEffectComponent_C_UpdatePsychicDelta::CallFunc_GetPsychicDeltaSecond_rate' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.CalcDeltaSecond
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueEffectComponent_C_CalcDeltaSecond final
{
public:
	float                                         Delta_second;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Calc_delta_second;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_CalcDeltaSecond) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_CalcDeltaSecond");
static_assert(sizeof(BP_UniqueEffectComponent_C_CalcDeltaSecond) == 0x000008, "Wrong size on BP_UniqueEffectComponent_C_CalcDeltaSecond");
static_assert(offsetof(BP_UniqueEffectComponent_C_CalcDeltaSecond, Delta_second) == 0x000000, "Member 'BP_UniqueEffectComponent_C_CalcDeltaSecond::Delta_second' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_CalcDeltaSecond, Calc_delta_second) == 0x000004, "Member 'BP_UniqueEffectComponent_C_CalcDeltaSecond::Calc_delta_second' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.GetPsychicDeltaSecond
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueEffectComponent_C_GetPsychicDeltaSecond final
{
public:
	bool                                          bPsychicSpeed;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGetRate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40AA[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta_second;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_GetPsychicDeltaSecond) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_GetPsychicDeltaSecond");
static_assert(sizeof(BP_UniqueEffectComponent_C_GetPsychicDeltaSecond) == 0x000010, "Wrong size on BP_UniqueEffectComponent_C_GetPsychicDeltaSecond");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetPsychicDeltaSecond, bPsychicSpeed) == 0x000000, "Member 'BP_UniqueEffectComponent_C_GetPsychicDeltaSecond::bPsychicSpeed' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetPsychicDeltaSecond, bGetRate) == 0x000001, "Member 'BP_UniqueEffectComponent_C_GetPsychicDeltaSecond::bGetRate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetPsychicDeltaSecond, Delta_second) == 0x000004, "Member 'BP_UniqueEffectComponent_C_GetPsychicDeltaSecond::Delta_second' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetPsychicDeltaSecond, Rate) == 0x000008, "Member 'BP_UniqueEffectComponent_C_GetPsychicDeltaSecond::Rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetPsychicDeltaSecond, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'BP_UniqueEffectComponent_C_GetPsychicDeltaSecond::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetEffectAttack
// 0x0198 (0x0198 - 0x0000)
struct BP_UniqueEffectComponent_C_SetEffectAttack final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     Sas_kind_in;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         TmpMesh;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         TmpEffectAttack;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_sizeAura;                                        // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rateAura;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_size;                                            // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_isSkeletal;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40AC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        L_effect;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_objSize;                                         // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AD[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        L_size_auraList;                                   // 0x0050(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<float>                                 L_rate_auraList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FVector>                        L_sizeList;                                        // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<float>                                 L_rateList;                                        // 0x0080(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40AE[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40AF[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B0[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetEffectCaptureParam_sas_kind;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEffectCaptureParam_capture;            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B1[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEffectCaptureParam_rate;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_size;               // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectCaptureParam_rateAura;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEffectCaptureParam_sizeAura;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B2[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B3[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B4[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_3;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B5[0x2];                                     // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_2;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B6[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B7[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B8[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_3;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetEffectAttack) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetEffectAttack");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetEffectAttack) == 0x000198, "Wrong size on BP_UniqueEffectComponent_C_SetEffectAttack");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Sas_kind_in) == 0x000001, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, TmpMesh) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::TmpMesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, TmpEffectAttack) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::TmpEffectAttack' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_sizeAura) == 0x000018, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_sizeAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_rateAura) == 0x000024, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_rateAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_size) == 0x000028, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_size' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_rate) == 0x000034, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_isSkeletal) == 0x000038, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_isSkeletal' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_effect) == 0x000040, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_effect' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_objSize) == 0x000048, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_objSize' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_size_auraList) == 0x000050, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_size_auraList' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_rate_auraList) == 0x000060, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_rate_auraList' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_sizeList) == 0x000070, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_sizeList' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, L_rateList) == 0x000080, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::L_rateList' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_bool_Variable) == 0x000090, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_object_Variable) == 0x000098, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_object_Variable_1) == 0x0000A0, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x0000A8, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_object_Variable_2) == 0x0000B8, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_int_Loop_Num_Variable) == 0x0000C4, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_sas_kind) == 0x0000CC, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_sas_kind' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_capture) == 0x0000CD, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_capture' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_rate) == 0x0000D0, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_size) == 0x0000D4, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_size' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_rateAura) == 0x0000E0, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_rateAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_GetEffectCaptureParam_sizeAura) == 0x0000E4, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_GetEffectCaptureParam_sizeAura' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_int_Loop_Counter_Variable) == 0x0000F0, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_name_Variable) == 0x0000FC, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_name_Variable_1) == 0x000104, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, K2Node_SwitchEnum_CmpSuccess) == 0x00010C, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, K2Node_Select_Default) == 0x000110, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_bool_Variable_1) == 0x000118, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_object_Variable_3) == 0x000120, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_object_Variable_4) == 0x000128, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, K2Node_Select_Default_1) == 0x000130, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Greater_IntInt_ReturnValue) == 0x00013C, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_bool_Variable_2) == 0x00013D, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_GetOwner_ReturnValue) == 0x000140, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, K2Node_Select_Default_2) == 0x000148, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_int_Loop_Num_Variable_1) == 0x000150, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_int_Array_Index_Variable_1) == 0x000154, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_int_Loop_Counter_Variable_1) == 0x000158, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Array_Length_ReturnValue_1) == 0x00015C, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Less_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000161, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Add_IntInt_ReturnValue_1) == 0x000164, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Array_Length_ReturnValue_2) == 0x000168, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_object_Variable_5) == 0x000170, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000178, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Array_Add_ReturnValue) == 0x000180, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, Temp_bool_Variable_3) == 0x000184, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, K2Node_Select_Default_3) == 0x000188, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttack, CallFunc_Array_Length_ReturnValue_3) == 0x000190, "Member 'BP_UniqueEffectComponent_C_SetEffectAttack::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetEffectAttackThrow
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueEffectComponent_C_SetEffectAttackThrow final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B9[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetEffectAttackThrow) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetEffectAttackThrow");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetEffectAttackThrow) == 0x000020, "Wrong size on BP_UniqueEffectComponent_C_SetEffectAttackThrow");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttackThrow, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetEffectAttackThrow::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttackThrow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetEffectAttackThrow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetEffectAttackThrow, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000018, "Member 'BP_UniqueEffectComponent_C_SetEffectAttackThrow::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetAttackThrow
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueEffectComponent_C_SetAttackThrow final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40BA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Throw_speed_in;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Homing_speed_in;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_throwDirHz;                                      // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetAttackThrow) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_SetAttackThrow");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetAttackThrow) == 0x000018, "Wrong size on BP_UniqueEffectComponent_C_SetAttackThrow");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackThrow, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetAttackThrow::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackThrow, Throw_speed_in) == 0x000004, "Member 'BP_UniqueEffectComponent_C_SetAttackThrow::Throw_speed_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackThrow, Homing_speed_in) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetAttackThrow::Homing_speed_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackThrow, L_throwDirHz) == 0x00000C, "Member 'BP_UniqueEffectComponent_C_SetAttackThrow::L_throwDirHz' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetPhaseAttack
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueEffectComponent_C_SetPhaseAttack final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetPhaseAttack) == 0x000001, "Wrong alignment on BP_UniqueEffectComponent_C_SetPhaseAttack");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetPhaseAttack) == 0x000001, "Wrong size on BP_UniqueEffectComponent_C_SetPhaseAttack");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseAttack, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetPhaseAttack::Flag_in' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetPhaseDestroy
// 0x000C (0x000C - 0x0000)
struct BP_UniqueEffectComponent_C_SetPhaseDestroy final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40BB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delay_time_in;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_destroyDelayTime;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetPhaseDestroy) == 0x000004, "Wrong alignment on BP_UniqueEffectComponent_C_SetPhaseDestroy");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetPhaseDestroy) == 0x00000C, "Wrong size on BP_UniqueEffectComponent_C_SetPhaseDestroy");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseDestroy, Flag_in) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetPhaseDestroy::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseDestroy, Delay_time_in) == 0x000004, "Member 'BP_UniqueEffectComponent_C_SetPhaseDestroy::Delay_time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetPhaseDestroy, L_destroyDelayTime) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetPhaseDestroy::L_destroyDelayTime' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.LoadEffectParameter
// 0x0198 (0x0198 - 0x0000)
struct BP_UniqueEffectComponent_C_LoadEffectParameter final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickObjectBase_C*             K2Node_DynamicCast_AsBP_Map_Gimmick_Object_Base;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40BC[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BD[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPsychicObjectSizeParameter            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0138)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_LoadEffectParameter) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_LoadEffectParameter");
static_assert(sizeof(BP_UniqueEffectComponent_C_LoadEffectParameter) == 0x000198, "Wrong size on BP_UniqueEffectComponent_C_LoadEffectParameter");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, K2Node_DynamicCast_AsBP_Map_Gimmick_Object_Base) == 0x000008, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::K2Node_DynamicCast_AsBP_Map_Gimmick_Object_Base' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, CallFunc_GetEnumeratorName_ReturnValue) == 0x000014, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, CallFunc_RightChop_ReturnValue) == 0x000030, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_LoadEffectParameter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000190, "Member 'BP_UniqueEffectComponent_C_LoadEffectParameter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.Set Capture Effect Off
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueEffectComponent_C_Set_Capture_Effect_Off final
{
public:
	class URSParticleSystemComponentBase*         L_particle;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40BE[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_Set_Capture_Effect_Off");
static_assert(sizeof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off) == 0x000020, "Wrong size on BP_UniqueEffectComponent_C_Set_Capture_Effect_Off");
static_assert(offsetof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off, L_particle) == 0x000000, "Member 'BP_UniqueEffectComponent_C_Set_Capture_Effect_Off::L_particle' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_UniqueEffectComponent_C_Set_Capture_Effect_Off::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_UniqueEffectComponent_C_Set_Capture_Effect_Off::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_UniqueEffectComponent_C_Set_Capture_Effect_Off::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_UniqueEffectComponent_C_Set_Capture_Effect_Off::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'BP_UniqueEffectComponent_C_Set_Capture_Effect_Off::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_UniqueEffectComponent_C_Set_Capture_Effect_Off::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_Set_Capture_Effect_Off, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_Set_Capture_Effect_Off::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.SetAttackEffectOff
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueEffectComponent_C_SetAttackEffectOff final
{
public:
	class URSParticleSystemComponentBase*         L_particle;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40BF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueEffectComponent_C_SetAttackEffectOff) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_SetAttackEffectOff");
static_assert(sizeof(BP_UniqueEffectComponent_C_SetAttackEffectOff) == 0x000028, "Wrong size on BP_UniqueEffectComponent_C_SetAttackEffectOff");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackEffectOff, L_particle) == 0x000000, "Member 'BP_UniqueEffectComponent_C_SetAttackEffectOff::L_particle' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackEffectOff, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_UniqueEffectComponent_C_SetAttackEffectOff::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackEffectOff, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_UniqueEffectComponent_C_SetAttackEffectOff::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackEffectOff, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_UniqueEffectComponent_C_SetAttackEffectOff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackEffectOff, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_UniqueEffectComponent_C_SetAttackEffectOff::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackEffectOff, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_UniqueEffectComponent_C_SetAttackEffectOff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackEffectOff, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_UniqueEffectComponent_C_SetAttackEffectOff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_SetAttackEffectOff, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_UniqueEffectComponent_C_SetAttackEffectOff::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueEffectComponent.BP_UniqueEffectComponent_C.GetEmitterTemplate
// 0x0110 (0x0110 - 0x0000)
struct BP_UniqueEffectComponent_C_GetEmitterTemplate final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCapture;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSkeletalMesh;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40C0[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Template;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40C1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_11;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_12;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40C3[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C4[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_13;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_14;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_15;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_16;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_17;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_18;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_19;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_20;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_21;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_22;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_23;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_2;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_3;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueEffectComponent_C_GetEmitterTemplate) == 0x000008, "Wrong alignment on BP_UniqueEffectComponent_C_GetEmitterTemplate");
static_assert(sizeof(BP_UniqueEffectComponent_C_GetEmitterTemplate) == 0x000110, "Wrong size on BP_UniqueEffectComponent_C_GetEmitterTemplate");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, SasKind) == 0x000000, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::SasKind' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, IsCapture) == 0x000001, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::IsCapture' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, IsSkeletalMesh) == 0x000002, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::IsSkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Template) == 0x000008, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Template' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_bool_Variable) == 0x000010, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable) == 0x000018, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_1) == 0x000020, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_byte_Variable) == 0x000028, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_2) == 0x000030, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_3) == 0x000038, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_4) == 0x000040, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_5) == 0x000048, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_6) == 0x000050, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_7) == 0x000058, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_8) == 0x000060, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_9) == 0x000068, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_10) == 0x000070, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_11) == 0x000078, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_12) == 0x000080, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_bool_Variable_1) == 0x000088, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, K2Node_Select_Default) == 0x000090, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_byte_Variable_1) == 0x000098, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_13) == 0x0000A0, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_14) == 0x0000A8, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_15) == 0x0000B0, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_16) == 0x0000B8, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_17) == 0x0000C0, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_18) == 0x0000C8, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_19) == 0x0000D0, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_20) == 0x0000D8, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_21) == 0x0000E0, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_22) == 0x0000E8, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, Temp_object_Variable_23) == 0x0000F0, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, K2Node_Select_Default_1) == 0x0000F8, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, K2Node_Select_Default_2) == 0x000100, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueEffectComponent_C_GetEmitterTemplate, K2Node_Select_Default_3) == 0x000108, "Member 'BP_UniqueEffectComponent_C_GetEmitterTemplate::K2Node_Select_Default_3' has a wrong offset!");

}

