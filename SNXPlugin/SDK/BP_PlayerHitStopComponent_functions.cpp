#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerHitStopComponent

#include "Basic.hpp"

#include "BP_PlayerHitStopComponent_classes.hpp"
#include "BP_PlayerHitStopComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.BeginHitSlow__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::BeginHitSlow__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "BeginHitSlow__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.ExecuteUbergraph_BP_PlayerHitStopComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::ExecuteUbergraph_BP_PlayerHitStopComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "ExecuteUbergraph_BP_PlayerHitStopComponent");

	Params::BP_PlayerHitStopComponent_C_ExecuteUbergraph_BP_PlayerHitStopComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.DelayOnceEnd
// (BlueprintCallable, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::DelayOnceEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "DelayOnceEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "ReceiveTick");

	Params::BP_PlayerHitStopComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.Update
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::Update(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "Update");

	Params::BP_PlayerHitStopComponent_C_Update Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.StartWeakHitStop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHitStopType                      HitType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HitStopSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HitStopRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAllThrow                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTargetHitStop                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InStartSlowOnce                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerHitStopComponent_C::StartWeakHitStop(EPlayerHitStopType HitType, class AActor* Enemy, class AActor* Attacker, float HitStopSeconds, float HitStopRate, bool IsAllThrow, class AActor* Player, bool IsTargetHitStop, bool InStartSlowOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "StartWeakHitStop");

	Params::BP_PlayerHitStopComponent_C_StartWeakHitStop Parms{};

	Parms.HitType = HitType;
	Parms.Enemy = Enemy;
	Parms.Attacker = Attacker;
	Parms.HitStopSeconds = HitStopSeconds;
	Parms.HitStopRate = HitStopRate;
	Parms.IsAllThrow = IsAllThrow;
	Parms.Player = Player;
	Parms.IsTargetHitStop = IsTargetHitStop;
	Parms.InStartSlowOnce = InStartSlowOnce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.IsTargetLockCanHitStop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTargetHitStop                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerHitStopComponent_C::IsTargetLockCanHitStop(class AActor* TargetActor, class AActor* Enemy, class AActor* Attacker, bool* IsTargetHitStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "IsTargetLockCanHitStop");

	Params::BP_PlayerHitStopComponent_C_IsTargetLockCanHitStop Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Enemy = Enemy;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (IsTargetHitStop != nullptr)
		*IsTargetHitStop = Parms.IsTargetHitStop;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.Exit
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.Clear
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.ForceEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::ForceEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "ForceEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.GetPriority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHitStopType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Priority                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::GetPriority(EPlayerHitStopType Type, int32* Param_Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "GetPriority");

	Params::BP_PlayerHitStopComponent_C_GetPriority Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Priority != nullptr)
		*Param_Priority = Parms.Param_Priority;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.GetHitStopParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHitStopType                      NewType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerHitStopType                      CurrentType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerHitStopType                      SuccessType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Seconds                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DelayTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::GetHitStopParam(EPlayerHitStopType NewType, EPlayerHitStopType CurrentType, EPlayerHitStopType* SuccessType, bool* IsSuccess, float* Seconds, float* Rate, float* DelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "GetHitStopParam");

	Params::BP_PlayerHitStopComponent_C_GetHitStopParam Parms{};

	Parms.NewType = NewType;
	Parms.CurrentType = CurrentType;

	UObject::ProcessEvent(Func, &Parms);

	if (SuccessType != nullptr)
		*SuccessType = Parms.SuccessType;

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;

	if (Rate != nullptr)
		*Rate = Parms.Rate;

	if (DelayTime != nullptr)
		*DelayTime = Parms.DelayTime;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.GetPlayerDamageType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerDamageKind                       DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerHitStopType                      HitStopType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::GetPlayerDamageType(EPlayerDamageKind DamageType, EPlayerHitStopType* HitStopType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "GetPlayerDamageType");

	Params::BP_PlayerHitStopComponent_C_GetPlayerDamageType Parms{};

	Parms.DamageType = DamageType;

	UObject::ProcessEvent(Func, &Parms);

	if (HitStopType != nullptr)
		*HitStopType = Parms.HitStopType;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.ClearStartDelay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::ClearStartDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "ClearStartDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.SetStartDelay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHitStopType                      HitType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAllThrow                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EHCHitStopCauseType                     CauseType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bTargetIgnore                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InPlaySlowOnce                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerHitStopComponent_C::SetStartDelay(EPlayerHitStopType HitType, class AActor* Attacker, class AActor* Enemy, bool IsAllThrow, EHCHitStopCauseType CauseType, bool bTargetIgnore, bool InPlaySlowOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "SetStartDelay");

	Params::BP_PlayerHitStopComponent_C_SetStartDelay Parms{};

	Parms.HitType = HitType;
	Parms.Attacker = Attacker;
	Parms.Enemy = Enemy;
	Parms.IsAllThrow = IsAllThrow;
	Parms.CauseType = CauseType;
	Parms.bTargetIgnore = bTargetIgnore;
	Parms.InPlaySlowOnce = InPlaySlowOnce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.GetPsychicObjHitStopType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCSkillExtraType                       ExtraType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerHitStopType                      HitStopType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::GetPsychicObjHitStopType(EHCSkillExtraType ExtraType, EPlayerHitStopType* HitStopType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "GetPsychicObjHitStopType");

	Params::BP_PlayerHitStopComponent_C_GetPsychicObjHitStopType Parms{};

	Parms.ExtraType = ExtraType;

	UObject::ProcessEvent(Func, &Parms);

	if (HitStopType != nullptr)
		*HitStopType = Parms.HitStopType;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.GetParamByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHitStopType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Second                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DelayTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::GetParamByType(EPlayerHitStopType Type, float* Second, float* Rate, float* DelayTime, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "GetParamByType");

	Params::BP_PlayerHitStopComponent_C_GetParamByType Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Second != nullptr)
		*Second = Parms.Second;

	if (Rate != nullptr)
		*Rate = Parms.Rate;

	if (DelayTime != nullptr)
		*DelayTime = Parms.DelayTime;

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.IsStartCauseType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerHitStopType                      HitSlowType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCHitStopCauseType                     CauseType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    bStart                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerHitStopComponent_C::IsStartCauseType(EPlayerHitStopType HitSlowType, EHCHitStopCauseType CauseType, const struct FHCHitResult& HitResult, bool* bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "IsStartCauseType");

	Params::BP_PlayerHitStopComponent_C_IsStartCauseType Parms{};

	Parms.HitSlowType = HitSlowType;
	Parms.CauseType = CauseType;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (bStart != nullptr)
		*bStart = Parms.bStart;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.Initialize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.GetHitSlowRowName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDelayTable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             RowName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerHitStopComponent_C::GetHitSlowRowName(uint8 Type, bool bDelayTable, class FName* RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "GetHitSlowRowName");

	Params::BP_PlayerHitStopComponent_C_GetHitSlowRowName Parms{};

	Parms.Type = Type;
	Parms.bDelayTable = bDelayTable;

	UObject::ProcessEvent(Func, &Parms);

	if (RowName != nullptr)
		*RowName = Parms.RowName;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.PhysicsIdling
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerHitStopComponent_C::PhysicsIdling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "PhysicsIdling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.CheckPlayNexusDriveTelepoAttack
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    bEnablePlay                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Attacker                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerHitStopType                      SlowType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCHitStopCauseType                     CauseType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnoreTarget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (Parm, OutParm)

void UBP_PlayerHitStopComponent_C::CheckPlayNexusDriveTelepoAttack(const struct FHCHitResult& HitResult, bool* bEnablePlay, class AActor** Attacker, EPlayerHitStopType* SlowType, EHCHitStopCauseType* CauseType, bool* bIgnoreTarget, struct FHCSkillCommonInfo* Skill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "CheckPlayNexusDriveTelepoAttack");

	Params::BP_PlayerHitStopComponent_C_CheckPlayNexusDriveTelepoAttack Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (bEnablePlay != nullptr)
		*bEnablePlay = Parms.bEnablePlay;

	if (Attacker != nullptr)
		*Attacker = Parms.Attacker;

	if (SlowType != nullptr)
		*SlowType = Parms.SlowType;

	if (CauseType != nullptr)
		*CauseType = Parms.CauseType;

	if (bIgnoreTarget != nullptr)
		*bIgnoreTarget = Parms.bIgnoreTarget;

	if (Skill != nullptr)
		*Skill = std::move(Parms.Skill);
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.IsStopAble
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerHitStopComponent_C::IsStopAble(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "IsStopAble");

	Params::BP_PlayerHitStopComponent_C_IsStopAble Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_PlayerHitStopComponent.BP_PlayerHitStopComponent_C.IsHitStopPlaying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerHitStopComponent_C::IsHitStopPlaying(bool* IsPlaying) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerHitStopComponent_C", "IsHitStopPlaying");

	Params::BP_PlayerHitStopComponent_C_IsHitStopPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}

}

