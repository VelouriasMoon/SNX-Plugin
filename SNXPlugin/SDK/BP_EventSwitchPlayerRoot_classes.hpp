#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventSwitchPlayerRoot

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EventSwitchPlayerRoot.BP_EventSwitchPlayerRoot_C
// 0x0030 (0x0260 - 0x0230)
class ABP_EventSwitchPlayerRoot_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PreviewPlayerID;                                   // 0x0240(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C2[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             TransformTable;                                    // 0x0248(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TransformTableName;                                // 0x0250(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PreviousPlayerID;                                  // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EventSwitchPlayerRoot(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void GetPreviewPlayerID(EPlayerID* PlayerId);
	void SetupTransform();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EventSwitchPlayerRoot_C">();
	}
	static class ABP_EventSwitchPlayerRoot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EventSwitchPlayerRoot_C>();
	}
};
static_assert(alignof(ABP_EventSwitchPlayerRoot_C) == 0x000008, "Wrong alignment on ABP_EventSwitchPlayerRoot_C");
static_assert(sizeof(ABP_EventSwitchPlayerRoot_C) == 0x000260, "Wrong size on ABP_EventSwitchPlayerRoot_C");
static_assert(offsetof(ABP_EventSwitchPlayerRoot_C, UberGraphFrame) == 0x000230, "Member 'ABP_EventSwitchPlayerRoot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EventSwitchPlayerRoot_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_EventSwitchPlayerRoot_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EventSwitchPlayerRoot_C, PreviewPlayerID) == 0x000240, "Member 'ABP_EventSwitchPlayerRoot_C::PreviewPlayerID' has a wrong offset!");
static_assert(offsetof(ABP_EventSwitchPlayerRoot_C, TransformTable) == 0x000248, "Member 'ABP_EventSwitchPlayerRoot_C::TransformTable' has a wrong offset!");
static_assert(offsetof(ABP_EventSwitchPlayerRoot_C, TransformTableName) == 0x000250, "Member 'ABP_EventSwitchPlayerRoot_C::TransformTableName' has a wrong offset!");
static_assert(offsetof(ABP_EventSwitchPlayerRoot_C, PreviousPlayerID) == 0x000258, "Member 'ABP_EventSwitchPlayerRoot_C::PreviousPlayerID' has a wrong offset!");

}

