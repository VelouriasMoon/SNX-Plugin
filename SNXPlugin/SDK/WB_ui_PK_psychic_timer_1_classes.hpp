#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_PK_psychic_timer_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C
// 0x00B8 (0x0440 - 0x0388)
class UWB_ui_PK_psychic_timer_1_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Chanege_gauge_timer;                               // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Chanege_timer_gauge;                               // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 All_add_3;                                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bar_4;                                             // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bar_4_add;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Bar_4;                                        // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Bar_6;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxObject;                                     // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5753[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FPsychicDroneGuageDataCell> StateTable;                                        // 0x03F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WB_ui_PK_psychic_timer_1(int32 EntryPoint);
	void OnInitialized();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void StateNone(int32 SubState);
	void StateOpen(int32 SubState);
	void StateLoop(int32 SubState);
	void StateClose(int32 SubState);
	void SetGaugePercent(float Percent);
	void SetActiveFlag(bool Param_IsActive);
	void SetState(int32 Param_Index);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_PK_psychic_timer_1_C">();
	}
	static class UWB_ui_PK_psychic_timer_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_PK_psychic_timer_1_C>();
	}
};
static_assert(alignof(UWB_ui_PK_psychic_timer_1_C) == 0x000008, "Wrong alignment on UWB_ui_PK_psychic_timer_1_C");
static_assert(sizeof(UWB_ui_PK_psychic_timer_1_C) == 0x000440, "Wrong size on UWB_ui_PK_psychic_timer_1_C");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_PK_psychic_timer_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, Chanege_gauge_timer) == 0x000390, "Member 'UWB_ui_PK_psychic_timer_1_C::Chanege_gauge_timer' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, Chanege_timer_gauge) == 0x000398, "Member 'UWB_ui_PK_psychic_timer_1_C::Chanege_timer_gauge' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, Out) == 0x0003A0, "Member 'UWB_ui_PK_psychic_timer_1_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, In) == 0x0003A8, "Member 'UWB_ui_PK_psychic_timer_1_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, Default) == 0x0003B0, "Member 'UWB_ui_PK_psychic_timer_1_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, All_add_3) == 0x0003B8, "Member 'UWB_ui_PK_psychic_timer_1_C::All_add_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, Bar_4) == 0x0003C0, "Member 'UWB_ui_PK_psychic_timer_1_C::Bar_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, Bar_4_add) == 0x0003C8, "Member 'UWB_ui_PK_psychic_timer_1_C::Bar_4_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, Size_Bar_4) == 0x0003D0, "Member 'UWB_ui_PK_psychic_timer_1_C::Size_Bar_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, Size_Bar_6) == 0x0003D8, "Member 'UWB_ui_PK_psychic_timer_1_C::Size_Bar_6' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, SizeBoxObject) == 0x0003E0, "Member 'UWB_ui_PK_psychic_timer_1_C::SizeBoxObject' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, IsActive) == 0x0003E8, "Member 'UWB_ui_PK_psychic_timer_1_C::IsActive' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_timer_1_C, StateTable) == 0x0003F0, "Member 'UWB_ui_PK_psychic_timer_1_C::StateTable' has a wrong offset!");

}

