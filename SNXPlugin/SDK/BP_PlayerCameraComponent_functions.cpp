#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCameraComponent

#include "Basic.hpp"

#include "BP_PlayerCameraComponent_classes.hpp"
#include "BP_PlayerCameraComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.ExecuteUbergraph_BP_PlayerCameraComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::ExecuteUbergraph_BP_PlayerCameraComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "ExecuteUbergraph_BP_PlayerCameraComponent");

	Params::BP_PlayerCameraComponent_C_ExecuteUbergraph_BP_PlayerCameraComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "ReceiveEndPlay");

	Params::BP_PlayerCameraComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "ReceiveTick");

	Params::BP_PlayerCameraComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PlayerCameraComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.InitializeComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::InitializeComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "InitializeComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.Finalize
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "Finalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.GetCameraPreset
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCameraPreset                     PresetName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPlayerCameraPreset              DstPreset                                              (Parm, OutParm)
// bool                                    bOffset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_PlayerCameraComponent_C::GetCameraPreset(EPlayerCameraPreset PresetName, struct FPlayerCameraPreset* DstPreset, bool bOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "GetCameraPreset");

	Params::BP_PlayerCameraComponent_C_GetCameraPreset Parms{};

	Parms.PresetName = PresetName;
	Parms.bOffset = bOffset;

	UObject::ProcessEvent(Func, &Parms);

	if (DstPreset != nullptr)
		*DstPreset = std::move(Parms.DstPreset);

	return Parms.ReturnValue;
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetPlayerCameraViewTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   blend_time_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EViewTargetBlendFunction                blend_func_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   blend_exp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::SetPlayerCameraViewTarget(float blend_time_in, EViewTargetBlendFunction blend_func_in, float blend_exp_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetPlayerCameraViewTarget");

	Params::BP_PlayerCameraComponent_C_SetPlayerCameraViewTarget Parms{};

	Parms.blend_time_in = blend_time_in;
	Parms.blend_func_in = blend_func_in;
	Parms.blend_exp_in = blend_exp_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetPlayerCameraLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::SetPlayerCameraLocation(const struct FVector& Pos_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetPlayerCameraLocation");

	Params::BP_PlayerCameraComponent_C_SetPlayerCameraLocation Parms{};

	Parms.Pos_in = std::move(Pos_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetPlayerCameraRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::SetPlayerCameraRotation(const struct FRotator& Rot_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetPlayerCameraRotation");

	Params::BP_PlayerCameraComponent_C_SetPlayerCameraRotation Parms{};

	Parms.Rot_in = std::move(Rot_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetPlayerCameraDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Dir_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::SetPlayerCameraDirection(const struct FVector& Dir_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetPlayerCameraDirection");

	Params::BP_PlayerCameraComponent_C_SetPlayerCameraDirection Parms{};

	Parms.Dir_in = std::move(Dir_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetPlayerCameraFieldOfView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::SetPlayerCameraFieldOfView(float FOV, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetPlayerCameraFieldOfView");

	Params::BP_PlayerCameraComponent_C_SetPlayerCameraFieldOfView Parms{};

	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.GetPlayerCameraLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::GetPlayerCameraLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "GetPlayerCameraLocation");

	Params::BP_PlayerCameraComponent_C_GetPlayerCameraLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.GetPlayerCameraRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::GetPlayerCameraRotation(struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "GetPlayerCameraRotation");

	Params::BP_PlayerCameraComponent_C_GetPlayerCameraRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.GetPlayerCameraDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::GetPlayerCameraDirection(struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "GetPlayerCameraDirection");

	Params::BP_PlayerCameraComponent_C_GetPlayerCameraDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.GetPlayerCameraFieldOfView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FOV                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::GetPlayerCameraFieldOfView(float* FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "GetPlayerCameraFieldOfView");

	Params::BP_PlayerCameraComponent_C_GetPlayerCameraFieldOfView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FOV != nullptr)
		*FOV = Parms.FOV;
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.UpdateControlRotation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::UpdateControlRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "UpdateControlRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.CheckLockOn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::CheckLockOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "CheckLockOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.CheckInputOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::CheckInputOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "CheckInputOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.InitializeDebug
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::InitializeDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "InitializeDebug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugSetNoDelay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::DebugSetNoDelay(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugSetNoDelay");

	Params::BP_PlayerCameraComponent_C_DebugSetNoDelay Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugDrawPresetInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::DebugDrawPresetInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugDrawPresetInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugUpdatePreset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCameraPreset                     Preset_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::DebugUpdatePreset(EPlayerCameraPreset Preset_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugUpdatePreset");

	Params::BP_PlayerCameraComponent_C_DebugUpdatePreset Parms{};

	Parms.Preset_in = Preset_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetDebugDrawTriggerBox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::SetDebugDrawTriggerBox(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetDebugDrawTriggerBox");

	Params::BP_PlayerCameraComponent_C_SetDebugDrawTriggerBox Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugDrawTriggerBox
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::DebugDrawTriggerBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugDrawTriggerBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugUpdatePresetInterval
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::DebugUpdatePresetInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugUpdatePresetInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.ConvCameraPresetToRowName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerCameraPreset                     Preset_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Row_name                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::ConvCameraPresetToRowName(EPlayerCameraPreset Preset_in, class FString* Row_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "ConvCameraPresetToRowName");

	Params::BP_PlayerCameraComponent_C_ConvCameraPresetToRowName Parms{};

	Parms.Preset_in = Preset_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Row_name != nullptr)
		*Row_name = std::move(Parms.Row_name);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugDrawCameraInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::DebugDrawCameraInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugDrawCameraInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugDraw
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::DebugDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugDraw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetDebugLockOnLimitRateHz
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Limit_rate_hz_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::SetDebugLockOnLimitRateHz(bool Flag_in, float Limit_rate_hz_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetDebugLockOnLimitRateHz");

	Params::BP_PlayerCameraComponent_C_SetDebugLockOnLimitRateHz Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Limit_rate_hz_in = Limit_rate_hz_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugDrawAssistMain
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::DebugDrawAssistMain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugDrawAssistMain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugDrawAssistSub
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::DebugDrawAssistSub()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugDrawAssistSub");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.LoadDataTable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Row_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::LoadDataTable(class FName Row_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "LoadDataTable");

	Params::BP_PlayerCameraComponent_C_LoadDataTable Parms{};

	Parms.Row_name_in = Row_name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetRootLerpActionType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPlayerCameraActionType                 Action_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Ref_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EPlayerCameraActionPriority             Prio_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Inerpolation_time_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerCameraComponent_C::SetRootLerpActionType(bool Flag_in, EPlayerCameraActionType Action_type_in, const class FString& Ref_name_in, EPlayerCameraActionPriority Prio_in, float Inerpolation_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetRootLerpActionType");

	Params::BP_PlayerCameraComponent_C_SetRootLerpActionType Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Action_type_in = Action_type_in;
	Parms.Ref_name_in = std::move(Ref_name_in);
	Parms.Prio_in = Prio_in;
	Parms.Inerpolation_time_in = Inerpolation_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SuspendCamera
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::SuspendCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SuspendCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.ResumeCamera
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerCameraComponent_C::ResumeCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "ResumeCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.AreaChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    End_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::AreaChange(bool End_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "AreaChange");

	Params::BP_PlayerCameraComponent_C_AreaChange Parms{};

	Parms.End_in = End_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.SetEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    End_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::SetEvent(bool End_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "SetEvent");

	Params::BP_PlayerCameraComponent_C_SetEvent Parms{};

	Parms.End_in = End_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCameraComponent.BP_PlayerCameraComponent_C.DebugSetUseNewPreset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerCameraComponent_C::DebugSetUseNewPreset(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCameraComponent_C", "DebugSetUseNewPreset");

	Params::BP_PlayerCameraComponent_C_DebugSetUseNewPreset Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}

}

