#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BonusGhostBridgeComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EBonusGhostType_structs.hpp"
#include "FBonusGhostTime_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C
// 0x0058 (0x0118 - 0x00C0)
class UBP_BonusGhostBridgeComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_GhostTrailComponent_C*              GhostTrailComponent;                               // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDynamicMaterialControllerComponent*    DynamicMatCtrlComponent;                           // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MatParameterName;                                  // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBonusGhostTime                       Parameter;                                         // 0x00E0(0x0034)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BonusGhostBridgeComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void StartBonusGhostInternal();
	void SetTimerFromDT(EBonusGhostType Type);
	void StartBonusGhostFromDT(EBonusGhostType Type);
	void SetTimer(const struct FFBonusGhostTime& Param);
	void StartBonusGhost(float GhostTime, float RimTIme, float RimFade);
	void SetRemMaterial(float Rate, const struct FFBonusGhostTime& GhostTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BonusGhostBridgeComponent_C">();
	}
	static class UBP_BonusGhostBridgeComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BonusGhostBridgeComponent_C>();
	}
};
static_assert(alignof(UBP_BonusGhostBridgeComponent_C) == 0x000008, "Wrong alignment on UBP_BonusGhostBridgeComponent_C");
static_assert(sizeof(UBP_BonusGhostBridgeComponent_C) == 0x000118, "Wrong size on UBP_BonusGhostBridgeComponent_C");
static_assert(offsetof(UBP_BonusGhostBridgeComponent_C, UberGraphFrame) == 0x0000C0, "Member 'UBP_BonusGhostBridgeComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BonusGhostBridgeComponent_C, GhostTrailComponent) == 0x0000C8, "Member 'UBP_BonusGhostBridgeComponent_C::GhostTrailComponent' has a wrong offset!");
static_assert(offsetof(UBP_BonusGhostBridgeComponent_C, DynamicMatCtrlComponent) == 0x0000D0, "Member 'UBP_BonusGhostBridgeComponent_C::DynamicMatCtrlComponent' has a wrong offset!");
static_assert(offsetof(UBP_BonusGhostBridgeComponent_C, MatParameterName) == 0x0000D8, "Member 'UBP_BonusGhostBridgeComponent_C::MatParameterName' has a wrong offset!");
static_assert(offsetof(UBP_BonusGhostBridgeComponent_C, Parameter) == 0x0000E0, "Member 'UBP_BonusGhostBridgeComponent_C::Parameter' has a wrong offset!");

}

