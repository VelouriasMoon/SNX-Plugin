#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NpcReviveDirectionActor

#include "Basic.hpp"

#include "BP_NpcReviveDirectionActor_classes.hpp"
#include "BP_NpcReviveDirectionActor_parameters.hpp"


namespace SDK
{

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ExecuteUbergraph_BP_NpcReviveDirectionActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NpcReviveDirectionActor_C::ExecuteUbergraph_BP_NpcReviveDirectionActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ExecuteUbergraph_BP_NpcReviveDirectionActor");

	Params::BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NpcReviveDirectionActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReceiveTick");

	Params::BP_NpcReviveDirectionActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.EndTimeLine
// (BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::EndTimeLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "EndTimeLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.BeginTimeLine
// (BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::BeginTimeLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "BeginTimeLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__CableEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__CableEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__CableEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__PostProcessEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__PostProcessEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__PostProcessEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__ReviveEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__ReviveEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__ReviveEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__EffectEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__EffectEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__EffectEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__CameraEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__CameraEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__CameraEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__SlowEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__SlowEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__SlowEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__MotionEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__MotionEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__MotionEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__CablePhysicsEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__CablePhysicsEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__CablePhysicsEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__CameraShakeEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__CameraShakeEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__CameraShakeEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__ControllerVibrationEvent__EventFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__ControllerVibrationEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__ControllerVibrationEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__UpdateFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReviveTimeLine__FinishedFunc
// (BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ReviveTimeLine__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ReviveTimeLine__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.BeginDirection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                InRevivePlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInFromNpc                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NpcReviveDirectionActor_C::BeginDirection(class ARSBattlePlayer_C* InRevivePlayer, bool bInFromNpc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "BeginDirection");

	Params::BP_NpcReviveDirectionActor_C_BeginDirection Parms{};

	Parms.InRevivePlayer = InRevivePlayer;
	Parms.bInFromNpc = bInFromNpc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.EndDirection
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::EndDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "EndDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.FinishRevive
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCableOff                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NpcReviveDirectionActor_C::FinishRevive(bool bCableOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "FinishRevive");

	Params::BP_NpcReviveDirectionActor_C_FinishRevive Parms{};

	Parms.bCableOff = bCableOff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ExecCableEvent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::ExecCableEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "ExecCableEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.UpdateTimeDilation
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::UpdateTimeDilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "UpdateTimeDilation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.BeginCameraDirection
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::BeginCameraDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "BeginCameraDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.EndCameraDirection
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::EndCameraDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "EndCameraDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.SetSlow
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInSlow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NpcReviveDirectionActor_C::SetSlow(bool bInSlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "SetSlow");

	Params::BP_NpcReviveDirectionActor_C_SetSlow Parms{};

	Parms.bInSlow = bInSlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.BeginReviveCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattlePlayer_C*                TargetPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NpcReviveDirectionActor_C::BeginReviveCamera(class ARSBattlePlayer_C* Player, class ARSBattlePlayer_C* TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "BeginReviveCamera");

	Params::BP_NpcReviveDirectionActor_C_BeginReviveCamera Parms{};

	Parms.Player = Player;
	Parms.TargetPlayer = TargetPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.EndReviveCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NpcReviveDirectionActor_C::EndReviveCamera(class ARSBattlePlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "EndReviveCamera");

	Params::BP_NpcReviveDirectionActor_C_EndReviveCamera Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.SpawnParticle
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::SpawnParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "SpawnParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.SpawnReticleParticle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                InRevivePlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NpcReviveDirectionActor_C::SpawnReticleParticle(class ARSBattlePlayer_C* InRevivePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "SpawnReticleParticle");

	Params::BP_NpcReviveDirectionActor_C_SpawnReticleParticle Parms{};

	Parms.InRevivePlayer = InRevivePlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.EndReticleParticle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NpcReviveDirectionActor_C::EndReticleParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "EndReticleParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.SetCableEnergy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Energy                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NpcReviveDirectionActor_C::SetCableEnergy(const struct FVector& Energy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "SetCableEnergy");

	Params::BP_NpcReviveDirectionActor_C_SetCableEnergy Parms{};

	Parms.Energy = std::move(Energy);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.IsFinishRevive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bFinish                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NpcReviveDirectionActor_C::IsFinishRevive(bool* bFinish) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "IsFinishRevive");

	Params::BP_NpcReviveDirectionActor_C_IsFinishRevive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bFinish != nullptr)
		*bFinish = Parms.bFinish;
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.CalcRootOffset
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ARSBattlePlayer_C*                InHelpPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattlePlayer_C*                InRevivePlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NpcReviveDirectionActor_C::CalcRootOffset(class ARSBattlePlayer_C* InHelpPlayer, class ARSBattlePlayer_C* InRevivePlayer, struct FVector* Offset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "CalcRootOffset");

	Params::BP_NpcReviveDirectionActor_C_CalcRootOffset Parms{};

	Parms.InHelpPlayer = InHelpPlayer;
	Parms.InRevivePlayer = InRevivePlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.GetReticleParticleDelay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   DelayTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NpcReviveDirectionActor_C::GetReticleParticleDelay(float* DelayTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "GetReticleParticleDelay");

	Params::BP_NpcReviveDirectionActor_C_GetReticleParticleDelay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DelayTime != nullptr)
		*DelayTime = Parms.DelayTime;
}


// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.IsExecRevive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bExec                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NpcReviveDirectionActor_C::IsExecRevive(bool* bExec) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NpcReviveDirectionActor_C", "IsExecRevive");

	Params::BP_NpcReviveDirectionActor_C_IsExecRevive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExec != nullptr)
		*bExec = Parms.bExec;
}

}

