#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JumpComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_JumpComponent.BP_JumpComponent_C.ExecuteUbergraph_BP_JumpComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F93[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent) == 0x000008, "Wrong alignment on BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent");
static_assert(sizeof(BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent) == 0x000020, "Wrong size on BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent");
static_assert(offsetof(BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent, EntryPoint) == 0x000000, "Member 'BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent, K2Node_DynamicCast_AsRSBattle_Player) == 0x000010, "Member 'BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_JumpComponent_C_ExecuteUbergraph_BP_JumpComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_JumpComponent.BP_JumpComponent_C.StartJump
// 0x0024 (0x0024 - 0x0000)
struct BP_JumpComponent_C_StartJump final
{
public:
	bool                                          LIsFirstJump;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F94[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F95[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F96[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JumpComponent_C_StartJump) == 0x000004, "Wrong alignment on BP_JumpComponent_C_StartJump");
static_assert(sizeof(BP_JumpComponent_C_StartJump) == 0x000024, "Wrong size on BP_JumpComponent_C_StartJump");
static_assert(offsetof(BP_JumpComponent_C_StartJump, LIsFirstJump) == 0x000000, "Member 'BP_JumpComponent_C_StartJump::LIsFirstJump' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, Temp_int_Variable) == 0x000004, "Member 'BP_JumpComponent_C_StartJump::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, CallFunc_IsActionStatus_Result) == 0x000008, "Member 'BP_JumpComponent_C_StartJump::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_JumpComponent_C_StartJump::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00000C, "Member 'BP_JumpComponent_C_StartJump::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, Temp_int_Variable_1) == 0x000010, "Member 'BP_JumpComponent_C_StartJump::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_JumpComponent_C_StartJump::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_JumpComponent_C_StartJump::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_JumpComponent_C_StartJump::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, CallFunc_IsFalling_ReturnValue) == 0x000020, "Member 'BP_JumpComponent_C_StartJump::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_StartJump, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_JumpComponent_C_StartJump::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JumpComponent.BP_JumpComponent_C.GetFirstJumpPastTime
// 0x0010 (0x0010 - 0x0000)
struct BP_JumpComponent_C_GetFirstJumpPastTime final
{
public:
	float                                         PastTime;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F97[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JumpComponent_C_GetFirstJumpPastTime) == 0x000004, "Wrong alignment on BP_JumpComponent_C_GetFirstJumpPastTime");
static_assert(sizeof(BP_JumpComponent_C_GetFirstJumpPastTime) == 0x000010, "Wrong size on BP_JumpComponent_C_GetFirstJumpPastTime");
static_assert(offsetof(BP_JumpComponent_C_GetFirstJumpPastTime, PastTime) == 0x000000, "Member 'BP_JumpComponent_C_GetFirstJumpPastTime::PastTime' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_GetFirstJumpPastTime, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'BP_JumpComponent_C_GetFirstJumpPastTime::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_GetFirstJumpPastTime, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_JumpComponent_C_GetFirstJumpPastTime::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_GetFirstJumpPastTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_JumpComponent_C_GetFirstJumpPastTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_JumpComponent.BP_JumpComponent_C.SetJumpMaxCount
// 0x0008 (0x0008 - 0x0000)
struct BP_JumpComponent_C_SetJumpMaxCount final
{
public:
	int32                                         Param_JumpMaxCount;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JumpComponent_C_SetJumpMaxCount) == 0x000004, "Wrong alignment on BP_JumpComponent_C_SetJumpMaxCount");
static_assert(sizeof(BP_JumpComponent_C_SetJumpMaxCount) == 0x000008, "Wrong size on BP_JumpComponent_C_SetJumpMaxCount");
static_assert(offsetof(BP_JumpComponent_C_SetJumpMaxCount, Param_JumpMaxCount) == 0x000000, "Member 'BP_JumpComponent_C_SetJumpMaxCount::Param_JumpMaxCount' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_SetJumpMaxCount, CallFunc_Max_ReturnValue) == 0x000004, "Member 'BP_JumpComponent_C_SetJumpMaxCount::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_JumpComponent.BP_JumpComponent_C.GetCurrentJumpCount
// 0x0004 (0x0004 - 0x0000)
struct BP_JumpComponent_C_GetCurrentJumpCount final
{
public:
	int32                                         Param_CurrentJumpCount;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JumpComponent_C_GetCurrentJumpCount) == 0x000004, "Wrong alignment on BP_JumpComponent_C_GetCurrentJumpCount");
static_assert(sizeof(BP_JumpComponent_C_GetCurrentJumpCount) == 0x000004, "Wrong size on BP_JumpComponent_C_GetCurrentJumpCount");
static_assert(offsetof(BP_JumpComponent_C_GetCurrentJumpCount, Param_CurrentJumpCount) == 0x000000, "Member 'BP_JumpComponent_C_GetCurrentJumpCount::Param_CurrentJumpCount' has a wrong offset!");

// Function BP_JumpComponent.BP_JumpComponent_C.IsAirJumpAble
// 0x0018 (0x0018 - 0x0000)
struct BP_JumpComponent_C_IsAirJumpAble final
{
public:
	bool                                          bAble;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F98[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JumpComponent_C_IsAirJumpAble) == 0x000008, "Wrong alignment on BP_JumpComponent_C_IsAirJumpAble");
static_assert(sizeof(BP_JumpComponent_C_IsAirJumpAble) == 0x000018, "Wrong size on BP_JumpComponent_C_IsAirJumpAble");
static_assert(offsetof(BP_JumpComponent_C_IsAirJumpAble, bAble) == 0x000000, "Member 'BP_JumpComponent_C_IsAirJumpAble::bAble' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_IsAirJumpAble, CallFunc_GetDebuggingManager_Manager) == 0x000008, "Member 'BP_JumpComponent_C_IsAirJumpAble::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_IsAirJumpAble, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_JumpComponent_C_IsAirJumpAble::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_IsAirJumpAble, CallFunc_Less_IntInt_ReturnValue) == 0x000011, "Member 'BP_JumpComponent_C_IsAirJumpAble::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_IsAirJumpAble, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000012, "Member 'BP_JumpComponent_C_IsAirJumpAble::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JumpComponent_C_IsAirJumpAble, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_JumpComponent_C_IsAirJumpAble::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

