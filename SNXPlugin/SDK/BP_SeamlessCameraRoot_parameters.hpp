#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeamlessCameraRoot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CinematicCamera_structs.hpp"
#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.ExecuteUbergraph_BP_SeamlessCameraRoot
// 0x000C (0x000C - 0x0000)
struct BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot) == 0x000004, "Wrong alignment on BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot");
static_assert(sizeof(BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot) == 0x00000C, "Wrong size on BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot, EntryPoint) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot, K2Node_Event_EndPlayReason) == 0x000008, "Member 'BP_SeamlessCameraRoot_C_ExecuteUbergraph_BP_SeamlessCameraRoot::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SeamlessCameraRoot_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SeamlessCameraRoot_C_ReceiveEndPlay");
static_assert(sizeof(BP_SeamlessCameraRoot_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SeamlessCameraRoot_C_ReceiveEndPlay");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SeamlessCameraRoot_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SeamlessCameraRoot_C_ReceiveTick");
static_assert(sizeof(BP_SeamlessCameraRoot_C_ReceiveTick) == 0x000004, "Wrong size on BP_SeamlessCameraRoot_C_ReceiveTick");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.InitializeInternal
// 0x0080 (0x0080 - 0x0000)
struct BP_SeamlessCameraRoot_C_InitializeInternal final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_InitializeInternal) == 0x000010, "Wrong alignment on BP_SeamlessCameraRoot_C_InitializeInternal");
static_assert(sizeof(BP_SeamlessCameraRoot_C_InitializeInternal) == 0x000080, "Wrong size on BP_SeamlessCameraRoot_C_InitializeInternal");
static_assert(offsetof(BP_SeamlessCameraRoot_C_InitializeInternal, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_InitializeInternal::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_InitializeInternal, CallFunc_MakeTransform_ReturnValue_1) == 0x000030, "Member 'BP_SeamlessCameraRoot_C_InitializeInternal::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_InitializeInternal, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_SeamlessCameraRoot_C_InitializeInternal::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_InitializeInternal, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000068, "Member 'BP_SeamlessCameraRoot_C_InitializeInternal::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_InitializeInternal, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'BP_SeamlessCameraRoot_C_InitializeInternal::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_InitializeInternal, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000078, "Member 'BP_SeamlessCameraRoot_C_InitializeInternal::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.FinalizeInternal
// 0x0002 (0x0002 - 0x0000)
struct BP_SeamlessCameraRoot_C_FinalizeInternal final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_FinalizeInternal) == 0x000001, "Wrong alignment on BP_SeamlessCameraRoot_C_FinalizeInternal");
static_assert(sizeof(BP_SeamlessCameraRoot_C_FinalizeInternal) == 0x000002, "Wrong size on BP_SeamlessCameraRoot_C_FinalizeInternal");
static_assert(offsetof(BP_SeamlessCameraRoot_C_FinalizeInternal, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_FinalizeInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_FinalizeInternal, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_SeamlessCameraRoot_C_FinalizeInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.BindingSequencerCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_SeamlessCameraRoot_C_BindingSequencerCamera final
{
public:
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     Binding;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8550[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_BindingSequencerCamera) == 0x000008, "Wrong alignment on BP_SeamlessCameraRoot_C_BindingSequencerCamera");
static_assert(sizeof(BP_SeamlessCameraRoot_C_BindingSequencerCamera) == 0x000040, "Wrong size on BP_SeamlessCameraRoot_C_BindingSequencerCamera");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, Sequencer) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, Binding) == 0x000008, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::Binding' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_BindingSequencerCamera, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_SeamlessCameraRoot_C_BindingSequencerCamera::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.Bind
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SeamlessCameraRoot_C_Bind final
{
public:
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BindingSequencerCamera;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BindingSeamlessCamera;                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8551[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8552[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList; // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList; // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8553[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8554[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList_1; // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList_1; // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind_1; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8555[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8556[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_Bind) == 0x000008, "Wrong alignment on BP_SeamlessCameraRoot_C_Bind");
static_assert(sizeof(BP_SeamlessCameraRoot_C_Bind) == 0x0000B0, "Wrong size on BP_SeamlessCameraRoot_C_Bind");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, Sequencer) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_Bind::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, BindingSequencerCamera) == 0x000008, "Member 'BP_SeamlessCameraRoot_C_Bind::BindingSequencerCamera' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, BindingSeamlessCamera) == 0x000009, "Member 'BP_SeamlessCameraRoot_C_Bind::BindingSeamlessCamera' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_SeamlessCameraRoot_C_Bind::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_SeamlessCameraRoot_C_Bind::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_SeamlessCameraRoot_C_Bind::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, Temp_int_Loop_Num_Variable_1) == 0x000018, "Member 'BP_SeamlessCameraRoot_C_Bind::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_SeamlessCameraRoot_C_Bind::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList) == 0x000030, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList) == 0x000040, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind) == 0x000050, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, K2Node_MakeArray_Array_1) == 0x000058, "Member 'BP_SeamlessCameraRoot_C_Bind::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_SeamlessCameraRoot_C_Bind::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList_1) == 0x000078, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList_1) == 0x000088, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind_1) == 0x000098, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_IsValid_ReturnValue_1) == 0x000099, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'BP_SeamlessCameraRoot_C_Bind::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_Bind, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_SeamlessCameraRoot_C_Bind::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.UpdateInternal
// 0x01F0 (0x01F0 - 0x0000)
struct BP_SeamlessCameraRoot_C_UpdateInternal final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8557[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PlayerCamera;                                      // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ARSCharacterBase*                       Player;                                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECameraFocusMethod                            Temp_byte_Variable;                                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8558[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8559[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_CalcSeamlessOutCameraTransformInternal_Transform; // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy_1;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_855A[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_855B[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerCameraFieldOfView_ReturnValue;   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraFilmbackSettings                K2Node_MakeStruct_CameraFilmbackSettings;          // 0x00D0(0x000C)(NoDestructor)
	struct FCameraLensSettings                    K2Node_MakeStruct_CameraLensSettings;              // 0x00DC(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECameraFocusMethod                            Temp_byte_Variable_1;                              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECameraFocusMethod                            K2Node_Select_Default;                             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_855C[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraFocusSettings                   K2Node_MakeStruct_CameraFocusSettings;             // 0x00F8(0x0058)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_855D[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_855E[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_855F[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraFocusSettings                   K2Node_MakeStruct_CameraFocusSettings_1;           // 0x0190(0x0058)()
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_2;     // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_UpdateInternal) == 0x000010, "Wrong alignment on BP_SeamlessCameraRoot_C_UpdateInternal");
static_assert(sizeof(BP_SeamlessCameraRoot_C_UpdateInternal) == 0x0001F0, "Wrong size on BP_SeamlessCameraRoot_C_UpdateInternal");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, DeltaSeconds) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, PlayerCamera) == 0x000010, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::PlayerCamera' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, Player) == 0x000040, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::Player' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000049, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, Temp_byte_Variable) == 0x00004A, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000050, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_PlayerCameraReset_Dummy) == 0x000061, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, Temp_bool_Variable) == 0x000062, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000068, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_CalcSeamlessOutCameraTransformInternal_Transform) == 0x000070, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_CalcSeamlessOutCameraTransformInternal_Transform' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x0000A0, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_PlayerCameraReset_Dummy_1) == 0x0000B1, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_PlayerCameraReset_Dummy_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_DynamicCast_AsCamera_Interface) == 0x0000B8, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GetPlayerCameraFieldOfView_ReturnValue) == 0x0000CC, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GetPlayerCameraFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_MakeStruct_CameraFilmbackSettings) == 0x0000D0, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_MakeStruct_CameraFilmbackSettings' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_MakeStruct_CameraLensSettings) == 0x0000DC, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_MakeStruct_CameraLensSettings' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, Temp_byte_Variable_1) == 0x0000F4, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_Select_Default) == 0x0000F5, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_MakeStruct_CameraFocusSettings) == 0x0000F8, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_MakeStruct_CameraFocusSettings' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000150, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000151, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GetPlayerController_ReturnValue) == 0x000158, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GetPlayerManager_PlayerManager) == 0x000160, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_IsValid_ReturnValue_1) == 0x000168, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GetPlayer_ReturnValue) == 0x000170, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000178, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x000180, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_SelectFloat_ReturnValue) == 0x00018C, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, K2Node_MakeStruct_CameraFocusSettings_1) == 0x000190, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::K2Node_MakeStruct_CameraFocusSettings_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_UpdateInternal, CallFunc_GetCineCameraComponent_ReturnValue_2) == 0x0001E8, "Member 'BP_SeamlessCameraRoot_C_UpdateInternal::CallFunc_GetCineCameraComponent_ReturnValue_2' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.ResetPlayerCamera
// 0x0040 (0x0040 - 0x0000)
struct BP_SeamlessCameraRoot_C_ResetPlayerCamera final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8560[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerCameraViewTarget_ReturnValue;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8561[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_ResetPlayerCamera) == 0x000008, "Wrong alignment on BP_SeamlessCameraRoot_C_ResetPlayerCamera");
static_assert(sizeof(BP_SeamlessCameraRoot_C_ResetPlayerCamera) == 0x000040, "Wrong size on BP_SeamlessCameraRoot_C_ResetPlayerCamera");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetPlayerCamera, Player) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_ResetPlayerCamera::Player' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetPlayerCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_SeamlessCameraRoot_C_ResetPlayerCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetPlayerCamera, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SeamlessCameraRoot_C_ResetPlayerCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetPlayerCamera, K2Node_DynamicCast_AsCamera_Interface) == 0x000018, "Member 'BP_SeamlessCameraRoot_C_ResetPlayerCamera::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetPlayerCamera, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SeamlessCameraRoot_C_ResetPlayerCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetPlayerCamera, CallFunc_SetPlayerCameraViewTarget_ReturnValue) == 0x000029, "Member 'BP_SeamlessCameraRoot_C_ResetPlayerCamera::CallFunc_SetPlayerCameraViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetPlayerCamera, CallFunc_GetPlayer_ReturnValue) == 0x000030, "Member 'BP_SeamlessCameraRoot_C_ResetPlayerCamera::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetPlayerCamera, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_SeamlessCameraRoot_C_ResetPlayerCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.End
// 0x0001 (0x0001 - 0x0000)
struct BP_SeamlessCameraRoot_C_End final
{
public:
	bool                                          BeforeReplaceSequencerCamera;                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_End) == 0x000001, "Wrong alignment on BP_SeamlessCameraRoot_C_End");
static_assert(sizeof(BP_SeamlessCameraRoot_C_End) == 0x000001, "Wrong size on BP_SeamlessCameraRoot_C_End");
static_assert(offsetof(BP_SeamlessCameraRoot_C_End, BeforeReplaceSequencerCamera) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_End::BeforeReplaceSequencerCamera' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.SetSeamlessOutCameraTransform
// 0x0030 (0x0030 - 0x0000)
struct BP_SeamlessCameraRoot_C_SetSeamlessOutCameraTransform final
{
public:
	struct FTransform                             CameraTransform;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_SetSeamlessOutCameraTransform) == 0x000010, "Wrong alignment on BP_SeamlessCameraRoot_C_SetSeamlessOutCameraTransform");
static_assert(sizeof(BP_SeamlessCameraRoot_C_SetSeamlessOutCameraTransform) == 0x000030, "Wrong size on BP_SeamlessCameraRoot_C_SetSeamlessOutCameraTransform");
static_assert(offsetof(BP_SeamlessCameraRoot_C_SetSeamlessOutCameraTransform, CameraTransform) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_SetSeamlessOutCameraTransform::CameraTransform' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.CalcSeamlessOutCameraTransformInternal
// 0x01E0 (0x01E0 - 0x0000)
struct BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8562[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             MeshOffset;                                        // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UBP_EventParamComponent_C*              EventParamComp;                                    // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8563[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue;      // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_1;           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8564[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue;      // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8565[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventParamComponent_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8566[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal) == 0x000010, "Wrong alignment on BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal");
static_assert(sizeof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal) == 0x0001E0, "Wrong size on BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, Player) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::Player' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, Transform) == 0x000010, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::Transform' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, MeshOffset) == 0x000040, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::MeshOffset' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, EventParamComp) == 0x000070, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::EventParamComp' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, K2Node_DynamicCast_AsCamera_Interface) == 0x000078, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00008C, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_GetPlayerCameraRotation_ReturnValue) == 0x000098, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_GetPlayerCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_GetSocketLocation_ReturnValue) == 0x0000A4, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakRotator_Roll) == 0x0000BC, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakRotator_Pitch) == 0x0000C0, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakRotator_Yaw) == 0x0000C4, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, K2Node_DynamicCast_AsCamera_Interface_1) == 0x0000C8, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::K2Node_DynamicCast_AsCamera_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000DC, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_GetPlayerCameraLocation_ReturnValue) == 0x0000E8, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_GetPlayerCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_GetComponentByClass_ReturnValue) == 0x0000F8, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000100, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakTransform_Location) == 0x00010C, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakTransform_Rotation) == 0x000118, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakTransform_Scale) == 0x000124, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_SelectRotator_ReturnValue) == 0x000130, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_SelectVector_ReturnValue) == 0x00013C, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000148, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakRotator_Roll_1) == 0x000154, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakRotator_Pitch_1) == 0x000158, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_BreakRotator_Yaw_1) == 0x00015C, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_Add_VectorVector_ReturnValue) == 0x000160, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00016C, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000170, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00017C, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000180, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00018C, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_MakeRotator_ReturnValue) == 0x000190, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal, CallFunc_IsValid_ReturnValue) == 0x0001D0, "Member 'BP_SeamlessCameraRoot_C_CalcSeamlessOutCameraTransformInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.ResetCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_SeamlessCameraRoot_C_ResetCamera final
{
public:
	struct FTransform                             CameraTransform;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_ResetCamera) == 0x000010, "Wrong alignment on BP_SeamlessCameraRoot_C_ResetCamera");
static_assert(sizeof(BP_SeamlessCameraRoot_C_ResetCamera) == 0x000030, "Wrong size on BP_SeamlessCameraRoot_C_ResetCamera");
static_assert(offsetof(BP_SeamlessCameraRoot_C_ResetCamera, CameraTransform) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_ResetCamera::CameraTransform' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.SetViewTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_SeamlessCameraRoot_C_SetViewTarget final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_SetViewTarget) == 0x000008, "Wrong alignment on BP_SeamlessCameraRoot_C_SetViewTarget");
static_assert(sizeof(BP_SeamlessCameraRoot_C_SetViewTarget) == 0x000008, "Wrong size on BP_SeamlessCameraRoot_C_SetViewTarget");
static_assert(offsetof(BP_SeamlessCameraRoot_C_SetViewTarget, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_SetViewTarget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_SeamlessCameraRoot.BP_SeamlessCameraRoot_C.SetUsePlayerMeshRelative
// 0x0002 (0x0002 - 0x0000)
struct BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative final
{
public:
	bool                                          UseLocation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseRotation;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative) == 0x000001, "Wrong alignment on BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative");
static_assert(sizeof(BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative) == 0x000002, "Wrong size on BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative");
static_assert(offsetof(BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative, UseLocation) == 0x000000, "Member 'BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative::UseLocation' has a wrong offset!");
static_assert(offsetof(BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative, UseRotation) == 0x000001, "Member 'BP_SeamlessCameraRoot_C_SetUsePlayerMeshRelative::UseRotation' has a wrong offset!");

}

