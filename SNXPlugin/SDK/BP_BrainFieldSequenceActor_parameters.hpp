#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrainFieldSequenceActor

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.ExecuteUbergraph_BP_BrainFieldSequenceActor
// 0x0360 (0x0360 - 0x0000)
struct BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B04[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B05[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B06[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B07[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         K2Node_DynamicCast_AsHUDMain_Game;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B08[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B09[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B0A[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BlendTimeSeconds;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_WatchOffset;                    // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_value_2;                        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B0B[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TargetOffset_1;                 // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Pitch_1;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EaseTime_1;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B0C[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TargetOffset;                   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Pitch;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EaseTime;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_value_1;                        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B0D[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_1;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B0E[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_2;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B0F[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B10[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_3;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_4;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B11[0x6];                                     // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_5;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_6;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B12[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_7;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_8;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B13[0x6];                                     // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_9;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_10;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B14[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_11;          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_12;          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_value;                          // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B15[0x5];                                     // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_13;          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B16[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_14;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B17[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B18[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_15;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSeamlessEvent_HasEvent;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B19[0x6];                                     // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x0260(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1A[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager_1;          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1B[0x2];                                     // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1C[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_3;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_4;          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1D[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_GetCurrentTime_ReturnValue;               // 0x02AC(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x02BC(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1E[0x2];                                     // 0x02CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_16;          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1F[0x3];                                     // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x02DC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5B20[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_5;          // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B21[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASManager_C*                       CallFunc_GetSASManager_SAS_Manager;                // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHealedBrainFieldFlag_isHealed;         // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHealedBrainFieldFlag_isHealed_1;       // 0x030B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B22[0x2];                                     // 0x030E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B23[0x3];                                     // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x031C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B24[0x2];                                     // 0x032E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B25[0x5];                                     // 0x0343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_17;          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor) == 0x000010, "Wrong alignment on BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor) == 0x000360, "Wrong size on BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, EntryPoint) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, Temp_object_Variable) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_DynamicCast_AsLevel_Sequence) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSequencePlayer_ReturnValue) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_Enable) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_DynamicCast_AsHUDMain_Game) == 0x000058, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_DynamicCast_AsHUDMain_Game' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000068, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, Temp_int_Loop_Num_Variable) == 0x000074, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_Loaded) == 0x000080, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_BlendTimeSeconds) == 0x000088, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_BlendTimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_WatchOffset) == 0x00008C, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_WatchOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_value_2) == 0x000098, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_value_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_TargetOffset_1) == 0x0000A0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_TargetOffset_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_Pitch_1) == 0x0000AC, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_EaseTime_1) == 0x0000B0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_EaseTime_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_TargetOffset) == 0x0000BC, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_TargetOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_Pitch) == 0x0000C8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_EaseTime) == 0x0000CC, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_EaseTime' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_value_1) == 0x000100, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_value_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000108, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_MakeTransform_ReturnValue_1) == 0x000110, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000140, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000148, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000150, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager) == 0x000158, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_1) == 0x000160, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_2) == 0x000168, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_3) == 0x000169, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_2) == 0x000170, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetGameSystemManager_Manager) == 0x000178, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_4) == 0x000180, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000181, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000184, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_5) == 0x000188, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00018C, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_3) == 0x000190, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_4) == 0x000198, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_4' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_6) == 0x0001A0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_7) == 0x0001A1, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_5) == 0x0001A8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_5' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_6) == 0x0001B0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_6' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_8) == 0x0001B8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_9) == 0x0001B9, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_7) == 0x0001C0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_7' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_8) == 0x0001C8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_8' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_10) == 0x0001D0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_11) == 0x0001D1, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_9) == 0x0001D8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_9' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_10) == 0x0001E0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_10' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_12) == 0x0001E8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_13) == 0x0001E9, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_11) == 0x0001F0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_11' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_12) == 0x0001F8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_12' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_14) == 0x000200, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_15) == 0x000201, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CustomEvent_value) == 0x000202, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CustomEvent_value' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_13) == 0x000208, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_13' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_16) == 0x000210, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_14) == 0x000218, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_14' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_17) == 0x000220, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000228, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000230, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_18) == 0x000238, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_MakeLiteralByte_ReturnValue) == 0x000239, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_15) == 0x000240, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_15' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_HasSeamlessEvent_HasEvent) == 0x000248, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_HasSeamlessEvent_HasEvent' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_19) == 0x000249, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_MakeArray_Array_1) == 0x000250, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x000260, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x000270, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_Array_Length_ReturnValue) == 0x000274, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetPostProcessManager_Manager) == 0x000278, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetPostProcessManager_Manager_1) == 0x000280, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetPostProcessManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_20) == 0x000288, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_21) == 0x000289, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_Event_DeltaSeconds) == 0x00028C, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000290, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSequencePlayer_ReturnValue_3) == 0x000298, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSequencePlayer_ReturnValue_4) == 0x0002A0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSequencePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_22) == 0x0002A8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetCurrentTime_ReturnValue) == 0x0002AC, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_BreakQualifiedFrameTime_Frame) == 0x0002BC, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x0002C0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x0002C8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_23) == 0x0002CC, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002CD, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_16) == 0x0002D0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_16' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_24) == 0x0002D8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CreateDelegate_OutputDelegate) == 0x0002DC, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSequencePlayer_ReturnValue_5) == 0x0002F0, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSequencePlayer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002F8, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetSASManager_SAS_Manager) == 0x000300, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetSASManager_SAS_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_25) == 0x000308, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000309, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetHealedBrainFieldFlag_isHealed) == 0x00030A, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetHealedBrainFieldFlag_isHealed' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetHealedBrainFieldFlag_isHealed_1) == 0x00030B, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetHealedBrainFieldFlag_isHealed_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x00030C, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_BooleanAND_ReturnValue) == 0x00030D, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000310, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_FClamp_ReturnValue) == 0x000314, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_Less_FloatFloat_ReturnValue) == 0x000318, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, K2Node_CreateDelegate_OutputDelegate_1) == 0x00031C, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_26) == 0x00032C, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_27) == 0x00032D, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_LinearColorLerp_ReturnValue) == 0x000330, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_28) == 0x000340, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_29) == 0x000341, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000342, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_GetBrainFieldManager_Manager_17) == 0x000348, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_GetBrainFieldManager_Manager_17' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor, CallFunc_IsValid_ReturnValue_30) == 0x000350, "Member 'BP_BrainFieldSequenceActor_C_ExecuteUbergraph_BP_BrainFieldSequenceActor::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainFieldSequenceActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BrainFieldSequenceActor_C_ReceiveTick");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_ReceiveTick) == 0x000004, "Wrong size on BP_BrainFieldSequenceActor_C_ReceiveTick");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetVisibleEnemy
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetVisibleEnemy final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetVisibleEnemy) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetVisibleEnemy");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetVisibleEnemy) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_SetVisibleEnemy");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetVisibleEnemy, Value) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetVisibleEnemy::Value' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetVisiblePlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetVisiblePlayer final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetVisiblePlayer) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetVisiblePlayer");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetVisiblePlayer) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_SetVisiblePlayer");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetVisiblePlayer, Value) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetVisiblePlayer::Value' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.BeginPlayerWatchUser
// 0x0014 (0x0014 - 0x0000)
struct BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser final
{
public:
	struct FVector                                TargetOffset;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EaseTime;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser) == 0x000004, "Wrong alignment on BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser) == 0x000014, "Wrong size on BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser, TargetOffset) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser::TargetOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser, Pitch) == 0x00000C, "Member 'BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser::Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser, EaseTime) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_BeginPlayerWatchUser::EaseTime' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.PlayerWatchUser
// 0x0014 (0x0014 - 0x0000)
struct BP_BrainFieldSequenceActor_C_PlayerWatchUser final
{
public:
	struct FVector                                TargetOffset;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EaseTime;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_PlayerWatchUser) == 0x000004, "Wrong alignment on BP_BrainFieldSequenceActor_C_PlayerWatchUser");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_PlayerWatchUser) == 0x000014, "Wrong size on BP_BrainFieldSequenceActor_C_PlayerWatchUser");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PlayerWatchUser, TargetOffset) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_PlayerWatchUser::TargetOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PlayerWatchUser, Pitch) == 0x00000C, "Member 'BP_BrainFieldSequenceActor_C_PlayerWatchUser::Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PlayerWatchUser, EaseTime) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_PlayerWatchUser::EaseTime' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.UserHoodON
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_UserHoodON final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_UserHoodON) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_UserHoodON");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_UserHoodON) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_UserHoodON");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_UserHoodON, Value) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_UserHoodON::Value' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.CameraWatchUser
// 0x0010 (0x0010 - 0x0000)
struct BP_BrainFieldSequenceActor_C_CameraWatchUser final
{
public:
	float                                         BlendTimeSeconds;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WatchOffset;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_CameraWatchUser) == 0x000004, "Wrong alignment on BP_BrainFieldSequenceActor_C_CameraWatchUser");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_CameraWatchUser) == 0x000010, "Wrong size on BP_BrainFieldSequenceActor_C_CameraWatchUser");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_CameraWatchUser, BlendTimeSeconds) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_CameraWatchUser::BlendTimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_CameraWatchUser, WatchOffset) == 0x000004, "Member 'BP_BrainFieldSequenceActor_C_CameraWatchUser::WatchOffset' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetVisibleUI
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetVisibleUI final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetVisibleUI) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetVisibleUI");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetVisibleUI) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_SetVisibleUI");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetVisibleUI, Enable) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetVisibleUI::Enable' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.OnLoaded_830D2F464683427EE424F3A810D577C1
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainFieldSequenceActor_C_OnLoaded_830D2F464683427EE424F3A810D577C1 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_OnLoaded_830D2F464683427EE424F3A810D577C1) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_OnLoaded_830D2F464683427EE424F3A810D577C1");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_OnLoaded_830D2F464683427EE424F3A810D577C1) == 0x000008, "Wrong size on BP_BrainFieldSequenceActor_C_OnLoaded_830D2F464683427EE424F3A810D577C1");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_OnLoaded_830D2F464683427EE424F3A810D577C1, Loaded) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_OnLoaded_830D2F464683427EE424F3A810D577C1::Loaded' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetSequenceAssetPlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetSequenceAssetPlayer final
{
public:
	EBrainFieldSequencerType                      SequencerType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetSequenceAssetPlayer) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetSequenceAssetPlayer");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetSequenceAssetPlayer) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_SetSequenceAssetPlayer");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetSequenceAssetPlayer, SequencerType) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetSequenceAssetPlayer::SequencerType' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetBrainFieldUser
// 0x0038 (0x0038 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetBrainFieldUser final
{
public:
	class AActor*                                 User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SubUser;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       K2Node_DynamicCast_AsRSCharacter_Base;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B26[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayer_bPlayer;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B27[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetBrainFieldUser");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser) == 0x000038, "Wrong size on BP_BrainFieldSequenceActor_C_SetBrainFieldUser");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser, User) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetBrainFieldUser::User' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser, SubUser) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetBrainFieldUser::SubUser' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser, K2Node_DynamicCast_AsRSCharacter_Base) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_SetBrainFieldUser::K2Node_DynamicCast_AsRSCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_SetBrainFieldUser::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_SetBrainFieldUser::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_SetBrainFieldUser::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser, CallFunc_IsPlayer_bPlayer) == 0x000031, "Member 'BP_BrainFieldSequenceActor_C_SetBrainFieldUser::CallFunc_IsPlayer_bPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetBrainFieldUser, CallFunc_SelectInt_ReturnValue) == 0x000034, "Member 'BP_BrainFieldSequenceActor_C_SetBrainFieldUser::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetupBindingPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetupBindingPlayer final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBinding;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBinding;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode;    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B28[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon;       // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetupBindingPlayer");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer) == 0x000020, "Wrong size on BP_BrainFieldSequenceActor_C_SetupBindingPlayer");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer, Player) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayer::Player' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer, IsBinding) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayer::IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer, CallFunc_BindingEventPlayer_IsBinding) == 0x000009, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayer::CallFunc_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer, CallFunc_BindingEventPlayer_IsBindingPlayer) == 0x00000A, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayer::CallFunc_BindingEventPlayer_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer, CallFunc_BindingEventPlayer_IsBindingSASCode) == 0x00000B, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayer::CallFunc_BindingEventPlayer_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer, CallFunc_BindingEventPlayer_IsBindingBrainCode) == 0x00000C, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayer::CallFunc_BindingEventPlayer_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayer, CallFunc_BindingEventPlayer_IsBindingWeapon) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayer::CallFunc_BindingEventPlayer_IsBindingWeapon' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetActiveSequencer
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetActiveSequencer final
{
public:
	bool                                          UserIsPlayer;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOpen;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOverride;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrainFieldEndType                            EndType;                                           // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSLevelSequenceActor*>          CallFunc_GetSequencerList_SequencerList;           // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B29[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetActiveSequencer) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetActiveSequencer");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetActiveSequencer) == 0x000030, "Wrong size on BP_BrainFieldSequenceActor_C_SetActiveSequencer");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, UserIsPlayer) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::UserIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, IsOpen) == 0x000001, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::IsOpen' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, IsOverride) == 0x000002, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::IsOverride' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, EndType) == 0x000003, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::EndType' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, Param_Index) == 0x000004, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, CallFunc_GetSequencerList_SequencerList) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::CallFunc_GetSequencerList_SequencerList' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetActiveSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_SetActiveSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.Stop
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_Stop final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_Stop) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_Stop");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_Stop) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_Stop");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Stop, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_Stop::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetupBindingPlayerFromText
// 0x0070 (0x0070 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   BindingText;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsBinding;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_2;                          // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBinding;     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingPlayer; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingSASCode; // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingBrainCode; // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2B[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayerFromText_IsBindingWeapon; // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText) == 0x000070, "Wrong size on BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, Player) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::Player' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, BindingText) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::BindingText' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, IsBinding) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, K2Node_MakeArray_Array_1) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, K2Node_MakeArray_Array_2) == 0x000048, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, CallFunc_BindingEventPlayerFromText_IsBinding) == 0x000058, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::CallFunc_BindingEventPlayerFromText_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, CallFunc_BindingEventPlayerFromText_IsBindingPlayer) == 0x000059, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::CallFunc_BindingEventPlayerFromText_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, CallFunc_BindingEventPlayerFromText_IsBindingSASCode) == 0x00005A, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::CallFunc_BindingEventPlayerFromText_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, CallFunc_BindingEventPlayerFromText_IsBindingBrainCode) == 0x00005B, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::CallFunc_BindingEventPlayerFromText_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText, CallFunc_BindingEventPlayerFromText_IsBindingWeapon) == 0x000060, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromText::CallFunc_BindingEventPlayerFromText_IsBindingWeapon' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.LoadAsset
// 0x0018 (0x0018 - 0x0000)
struct BP_BrainFieldSequenceActor_C_LoadAsset final
{
public:
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_LoadAsset) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_LoadAsset");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_LoadAsset) == 0x000018, "Wrong size on BP_BrainFieldSequenceActor_C_LoadAsset");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_LoadAsset, K2Node_DynamicCast_AsTexture_2D) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_LoadAsset::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_LoadAsset, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_LoadAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetupBindingDummyFromText
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText final
{
public:
	class FText                                   BindingText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsBinding;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Private_BindingEventPlayer_IsBinding;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText) == 0x000048, "Wrong size on BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText, BindingText) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText::BindingText' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText, IsBinding) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText::IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText, K2Node_MakeArray_Array_1) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText, CallFunc_Private_BindingEventPlayer_IsBinding) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingDummyFromText::CallFunc_Private_BindingEventPlayer_IsBinding' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.PrivateLoadSequenceAsset
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset final
{
public:
	TArray<TSoftObjectPtr<class ULevelSequence>>  Sequences;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSLevelSequenceActor*>          OutputInstance;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2F[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B30[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset) == 0x000010, "Wrong alignment on BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset) == 0x0000B0, "Wrong size on BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, Sequences) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::Sequences' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, OutputInstance) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::OutputInstance' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, K2Node_DynamicCast_AsLevel_Sequence) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000A0, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'BP_BrainFieldSequenceActor_C_PrivateLoadSequenceAsset::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetSequenceAssetENPC
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetSequenceAssetENPC final
{
public:
	EBrainFieldSequencerType                      SequencerType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetSequenceAssetENPC) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetSequenceAssetENPC");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetSequenceAssetENPC) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_SetSequenceAssetENPC");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetSequenceAssetENPC, SequencerType) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetSequenceAssetENPC::SequencerType' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.PrivateUnloadSequenceAsset
// 0x0028 (0x0028 - 0x0000)
struct BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset final
{
public:
	TArray<class ARSLevelSequenceActor*>          Instance;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B31[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset) == 0x000028, "Wrong size on BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset, Instance) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset::Instance' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BrainFieldSequenceActor_C_PrivateUnloadSequenceAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.GetCameraWatchZoom
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainFieldSequenceActor_C_GetCameraWatchZoom final
{
public:
	float                                         Zoom;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_GetCameraWatchZoom) == 0x000004, "Wrong alignment on BP_BrainFieldSequenceActor_C_GetCameraWatchZoom");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_GetCameraWatchZoom) == 0x000004, "Wrong size on BP_BrainFieldSequenceActor_C_GetCameraWatchZoom");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetCameraWatchZoom, Zoom) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_GetCameraWatchZoom::Zoom' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.GetSequencerList
// 0x0020 (0x0020 - 0x0000)
struct BP_BrainFieldSequenceActor_C_GetSequencerList final
{
public:
	bool                                          UserIsPlayer;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOpen;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOverride;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrainFieldEndType                            EndType;                                           // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B32[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSLevelSequenceActor*>          SequencerList;                                     // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_GetSequencerList) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_GetSequencerList");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_GetSequencerList) == 0x000020, "Wrong size on BP_BrainFieldSequenceActor_C_GetSequencerList");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerList, UserIsPlayer) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerList::UserIsPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerList, IsOpen) == 0x000001, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerList::IsOpen' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerList, IsOverride) == 0x000002, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerList::IsOverride' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerList, EndType) == 0x000003, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerList::EndType' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerList, SequencerList) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerList::SequencerList' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerList, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerList, K2Node_SwitchEnum_CmpSuccess_1) == 0x000019, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerList::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetupBindingNPC
// 0x0020 (0x0020 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetupBindingNPC final
{
public:
	class ARSCharacterBase*                       NPC;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBinding;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPC_IsBinding;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPC_IsBindingPlayer;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPC_IsBindingSASCode;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPC_IsBindingBrainCode;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B33[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventNPC_IsBindingWeapon;          // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetupBindingNPC) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetupBindingNPC");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetupBindingNPC) == 0x000020, "Wrong size on BP_BrainFieldSequenceActor_C_SetupBindingNPC");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingNPC, NPC) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingNPC::NPC' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingNPC, IsBinding) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingNPC::IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingNPC, CallFunc_BindingEventNPC_IsBinding) == 0x000009, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingNPC::CallFunc_BindingEventNPC_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingNPC, CallFunc_BindingEventNPC_IsBindingPlayer) == 0x00000A, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingNPC::CallFunc_BindingEventNPC_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingNPC, CallFunc_BindingEventNPC_IsBindingSASCode) == 0x00000B, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingNPC::CallFunc_BindingEventNPC_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingNPC, CallFunc_BindingEventNPC_IsBindingBrainCode) == 0x00000C, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingNPC::CallFunc_BindingEventNPC_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingNPC, CallFunc_BindingEventNPC_IsBindingWeapon) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingNPC::CallFunc_BindingEventNPC_IsBindingWeapon' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetupBindingENPC
// 0x0078 (0x0078 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetupBindingENPC final
{
public:
	class ARSCharacterBase*                       ENPC;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBinding;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBinding;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode;    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B34[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon;       // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventNPCEm_IsBinding;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPCEm_IsBindingPlayer;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPCEm_IsBindingSASCode;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPCEm_IsBindingBrainCode;     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B35[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventNPCEm_IsBindingWeapon;        // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventNPC_IsBinding;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPC_IsBindingPlayer;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPC_IsBindingSASCode;         // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventNPC_IsBindingBrainCode;       // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B36[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventNPC_IsBindingWeapon;          // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Private_BindingEventPlayer_IsBinding;     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetupBindingENPC) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetupBindingENPC");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetupBindingENPC) == 0x000078, "Wrong size on BP_BrainFieldSequenceActor_C_SetupBindingENPC");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, ENPC) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::ENPC' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, IsBinding) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventPlayer_IsBinding) == 0x000009, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventPlayer_IsBindingPlayer) == 0x00000A, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventPlayer_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventPlayer_IsBindingSASCode) == 0x00000B, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventPlayer_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventPlayer_IsBindingBrainCode) == 0x00000C, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventPlayer_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventPlayer_IsBindingWeapon) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventPlayer_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPCEm_IsBinding) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPCEm_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPCEm_IsBindingPlayer) == 0x000021, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPCEm_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPCEm_IsBindingSASCode) == 0x000022, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPCEm_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPCEm_IsBindingBrainCode) == 0x000023, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPCEm_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPCEm_IsBindingWeapon) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPCEm_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPC_IsBinding) == 0x000048, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPC_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPC_IsBindingPlayer) == 0x000049, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPC_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPC_IsBindingSASCode) == 0x00004A, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPC_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPC_IsBindingBrainCode) == 0x00004B, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPC_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_BindingEventNPC_IsBindingWeapon) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_BindingEventNPC_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, K2Node_MakeArray_Array_1) == 0x000060, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingENPC, CallFunc_Private_BindingEventPlayer_IsBinding) == 0x000070, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingENPC::CallFunc_Private_BindingEventPlayer_IsBinding' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.PrivateSetSequenceAsset
// 0x02C0 (0x02C0 - 0x0000)
struct BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset final
{
public:
	EBrainFieldSequencerType                      SequencerType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B37[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSLevelSequenceActor*>          OpenList;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSLevelSequenceActor*>          CloseList;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSLevelSequenceActor*>          ReceiveBrainCrashList;                             // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSLevelSequenceActor*>          OverrideList;                                      // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SequenceIndex;                                     // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B38[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B39[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B3A[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B3B[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B3C[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrainFieldSequencerType                      Temp_byte_Variable;                                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B3D[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_4;            // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_5;            // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_6;            // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_7;            // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_8;            // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_9;            // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_10;           // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B3E[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0138(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0168(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0220(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0258(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0268(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBrainFieldSequencerData               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0270(0x0048)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B3F[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset) == 0x0002C0, "Wrong size on BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, SequencerType) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::SequencerType' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, OpenList) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::OpenList' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CloseList) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CloseList' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, ReceiveBrainCrashList) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::ReceiveBrainCrashList' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, OverrideList) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::OverrideList' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Sequencer) == 0x000048, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, SequenceIndex) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::SequenceIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Loop_Num_Variable) == 0x000054, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Loop_Num_Variable_1) == 0x000068, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Loop_Counter_Variable_2) == 0x000074, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Loop_Num_Variable_2) == 0x000084, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000088, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Less_IntInt_ReturnValue_2) == 0x000089, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Loop_Counter_Variable_3) == 0x00008C, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Add_IntInt_ReturnValue_3) == 0x000090, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Array_Index_Variable_2) == 0x000094, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Loop_Num_Variable_3) == 0x000098, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Less_IntInt_ReturnValue_3) == 0x00009C, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_int_Array_Index_Variable_3) == 0x0000A8, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_IsValid_ReturnValue) == 0x0000AC, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, Temp_byte_Variable) == 0x0000B4, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue) == 0x0000B8, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Array_Length_ReturnValue_3) == 0x0000C0, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0000C4, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_2) == 0x0000CC, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_3) == 0x0000D4, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_4) == 0x0000DC, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_5) == 0x0000E4, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_6) == 0x0000EC, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_7) == 0x0000F4, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_8) == 0x0000FC, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_9) == 0x000104, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_MakeLiteralName_ReturnValue_10) == 0x00010C, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_MakeLiteralName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000118, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000128, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Conv_StringToText_ReturnValue) == 0x000138, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000150, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, K2Node_MakeStruct_FormatArgumentData) == 0x000168, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001A8, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, K2Node_MakeArray_Array) == 0x0001E8, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, K2Node_MakeArray_Array_1) == 0x0001F8, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Format_ReturnValue) == 0x000208, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Format_ReturnValue_1) == 0x000220, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Conv_TextToString_ReturnValue) == 0x000238, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000248, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000258, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, K2Node_Select_Default) == 0x000268, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_GetDataTableRowFromName_OutRow) == 0x000270, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002B8, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset, CallFunc_Array_Find_ReturnValue) == 0x0002BC, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetSequenceAsset::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetupBindingSystemRoot
// 0x0068 (0x0068 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot final
{
public:
	class AActor*                                 SystemRoot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBinding;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B40[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B41[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0020(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B42[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B43[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot) == 0x000068, "Wrong size on BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, SystemRoot) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::SystemRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, IsBinding) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, CallFunc_MakeLiteralText_ReturnValue) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x000060, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingSystemRoot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.PrivateSetupSeamlessEvent
// 0x0070 (0x0070 - 0x0000)
struct BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                BrainField;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B44[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B45[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_PlayerCameraReset_self_CastInput;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B46[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B47[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B48[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent) == 0x000070, "Wrong size on BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, Player) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::Player' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, BrainField) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::BrainField' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, K2Node_DynamicCast_AsRSBattle_Player) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_PlayerCameraReset_self_CastInput) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_PlayerCameraReset_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_PlayerCameraReset_Dummy) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_GetPlayer_ReturnValue) == 0x000048, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_InBranField_InBrainDield) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_GetBrainFieldManager_Manager) == 0x000058, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_IsValid_ReturnValue_2) == 0x000061, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent, CallFunc_GetSequencePlayer_ReturnValue) == 0x000068, "Member 'BP_BrainFieldSequenceActor_C_PrivateSetupSeamlessEvent::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.Start Damage Sequence
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainFieldSequenceActor_C_Start_Damage_Sequence final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B49[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime;           // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B4A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x001C(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x002C(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_FrameNumberToInteger_ReturnValue;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_FrameNumberToInteger_ReturnValue_1;  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_Start_Damage_Sequence");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence) == 0x000048, "Wrong size on BP_BrainFieldSequenceActor_C_Start_Damage_Sequence");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_GetMarkedFrameByLabel_MarkTime) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_GetMarkedFrameByLabel_MarkTime' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_GetMarkedFrameByLabel_ReturnValue) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_GetMarkedFrameByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_GetEndTime_ReturnValue) == 0x00001C, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_BreakQualifiedFrameTime_Frame) == 0x00002C, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_Conv_FrameNumberToInteger_ReturnValue) == 0x00003C, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_Conv_FrameNumberToInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_Start_Damage_Sequence, CallFunc_Conv_FrameNumberToInteger_ReturnValue_1) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_Start_Damage_Sequence::CallFunc_Conv_FrameNumberToInteger_ReturnValue_1' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetDamageStep
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetDamageStep final
{
public:
	int32                                         AddValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnorHealCheck;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B4B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EndFrame;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartFrame;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 OneShotEndLabelName;                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EndLabelName;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StartlabelName;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B4C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4D[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime;           // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B4E[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime_1;         // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue_1;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B4F[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_FrameNumberToInteger_ReturnValue;    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime_2;         // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue_2;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B50[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_FrameNumberToInteger_ReturnValue_1;  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetDamageStep) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetDamageStep");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetDamageStep) == 0x0000A0, "Wrong size on BP_BrainFieldSequenceActor_C_SetDamageStep");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, AddValue) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::AddValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, bIgnorHealCheck) == 0x000004, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::bIgnorHealCheck' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, EndFrame) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::EndFrame' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, StartFrame) == 0x00000C, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::StartFrame' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, OneShotEndLabelName) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::OneShotEndLabelName' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, EndLabelName) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::EndLabelName' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, StartlabelName) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::StartlabelName' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_Clamp_ReturnValue) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_Greater_IntInt_ReturnValue) == 0x000045, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000046, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000047, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetSequencePlayer_ReturnValue) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000058, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000068, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetMarkedFrameByLabel_MarkTime) == 0x000070, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetMarkedFrameByLabel_MarkTime' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetMarkedFrameByLabel_ReturnValue) == 0x000078, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetMarkedFrameByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetMarkedFrameByLabel_MarkTime_1) == 0x000080, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetMarkedFrameByLabel_MarkTime_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetMarkedFrameByLabel_ReturnValue_1) == 0x000088, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetMarkedFrameByLabel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_Conv_FrameNumberToInteger_ReturnValue) == 0x00008C, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_Conv_FrameNumberToInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetMarkedFrameByLabel_MarkTime_2) == 0x000090, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetMarkedFrameByLabel_MarkTime_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_GetMarkedFrameByLabel_ReturnValue_2) == 0x000098, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_GetMarkedFrameByLabel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, K2Node_SwitchInteger_CmpSuccess) == 0x000099, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetDamageStep, CallFunc_Conv_FrameNumberToInteger_ReturnValue_1) == 0x00009C, "Member 'BP_BrainFieldSequenceActor_C_SetDamageStep::CallFunc_Conv_FrameNumberToInteger_ReturnValue_1' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.StopDamageSequence
// 0x0010 (0x0010 - 0x0000)
struct BP_BrainFieldSequenceActor_C_StopDamageSequence final
{
public:
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_StopDamageSequence) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_StopDamageSequence");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_StopDamageSequence) == 0x000010, "Wrong size on BP_BrainFieldSequenceActor_C_StopDamageSequence");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_StopDamageSequence, CallFunc_GetSequencePlayer_ReturnValue) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_StopDamageSequence::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_StopDamageSequence, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_StopDamageSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_StopDamageSequence, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_BrainFieldSequenceActor_C_StopDamageSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.GetNowDamageStep
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainFieldSequenceActor_C_GetNowDamageStep final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_GetNowDamageStep) == 0x000004, "Wrong alignment on BP_BrainFieldSequenceActor_C_GetNowDamageStep");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_GetNowDamageStep) == 0x000004, "Wrong size on BP_BrainFieldSequenceActor_C_GetNowDamageStep");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetNowDamageStep, NewParam) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_GetNowDamageStep::NewParam' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.RefreshSequencer
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_RefreshSequencer final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_RefreshSequencer) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_RefreshSequencer");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_RefreshSequencer) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_RefreshSequencer");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_RefreshSequencer, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_RefreshSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.GetPPFuturePredictionBP
// 0x0058 (0x0058 - 0x0000)
struct BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP final
{
public:
	TArray<class AActor*>                         SpawnedActors;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B51[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B52[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventPPFuturePrediction_C*          K2Node_DynamicCast_AsBP_Event_PPFuture_Prediction; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B53[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B54[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorList_ReturnValue; // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP) == 0x000058, "Wrong size on BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, SpawnedActors) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::SpawnedActors' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, K2Node_DynamicCast_AsBP_Event_PPFuture_Prediction) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::K2Node_DynamicCast_AsBP_Event_PPFuture_Prediction' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, CallFunc_GetSequenceInSpawnedActorList_ReturnValue) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::CallFunc_GetSequenceInSpawnedActorList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_GetPPFuturePredictionBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetupBindingPlayerFromTextOpt
// 0x0050 (0x0050 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           BindingText;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           BindingCodeText;                                   // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           BindingWeaponText;                                 // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          IsBinding;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBinding;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingPlayer; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingSASCode; // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingBrainCode; // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B55[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayerFromText_IsBindingWeapon; // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt) == 0x000050, "Wrong size on BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, Player) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::Player' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, BindingText) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::BindingText' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, BindingCodeText) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::BindingCodeText' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, BindingWeaponText) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::BindingWeaponText' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, IsBinding) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, CallFunc_BindingEventPlayerFromText_IsBinding) == 0x000039, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::CallFunc_BindingEventPlayerFromText_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, CallFunc_BindingEventPlayerFromText_IsBindingPlayer) == 0x00003A, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::CallFunc_BindingEventPlayerFromText_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, CallFunc_BindingEventPlayerFromText_IsBindingSASCode) == 0x00003B, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::CallFunc_BindingEventPlayerFromText_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, CallFunc_BindingEventPlayerFromText_IsBindingBrainCode) == 0x00003C, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::CallFunc_BindingEventPlayerFromText_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt, CallFunc_BindingEventPlayerFromText_IsBindingWeapon) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_SetupBindingPlayerFromTextOpt::CallFunc_BindingEventPlayerFromText_IsBindingWeapon' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.SetupMenu
// 0x0090 (0x0090 - 0x0000)
struct BP_BrainFieldSequenceActor_C_SetupMenu final
{
public:
	bool                                          InMenu;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B56[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventTypeSwitchBase_C*              EventPP;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcessComp;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B57[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B58[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B59[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B5A[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventTypeSwitchBase_C*              K2Node_DynamicCast_AsBP_Event_Type_Switch_Base;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B5B[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B5C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_SetupMenu) == 0x000008, "Wrong alignment on BP_BrainFieldSequenceActor_C_SetupMenu");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_SetupMenu) == 0x000090, "Wrong size on BP_BrainFieldSequenceActor_C_SetupMenu");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, InMenu) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::InMenu' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, EventPP) == 0x000008, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::EventPP' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, PostProcessComp) == 0x000010, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::PostProcessComp' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, Actor) == 0x000018, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::Actor' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_Less_IntInt_ReturnValue_1) == 0x000041, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000050, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, K2Node_DynamicCast_AsBP_Event_Type_Switch_Base) == 0x000068, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::K2Node_DynamicCast_AsBP_Event_Type_Switch_Base' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_IsValid_ReturnValue_3) == 0x000071, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x000078, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_IsValid_ReturnValue_4) == 0x000088, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_SetupMenu, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BP_BrainFieldSequenceActor_C_SetupMenu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.GetSequencerTypePlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_GetSequencerTypePlayer final
{
public:
	EBrainFieldSequencerType                      SequencerType;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_GetSequencerTypePlayer) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_GetSequencerTypePlayer");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_GetSequencerTypePlayer) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_GetSequencerTypePlayer");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerTypePlayer, SequencerType) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerTypePlayer::SequencerType' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.GetSequencerTypeENPC
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainFieldSequenceActor_C_GetSequencerTypeENPC final
{
public:
	EBrainFieldSequencerType                      SequencerType;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_GetSequencerTypeENPC) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_GetSequencerTypeENPC");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_GetSequencerTypeENPC) == 0x000001, "Wrong size on BP_BrainFieldSequenceActor_C_GetSequencerTypeENPC");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_GetSequencerTypeENPC, SequencerType) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_GetSequencerTypeENPC::SequencerType' has a wrong offset!");

// Function BP_BrainFieldSequenceActor.BP_BrainFieldSequenceActor_C.IsLoadENPC
// 0x0003 (0x0003 - 0x0000)
struct BP_BrainFieldSequenceActor_C_IsLoadENPC final
{
public:
	bool                                          Loaded;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrainFieldSequencerType                      CallFunc_GetSequencerTypeENPC_SequencerType;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldSequenceActor_C_IsLoadENPC) == 0x000001, "Wrong alignment on BP_BrainFieldSequenceActor_C_IsLoadENPC");
static_assert(sizeof(BP_BrainFieldSequenceActor_C_IsLoadENPC) == 0x000003, "Wrong size on BP_BrainFieldSequenceActor_C_IsLoadENPC");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_IsLoadENPC, Loaded) == 0x000000, "Member 'BP_BrainFieldSequenceActor_C_IsLoadENPC::Loaded' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_IsLoadENPC, CallFunc_GetSequencerTypeENPC_SequencerType) == 0x000001, "Member 'BP_BrainFieldSequenceActor_C_IsLoadENPC::CallFunc_GetSequencerTypeENPC_SequencerType' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldSequenceActor_C_IsLoadENPC, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_BrainFieldSequenceActor_C_IsLoadENPC::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

