#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_RotateToTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_ch_RotateToTarget.BTT_ch_RotateToTarget_C.ExecuteUbergraph_BTT_ch_RotateToTarget
// 0x0108 (0x0108 - 0x0000)
struct BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E04[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E05[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E06[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBattleTargetActor_TargetActor;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E07[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearlyAngle_ReturnValue;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E08[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E09[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetBattleTargetActor_TargetActor_1;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E0A[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget) == 0x000008, "Wrong alignment on BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget");
static_assert(sizeof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget) == 0x000108, "Wrong size on BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, EntryPoint) == 0x000000, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000020, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_GetBattleTargetActor_TargetActor) == 0x000040, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_GetBattleTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000048, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000058, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakRotator_Roll_1) == 0x000064, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakRotator_Pitch_1) == 0x000068, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakRotator_Yaw_1) == 0x00006C, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_GetActorDeltaSeconds_ReturnValue) == 0x000070, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_GetActorDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_IsNearlyAngle_ReturnValue) == 0x000074, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_IsNearlyAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_Event_OwnerController) == 0x000078, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_Event_ControlledPawn) == 0x000080, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000088, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_RInterpTo_ReturnValue) == 0x00009C, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_GetBattleTargetActor_TargetActor_1) == 0x0000A8, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_GetBattleTargetActor_TargetActor_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000B0, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B4, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakVector_X) == 0x0000C0, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakVector_Y) == 0x0000C4, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000CC, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakVector_X_1) == 0x0000E4, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakVector_Y_1) == 0x0000E8, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_BreakVector_Z_1) == 0x0000EC, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_MakeVector_ReturnValue_1) == 0x0000F0, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000FC, "Member 'BTT_ch_RotateToTarget_C_ExecuteUbergraph_BTT_ch_RotateToTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");

// Function BTT_ch_RotateToTarget.BTT_ch_RotateToTarget_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_RotateToTarget_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_RotateToTarget_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_ch_RotateToTarget_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_ch_RotateToTarget_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_ch_RotateToTarget_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_ch_RotateToTarget_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_RotateToTarget_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_RotateToTarget.BTT_ch_RotateToTarget_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_ch_RotateToTarget_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_RotateToTarget_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_ch_RotateToTarget_C_ReceiveTickAI");
static_assert(sizeof(BTT_ch_RotateToTarget_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_ch_RotateToTarget_C_ReceiveTickAI");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_ch_RotateToTarget_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_RotateToTarget_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_RotateToTarget_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_ch_RotateToTarget_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

