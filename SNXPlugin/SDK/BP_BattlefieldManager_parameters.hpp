#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattlefieldManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.ExecuteUbergraph_BP_BattlefieldManager
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6689[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_668A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 GroupID, float FenceBattleRate, class FName UniqueId, bool IsOnceOnly)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* Actor, const struct FCharacterHPEventInfo& EventInfo)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_GroupId_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SubGroupId;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FenceBattleRate_1;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_UniqueId_1;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsOnceOnly_1;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_668B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_GroupId;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FenceBattleRate;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_UniqueId;                       // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsOnceOnly;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_668C[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager_1;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 GroupID, int32 SubGroupID, float FenceBattleRate, class FName UniqueId, bool IsOnceOnly)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterHPEventInfo                  K2Node_CustomEvent_EventInfo;                      // 0x0088(0x0028)(NoDestructor)
	bool                                          K2Node_Event_Enable;                               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_668D[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_BFGroupID;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager");
static_assert(sizeof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager) == 0x0000B8, "Wrong size on BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, EntryPoint) == 0x000000, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, CallFunc_GetEnemyManager_Manager) == 0x000008, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_GroupId_1) == 0x000034, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_GroupId_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_SubGroupId) == 0x000038, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_SubGroupId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_FenceBattleRate_1) == 0x00003C, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_FenceBattleRate_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_UniqueId_1) == 0x000040, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_UniqueId_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_IsOnceOnly_1) == 0x000048, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_IsOnceOnly_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_GroupId) == 0x00004C, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_GroupId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_FenceBattleRate) == 0x000050, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_FenceBattleRate' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_UniqueId) == 0x000054, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_UniqueId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_IsOnceOnly) == 0x00005C, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_IsOnceOnly' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, CallFunc_GetEnemyManager_Manager_1) == 0x000060, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::CallFunc_GetEnemyManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000068, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, CallFunc_GetBattleManager_BattleManager) == 0x000078, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_Actor) == 0x000080, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_CustomEvent_EventInfo) == 0x000088, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_CustomEvent_EventInfo' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_Event_Enable) == 0x0000B0, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager, K2Node_Event_BFGroupID) == 0x0000B4, "Member 'BP_BattlefieldManager_C_ExecuteUbergraph_BP_BattlefieldManager::K2Node_Event_BFGroupID' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.SetEnableEnemyOutField
// 0x0008 (0x0008 - 0x0000)
struct BP_BattlefieldManager_C_SetEnableEnemyOutField final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_668E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BFGroupID;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_SetEnableEnemyOutField) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_SetEnableEnemyOutField");
static_assert(sizeof(BP_BattlefieldManager_C_SetEnableEnemyOutField) == 0x000008, "Wrong size on BP_BattlefieldManager_C_SetEnableEnemyOutField");
static_assert(offsetof(BP_BattlefieldManager_C_SetEnableEnemyOutField, Enable) == 0x000000, "Member 'BP_BattlefieldManager_C_SetEnableEnemyOutField::Enable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_SetEnableEnemyOutField, BFGroupID) == 0x000004, "Member 'BP_BattlefieldManager_C_SetEnableEnemyOutField::BFGroupID' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.OnHpDownEvent_Event_0
// 0x0030 (0x0030 - 0x0000)
struct BP_BattlefieldManager_C_OnHpDownEvent_Event_0 final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterHPEventInfo                  EventInfo;                                         // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_OnHpDownEvent_Event_0) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_OnHpDownEvent_Event_0");
static_assert(sizeof(BP_BattlefieldManager_C_OnHpDownEvent_Event_0) == 0x000030, "Wrong size on BP_BattlefieldManager_C_OnHpDownEvent_Event_0");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent_Event_0, Actor) == 0x000000, "Member 'BP_BattlefieldManager_C_OnHpDownEvent_Event_0::Actor' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent_Event_0, EventInfo) == 0x000008, "Member 'BP_BattlefieldManager_C_OnHpDownEvent_Event_0::EventInfo' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.GroupBattleStartDispatcher_Event_0
// 0x0014 (0x0014 - 0x0000)
struct BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0 final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FenceBattleRate;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueId;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnceOnly;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0");
static_assert(sizeof(BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0) == 0x000014, "Wrong size on BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0");
static_assert(offsetof(BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0, GroupID) == 0x000000, "Member 'BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0::GroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0, FenceBattleRate) == 0x000004, "Member 'BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0::FenceBattleRate' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0, UniqueId) == 0x000008, "Member 'BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0::UniqueId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0, IsOnceOnly) == 0x000010, "Member 'BP_BattlefieldManager_C_GroupBattleStartDispatcher_Event_0::IsOnceOnly' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.OnDeadDispatcher_Event_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BattlefieldManager_C_OnDeadDispatcher_Event_0 final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FenceBattleRate;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueId;                                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnceOnly;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_OnDeadDispatcher_Event_0) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_OnDeadDispatcher_Event_0");
static_assert(sizeof(BP_BattlefieldManager_C_OnDeadDispatcher_Event_0) == 0x000018, "Wrong size on BP_BattlefieldManager_C_OnDeadDispatcher_Event_0");
static_assert(offsetof(BP_BattlefieldManager_C_OnDeadDispatcher_Event_0, GroupID) == 0x000000, "Member 'BP_BattlefieldManager_C_OnDeadDispatcher_Event_0::GroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnDeadDispatcher_Event_0, SubGroupID) == 0x000004, "Member 'BP_BattlefieldManager_C_OnDeadDispatcher_Event_0::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnDeadDispatcher_Event_0, FenceBattleRate) == 0x000008, "Member 'BP_BattlefieldManager_C_OnDeadDispatcher_Event_0::FenceBattleRate' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnDeadDispatcher_Event_0, UniqueId) == 0x00000C, "Member 'BP_BattlefieldManager_C_OnDeadDispatcher_Event_0::UniqueId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnDeadDispatcher_Event_0, IsOnceOnly) == 0x000014, "Member 'BP_BattlefieldManager_C_OnDeadDispatcher_Event_0::IsOnceOnly' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.UpdateBattlefield
// 0x0004 (0x0004 - 0x0000)
struct BP_BattlefieldManager_C_UpdateBattlefield final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_UpdateBattlefield) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_UpdateBattlefield");
static_assert(sizeof(BP_BattlefieldManager_C_UpdateBattlefield) == 0x000004, "Wrong size on BP_BattlefieldManager_C_UpdateBattlefield");
static_assert(offsetof(BP_BattlefieldManager_C_UpdateBattlefield, DeltaSeconds) == 0x000000, "Member 'BP_BattlefieldManager_C_UpdateBattlefield::DeltaSeconds' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.UpdateInit
// 0x0004 (0x0004 - 0x0000)
struct BP_BattlefieldManager_C_UpdateInit final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_UpdateInit) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_UpdateInit");
static_assert(sizeof(BP_BattlefieldManager_C_UpdateInit) == 0x000004, "Wrong size on BP_BattlefieldManager_C_UpdateInit");
static_assert(offsetof(BP_BattlefieldManager_C_UpdateInit, DeltaSeconds) == 0x000000, "Member 'BP_BattlefieldManager_C_UpdateInit::DeltaSeconds' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.UpdateStart
// 0x0004 (0x0004 - 0x0000)
struct BP_BattlefieldManager_C_UpdateStart final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_UpdateStart) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_UpdateStart");
static_assert(sizeof(BP_BattlefieldManager_C_UpdateStart) == 0x000004, "Wrong size on BP_BattlefieldManager_C_UpdateStart");
static_assert(offsetof(BP_BattlefieldManager_C_UpdateStart, DeltaSeconds) == 0x000000, "Member 'BP_BattlefieldManager_C_UpdateStart::DeltaSeconds' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.UpdateExec
// 0x0004 (0x0004 - 0x0000)
struct BP_BattlefieldManager_C_UpdateExec final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_UpdateExec) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_UpdateExec");
static_assert(sizeof(BP_BattlefieldManager_C_UpdateExec) == 0x000004, "Wrong size on BP_BattlefieldManager_C_UpdateExec");
static_assert(offsetof(BP_BattlefieldManager_C_UpdateExec, DeltaSeconds) == 0x000000, "Member 'BP_BattlefieldManager_C_UpdateExec::DeltaSeconds' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.UpdateEnd
// 0x0004 (0x0004 - 0x0000)
struct BP_BattlefieldManager_C_UpdateEnd final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_UpdateEnd) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_UpdateEnd");
static_assert(sizeof(BP_BattlefieldManager_C_UpdateEnd) == 0x000004, "Wrong size on BP_BattlefieldManager_C_UpdateEnd");
static_assert(offsetof(BP_BattlefieldManager_C_UpdateEnd, DeltaSeconds) == 0x000000, "Member 'BP_BattlefieldManager_C_UpdateEnd::DeltaSeconds' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.OnEnemyDead
// 0x01F8 (0x01F8 - 0x0000)
struct BP_BattlefieldManager_C_OnEnemyDead final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FenceBattleRate;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueId;                                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnceOnly;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_668F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlefieldInfo                       BFInfo;                                            // 0x0018(0x0088)(Edit, BlueprintVisible)
	class ABP_EnemyManager_C*                     EnemyManager;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BroadcastBattlefieldRushEnd_ReturnValue;  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndBattlefield_ReturnValue;               // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6690[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlefieldInfo                       CallFunc_GetBattlefieldInfo_BFInfo;                // 0x00B0(0x0088)()
	bool                                          CallFunc_GetBattlefieldInfo_IsExist;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6691[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBattlefieldInfo_ReturnValue;           // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SpawnOneEnemyInSubGroup_SpawnOK;          // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6692[0x1];                                     // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSubGroupEnemyCount_GroupCount;         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6693[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGroupEnemyCount_GroupCount;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6694[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSubGroupEnemyCount_GroupCount_1;       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6695[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlefieldInfo                       CallFunc_GetBattlefieldInfo_BFInfo_1;              // 0x0168(0x0088)()
	bool                                          CallFunc_GetBattlefieldInfo_IsExist_1;             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndBattlefield_ReturnValue_1;             // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_OnEnemyDead) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_OnEnemyDead");
static_assert(sizeof(BP_BattlefieldManager_C_OnEnemyDead) == 0x0001F8, "Wrong size on BP_BattlefieldManager_C_OnEnemyDead");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, GroupID) == 0x000000, "Member 'BP_BattlefieldManager_C_OnEnemyDead::GroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, SubGroupID) == 0x000004, "Member 'BP_BattlefieldManager_C_OnEnemyDead::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, FenceBattleRate) == 0x000008, "Member 'BP_BattlefieldManager_C_OnEnemyDead::FenceBattleRate' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, UniqueId) == 0x00000C, "Member 'BP_BattlefieldManager_C_OnEnemyDead::UniqueId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, IsOnceOnly) == 0x000014, "Member 'BP_BattlefieldManager_C_OnEnemyDead::IsOnceOnly' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, BFInfo) == 0x000018, "Member 'BP_BattlefieldManager_C_OnEnemyDead::BFInfo' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, EnemyManager) == 0x0000A0, "Member 'BP_BattlefieldManager_C_OnEnemyDead::EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_BroadcastBattlefieldRushEnd_ReturnValue) == 0x0000A9, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_BroadcastBattlefieldRushEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_EndBattlefield_ReturnValue) == 0x0000AA, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_EndBattlefield_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GetBattlefieldInfo_BFInfo) == 0x0000B0, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GetBattlefieldInfo_BFInfo' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GetBattlefieldInfo_IsExist) == 0x000138, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GetBattlefieldInfo_IsExist' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, K2Node_SwitchEnum_CmpSuccess) == 0x000140, "Member 'BP_BattlefieldManager_C_OnEnemyDead::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_SetBattlefieldInfo_ReturnValue) == 0x000141, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_SetBattlefieldInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_SpawnOneEnemyInSubGroup_SpawnOK) == 0x000142, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_SpawnOneEnemyInSubGroup_SpawnOK' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GetSubGroupEnemyCount_GroupCount) == 0x000144, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GetSubGroupEnemyCount_GroupCount' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_Greater_IntInt_ReturnValue) == 0x000148, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GetGroupEnemyCount_GroupCount) == 0x00014C, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GetGroupEnemyCount_GroupCount' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000150, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_Less_IntInt_ReturnValue) == 0x000151, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GetEnemyManager_Manager) == 0x000158, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GetSubGroupEnemyCount_GroupCount_1) == 0x000160, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GetSubGroupEnemyCount_GroupCount_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000164, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GetBattlefieldInfo_BFInfo_1) == 0x000168, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GetBattlefieldInfo_BFInfo_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_GetBattlefieldInfo_IsExist_1) == 0x0001F0, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_GetBattlefieldInfo_IsExist_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnEnemyDead, CallFunc_EndBattlefield_ReturnValue_1) == 0x0001F1, "Member 'BP_BattlefieldManager_C_OnEnemyDead::CallFunc_EndBattlefield_ReturnValue_1' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.OnFoundBattlefieldStart
// 0x0040 (0x0040 - 0x0000)
struct BP_BattlefieldManager_C_OnFoundBattlefieldStart final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FenceBattleRate;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueId;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnceOnly;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6696[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlefieldTutorialInfo>       K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInFence_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartBattlefield_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_OnFoundBattlefieldStart) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_OnFoundBattlefieldStart");
static_assert(sizeof(BP_BattlefieldManager_C_OnFoundBattlefieldStart) == 0x000040, "Wrong size on BP_BattlefieldManager_C_OnFoundBattlefieldStart");
static_assert(offsetof(BP_BattlefieldManager_C_OnFoundBattlefieldStart, GroupID) == 0x000000, "Member 'BP_BattlefieldManager_C_OnFoundBattlefieldStart::GroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnFoundBattlefieldStart, FenceBattleRate) == 0x000004, "Member 'BP_BattlefieldManager_C_OnFoundBattlefieldStart::FenceBattleRate' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnFoundBattlefieldStart, UniqueId) == 0x000008, "Member 'BP_BattlefieldManager_C_OnFoundBattlefieldStart::UniqueId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnFoundBattlefieldStart, IsOnceOnly) == 0x000010, "Member 'BP_BattlefieldManager_C_OnFoundBattlefieldStart::IsOnceOnly' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnFoundBattlefieldStart, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_BattlefieldManager_C_OnFoundBattlefieldStart::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnFoundBattlefieldStart, CallFunc_Conv_NameToString_ReturnValue) == 0x000028, "Member 'BP_BattlefieldManager_C_OnFoundBattlefieldStart::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnFoundBattlefieldStart, CallFunc_IsPlayerInFence_ReturnValue) == 0x000038, "Member 'BP_BattlefieldManager_C_OnFoundBattlefieldStart::CallFunc_IsPlayerInFence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnFoundBattlefieldStart, CallFunc_StartBattlefield_ReturnValue) == 0x000039, "Member 'BP_BattlefieldManager_C_OnFoundBattlefieldStart::CallFunc_StartBattlefield_ReturnValue' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.OnHpDownEvent
// 0x0058 (0x0058 - 0x0000)
struct BP_BattlefieldManager_C_OnHpDownEvent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterHPEventInfo                  EventInfo;                                         // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         SubGroupID;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     EnemyManager;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6697[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_OnHpDownEvent) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_OnHpDownEvent");
static_assert(sizeof(BP_BattlefieldManager_C_OnHpDownEvent) == 0x000058, "Wrong size on BP_BattlefieldManager_C_OnHpDownEvent");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, Actor) == 0x000000, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::Actor' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, EventInfo) == 0x000008, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::EventInfo' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, SubGroupID) == 0x000030, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, GroupID) == 0x000034, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::GroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, EnemyManager) == 0x000038, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, CallFunc_FTrunc_ReturnValue_1) == 0x000044, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnHpDownEvent, CallFunc_GetEnemyManager_Manager) == 0x000050, "Member 'BP_BattlefieldManager_C_OnHpDownEvent::CallFunc_GetEnemyManager_Manager' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.InitializeAtAreaStart
// 0x0010 (0x0010 - 0x0000)
struct BP_BattlefieldManager_C_InitializeAtAreaStart final
{
public:
	TArray<class AActor*>                         NewLocalVar_0;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_InitializeAtAreaStart) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_InitializeAtAreaStart");
static_assert(sizeof(BP_BattlefieldManager_C_InitializeAtAreaStart) == 0x000010, "Wrong size on BP_BattlefieldManager_C_InitializeAtAreaStart");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtAreaStart, NewLocalVar_0) == 0x000000, "Member 'BP_BattlefieldManager_C_InitializeAtAreaStart::NewLocalVar_0' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.UpdateFenceList
// 0x0010 (0x0010 - 0x0000)
struct BP_BattlefieldManager_C_UpdateFenceList final
{
public:
	TArray<class ABP_en_BattleField_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_UpdateFenceList) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_UpdateFenceList");
static_assert(sizeof(BP_BattlefieldManager_C_UpdateFenceList) == 0x000010, "Wrong size on BP_BattlefieldManager_C_UpdateFenceList");
static_assert(offsetof(BP_BattlefieldManager_C_UpdateFenceList, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_BattlefieldManager_C_UpdateFenceList::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.ResetFenceRandomSeed
// 0x0014 (0x0014 - 0x0000)
struct BP_BattlefieldManager_C_ResetFenceRandomSeed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6698[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_ResetFenceRandomSeed_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_ResetFenceRandomSeed) == 0x000004, "Wrong alignment on BP_BattlefieldManager_C_ResetFenceRandomSeed");
static_assert(sizeof(BP_BattlefieldManager_C_ResetFenceRandomSeed) == 0x000014, "Wrong size on BP_BattlefieldManager_C_ResetFenceRandomSeed");
static_assert(offsetof(BP_BattlefieldManager_C_ResetFenceRandomSeed, ReturnValue) == 0x000000, "Member 'BP_BattlefieldManager_C_ResetFenceRandomSeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetFenceRandomSeed, CallFunc_RandomInteger_ReturnValue) == 0x000004, "Member 'BP_BattlefieldManager_C_ResetFenceRandomSeed::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetFenceRandomSeed, CallFunc_MakeRandomStream_ReturnValue) == 0x000008, "Member 'BP_BattlefieldManager_C_ResetFenceRandomSeed::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetFenceRandomSeed, CallFunc_ResetFenceRandomSeed_ReturnValue) == 0x000010, "Member 'BP_BattlefieldManager_C_ResetFenceRandomSeed::CallFunc_ResetFenceRandomSeed_ReturnValue' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.OnLoad_SaveData
// 0x0090 (0x0090 - 0x0000)
struct BP_BattlefieldManager_C_OnLoad_SaveData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6699[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, struct FBattlefieldInfo>  CallFunc_GetBattlefieldInfos_ReturnValue;          // 0x0038(0x0050)()
	int32                                         CallFunc_GetBattlefieldRandomSeed_ReturnValue;     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_OnLoad_SaveData) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_OnLoad_SaveData");
static_assert(sizeof(BP_BattlefieldManager_C_OnLoad_SaveData) == 0x000090, "Wrong size on BP_BattlefieldManager_C_OnLoad_SaveData");
static_assert(offsetof(BP_BattlefieldManager_C_OnLoad_SaveData, ReturnValue) == 0x000000, "Member 'BP_BattlefieldManager_C_OnLoad_SaveData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnLoad_SaveData, CallFunc_GetUserParamManager_UserParamManager) == 0x000008, "Member 'BP_BattlefieldManager_C_OnLoad_SaveData::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnLoad_SaveData, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BattlefieldManager_C_OnLoad_SaveData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnLoad_SaveData, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_BattlefieldManager_C_OnLoad_SaveData::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnLoad_SaveData, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_BattlefieldManager_C_OnLoad_SaveData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnLoad_SaveData, CallFunc_GetBattlefieldInfos_ReturnValue) == 0x000038, "Member 'BP_BattlefieldManager_C_OnLoad_SaveData::CallFunc_GetBattlefieldInfos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnLoad_SaveData, CallFunc_GetBattlefieldRandomSeed_ReturnValue) == 0x000088, "Member 'BP_BattlefieldManager_C_OnLoad_SaveData::CallFunc_GetBattlefieldRandomSeed_ReturnValue' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.OnSave_SaveData
// 0x0010 (0x0010 - 0x0000)
struct BP_BattlefieldManager_C_OnSave_SaveData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_OnSave_SaveData) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_OnSave_SaveData");
static_assert(sizeof(BP_BattlefieldManager_C_OnSave_SaveData) == 0x000010, "Wrong size on BP_BattlefieldManager_C_OnSave_SaveData");
static_assert(offsetof(BP_BattlefieldManager_C_OnSave_SaveData, ReturnValue) == 0x000000, "Member 'BP_BattlefieldManager_C_OnSave_SaveData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_OnSave_SaveData, CallFunc_GetUserParamManager_UserParamManager) == 0x000008, "Member 'BP_BattlefieldManager_C_OnSave_SaveData::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.InitializeAtStartBattlefield
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BattlefieldManager_C_InitializeAtStartBattlefield final
{
public:
	struct FBattlefieldInfo                       CurrentBFInfo;                                     // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SubGroupID;                                        // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupID;                                           // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669D[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSubGroupEnemyCount_GroupCount;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_InitializeAtStartBattlefield) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_InitializeAtStartBattlefield");
static_assert(sizeof(BP_BattlefieldManager_C_InitializeAtStartBattlefield) == 0x0000B0, "Wrong size on BP_BattlefieldManager_C_InitializeAtStartBattlefield");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, CurrentBFInfo) == 0x000000, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::CurrentBFInfo' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, ReturnValue) == 0x000088, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, SubGroupID) == 0x00008C, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, GroupID) == 0x000090, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::GroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, K2Node_SwitchEnum_CmpSuccess) == 0x000098, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, CallFunc_GetEnemyManager_Manager) == 0x0000A0, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, CallFunc_GetSubGroupEnemyCount_GroupCount) == 0x0000A8, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::CallFunc_GetSubGroupEnemyCount_GroupCount' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, CallFunc_Greater_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_InitializeAtStartBattlefield, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000AD, "Member 'BP_BattlefieldManager_C_InitializeAtStartBattlefield::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.CheckBattlefieldEventStart
// 0x0150 (0x0150 - 0x0000)
struct BP_BattlefieldManager_C_CheckBattlefieldEventStart final
{
public:
	struct FBattlefieldInfo                       BFInfo;                                            // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669E[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669F[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A0[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66A1[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_CheckBattlefieldEventStart) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_CheckBattlefieldEventStart");
static_assert(sizeof(BP_BattlefieldManager_C_CheckBattlefieldEventStart) == 0x000150, "Wrong size on BP_BattlefieldManager_C_CheckBattlefieldEventStart");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, BFInfo) == 0x000000, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::BFInfo' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_GetClassDisplayName_ReturnValue) == 0x000090, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, Temp_int_Loop_Num_Variable) == 0x0000A0, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A8, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000B8, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000C8, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0000D8, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000100, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000118, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000128, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStart, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000140, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStart::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.CheckBattlefieldEventStartOne
// 0x0020 (0x0020 - 0x0000)
struct BP_BattlefieldManager_C_CheckBattlefieldEventStartOne final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TutorialGroupID;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TutorialSubGroupID;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Param_MakeEventActorClass;                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartEventInBattleField_ReturnValue;      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_CheckBattlefieldEventStartOne");
static_assert(sizeof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne) == 0x000020, "Wrong size on BP_BattlefieldManager_C_CheckBattlefieldEventStartOne");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, GroupID) == 0x000000, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::GroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, SubGroupID) == 0x000004, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, TutorialGroupID) == 0x000008, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::TutorialGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, TutorialSubGroupID) == 0x00000C, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::TutorialSubGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, Param_MakeEventActorClass) == 0x000010, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::Param_MakeEventActorClass' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, CallFunc_StartEventInBattleField_ReturnValue) == 0x00001A, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::CallFunc_StartEventInBattleField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_CheckBattlefieldEventStartOne, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001B, "Member 'BP_BattlefieldManager_C_CheckBattlefieldEventStartOne::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.ResetAllBFInfoStatus
// 0x01D0 (0x01D0 - 0x0000)
struct BP_BattlefieldManager_C_ResetAllBFInfoStatus final
{
public:
	bool                                          IsLocationChange;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A3[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66A4[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlefieldInfo                       CallFunc_Map_Find_Value;                           // 0x0030(0x0088)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A5[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlefieldInfo                       K2Node_SetFieldsInStruct_StructOut;                // 0x00C0(0x0088)()
	struct FBattlefieldInfo                       K2Node_SetFieldsInStruct_StructOut_1;              // 0x0148(0x0088)()
};
static_assert(alignof(BP_BattlefieldManager_C_ResetAllBFInfoStatus) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_ResetAllBFInfoStatus");
static_assert(sizeof(BP_BattlefieldManager_C_ResetAllBFInfoStatus) == 0x0001D0, "Wrong size on BP_BattlefieldManager_C_ResetAllBFInfoStatus");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, IsLocationChange) == 0x000000, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::IsLocationChange' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, K2Node_SetFieldsInStruct_StructOut) == 0x0000C0, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_ResetAllBFInfoStatus, K2Node_SetFieldsInStruct_StructOut_1) == 0x000148, "Member 'BP_BattlefieldManager_C_ResetAllBFInfoStatus::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.IsAnyFenceEnabled
// 0x0058 (0x0058 - 0x0000)
struct BP_BattlefieldManager_C_IsAnyFenceEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Area;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Loc;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A7[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSceneManager_SceneManager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     K2Node_DynamicCast_AsBP_Scene_Manager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlefieldInfo>               CallFunc_Map_Values_Values;                        // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_IsAnyFenceEnabled) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_IsAnyFenceEnabled");
static_assert(sizeof(BP_BattlefieldManager_C_IsAnyFenceEnabled) == 0x000058, "Wrong size on BP_BattlefieldManager_C_IsAnyFenceEnabled");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, ReturnValue) == 0x000000, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, Area) == 0x000004, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::Area' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, Loc) == 0x000008, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::Loc' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_GetSceneManager_SceneManager) == 0x000020, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, K2Node_DynamicCast_AsBP_Scene_Manager) == 0x000028, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::K2Node_DynamicCast_AsBP_Scene_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_Map_Values_Values) == 0x000038, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00004D, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004E, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_BooleanAND_ReturnValue) == 0x00004F, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_BooleanAND_ReturnValue_1) == 0x000050, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsAnyFenceEnabled, CallFunc_BooleanAND_ReturnValue_2) == 0x000051, "Member 'BP_BattlefieldManager_C_IsAnyFenceEnabled::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.IsExistBattlefieldEnemies
// 0x0038 (0x0038 - 0x0000)
struct BP_BattlefieldManager_C_IsExistBattlefieldEnemies final
{
public:
	int32                                         BFGroupID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstSubGroup;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A9[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_subGroupId;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_groupId;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66AA[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66AB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSubGroupEnemyCount_GroupCount;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_IsExistBattlefieldEnemies");
static_assert(sizeof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies) == 0x000038, "Wrong size on BP_BattlefieldManager_C_IsExistBattlefieldEnemies");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, BFGroupID) == 0x000000, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::BFGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, SubGroupID) == 0x000004, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, FirstSubGroup) == 0x000008, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::FirstSubGroup' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, ReturnValue) == 0x00000C, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, L_subGroupId) == 0x000010, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::L_subGroupId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, L_groupId) == 0x000014, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::L_groupId' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, CallFunc_GetEnemyManager_Manager) == 0x000020, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, CallFunc_GetSubGroupEnemyCount_GroupCount) == 0x00002C, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::CallFunc_GetSubGroupEnemyCount_GroupCount' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemies, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemies::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.IsExistBattlefieldEnemiesStrictly
// 0x0020 (0x0020 - 0x0000)
struct BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly final
{
public:
	int32                                         BFGroupID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66AC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSubGroupEnemyCount_GroupCount;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly");
static_assert(sizeof(BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly) == 0x000020, "Wrong size on BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly, BFGroupID) == 0x000000, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly::BFGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly, SubGroupID) == 0x000004, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly, ReturnValue) == 0x000008, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly, CallFunc_GetEnemyManager_Manager) == 0x000010, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly, CallFunc_GetSubGroupEnemyCount_GroupCount) == 0x000018, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly::CallFunc_GetSubGroupEnemyCount_GroupCount' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BattlefieldManager_C_IsExistBattlefieldEnemiesStrictly::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattlefieldManager.BP_BattlefieldManager_C.Setting Enemy BFGroup
// 0x0078 (0x0078 - 0x0000)
struct BP_BattlefieldManager_C_Setting_Enemy_BFGroup final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66AD[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager*                          CallFunc_GetEnemyManager_EnemyManager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66AE[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66AF[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RushEventTriggerBox_C*              CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66B0[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_RushEventTriggerBox_C*>      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup) == 0x000008, "Wrong alignment on BP_BattlefieldManager_C_Setting_Enemy_BFGroup");
static_assert(sizeof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup) == 0x000078, "Wrong size on BP_BattlefieldManager_C_Setting_Enemy_BFGroup");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_GetEnemyManager_EnemyManager) == 0x000020, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_GetEnemyList_ReturnValue) == 0x000028, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, Temp_int_Loop_Num_Variable_1) == 0x000038, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000040, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_Map_Find_Value) == 0x000050, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BattlefieldManager_C_Setting_Enemy_BFGroup, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_BattlefieldManager_C_Setting_Enemy_BFGroup::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

}

