#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueObjectComponentBase

#include "Basic.hpp"

#include "UniqueObjectAttackInfo_structs.hpp"
#include "PsychicObjectSizeParameter_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"
#include "UniqueObjectCommonParameter_structs.hpp"
#include "Enum_ui_action_icon_device_type_structs.hpp"
#include "PsychicObjectAttackParameterData_structs.hpp"


namespace SDK::Params
{

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitializeUniqueObject
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_InitializeUniqueObject final
{
public:
	class UBP_PsychicObjectComponent_C*           Psy_obj_comp_in;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PsychicComponentMain_C*             Psy_comp_main_in;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitialParameter_dummy;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitialComponent_dummy;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_InitializeUniqueObject) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_InitializeUniqueObject");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_InitializeUniqueObject) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_InitializeUniqueObject");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeUniqueObject, Psy_obj_comp_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_InitializeUniqueObject::Psy_obj_comp_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeUniqueObject, Psy_comp_main_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_InitializeUniqueObject::Psy_comp_main_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeUniqueObject, CallFunc_InitialParameter_dummy) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_InitializeUniqueObject::CallFunc_InitialParameter_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeUniqueObject, CallFunc_InitialComponent_dummy) == 0x000011, "Member 'BP_UniqueObjectComponentBase_C_InitializeUniqueObject::CallFunc_InitialComponent_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.FinalizeUniqueObject
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_FinalizeUniqueObject final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_FinalizeUniqueObject) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_FinalizeUniqueObject");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_FinalizeUniqueObject) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_FinalizeUniqueObject");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_FinalizeUniqueObject, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_FinalizeUniqueObject::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitialComponent
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueObjectComponentBase_C_InitialComponent final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DED[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DEE[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DEF[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUniqueObjectC_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_InitialComponent) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_InitialComponent");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_InitialComponent) == 0x000038, "Wrong size on BP_UniqueObjectComponentBase_C_InitialComponent");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, Temp_float_Variable) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, Temp_float_Variable_1) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000D, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000E, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000F, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_BooleanOR_ReturnValue_1) == 0x000011, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_BooleanOR_ReturnValue_2) == 0x000012, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_Array_Add_ReturnValue_1) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialComponent, CallFunc_SetUniqueObjectC_ReturnValue) == 0x000031, "Member 'BP_UniqueObjectComponentBase_C_InitialComponent::CallFunc_SetUniqueObjectC_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitialParameter
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueObjectComponentBase_C_InitialParameter final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          First_time_in;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF0[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_InitialParameter) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_InitialParameter");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_InitialParameter) == 0x000038, "Wrong size on BP_UniqueObjectComponentBase_C_InitialParameter");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialParameter, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_InitialParameter::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialParameter, First_time_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_InitialParameter::First_time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialParameter, Dummy) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_InitialParameter::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialParameter, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_InitialParameter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialParameter, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_InitialParameter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialParameter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_InitialParameter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAsyncCapture
// 0x0005 (0x0005 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAsyncCapture final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_success_in;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAsyncCapture) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAsyncCapture");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAsyncCapture) == 0x000005, "Wrong size on BP_UniqueObjectComponentBase_C_SetAsyncCapture");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAsyncCapture, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAsyncCapture::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAsyncCapture, Capture_success_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetAsyncCapture::Capture_success_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAsyncCapture, Dummy) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetAsyncCapture::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAsyncCapture, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_UniqueObjectComponentBase_C_SetAsyncCapture::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAsyncCapture, CallFunc_BooleanOR_ReturnValue_1) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetAsyncCapture::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncCapture
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PrevAsyncCapture final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PrevAsyncCapture) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_PrevAsyncCapture");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PrevAsyncCapture) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_PrevAsyncCapture");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PrevAsyncCapture, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PrevAsyncCapture::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAsyncCapture
// 0x00A0 (0x00A0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateAsyncCapture final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_rate;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF2[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_2;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateAsyncCapture");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture) == 0x0000A0, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateAsyncCapture");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, L_rate) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_ComposeRotators_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_Add_VectorVector_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_GetVectorValue_ReturnValue) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_BreakVector_X_1) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_BreakVector_Z_1) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_MakeRotator_ReturnValue) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_GetVectorValue_ReturnValue_1) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_BooleanOR_ReturnValue_1) == 0x000081, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_GetVectorValue_ReturnValue_2) == 0x000084, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_GetVectorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCapture, CallFunc_GetRate_ReturnValue) == 0x00009C, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCapture::CallFunc_GetRate_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncCapture
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PostAsyncCapture final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PostAsyncCapture) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_PostAsyncCapture");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PostAsyncCapture) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_PostAsyncCapture");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncCapture, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncCapture::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCaptureLevel
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetCaptureLevel final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUniqueBend_dummy;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetCaptureLevel) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetCaptureLevel");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetCaptureLevel) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetCaptureLevel");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureLevel, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureLevel::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureLevel, CallFunc_SetUniqueBend_dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureLevel::CallFunc_SetUniqueBend_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncCommon
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PrevAsyncCommon final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PrevAsyncCommon) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_PrevAsyncCommon");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PrevAsyncCommon) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_PrevAsyncCommon");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PrevAsyncCommon, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PrevAsyncCommon::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAsyncCommon
// 0x0006 (0x0006 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateAsyncCommon final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateUniqueRide_dummy;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateUniqueRidePrev_dummy;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateGroundSlope_dummy;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateUniqueExplosion_dummy;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateUniquePress_dummy;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateAsyncCommon) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateAsyncCommon");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateAsyncCommon) == 0x000006, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateAsyncCommon");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCommon, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCommon::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCommon, CallFunc_UpdateUniqueRide_dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCommon::CallFunc_UpdateUniqueRide_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCommon, CallFunc_UpdateUniqueRidePrev_dummy) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCommon::CallFunc_UpdateUniqueRidePrev_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCommon, CallFunc_UpdateGroundSlope_dummy) == 0x000003, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCommon::CallFunc_UpdateGroundSlope_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCommon, CallFunc_UpdateUniqueExplosion_dummy) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCommon::CallFunc_UpdateUniqueExplosion_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncCommon, CallFunc_UpdateUniquePress_dummy) == 0x000005, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncCommon::CallFunc_UpdateUniquePress_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncCommon
// 0x0006 (0x0006 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PostAsyncCommon final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateUniqueRide_dummy;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateUniqueRidePrev_dummy;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateGroundSlope_dummy;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateUniqueExplosion_dummy;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateUniquePress_dummy;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PostAsyncCommon) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_PostAsyncCommon");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PostAsyncCommon) == 0x000006, "Wrong size on BP_UniqueObjectComponentBase_C_PostAsyncCommon");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncCommon, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncCommon::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncCommon, CallFunc_UpdateUniqueRide_dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncCommon::CallFunc_UpdateUniqueRide_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncCommon, CallFunc_UpdateUniqueRidePrev_dummy) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncCommon::CallFunc_UpdateUniqueRidePrev_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncCommon, CallFunc_UpdateGroundSlope_dummy) == 0x000003, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncCommon::CallFunc_UpdateGroundSlope_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncCommon, CallFunc_UpdateUniqueExplosion_dummy) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncCommon::CallFunc_UpdateUniqueExplosion_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncCommon, CallFunc_UpdateUniquePress_dummy) == 0x000005, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncCommon::CallFunc_UpdateUniquePress_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetHitUnqObj
// 0x02A0 (0x02A0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetHitUnqObj final
{
public:
	bool                                          Hit_enemy_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hit_background_in;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF3[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCHitResult                           Hit_result_in;                                     // 0x0008(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FHitResult                             Hit_result_bg_in;                                  // 0x01C8(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Dummy;                                             // 0x0250(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF4[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDamageCollisionInvincible_bInvincible;  // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF5[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamagePartCollisionComponent*          K2Node_DynamicCast_AsDamage_Part_Collision_Component; // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF6[0x5];                                     // 0x028B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvincible_invincibleAll;               // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvincible_invincibleParts;             // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvincible_ReturnValue;                 // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUniquePressHit_dummy;                  // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetHitUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetHitUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetHitUnqObj) == 0x0002A0, "Wrong size on BP_UniqueObjectComponentBase_C_SetHitUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, Hit_enemy_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::Hit_enemy_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, Hit_background_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::Hit_background_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, Hit_result_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::Hit_result_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, Hit_result_bg_in) == 0x0001C8, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::Hit_result_bg_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, Dummy) == 0x000250, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_GetOwner_ReturnValue) == 0x000258, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_GetOwner_ReturnValue_1) == 0x000260, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, K2Node_DynamicCast_AsRSBattle_Player) == 0x000268, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, K2Node_DynamicCast_bSuccess) == 0x000270, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_IsValid_ReturnValue) == 0x000271, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_IsValid_ReturnValue_1) == 0x000272, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_IsDamageCollisionInvincible_bInvincible) == 0x000273, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_IsDamageCollisionInvincible_bInvincible' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000274, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_GetOwner_ReturnValue_2) == 0x000278, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, K2Node_DynamicCast_AsDamage_Part_Collision_Component) == 0x000280, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::K2Node_DynamicCast_AsDamage_Part_Collision_Component' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, K2Node_DynamicCast_bSuccess_1) == 0x000288, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_IsValid_ReturnValue_2) == 0x000289, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00028A, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000290, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, K2Node_DynamicCast_bSuccess_2) == 0x000298, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_IsValid_ReturnValue_3) == 0x000299, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_IsInvincible_invincibleAll) == 0x00029A, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_IsInvincible_invincibleAll' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_IsInvincible_invincibleParts) == 0x00029B, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_IsInvincible_invincibleParts' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_IsInvincible_ReturnValue) == 0x00029C, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_IsInvincible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitUnqObj, CallFunc_SetUniquePressHit_dummy) == 0x00029D, "Member 'BP_UniqueObjectComponentBase_C_SetHitUnqObj::CallFunc_SetUniquePressHit_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackUnique
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttackUnique final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttackUnique) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttackUnique");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttackUnique) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttackUnique");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackUnique, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttackUnique::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackUnique, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetAttackUnique::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputDelay
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputDelay final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputDelay) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputDelay");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputDelay) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputDelay");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputDelay, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputDelay::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputDelay, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputDelay::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAsyncInputDelay
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay final
{
public:
	struct FVector                                CallFunc_GetGuidePos_guide_pos;                    // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputWait_dummy;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay, CallFunc_GetGuidePos_guide_pos) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay::CallFunc_GetGuidePos_guide_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay, CallFunc_SetInputWait_dummy) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay::CallFunc_SetInputWait_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay, CallFunc_IsOver_ReturnValue) == 0x00000D, "Member 'BP_UniqueObjectComponentBase_C_UpdateAsyncInputDelay::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWait
// 0x00C0 (0x00C0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputWait final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success_in;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ui_action_icon_device_type               L_deviceType;                                      // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerInputType                              CallFunc_GetInputType_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF7[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputWaitEnemy_dummy;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInputSetting_dummy;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF8[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DF9[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager_1;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DFA[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager_2;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DFB[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DFC[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager_1;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputWait) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputWait");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputWait) == 0x0000C0, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputWait");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, Success_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::Success_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, Dummy) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, L_deviceType) == 0x000003, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::L_deviceType' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetInputType_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_Conv_BoolToString_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_SetInputWaitEnemy_dummy) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_SetInputWaitEnemy_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00005A, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00005B, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_SetInputSetting_dummy) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_SetInputSetting_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetPsychicObjectManager_PsyObjManager_1) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetPsychicObjectManager_PsyObjManager_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetPsychicObjectManager_PsyObjManager_2) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetPsychicObjectManager_PsyObjManager_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_BooleanOR_ReturnValue) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetHud_hud_main) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetHud_hud_main_1) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetHud_hud_main_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_IsValid_ReturnValue_3) == 0x0000A1, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetPostProcessManager_Manager) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_GetPostProcessManager_Manager_1) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_GetPostProcessManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_IsValid_ReturnValue_4) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_IsValid_ReturnValue_5) == 0x0000B9, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWait, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000BA, "Member 'BP_UniqueObjectComponentBase_C_SetInputWait::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncInputWait
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PrevAsyncInputWait final
{
public:
	float                                         NewLocalVar_0;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInput_return;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PrevAsyncInputWait) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_PrevAsyncInputWait");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PrevAsyncInputWait) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_PrevAsyncInputWait");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PrevAsyncInputWait, NewLocalVar_0) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PrevAsyncInputWait::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PrevAsyncInputWait, CallFunc_CheckInput_return) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_PrevAsyncInputWait::CallFunc_CheckInput_return' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncInputWait
// 0x0160 (0x0160 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PostAsyncInputWait final
{
public:
	bool                                          L_bSuccess;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DFD[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DFE[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DFF[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInputWait_dummy;                       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInputDuel_success;                   // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E00[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_7;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputSuccess_dummy;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_2;                     // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_Select_Default_1;                           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputFailure_dummy;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E01[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_3;                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_PostAsyncInputWait");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait) == 0x000160, "Wrong size on BP_UniqueObjectComponentBase_C_PostAsyncInputWait");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, L_bSuccess) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::L_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_bool_Variable) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_string_Variable) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_string_Variable_1) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_bool_Variable_1) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_string_Variable_2) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_string_Variable_3) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_bool_Variable_2) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_string_Variable_4) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_string_Variable_5) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_string_Variable_6) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_bool_Variable_3) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_SetInputWait_dummy) == 0x000089, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_SetInputWait_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_CheckInputDuel_success) == 0x00008A, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_CheckInputDuel_success' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, Temp_string_Variable_7) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, K2Node_Select_Default) == 0x0000A0, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_SetInputSuccess_dummy) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_SetInputSuccess_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_IsOver_ReturnValue) == 0x0000B1, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_BooleanAND_ReturnValue) == 0x0000B3, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_IsOver_ReturnValue_1) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_BooleanOR_ReturnValue) == 0x0000B5, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B6, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_IsOver_ReturnValue_2) == 0x0000B7, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_IsOver_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, K2Node_Select_Default_1) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, K2Node_Select_Default_2) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_SetInputFailure_dummy) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_SetInputFailure_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, K2Node_Select_Default_3) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000100, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000110, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000120, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000130, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWait, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWait::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInput
// 0x0218 (0x0218 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckInput final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_inputEnd;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E02[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_len;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_clear;                                           // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E03[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E04[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInputStickTrigger_return;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInputStickTrigger_return_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E05[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_x;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_y;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E06[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E07[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRightStickAxisRawValue_RStickX;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightStickAxisRawValue_RStickY;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_6;            // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_7;            // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E08[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrgPsychicObjectUnique_ReturnValue;     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnPsychicObjectUnique_ReturnValue;      // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgPsychicObjectNormal_ReturnValue;     // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgUniqueCircle_ReturnValue;            // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnUniqueCircle_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgUniqueTriangle_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgJump_ReturnValue;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E09[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E0A[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E0B[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldNormalDeltaSeconds_ReturnValue;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E0C[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldNormalDeltaSeconds_ReturnValue_1; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E0D[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E0E[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E0F[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue_1;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSeInputGauge_dummy;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInputControl_dummy;                  // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectUniqueMontageIndex              CallFunc_GetAttackCountMontageIndex_montage;       // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E10[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E11[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E12[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_3;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E13[0x6];                                     // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInputExtraSuccess_dummy;               // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E14[0x1];                                     // 0x01EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputSuccess_dummy;                    // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E15[0x2];                                     // 0x01F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CallUniqueAttackSuccess_return;           // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E16[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputWait_dummy;                       // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E17[0x2];                                     // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E18[0x2];                                     // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckInput) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckInput");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckInput) == 0x000218, "Wrong size on BP_UniqueObjectComponentBase_C_CheckInput");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, L_inputEnd) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::L_inputEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, L_len) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::L_len' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, L_index) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::L_index' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, L_clear) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::L_clear' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_bool_Variable) == 0x00000D, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetHud_hud_main) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_CheckInputStickTrigger_return) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_CheckInputStickTrigger_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_CheckInputStickTrigger_return_1) == 0x000021, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_CheckInputStickTrigger_return_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000022, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetInputMoveValue_value_x) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetInputMoveValue_value_x' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetInputMoveValue_value_y) == 0x00008C, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetInputMoveValue_value_y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000091, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000092, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000093, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetInputManager_BP_InputManager) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetRightStickAxisRawValue_RStickX) == 0x0000A4, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetRightStickAxisRawValue_RStickX' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetRightStickAxisRawValue_RStickY) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetRightStickAxisRawValue_RStickY' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x0000AC, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x0000AD, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_FloatFloat_ReturnValue_6) == 0x0000AE, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_FloatFloat_ReturnValue_7) == 0x0000AF, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_bool_Variable_1) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Variable) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Variable_1) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsTrgPsychicObjectUnique_ReturnValue) == 0x0000C4, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsTrgPsychicObjectUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsOnPsychicObjectUnique_ReturnValue) == 0x0000C5, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsOnPsychicObjectUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsTrgPsychicObjectNormal_ReturnValue) == 0x0000C6, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsTrgPsychicObjectNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsTrgUniqueCircle_ReturnValue) == 0x0000C7, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsTrgUniqueCircle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsOnUniqueCircle_ReturnValue) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsOnUniqueCircle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsTrgUniqueTriangle_ReturnValue) == 0x0000C9, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsTrgUniqueTriangle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsTrgJump_ReturnValue) == 0x0000CA, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsTrgJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Array_Index_Variable_1) == 0x0000DC, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Loop_Num_Variable) == 0x0000E4, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetWorldNormalDeltaSeconds_ReturnValue) == 0x0000E8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetWorldNormalDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetWorldNormalDeltaSeconds_ReturnValue_1) == 0x0000F0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetWorldNormalDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_BooleanAND_ReturnValue) == 0x0000F4, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetElapsedTime_ReturnValue) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsOver_ReturnValue) == 0x0000FC, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Conv_FloatToString_ReturnValue) == 0x000100, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000110, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsOver_ReturnValue_1) == 0x000120, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetElapsedTime_ReturnValue_1) == 0x000124, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000138, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsOver_ReturnValue_2) == 0x000148, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsOver_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, K2Node_Select_Default) == 0x000149, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00014A, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, K2Node_SwitchEnum_CmpSuccess) == 0x00014B, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00014C, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, K2Node_SwitchEnum_CmpSuccess_1) == 0x00014D, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, K2Node_SwitchEnum_CmpSuccess_2) == 0x00014E, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, K2Node_SwitchEnum_CmpSuccess_3) == 0x00014F, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, K2Node_SwitchEnum_CmpSuccess_4) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, K2Node_SwitchEnum_CmpSuccess_5) == 0x000151, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_SetSeInputGauge_dummy) == 0x000152, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_SetSeInputGauge_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_CheckInputControl_dummy) == 0x000153, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_CheckInputControl_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetAttackCountMontageIndex_montage) == 0x000154, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetAttackCountMontageIndex_montage' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Variable_2) == 0x000158, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Subtract_IntInt_ReturnValue) == 0x00015C, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_SelectInt_ReturnValue) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Add_IntInt_ReturnValue_3) == 0x000164, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000168, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000170, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000180, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000190, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001A0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001B0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001C8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsOver_ReturnValue_3) == 0x0001D8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsOver_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_BooleanAND_ReturnValue_1) == 0x0001D9, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_GetPostProcessManager_Manager) == 0x0001E0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001E8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsValid_ReturnValue_1) == 0x0001E9, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_SetInputExtraSuccess_dummy) == 0x0001EA, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_SetInputExtraSuccess_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001EC, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Array_Length_ReturnValue_1) == 0x0001F0, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_SetInputSuccess_dummy) == 0x0001F4, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_SetInputSuccess_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001F5, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001F8, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_CallUniqueAttackSuccess_return) == 0x0001FC, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_CallUniqueAttackSuccess_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, Temp_int_Variable_3) == 0x000200, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_SetInputWait_dummy) == 0x000204, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_SetInputWait_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_IsValid_ReturnValue_2) == 0x000205, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Array_Length_ReturnValue_2) == 0x000208, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Less_IntInt_ReturnValue_1) == 0x00020C, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00020D, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInput, CallFunc_Array_Length_ReturnValue_3) == 0x000210, "Member 'BP_UniqueObjectComponentBase_C_CheckInput::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAnimationIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetAnimationIndex final
{
public:
	int32                                         Anim_index;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetAnimationIndex) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetAnimationIndex");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetAnimationIndex) == 0x000004, "Wrong size on BP_UniqueObjectComponentBase_C_GetAnimationIndex");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAnimationIndex, Anim_index) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetAnimationIndex::Anim_index' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttractUnique
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttractUnique final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttractUnique) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttractUnique");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttractUnique) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttractUnique");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttractUnique, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttractUnique::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputSuccess
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputSuccess final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSeInputSuccess_dummy;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputSuccess) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputSuccess");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputSuccess) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputSuccess");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputSuccess, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputSuccess::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputSuccess, CallFunc_SetSeInputSuccess_dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputSuccess::CallFunc_SetSeInputSuccess_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackThrow
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttackThrow final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttackThrow) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttackThrow");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttackThrow) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttackThrow");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackThrow, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttackThrow::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackThrow, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetAttackThrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttack
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttack final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E19[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttack) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttack");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttack) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttack");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttack, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttack::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttack, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetAttack::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttack, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CancelInput
// 0x0078 (0x0078 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CancelInput final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInputGuideCancelOld_dummy;             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInputDelayCancel_dummy;                // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInputGuideCancelOld_dummy_1;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CancelInput) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_CancelInput");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CancelInput) == 0x000078, "Wrong size on BP_UniqueObjectComponentBase_C_CancelInput");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, Skip) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::Skip' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_GetDisplayName_ReturnValue_1) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_SetInputGuideCancelOld_dummy) == 0x000072, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_SetInputGuideCancelOld_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_SetInputDelayCancel_dummy) == 0x000073, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_SetInputDelayCancel_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_SetInputGuideCancelOld_dummy_1) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_SetInputGuideCancelOld_dummy_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelInput, CallFunc_BooleanOR_ReturnValue) == 0x000075, "Member 'BP_UniqueObjectComponentBase_C_CancelInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitialInstanceParameter
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_InitialInstanceParameter final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_InitialInstanceParameter) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_InitialInstanceParameter");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_InitialInstanceParameter) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_InitialInstanceParameter");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialInstanceParameter, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_InitialInstanceParameter::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWaitNotify
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputWaitNotify final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputWaitNotify) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputWaitNotify");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputWaitNotify) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputWaitNotify");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitNotify, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitNotify::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitNotify, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitNotify::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInputRotate
// 0x0180 (0x0180 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckInputRotate final
{
public:
	bool                                          L_bChkMouse;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_valueX;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_valueY;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorPrev4;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorNext4;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorPrev3;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorNext3;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorPrev2;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorNext2;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorPrev;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorNext;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sectorCurrent;                                   // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0031(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1C[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_x;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_y;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1D[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetMouseMove_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1E[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x006C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1F[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeftStickX_ReturnValue;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E20[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_3;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E21[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_4;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_5;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E22[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E23[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E24[0x2];                                     // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_6;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_7;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_8;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckInputRotate) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckInputRotate");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckInputRotate) == 0x000180, "Wrong size on BP_UniqueObjectComponentBase_C_CheckInputRotate");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_bChkMouse) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_bChkMouse' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_valueX) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_valueX' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_valueY) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_valueY' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorPrev4) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorPrev4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorNext4) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorNext4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorPrev3) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorPrev3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorNext3) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorNext3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorPrev2) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorPrev2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorNext2) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorNext2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorPrev) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorPrev' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorNext) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorNext' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, L_sectorCurrent) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::L_sectorCurrent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, Temp_bool_Variable) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, Temp_bool_Variable_1) == 0x000031, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Not_PreBool_ReturnValue_1) == 0x000033, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Not_PreBool_ReturnValue_2) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_GetInputManager_BP_InputManager) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_GetInputMoveValue_value_x) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_GetInputMoveValue_value_x' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_GetInputMoveValue_value_y) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_GetInputMoveValue_value_y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_GetMouseMove_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_GetMouseMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_BreakVector2D_X) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_DegAtan2_ReturnValue) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000065, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, Temp_int_Variable) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, Temp_bool_Variable_2) == 0x00006C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_GetLeftStickX_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_GetLeftStickX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, K2Node_SwitchInteger_CmpSuccess) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000079, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00007A, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, Temp_int_Variable_1) == 0x00007C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000081, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000082, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000083, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_2) == 0x00008C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_3) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_4) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000A0, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000A4, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue_3) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0000AC, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0000AD, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue_4) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_8) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_9) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue_5) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E8, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000108, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000118, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000138, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, Temp_int_Variable_2) == 0x00013C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000141, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000142, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000143, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000144, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x000145, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_10) == 0x000148, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_11) == 0x00014C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_12) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue_6) == 0x000154, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000158, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_13) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000164, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Add_IntInt_ReturnValue_14) == 0x000168, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_FTrunc_ReturnValue) == 0x00016C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue_7) == 0x000170, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Percent_IntInt_ReturnValue_8) == 0x000174, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Percent_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x000178, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputRotate, CallFunc_Less_IntInt_ReturnValue) == 0x000179, "Member 'BP_UniqueObjectComponentBase_C_CheckInputRotate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackSpline
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttackSpline final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttackSpline) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttackSpline");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttackSpline) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttackSpline");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackSpline, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttackSpline::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackSpline, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetAttackSpline::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackPursue
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttackPursue final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttackPursue) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttackPursue");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttackPursue) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttackPursue");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackPursue, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttackPursue::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackPursue, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetAttackPursue::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackPursueChild
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttackPursueChild final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttackPursueChild) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttackPursueChild");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttackPursueChild) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttackPursueChild");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackPursueChild, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttackPursueChild::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDelayDeathOld
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetDelayDeathOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Force_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetDelayDeathOld) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetDelayDeathOld");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetDelayDeathOld) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetDelayDeathOld");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDelayDeathOld, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetDelayDeathOld::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDelayDeathOld, Force_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetDelayDeathOld::Force_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetBulletAppear
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetBulletAppear final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetBulletAppear) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetBulletAppear");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetBulletAppear) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetBulletAppear");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetBulletAppear, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetBulletAppear::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.BulletDestroyReport
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_BulletDestroyReport final
{
public:
	class ABP_PsychicObjectBasic_C*               bullet_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_BulletDestroyReport) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_BulletDestroyReport");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_BulletDestroyReport) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_BulletDestroyReport");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_BulletDestroyReport, bullet_obj_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_BulletDestroyReport::bullet_obj_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_BulletDestroyReport, Dummy) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_BulletDestroyReport::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputFailure
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputFailure final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSeInputGauge_dummy;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSeInputFailure_dummy;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E25[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputFailure) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputFailure");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputFailure) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputFailure");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputFailure, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputFailure::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputFailure, CallFunc_SetSeInputGauge_dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputFailure::CallFunc_SetSeInputGauge_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputFailure, CallFunc_SetSeInputFailure_dummy) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetInputFailure::CallFunc_SetSeInputFailure_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputFailure, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetInputFailure::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputFailure, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetInputFailure::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputEnableTime
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputEnableTime final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputEnableTime) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputEnableTime");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputEnableTime) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputEnableTime");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputEnableTime, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputEnableTime::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputEnableTime, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputEnableTime::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateInputEnableTime
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateInputEnableTime final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateInputEnableTime) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateInputEnableTime");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateInputEnableTime) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateInputEnableTime");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputEnableTime, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputEnableTime::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDestroyUnqObj
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetDestroyUnqObj final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E26[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_bulletObj;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E27[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsParent_return;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E28[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsParent_return_1;                        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetDestroyUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj) == 0x000040, "Wrong size on BP_UniqueObjectComponentBase_C_SetDestroyUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, L_bulletObj) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::L_bulletObj' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_IsParent_return) == 0x000029, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_IsParent_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_IsValid_ReturnValue_3) == 0x000039, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDestroyUnqObj, CallFunc_IsParent_return_1) == 0x00003A, "Member 'BP_UniqueObjectComponentBase_C_SetDestroyUnqObj::CallFunc_IsParent_return_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ResetCommonFlag
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_ResetCommonFlag final
{
public:
	int32                                         Length_in;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_ResetCommonFlag) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_ResetCommonFlag");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_ResetCommonFlag) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_ResetCommonFlag");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ResetCommonFlag, Length_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_ResetCommonFlag::Length_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ResetCommonFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_ResetCommonFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCommonFlag
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetCommonFlag final
{
public:
	int32                                         Index_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag_in;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetCommonFlag) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetCommonFlag");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetCommonFlag) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_SetCommonFlag");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCommonFlag, Index_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetCommonFlag::Index_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCommonFlag, Flag_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetCommonFlag::Flag_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckCommonFlag
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckCommonFlag final
{
public:
	int32                                         Index_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckCommonFlag) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckCommonFlag");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckCommonFlag) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_CheckCommonFlag");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckCommonFlag, Index_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckCommonFlag::Index_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckCommonFlag, Return) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_CheckCommonFlag::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckCommonFlag, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000005, "Member 'BP_UniqueObjectComponentBase_C_CheckCommonFlag::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetEffectHitUnqObj
// 0x0258 (0x0258 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj final
{
public:
	bool                                          Hit_enemy_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hit_background_in;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E29[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCHitResult                           Hit_result_in;                                     // 0x0008(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FHitResult                             Hit_result_bg_in;                                  // 0x01C8(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Dummy;                                             // 0x0250(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj) == 0x000258, "Wrong size on BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj, Hit_enemy_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj::Hit_enemy_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj, Hit_background_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj::Hit_background_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj, Hit_result_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj::Hit_result_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj, Hit_result_bg_in) == 0x0001C8, "Member 'BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj::Hit_result_bg_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj, Dummy) == 0x000250, "Member 'BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateCheckDestroy
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateCheckDestroy final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateCheckDestroy) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateCheckDestroy");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateCheckDestroy) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateCheckDestroy");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateCheckDestroy, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateCheckDestroy::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputGuideOld
// 0x0030 (0x0030 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputGuideOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E2A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target_actor_in;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_pos_in;                                     // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverse_lerp_in;                                   // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Direct_in;                                         // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Auto_off_in;                                       // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          To_wait_in;                                        // 0x001F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         L_lerpTime;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E2B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 L_guideActor;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputGuideOld) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputGuideOld");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputGuideOld) == 0x000030, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputGuideOld");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, Target_actor_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::Target_actor_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, Target_pos_in) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::Target_pos_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, Reverse_lerp_in) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::Reverse_lerp_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, Direct_in) == 0x00001D, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::Direct_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, Auto_off_in) == 0x00001E, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::Auto_off_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, To_wait_in) == 0x00001F, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::To_wait_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, L_lerpTime) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::L_lerpTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideOld, L_guideActor) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideOld::L_guideActor' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetGuidePos
// 0x0078 (0x0078 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetGuidePos final
{
public:
	bool                                          Input_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E2C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Pos_rate_in;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Guide_pos;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_objPos;                                          // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_tgtPos;                                          // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E2D[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetGuidePos) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetGuidePos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetGuidePos) == 0x000078, "Wrong size on BP_UniqueObjectComponentBase_C_GetGuidePos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, Input_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::Input_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, Pos_rate_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::Pos_rate_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, Guide_pos) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::Guide_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, L_objPos) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::L_objPos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, L_tgtPos) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::L_tgtPos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, Temp_bool_Variable) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, CallFunc_GetComponentBounds_Origin) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, CallFunc_GetComponentBounds_BoxExtent) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, CallFunc_GetComponentBounds_SphereRadius) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, CallFunc_SelectVector_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, K2Node_Select_Default) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, CallFunc_VLerp_ReturnValue) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetGuidePos, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_GetGuidePos::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputExtraSuccess
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputExtraSuccess final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputExtraSuccess) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputExtraSuccess");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputExtraSuccess) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputExtraSuccess");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputExtraSuccess, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputExtraSuccess::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPhaseDestroyUnqObj
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj final
{
public:
	bool                                          Dunmy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsParent_return;                          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E2E[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj, Dunmy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj::Dunmy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj, CallFunc_IsParent_return) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj::CallFunc_IsParent_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCheckDestroyUnqObj
// 0x0003 (0x0003 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsParent_return;                          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj) == 0x000003, "Wrong size on BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj, CallFunc_IsParent_return) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj::CallFunc_IsParent_return' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetTopParent
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetTopParent final
{
public:
	class ABP_PsychicObjectBasic_C*               Top_parent;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_parentObj;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetTopParent) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetTopParent");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetTopParent) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_GetTopParent");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetTopParent, Top_parent) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetTopParent::Top_parent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetTopParent, L_parentObj) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_GetTopParent::L_parentObj' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetTopParent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetTopParent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetTopParent, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_UniqueObjectComponentBase_C_GetTopParent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetTopParent, CallFunc_IsValid_ReturnValue_2) == 0x000012, "Member 'BP_UniqueObjectComponentBase_C_GetTopParent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetCameraLookAtPos
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetCameraLookAtPos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetCameraLookAtPos) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetCameraLookAtPos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetCameraLookAtPos) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_GetCameraLookAtPos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetCameraLookAtPos, Pos) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetCameraLookAtPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetCameraLookAtPos, CallFunc_GetMeshBoundCentrePos_pos) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_GetCameraLookAtPos::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputStart
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetSeInputStart final
{
public:
	class USoundAtomCue*                          L_sound;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E2F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SetPsychicObjectSound_rs_atom_comp;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetSeInputStart) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetSeInputStart");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetSeInputStart) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetSeInputStart");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputStart, L_sound) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputStart::L_sound' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputStart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputStart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputStart, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputStart, CallFunc_SetPsychicObjectSound_rs_atom_comp) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputStart::CallFunc_SetPsychicObjectSound_rs_atom_comp' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputSuccess
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetSeInputSuccess final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E30[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          L_sound;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetSeInputSuccess) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetSeInputSuccess");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetSeInputSuccess) == 0x000040, "Wrong size on BP_UniqueObjectComponentBase_C_SetSeInputSuccess");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputSuccess, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputSuccess::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputSuccess, L_sound) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputSuccess::L_sound' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputSuccess, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputSuccess::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputSuccess, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputSuccess::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputSuccess, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputSuccess::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRebound
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueRebound final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E31[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pos_in;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_rot_in;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E32[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rot_in;                                            // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Target_in;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Target_top_in;                                     // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E33[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueRebound) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueRebound");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueRebound) == 0x000040, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueRebound");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, Pos_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, Set_rot_in) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::Set_rot_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, Rot_in) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, Target_in) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::Target_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, Target_top_in) == 0x000021, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::Target_top_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRebound, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRebound::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueReboundPos
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos final
{
public:
	float                                         L_grabHeight;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_tgtPos;                                          // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyTopWeakPoint_weak_pos;            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos) == 0x000050, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, L_grabHeight) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::L_grabHeight' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, L_tgtPos) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::L_tgtPos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, CallFunc_GetEnemyTopWeakPoint_weak_pos) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::CallFunc_GetEnemyTopWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueReboundPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputDelayCancel
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputDelayCancel final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputDelayCancel) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputDelayCancel");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputDelayCancel) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputDelayCancel");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputDelayCancel, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputDelayCancel::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDelayDeathHitCheckOld
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetDelayDeathHitCheckOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetDelayDeathHitCheckOld) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetDelayDeathHitCheckOld");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetDelayDeathHitCheckOld) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetDelayDeathHitCheckOld");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDelayDeathHitCheckOld, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetDelayDeathHitCheckOld::Flag_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetGuideHitCheckOld
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetGuideHitCheckOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetGuideHitCheckOld) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetGuideHitCheckOld");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetGuideHitCheckOld) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetGuideHitCheckOld");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGuideHitCheckOld, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetGuideHitCheckOld::Flag_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackCheck
// 0x0030 (0x0030 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttackCheck final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E34[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttackCheck) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttackCheck");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttackCheck) == 0x000030, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttackCheck");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackCheck, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttackCheck::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackCheck, CallFunc_Conv_BoolToString_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetAttackCheck::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackCheck, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetAttackCheck::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackCheck, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetAttackCheck::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAttackCheck
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateAttackCheck final
{
public:
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectCapture_return;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateAttackCheck) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateAttackCheck");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateAttackCheck) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateAttackCheck");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAttackCheck, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateAttackCheck::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAttackCheck, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_UpdateAttackCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAttackCheck, CallFunc_SetPsychicObjectCapture_return) == 0x000009, "Member 'BP_UniqueObjectComponentBase_C_UpdateAttackCheck::CallFunc_SetPsychicObjectCapture_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateAttackCheck, CallFunc_IsOver_ReturnValue) == 0x00000A, "Member 'BP_UniqueObjectComponentBase_C_UpdateAttackCheck::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPsyObjLinearDamp
// 0x0014 (0x0014 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E35[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_in;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearDamping_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp) == 0x000014, "Wrong size on BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp, Value_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp::Value_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp, Time_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp::Time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp, CallFunc_GetLinearDamping_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp::CallFunc_GetLinearDamping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdatePsyObjLinearDamp
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp, CallFunc_IsOver_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdatePsyObjLinearDamp::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetExtraTypeUnqObj
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj final
{
public:
	TArray<EHCSkillExtraType>                     Extra_type;                                        // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<EHCSkillExtraType>                     L_extraType;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj, Extra_type) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj::Extra_type' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj, L_extraType) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj::L_extraType' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAttackParameter
// 0x0168 (0x0168 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetAttackParameter final
{
public:
	struct FHCCollisionCommonInfo                 CommonInfo;                                        // 0x0000(0x0070)(Parm, OutParm)
	struct FHCSkillCommonInfo                     SkillInfo;                                         // 0x0070(0x00F0)(Parm, OutParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetAttackParameter) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetAttackParameter");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetAttackParameter) == 0x000168, "Wrong size on BP_UniqueObjectComponentBase_C_GetAttackParameter");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackParameter, CommonInfo) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetAttackParameter::CommonInfo' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackParameter, SkillInfo) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_GetAttackParameter::SkillInfo' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackParameter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_GetAttackParameter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackParameter, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000161, "Member 'BP_UniqueObjectComponentBase_C_GetAttackParameter::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAnimationDirect
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetAnimationDirect final
{
public:
	class UAnimSequence*                          AnimSequence;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetAnimationDirect) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetAnimationDirect");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetAnimationDirect) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_GetAnimationDirect");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAnimationDirect, AnimSequence) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetAnimationDirect::AnimSequence' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPhasePullOutUnqObj
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdatePullOutUnqObj
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdatePullOutUnqObj final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdatePullOutUnqObj) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdatePullOutUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdatePullOutUnqObj) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_UpdatePullOutUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdatePullOutUnqObj, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdatePullOutUnqObj::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputSetting
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputSetting final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputSetting) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputSetting");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputSetting) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputSetting");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputSetting, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputSetting::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.LoadAttackParameter
// 0x0260 (0x0260 - 0x0000)
struct BP_UniqueObjectComponentBase_C_LoadAttackParameter final
{
public:
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E36[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E37[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAttackRowName_row_name_list;           // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E38[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E39[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicObjectAttackParameterData      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0168)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E3A[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E3B[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCCollisionCommonInfo                 CallFunc_CollisionCommonInfoToC_Out;               // 0x01E8(0x0070)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_LoadAttackParameter) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_LoadAttackParameter");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_LoadAttackParameter) == 0x000260, "Wrong size on BP_UniqueObjectComponentBase_C_LoadAttackParameter");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, Temp_int_Loop_Num_Variable) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_GetAttackRowName_row_name_list) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_GetAttackRowName_row_name_list' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001A8, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x0001B0, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Concat_StrStr_ReturnValue) == 0x0001C0, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001D0, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Array_Add_ReturnValue) == 0x0001E0, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_CollisionCommonInfoToC_Out) == 0x0001E8, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_CollisionCommonInfoToC_Out' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackParameter, CallFunc_Array_Add_ReturnValue_1) == 0x000258, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackParameter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitializeDataTable
// 0x0048 (0x0048 - 0x0000)
struct BP_UniqueObjectComponentBase_C_InitializeDataTable final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E3C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUniqueObjectCommonParameter           CallFunc_GetUniqueObjectParameter_parameter;       // 0x0010(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_InitializeDataTable) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_InitializeDataTable");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_InitializeDataTable) == 0x000048, "Wrong size on BP_UniqueObjectComponentBase_C_InitializeDataTable");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeDataTable, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_InitializeDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeDataTable, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_InitializeDataTable::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeDataTable, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_InitializeDataTable::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeDataTable, CallFunc_GetUniqueObjectParameter_parameter) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_InitializeDataTable::CallFunc_GetUniqueObjectParameter_parameter' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitializeDataTable, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_InitializeDataTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSplineUnqObj
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetSplineUnqObj final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dunnmy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetSplineUnqObj) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetSplineUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetSplineUnqObj) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetSplineUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSplineUnqObj, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetSplineUnqObj::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSplineUnqObj, Dunnmy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetSplineUnqObj::Dunnmy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateSplineUnqObj
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj final
{
public:
	float                                         In_rate;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj, In_rate) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj::In_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj, Dummy) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePress
// 0x02A0 (0x02A0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePress final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E3D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Offset_height_in;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Pos_curve_in;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rot_lerp_time_in;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Target_enemy_weak_point_in;                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E3E[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_curveTime;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E3F[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E40[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0070(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E41[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E42[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E43[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E44[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E45[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E46[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E47[0x2];                                     // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E48[0x2];                                     // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E49[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos_1;             // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E4A[0x3];                                     // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0240(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePress) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePress");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePress) == 0x0002A0, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePress");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Offset_height_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Offset_height_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Pos_curve_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Pos_curve_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Rot_lerp_time_in) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Rot_lerp_time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Target_enemy_weak_point_in) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Target_enemy_weak_point_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Dummy) == 0x000015, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, L_curveTime) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::L_curveTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_X_1) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Y_1) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakRotator_Roll) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakRotator_Pitch) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakRotator_Yaw) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_GetTimeRange_MinTime) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_GetTimeRange_MaxTime) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Temp_object_Variable) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_X_2) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Y_2) == 0x000084, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Z_2) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008D, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x00009C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_FMin_ReturnValue) == 0x0000AC, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BooleanAND_ReturnValue) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_LineTraceMultiForObjects_OutHits) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x0000F0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_X_3) == 0x0000F4, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Y_3) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Z_3) == 0x0000FC, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_bBlockingHit) == 0x000104, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_bInitialOverlap) == 0x000105, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_Time) == 0x000108, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_Distance) == 0x00010C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_ImpactPoint) == 0x00011C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_Normal) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_ImpactNormal) == 0x000134, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_PhysMat) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_HitActor) == 0x000148, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_HitComponent) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_HitBoneName) == 0x000158, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_HitItem) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_FaceIndex) == 0x000164, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_TraceStart) == 0x000168, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_TraceEnd) == 0x000174, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_X_4) == 0x000180, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Y_4) == 0x000184, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Z_4) == 0x000188, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00018C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00018D, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_Time_1) == 0x000190, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_Distance_1) == 0x000194, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_Location_1) == 0x000198, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0001A4, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_Normal_1) == 0x0001B0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0001BC, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_PhysMat_1) == 0x0001C8, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_HitActor_1) == 0x0001D0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_HitComponent_1) == 0x0001D8, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_HitBoneName_1) == 0x0001E0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_HitItem_1) == 0x0001E8, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_FaceIndex_1) == 0x0001EC, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_TraceStart_1) == 0x0001F0, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakHitResult_TraceEnd_1) == 0x0001FC, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_X_5) == 0x000208, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Y_5) == 0x00020C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Z_5) == 0x000210, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000214, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_GetEnemyWeakPoint_weak_pos_1) == 0x000218, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_GetEnemyWeakPoint_weak_pos_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_X_6) == 0x000224, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Y_6) == 0x000228, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakVector_Z_6) == 0x00022C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_MakeVector_ReturnValue) == 0x000230, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_IsValid_ReturnValue_2) == 0x00023C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_GetTransform_ReturnValue) == 0x000240, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakTransform_Location) == 0x000270, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakTransform_Rotation) == 0x00027C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_BreakTransform_Scale) == 0x000288, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePress, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000294, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePress::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniquePress
// 0x0264 (0x0264 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniquePress final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E4B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_posMesh;                                         // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_timeRate;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_scale;                                           // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rot;                                             // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E4C[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E4D[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_1;            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E4E[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUniquePress_dummy;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E4F[0x2];                                     // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_10;                         // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceMultiCapsule_return;                 // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E50[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TraceMultiCapsule_hit_height;             // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue_1;             // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_3;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E51[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos_1;             // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_11;                         // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E52[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_4;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniquePress) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniquePress");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniquePress) == 0x000264, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniquePress");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, L_posMesh) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::L_posMesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, L_timeRate) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::L_timeRate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, L_scale) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::L_scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, L_rot) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::L_rot' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, L_pos) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::L_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, L_rate) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetDeltaSecond_delta_second) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_IsOver_ReturnValue) == 0x000064, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_1) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_1) == 0x00006C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_1) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetElapsedTime_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetFloatValue_ReturnValue) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_1) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_2) == 0x0000A4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_2) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_2) == 0x0000AC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_3) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_3) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_3) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_4) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_4) == 0x0000CC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_4) == 0x0000D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_2) == 0x0000D4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_5) == 0x0000EC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_5) == 0x0000F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_5) == 0x0000F4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_3) == 0x0000FC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000108, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_6) == 0x000114, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_6) == 0x000118, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_6) == 0x00011C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000120, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00012C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Less_FloatFloat_ReturnValue) == 0x000130, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetVectorValue_ReturnValue) == 0x000134, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetDeltaSecond_delta_second_1) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetDeltaSecond_delta_second_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_7) == 0x000144, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_7) == 0x000148, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_7) == 0x00014C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000154, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000158, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00015C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_4) == 0x000164, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_IsOver_ReturnValue_1) == 0x000170, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000174, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_8) == 0x000180, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_8) == 0x000184, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_8) == 0x000188, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00018C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_9) == 0x000198, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_9) == 0x00019C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_9) == 0x0001A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_5) == 0x0001A4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_IsOver_ReturnValue_2) == 0x0001B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_IsOver_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Not_PreBool_ReturnValue) == 0x0001B1, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001B2, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0001B3, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x0001B4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0001B8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001BC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0001C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_6) == 0x0001C4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_SetUniquePress_dummy) == 0x0001D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_SetUniquePress_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_IsValid_ReturnValue) == 0x0001D1, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_10) == 0x0001D4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_10) == 0x0001D8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_10) == 0x0001DC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_TraceMultiCapsule_return) == 0x0001E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_TraceMultiCapsule_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_TraceMultiCapsule_hit_height) == 0x0001E4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_TraceMultiCapsule_hit_height' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x0001E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_FClamp_ReturnValue) == 0x0001EC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_SelectFloat_ReturnValue) == 0x0001F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_7) == 0x0001F4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetElapsedTime_ReturnValue_1) == 0x000200, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetFloatValue_ReturnValue_1) == 0x000204, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_Lerp_ReturnValue) == 0x000208, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_8) == 0x00020C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_IsOver_ReturnValue_3) == 0x000218, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_IsOver_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_RLerp_ReturnValue) == 0x00021C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetRate_ReturnValue) == 0x000228, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_VLerp_ReturnValue) == 0x00022C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_GetEnemyWeakPoint_weak_pos_1) == 0x000238, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_GetEnemyWeakPoint_weak_pos_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_X_11) == 0x000244, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Y_11) == 0x000248, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_BreakVector_Z_11) == 0x00024C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_IsValid_ReturnValue_1) == 0x000250, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_MakeVector_ReturnValue_9) == 0x000254, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniquePress, CallFunc_IsOver_ReturnValue_4) == 0x000260, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniquePress::CallFunc_IsOver_ReturnValue_4' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueExplosion
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueExplosion final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E53[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Explode_time_in;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Explode_radius_in;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueExplosion) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueExplosion");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueExplosion) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueExplosion");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueExplosion, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueExplosion::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueExplosion, Explode_time_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueExplosion::Explode_time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueExplosion, Explode_radius_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueExplosion::Explode_radius_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueExplosion, Dummy) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueExplosion::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueExplosion, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000D, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueExplosion::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueExplosion
// 0x0003 (0x0003 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUniqueExplosion_dummy;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion) == 0x000003, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion, CallFunc_SetUniqueExplosion_dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion::CallFunc_SetUniqueExplosion_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion, CallFunc_IsOver_ReturnValue) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetInputMoveValue
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetInputMoveValue final
{
public:
	float                                         Value_x;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value_y;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E54[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E55[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLeftStickX_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeftStickY_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightStickAxisRawValue_RStickX;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightStickAxisRawValue_RStickY;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetInputMoveValue) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetInputMoveValue");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetInputMoveValue) == 0x000038, "Wrong size on BP_UniqueObjectComponentBase_C_GetInputMoveValue");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, Value_x) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::Value_x' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, Value_y) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::Value_y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_GetInputManager_BP_InputManager) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_GetLeftStickX_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_GetLeftStickX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_GetLeftStickY_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_GetLeftStickY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_GetRightStickAxisRawValue_RStickX) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_GetRightStickAxisRawValue_RStickX' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_GetRightStickAxisRawValue_RStickY) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_GetRightStickAxisRawValue_RStickY' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetInputMoveValue, CallFunc_SelectFloat_ReturnValue_1) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetInputMoveValue::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInputStickTrigger
// 0x0048 (0x0048 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckInputStickTrigger final
{
public:
	bool                                          Left_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Right_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E56[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tolerance_in;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E57[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_x;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_y;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E58[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightStickAxisRawValue_RStickX;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightStickAxisRawValue_RStickY;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckInputStickTrigger");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger) == 0x000048, "Wrong size on BP_UniqueObjectComponentBase_C_CheckInputStickTrigger");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, Left_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::Left_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, Right_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::Right_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, Tolerance_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::Tolerance_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, Return) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_GetInputManager_BP_InputManager) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_GetInputMoveValue_value_x) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_GetInputMoveValue_value_x' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_GetInputMoveValue_value_y) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_GetInputMoveValue_value_y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_Abs_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_Abs_ReturnValue_1) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_GetRightStickAxisRawValue_RStickX) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_GetRightStickAxisRawValue_RStickX' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_GetRightStickAxisRawValue_RStickY) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_GetRightStickAxisRawValue_RStickY' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_Abs_ReturnValue_2) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_Abs_ReturnValue_3) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00003D, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x00003E, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_BooleanAND_ReturnValue) == 0x00003F, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputStickTrigger, CallFunc_BooleanAND_ReturnValue_1) == 0x000041, "Member 'BP_UniqueObjectComponentBase_C_CheckInputStickTrigger::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWaitPause
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputWaitPause final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_tempFlag;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectUniqueInputButton               L_rightButton;                                     // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputButton               L_centreButton;                                    // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputButton               L_leftButton;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputType                 L_rightType;                                       // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputType                 L_centreType;                                      // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputType                 L_leftType;                                        // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_vecPsyObj;                                       // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_vecTarget;                                       // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputWaitPause) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputWaitPause");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputWaitPause) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputWaitPause");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_tempFlag) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_tempFlag' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_rightButton) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_rightButton' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_centreButton) == 0x000003, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_centreButton' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_leftButton) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_leftButton' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_rightType) == 0x000005, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_rightType' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_centreType) == 0x000006, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_centreType' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_leftType) == 0x000007, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_leftType' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_vecPsyObj) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_vecPsyObj' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitPause, L_vecTarget) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitPause::L_vecTarget' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputGuideCancelOld
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputGuideCancelOld final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputGuideCancelOld) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputGuideCancelOld");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputGuideCancelOld) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputGuideCancelOld");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputGuideCancelOld, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputGuideCancelOld::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressHit
// 0x0048 (0x0048 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressHit final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E59[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewLocalVar_1;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posTrace;                                        // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceMultiCapsule_return;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TraceMultiCapsule_hit_height;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressHit) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressHit");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressHit) == 0x000048, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressHit");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, NewLocalVar_1) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, L_posTrace) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::L_posTrace' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, CallFunc_TraceMultiCapsule_return) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::CallFunc_TraceMultiCapsule_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, CallFunc_TraceMultiCapsule_hit_height) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::CallFunc_TraceMultiCapsule_hit_height' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressHit, CallFunc_GetMeshBoundCentrePos_pos) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressHit::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrate
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressVibrate final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               L_rot;                                             // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressVibrate");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate) == 0x000028, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressVibrate");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrate::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate, L_rot) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrate::L_rot' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate, L_pos) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrate::L_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate, L_rate) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrate::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrate::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate, CallFunc_RandomBool_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrate::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrate, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000025, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrate::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrateParam
// 0x002C (0x002C - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam final
{
public:
	struct FRotator                               L_rot;                                             // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam) == 0x00002C, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam, L_rot) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam::L_rot' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam, L_pos) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam::L_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam, L_rate) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam, CallFunc_RandomFloatInRange_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateParam::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueReboundImpulse
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse final
{
public:
	float                                         Impulse_in;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_tgtPos;                                          // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse) == 0x000028, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse, Impulse_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse::Impulse_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse, L_tgtPos) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse::L_tgtPos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse, CallFunc_Normal_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressOffsetHeight
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressOffsetHeight final
{
public:
	float                                         Offset_height_in;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressOffsetHeight) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressOffsetHeight");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressOffsetHeight) == 0x000004, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressOffsetHeight");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressOffsetHeight, Offset_height_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressOffsetHeight::Offset_height_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueBend
// 0x008C (0x008C - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueBend final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5C[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueBend) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueBend");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueBend) == 0x00008C, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueBend");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_BreakVector_X_1) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_BreakVector_Y_1) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_MakeVector_ReturnValue_1) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_GetTimeRange_MinTime) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_GetTimeRange_MaxTime) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_Cross_VectorVector_ReturnValue) == 0x00007C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBend, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000089, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBend::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueBend
// 0x0070 (0x0070 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueBend final
{
public:
	float                                         L_angle;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUniqueBend_dummy;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5D[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueBend");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend) == 0x000070, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueBend");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, L_angle) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::L_angle' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_SetUniqueBend_dummy) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_SetUniqueBend_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_IsOver_ReturnValue) == 0x000015, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_MakeVector_ReturnValue_1) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_ComposeRotators_ReturnValue) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_RotateAngleAxis_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_GetFloatValue_ReturnValue) == 0x000064, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueBend, CallFunc_GetRate_ReturnValue) == 0x00006C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueBend::CallFunc_GetRate_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueBendSetting
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueBendSetting final
{
public:
	class UCurveFloat*                            Angle_curve_in;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle_rate_in;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_rate_in;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueBendSetting) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueBendSetting");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueBendSetting) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueBendSetting");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBendSetting, Angle_curve_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBendSetting::Angle_curve_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBendSetting, Angle_rate_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBendSetting::Angle_rate_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBendSetting, Time_rate_in) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBendSetting::Time_rate_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBendSetting, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBendSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueBendCapture
// 0x0024 (0x0024 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueBendCapture final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueBendCapture) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueBendCapture");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueBendCapture) == 0x000024, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueBendCapture");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBendCapture, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBendCapture::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBendCapture, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBendCapture::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueBendCapture, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueBendCapture::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.RequestEndUniqueObjectState
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState final
{
public:
	class AActor*                                 Actor_in;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState, Actor_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState::Actor_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState, CallFunc_IsValid_ReturnValue_1) == 0x00000D, "Member 'BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState, CallFunc_IsValid_ReturnValue_2) == 0x00000E, "Member 'BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState, CallFunc_IsValid_ReturnValue_3) == 0x00000F, "Member 'BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState, CallFunc_Array_Add_ReturnValue_1) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState, CallFunc_Array_Add_ReturnValue_2) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallEndUniqueObjectState
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState final
{
public:
	class AActor*                                 L_Actor;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnemyPressDownEnd_Dammy;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5F[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_1;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndUniqueObjState_Dummy;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E60[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState) == 0x000050, "Wrong size on BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, L_Actor) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::L_Actor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, CallFunc_SetEnemyPressDownEnd_Dammy) == 0x000031, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::CallFunc_SetEnemyPressDownEnd_Dammy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, K2Node_DynamicCast_AsBPI_Enemy_Interface_1) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::K2Node_DynamicCast_AsBPI_Enemy_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, CallFunc_EndUniqueObjState_Dummy) == 0x00004A, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::CallFunc_EndUniqueObjState_Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_CallEndUniqueObjectState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.LoadAttackInfo
// 0x0198 (0x0198 - 0x0000)
struct BP_UniqueObjectComponentBase_C_LoadAttackInfo final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E61[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUniqueObjectAttackInfo                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0178)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E62[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_LoadAttackInfo) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_LoadAttackInfo");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_LoadAttackInfo) == 0x000198, "Wrong size on BP_UniqueObjectComponentBase_C_LoadAttackInfo");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000190, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadAttackInfo, CallFunc_Array_Add_ReturnValue) == 0x000194, "Member 'BP_UniqueObjectComponentBase_C_LoadAttackInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetEffectHit
// 0x0048 (0x0048 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetEffectHit final
{
public:
	TArray<TSoftObjectPtr<class UParticleSystem>> UniqueEffectList;                                  // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class FName>                           UniqueEffectSocketList;                            // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FVector>                        UniqueEffectScaleList;                             // 0x0020(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<bool>                                  UniqueEffectApplyThrowRotList;                     // 0x0030(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          SkipNormalEffect;                                  // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetEffectHit) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetEffectHit");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetEffectHit) == 0x000048, "Wrong size on BP_UniqueObjectComponentBase_C_GetEffectHit");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetEffectHit, UniqueEffectList) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetEffectHit::UniqueEffectList' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetEffectHit, UniqueEffectSocketList) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetEffectHit::UniqueEffectSocketList' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetEffectHit, UniqueEffectScaleList) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_GetEffectHit::UniqueEffectScaleList' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetEffectHit, UniqueEffectApplyThrowRotList) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetEffectHit::UniqueEffectApplyThrowRotList' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetEffectHit, SkipNormalEffect) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_GetEffectHit::SkipNormalEffect' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetEffectHit, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000041, "Member 'BP_UniqueObjectComponentBase_C_GetEffectHit::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetCameraShakeUnqObj
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj final
{
public:
	class UClass*                                 Camera_shake;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Camera_shake_scale;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E63[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCamera_Shake;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj) == 0x000028, "Wrong size on BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj, Camera_shake) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj::Camera_shake' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj, Camera_shake_scale) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj::Camera_shake_scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj, CallFunc_LoadSoftClass_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj::CallFunc_LoadSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj, K2Node_ClassDynamicCast_AsCamera_Shake) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj::K2Node_ClassDynamicCast_AsCamera_Shake' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetObjectShakeUnqObj
// 0x0048 (0x0048 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj final
{
public:
	class UCurveVector*                           Shake_curve;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Shake_loop_scale;                                  // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shake_loop_time_rate;                              // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Shake_scale;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shake_time_rate;                                   // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shake_time;                                        // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E64[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           K2Node_DynamicCast_AsCurve_Vector;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj) == 0x000048, "Wrong size on BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, Shake_curve) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::Shake_curve' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, Shake_loop_scale) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::Shake_loop_scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, Shake_loop_time_rate) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::Shake_loop_time_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, Shake_scale) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::Shake_scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, Shake_time_rate) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::Shake_time_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, Shake_time) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::Shake_time' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, K2Node_DynamicCast_AsCurve_Vector) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::K2Node_DynamicCast_AsCurve_Vector' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetEffectUniqueHit
// 0x0260 (0x0260 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetEffectUniqueHit final
{
public:
	struct FVector                                Eft_pos_in;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E65[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         L_effect;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_scale;                                           // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_socket;                                          // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUniqueObjectAttackInfo                L_data;                                            // 0x0030(0x0178)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E66[0x2];                                     // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E67[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E68[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E69[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E6A[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E6B[0x1];                                     // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E6C[0xB];                                     // 0x0215(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	class URSParticleSystemComponentBase*         CallFunc_SetPsychicObjectEffect_ReturnValue;       // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetEffectUniqueHit");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit) == 0x000260, "Wrong size on BP_UniqueObjectComponentBase_C_SetEffectUniqueHit");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, Eft_pos_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::Eft_pos_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, L_effect) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::L_effect' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, L_scale) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::L_scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, L_socket) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::L_socket' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, L_index) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::L_index' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, L_data) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::L_data' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, Temp_int_Loop_Num_Variable) == 0x0001A8, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, Temp_int_Loop_Counter_Variable) == 0x0001AC, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Array_Contains_ReturnValue) == 0x0001B0, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Less_IntInt_ReturnValue) == 0x0001B1, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Add_IntInt_ReturnValue) == 0x0001B4, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001B8, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, Temp_int_Array_Index_Variable) == 0x0001BC, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_MakeRotFromX_ReturnValue) == 0x0001C0, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001CC, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_SelectRotator_ReturnValue) == 0x0001D0, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0001DC, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_LoadSoftObject_ReturnValue) == 0x0001E8, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, K2Node_DynamicCast_AsParticle_System) == 0x0001F0, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, K2Node_DynamicCast_bSuccess) == 0x0001F8, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_DoesSocketExist_ReturnValue) == 0x0001F9, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x0001FA, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_GetSocketLocation_ReturnValue) == 0x0001FC, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_SelectVector_ReturnValue) == 0x000208, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_IsValid_ReturnValue) == 0x000214, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_MakeTransform_ReturnValue) == 0x000220, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_SetPsychicObjectEffect_ReturnValue) == 0x000250, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_SetPsychicObjectEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEffectUniqueHit, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x000258, "Member 'BP_UniqueObjectComponentBase_C_SetEffectUniqueHit::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackInfoIndex
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttackInfoIndex final
{
public:
	int32                                         Index_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttackInfoIndex) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttackInfoIndex");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttackInfoIndex) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttackInfoIndex");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackInfoIndex, Index_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttackInfoIndex::Index_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackInfoIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetAttackInfoIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrateLoopParam
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam final
{
public:
	int32                                         Attack_info_index_in;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rot;                                             // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           K2Node_DynamicCast_AsCurve_Vector;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam) == 0x000040, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, Attack_info_index_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::Attack_info_index_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, L_rot) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::L_rot' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, L_pos) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::L_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, L_rate) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, CallFunc_GetTimeRange_MinTime) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, CallFunc_GetTimeRange_MaxTime) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, CallFunc_LoadSoftObject_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, K2Node_DynamicCast_AsCurve_Vector) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::K2Node_DynamicCast_AsCurve_Vector' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrateLoop
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E6D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               L_rot;                                             // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop, L_rot) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop::L_rot' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop, L_pos) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop::L_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop, L_rate) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop::L_rate' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrateLoopHit
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E6E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               L_rot;                                             // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit, L_rot) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit::L_rot' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit, L_pos) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit::L_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit, L_rate) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit::L_rate' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDamageMaterialValue
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetDamageMaterialValue final
{
public:
	TArray<float>                                 Value_list_in;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetDamageMaterialValue) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetDamageMaterialValue");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetDamageMaterialValue) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_SetDamageMaterialValue");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterialValue, Value_list_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterialValue::Value_list_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDamageMaterial
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetDamageMaterial final
{
public:
	bool                                          Reset_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E6F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Damage_level_in;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E70[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E71[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetDamageMaterial) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetDamageMaterial");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetDamageMaterial) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetDamageMaterial");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterial, Reset_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterial::Reset_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterial, Damage_level_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterial::Damage_level_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterial, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterial::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterial, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterial::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterial, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterial::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterial, Temp_int_Variable) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDamageMaterial, CallFunc_Min_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetDamageMaterial::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUnqObjCamTargetPos
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E72[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos) == 0x000050, "Wrong size on BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos, Pos) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos, CallFunc_GetComponentBounds_Origin) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos, CallFunc_GetComponentBounds_BoxExtent) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos, CallFunc_GetComponentBounds_SphereRadius) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos, CallFunc_SelectVector_ReturnValue) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos, CallFunc_VLerp_ReturnValue) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos::CallFunc_VLerp_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueObjectCameraOld
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E73[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Side_index_in;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       L_enemyActor;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sideIdx;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld, Side_index_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld::Side_index_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld, L_enemyActor) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld::L_enemyActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld, L_sideIdx) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld::L_sideIdx' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.LoadUniqueObjectCameraParameter
// 0x00F8 (0x00F8 - 0x0000)
struct BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter final
{
public:
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraUniqueObjectParameter           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E74[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraUniqueObjectParameter           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0068(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E75[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter) == 0x0000F8, "Wrong size on BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter, CallFunc_Conv_StringToName_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E8, "Member 'BP_UniqueObjectComponentBase_C_LoadUniqueObjectCameraParameter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInputDuel
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckInputDuel final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckInputDuel) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckInputDuel");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckInputDuel) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_CheckInputDuel");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputDuel, Success) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckInputDuel::Success' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ClearDelayDeath
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_ClearDelayDeath final
{
public:
	bool                                          ForceIn;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E76[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_ClearDelayDeath) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_ClearDelayDeath");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_ClearDelayDeath) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_ClearDelayDeath");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ClearDelayDeath, ForceIn) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_ClearDelayDeath::ForceIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ClearDelayDeath, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_ClearDelayDeath::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ClearDelayDeath, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_ClearDelayDeath::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetWeightGaugePosUnqObj
// 0x003C (0x003C - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E77[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pos;                                               // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E78[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj) == 0x00003C, "Wrong size on BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj, Pos) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj::Pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj, CallFunc_GetComponentBounds_Origin) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj, CallFunc_GetComponentBounds_BoxExtent) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj, CallFunc_GetComponentBounds_SphereRadius) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj, CallFunc_Add_VectorVector_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetMeshCompUnqObj
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E79[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Mesh_comp;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj, Mesh_comp) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj::Mesh_comp' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj, Scale) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj::Scale' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCaptureUnqObj
// 0x0080 (0x0080 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetCaptureUnqObj final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success_in;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E7A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASManager_C*                       CallFunc_GetSASManager_SAS_Manager;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedsEndSASCutin_bNeedsEndCutin;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E7B[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E7C[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAsyncCapture_dummy;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetCaptureUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj) == 0x000080, "Wrong size on BP_UniqueObjectComponentBase_C_SetCaptureUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, Success_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::Success_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_GetSASManager_SAS_Manager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_GetSASManager_SAS_Manager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_NeedsEndSASCutin_bNeedsEndCutin) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_NeedsEndSASCutin_bNeedsEndCutin' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_Conv_BoolToString_ReturnValue) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, Temp_bool_Variable) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, K2Node_Select_Default) == 0x000079, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_IsValid_ReturnValue_3) == 0x00007A, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureUnqObj, CallFunc_SetAsyncCapture_dummy) == 0x00007B, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureUnqObj::CallFunc_SetAsyncCapture_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateCaptureUnqObj
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj final
{
public:
	float                                         L_rate;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateAsyncCapture_dummy;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj, L_rate) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj, CallFunc_UpdateAsyncCapture_dummy) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateCaptureUnqObj::CallFunc_UpdateAsyncCapture_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCapturePos
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetCapturePos final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E7D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Curve_in;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rate_in;                                           // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetCapturePos) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetCapturePos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetCapturePos) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetCapturePos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCapturePos, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetCapturePos::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCapturePos, Curve_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetCapturePos::Curve_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCapturePos, Rate_in) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetCapturePos::Rate_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCaptureVibratePos
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetCaptureVibratePos final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E7E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Curve_in;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rate_in;                                           // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetCaptureVibratePos) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetCaptureVibratePos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetCaptureVibratePos) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetCaptureVibratePos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureVibratePos, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureVibratePos::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureVibratePos, Curve_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureVibratePos::Curve_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureVibratePos, Rate_in) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureVibratePos::Rate_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCaptureVibrateRot
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E7F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Curve_in;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rate_in;                                           // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot, Curve_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot::Curve_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot, Rate_in) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot::Rate_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInputControl
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckInputControl final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckInputControl) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckInputControl");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckInputControl) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_CheckInputControl");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckInputControl, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckInputControl::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetGroundSlope
// 0x0230 (0x0230 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetGroundSlope final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E80[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	uint8                                         Pad_6E81[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetUniqueRideTransform_location;          // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetUniqueRideTransform_location_1;        // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUniqueRideFrontDir_front_dir;          // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E82[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E83[0x2];                                     // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetGroundSlope) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetGroundSlope");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetGroundSlope) == 0x000230, "Wrong size on BP_UniqueObjectComponentBase_C_SetGroundSlope");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, Temp_object_Variable) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_GetUniqueRideTransform_location) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_GetUniqueRideTransform_location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_GetUniqueRideTransform_location_1) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_GetUniqueRideTransform_location_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakTransform_Location_1) == 0x0000A4, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakTransform_Rotation_1) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakTransform_Scale_1) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D4, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_GetUniqueRideFrontDir_front_dir) == 0x0000F0, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_GetUniqueRideFrontDir_front_dir' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000FC, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000184, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakVector_X) == 0x000188, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakVector_Y) == 0x00018C, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakVector_Z) == 0x000190, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_bBlockingHit) == 0x000194, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_bInitialOverlap) == 0x000195, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_Time) == 0x000198, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_Distance) == 0x00019C, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_Location) == 0x0001A0, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_ImpactPoint) == 0x0001AC, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_Normal) == 0x0001B8, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C4, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_FaceIndex) == 0x0001F4, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_TraceStart) == 0x0001F8, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_BreakHitResult_TraceEnd) == 0x000204, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_MakeVector_ReturnValue) == 0x000210, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_Normal_ReturnValue) == 0x00021C, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetGroundSlope, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000228, "Member 'BP_UniqueObjectComponentBase_C_SetGroundSlope::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateGroundSlope
// 0x0BF0 (0x0BF0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateGroundSlope final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_skipResetDrop;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E84[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_springValue;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_dampRate;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_diffHeight;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_accHeight;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E85[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_str;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          L_bCheckHeight;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E86[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_dropAccel;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_dropSpeed;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_resultNrl;                                       // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_resultHeight;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_floatPointNum;                                   // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_floatHeight;                                     // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_nrlResult;                                       // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_hitResult;                                       // 0x004D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_bTraceComplex;                                   // 0x004E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E87[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        L_posResult;                                       // 0x0050(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<bool>                                  L_resultList;                                      // 0x0060(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector                                L_traceEnd;                                        // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_traceStt;                                        // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        L_posCalc;                                         // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E88[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x00B4(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E89[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E8A[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E8B[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E8C[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E8D[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E8E[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E8F[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_11;                         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_13;                         // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E90[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E91[0x6];                                     // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_4;         // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_14;                         // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_14;                         // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_14;                         // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E92[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_5;         // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_15;                         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_15;                         // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_15;                         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E93[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_6;         // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_16;                         // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_16;                         // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_16;                         // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_7;         // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_8;         // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E94[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E95[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_9;         // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_17;                         // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_17;                         // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_17;                         // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E96[0x4];                                     // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E97[0x4];                                     // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E98[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E99[0x4];                                     // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_10;        // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_18;                         // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_18;                         // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_18;                         // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_19;                         // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_19;                         // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_19;                         // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9A[0x4];                                     // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9B[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_3;          // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_11;        // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x0560(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_30;             // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_31;             // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_32;             // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_33;             // 0x05B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_34;             // 0x05C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_35;             // 0x05D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_36;             // 0x05E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_37;             // 0x05F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_20;                         // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_20;                         // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_20;                         // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9C[0x4];                                     // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0610(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_21;                         // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_21;                         // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_21;                         // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x062C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_38;             // 0x0638(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_39;             // 0x0648(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0658(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_40;             // 0x0668(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_2;        // 0x0678(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_41;             // 0x0688(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_42;             // 0x0698(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_43;             // 0x06A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_44;             // 0x06B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_45;             // 0x06C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_46;             // 0x06D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_47;             // 0x06E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_48;             // 0x06F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_49;             // 0x0708(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_22;                         // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_22;                         // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_22;                         // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_1;            // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_9;             // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_23;                         // 0x0734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_23;                         // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_23;                         // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_24;                         // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_24;                         // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_24;                         // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_10;            // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E9D[0x3];                                     // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_25;                         // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_25;                         // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_25;                         // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_11;            // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_26;                         // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_26;                         // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_26;                         // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0770(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_2;            // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_12;            // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_27;                         // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_27;                         // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_27;                         // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0795(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E9E[0x2];                                     // 0x0796(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0798(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x07A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x07B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9F[0x4];                                     // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_4;          // 0x07C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_5;          // 0x07D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_6;          // 0x07E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_7;          // 0x07F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_50;             // 0x0800(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0810(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA0[0x4];                                     // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_51;             // 0x0820(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0830(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA1[0x4];                                     // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_52;             // 0x0840(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_53;             // 0x0850(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0860(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA2[0x4];                                     // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_54;             // 0x0870(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0880(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA3[0x4];                                     // 0x088C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_55;             // 0x0890(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x08A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA4[0x4];                                     // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_56;             // 0x08B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetUniqueRideRot_location;                // 0x08C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x08D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_28;                         // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_28;                         // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_28;                         // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EA5[0x3];                                     // 0x08F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x08F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_57;             // 0x0900(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_58;             // 0x0910(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_8;          // 0x0920(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_59;             // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_60;             // 0x0940(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_61;             // 0x0950(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_62;             // 0x0960(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_63;             // 0x0970(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_64;             // 0x0980(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EA6[0x3];                                     // 0x0991(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA7[0x4];                                     // 0x09A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x09A8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x09B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EA8[0x3];                                     // 0x0A41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_2;         // 0x0A44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0A51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EA9[0x2];                                     // 0x0A52(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0A5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0A68(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0A74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0A80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EAA[0x4];                                     // 0x0A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0AA0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0AB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0AC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_1;     // 0x0AD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_29;                         // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_29;                         // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_29;                         // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0AE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_13;            // 0x0AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0AFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetUniqueRideTransform_location;          // 0x0B00(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0B30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0B3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0B48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0B54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0B64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0B70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0B80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0B8C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x0B98(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_5;                     // 0x0BA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_3;         // 0x0BB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_30;                         // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_30;                         // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_30;                         // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0BD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_14;            // 0x0BE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0BE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateGroundSlope");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope) == 0x000BF0, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateGroundSlope");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_skipResetDrop) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_skipResetDrop' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_springValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_springValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_dampRate) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_dampRate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_diffHeight) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_diffHeight' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_accHeight) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_accHeight' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_str) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_str' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_bCheckHeight) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_bCheckHeight' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_dropAccel) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_dropAccel' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_dropSpeed) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_dropSpeed' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_resultNrl) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_resultNrl' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_resultHeight) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_resultHeight' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_floatPointNum) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_floatPointNum' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_floatHeight) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_floatHeight' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_nrlResult) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_nrlResult' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_hitResult) == 0x00004D, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_hitResult' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_bTraceComplex) == 0x00004E, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_posResult) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_posResult' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_resultList) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_resultList' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_traceEnd) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_traceEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_traceStt) == 0x00007C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_traceStt' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, L_posCalc) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::L_posCalc' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y) == 0x00009C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_1) == 0x0000A4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_1) == 0x0000AC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000B1, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_bool_Variable) == 0x0000B2, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_struct_Variable) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_bool_Variable_1) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_object_Variable) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_2) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_2) == 0x0000DC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_2) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_int_Loop_Num_Variable) == 0x0000E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_int_Variable) == 0x0000F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_int_Loop_Counter_Variable_1) == 0x0000FC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_int_Array_Index_Variable_1) == 0x000104, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_FMin_ReturnValue) == 0x000108, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, Temp_int_Loop_Num_Variable_1) == 0x00010C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_3) == 0x000114, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_3) == 0x000118, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_3) == 0x00011C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_4) == 0x000120, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_4) == 0x000124, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_4) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue) == 0x000130, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000170, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000180, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_5) == 0x000190, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_5) == 0x000194, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_5) == 0x000198, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue) == 0x00019C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_6) == 0x0001A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_6) == 0x0001A4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_6) == 0x0001A8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001AC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue) == 0x0001B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0001C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0001D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0001E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_GetDeltaSecond_delta_second) == 0x0001E4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_7) == 0x0001E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_7) == 0x0001EC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_7) == 0x0001F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001F4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue_1) == 0x0001F8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000204, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000208, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00020C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue_2) == 0x000210, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_8) == 0x00021C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_8) == 0x000220, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_8) == 0x000224, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000228, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Lerp_ReturnValue) == 0x00022C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_9) == 0x000230, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_9) == 0x000234, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_9) == 0x000238, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00023C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_10) == 0x000240, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_10) == 0x000244, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_10) == 0x000248, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x00024C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_11) == 0x000250, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_11) == 0x000254, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_11) == 0x000258, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_12) == 0x00025C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_12) == 0x000260, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_12) == 0x000264, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_13) == 0x000268, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_13) == 0x00026C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_13) == 0x000270, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x000278, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x000288, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000289, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_4) == 0x000290, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_14) == 0x0002A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_14) == 0x0002A4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_14) == 0x0002A8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0002B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_5) == 0x0002C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0002D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_15) == 0x0002E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_15' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_15) == 0x0002E4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_15' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_15) == 0x0002E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_15' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_6) == 0x0002F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000300, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000310, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Ease_ReturnValue) == 0x000320, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_16) == 0x000324, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_16' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_16) == 0x000328, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_16' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_16) == 0x00032C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_16' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_7) == 0x000330, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_8) == 0x000340, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000350, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000360, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000368, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000378, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000380, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_9) == 0x000390, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0003A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0003B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0003C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_17) == 0x0003D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_17' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_17) == 0x0003D4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_17' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_17) == 0x0003D8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_17' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_15) == 0x0003E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0003F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_16) == 0x0003F8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_FClamp_ReturnValue) == 0x000408, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000410, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue_3) == 0x000420, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000430, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_10) == 0x000440, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000450, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000460, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000464, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_18) == 0x000468, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_18' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_18) == 0x00046C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_18' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_18) == 0x000470, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_18' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000474, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_19) == 0x000478, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_19' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_19) == 0x00047C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_19' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_19) == 0x000480, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_19' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue) == 0x000488, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000498, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x0004A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x0004B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue_3) == 0x0004C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_20) == 0x0004D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_21) == 0x0004E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_22) == 0x0004F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000500, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000510, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_25) == 0x000520, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_26) == 0x000530, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_FloatToString_ReturnValue_11) == 0x000540, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_FloatToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_27) == 0x000550, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_28) == 0x000560, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_29) == 0x000570, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_30) == 0x000580, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_31) == 0x000590, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_32) == 0x0005A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_33) == 0x0005B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_34) == 0x0005C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_35) == 0x0005D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_36) == 0x0005E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_37) == 0x0005F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_20) == 0x000600, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_20' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_20) == 0x000604, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_20' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_20) == 0x000608, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_20' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_VectorToString_ReturnValue) == 0x000610, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_21) == 0x000620, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_21' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_21) == 0x000624, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_21' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_21) == 0x000628, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_21' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue_4) == 0x00062C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_38) == 0x000638, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_39) == 0x000648, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000658, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_40) == 0x000668, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_VectorToString_ReturnValue_2) == 0x000678, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_VectorToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_41) == 0x000688, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_42) == 0x000698, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_43) == 0x0006A8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_44) == 0x0006B8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_45) == 0x0006C8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_46) == 0x0006D8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_47) == 0x0006E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_48) == 0x0006F8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_49) == 0x000708, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_22) == 0x000718, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_22' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_22) == 0x00071C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_22' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_22) == 0x000720, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_22' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x000724, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_GetDeltaSecond_delta_second_1) == 0x000728, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_GetDeltaSecond_delta_second_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00072C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_9) == 0x000730, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_23) == 0x000734, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_23' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_23) == 0x000738, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_23' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_23) == 0x00073C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_23' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_24) == 0x000740, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_24' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_24) == 0x000744, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_24' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_24) == 0x000748, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_24' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_10) == 0x00074C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x000750, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_25) == 0x000754, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_25' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_25) == 0x000758, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_25' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_25) == 0x00075C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_25' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_11) == 0x000760, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_26) == 0x000764, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_26' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_26) == 0x000768, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_26' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_26) == 0x00076C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_26' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue_5) == 0x000770, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_GetDeltaSecond_delta_second_2) == 0x00077C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_GetDeltaSecond_delta_second_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000780, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_12) == 0x000784, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_27) == 0x000788, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_27' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_27) == 0x00078C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_27' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_27) == 0x000790, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_27' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000794, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_IntInt_ReturnValue_2) == 0x000795, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Cross_VectorVector_ReturnValue) == 0x000798, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x0007A4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Normal_ReturnValue) == 0x0007B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue_4) == 0x0007C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue_5) == 0x0007D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue_6) == 0x0007E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue_7) == 0x0007F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_50) == 0x000800, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000810, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_51) == 0x000820, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Normal_ReturnValue_1) == 0x000830, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_52) == 0x000840, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_53) == 0x000850, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000860, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_54) == 0x000870, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Normal_ReturnValue_2) == 0x000880, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_55) == 0x000890, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0008A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_56) == 0x0008B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_GetUniqueRideRot_location) == 0x0008C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_GetUniqueRideRot_location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0008CC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Get_Item) == 0x0008D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0008DC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_28) == 0x0008E0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_28' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_28) == 0x0008E4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_28' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_28) == 0x0008E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_28' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_SelectFloat_ReturnValue) == 0x0008EC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_IntInt_ReturnValue_3) == 0x0008F0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue_6) == 0x0008F4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_57) == 0x000900, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_58) == 0x000910, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Conv_BoolToString_ReturnValue_8) == 0x000920, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Conv_BoolToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_59) == 0x000930, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_60) == 0x000940, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_61) == 0x000950, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_62) == 0x000960, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_63) == 0x000970, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Concat_StrStr_ReturnValue_64) == 0x000980, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Concat_StrStr_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Less_IntInt_ReturnValue_4) == 0x000990, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_IntInt_ReturnValue_2) == 0x000994, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Add_ReturnValue) == 0x000998, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Add_ReturnValue_1) == 0x00099C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Add_ReturnValue_2) == 0x0009A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, K2Node_MakeArray_Array) == 0x0009A8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0009B8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000A40, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Cross_VectorVector_ReturnValue_2) == 0x000A44, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Cross_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_bBlockingHit) == 0x000A50, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_bInitialOverlap) == 0x000A51, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_Time) == 0x000A54, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_Distance) == 0x000A58, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_Location) == 0x000A5C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_ImpactPoint) == 0x000A68, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_Normal) == 0x000A74, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_ImpactNormal) == 0x000A80, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_PhysMat) == 0x000A90, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_HitActor) == 0x000A98, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_HitComponent) == 0x000AA0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_HitBoneName) == 0x000AA8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_HitItem) == 0x000AB0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_FaceIndex) == 0x000AB4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_TraceStart) == 0x000AB8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakHitResult_TraceEnd) == 0x000AC4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_ProjectVectorOnToPlane_ReturnValue_1) == 0x000AD0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_ProjectVectorOnToPlane_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_29) == 0x000ADC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_29' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_29) == 0x000AE0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_29' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_29) == 0x000AE4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_29' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Normal_ReturnValue_3) == 0x000AE8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_13) == 0x000AF4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_FMax_ReturnValue) == 0x000AF8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Add_ReturnValue_3) == 0x000AFC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_GetUniqueRideTransform_location) == 0x000B00, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_GetUniqueRideTransform_location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakTransform_Location) == 0x000B30, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakTransform_Rotation) == 0x000B3C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakTransform_Scale) == 0x000B48, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_SelectVector_ReturnValue) == 0x000B54, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Length_ReturnValue) == 0x000B60, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000B64, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_VectorVector_ReturnValue) == 0x000B70, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Add_ReturnValue_4) == 0x000B7C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000B80, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000B8C, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Normal_ReturnValue_4) == 0x000B98, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Normal_ReturnValue_5) == 0x000BA4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Normal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Cross_VectorVector_ReturnValue_3) == 0x000BB0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Cross_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Add_ReturnValue_5) == 0x000BBC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_X_30) == 0x000BC0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_X_30' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Y_30) == 0x000BC4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Y_30' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_BreakVector_Z_30) == 0x000BC8, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_BreakVector_Z_30' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Array_Length_ReturnValue_1) == 0x000BCC, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000BD0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue_7) == 0x000BD4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_Add_FloatFloat_ReturnValue_14) == 0x000BE0, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_Add_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateGroundSlope, CallFunc_MakeVector_ReturnValue_8) == 0x000BE4, "Member 'BP_UniqueObjectComponentBase_C_UpdateGroundSlope::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRide
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueRide final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Update;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_update;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EAB[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueRide) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueRide");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueRide) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueRide");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRide, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRide::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRide, Update) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRide::Update' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRide, L_update) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRide::L_update' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRide, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRide::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRide, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRide, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000011, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRide::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRidePrev
// 0x0260 (0x0260 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EAC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_speedMax;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_turnAccel;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_deltaSecond;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EAD[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetUniqueRideTransform_location;          // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EAE[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_6EAF[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketPlayerTransform_return;          // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EB0[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EB1[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EB2[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EB3[0x2];                                     // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_6;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EB4[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EB5[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeltaSecond_delta_second_1;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_2;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_7;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EB6[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_8;            // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EB7[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetUniqueRideTransform_location_1;        // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_3;            // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_4;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_9;            // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EB8[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDeltaSecond_delta_second_5;            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EB9[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecond_delta_second_6;            // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_10;           // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev) == 0x000260, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, L_speedMax) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::L_speedMax' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, L_turnAccel) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::L_turnAccel' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, L_deltaSecond) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::L_deltaSecond' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000011, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetRate_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Ease_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_VSize_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetUniqueRideTransform_location) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetUniqueRideTransform_location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Location) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Rotation) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Scale) == 0x00006C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Conv_FloatToString_ReturnValue) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetSocketPlayerTransform_return) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetSocketPlayerTransform_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Location_1) == 0x0000D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Rotation_1) == 0x0000DC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Scale_1) == 0x0000E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Vector_Distance_ReturnValue) == 0x0000F4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000108, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Vector_Distance_ReturnValue_1) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000130, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000148, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x000158, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x000159, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetDeltaSecond_delta_second) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetDeltaSecond_delta_second' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000164, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Add_FloatFloat_ReturnValue) == 0x000168, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_6) == 0x00016C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_FMax_ReturnValue) == 0x000170, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000174, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000178, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetDeltaSecond_delta_second_1) == 0x00017C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetDeltaSecond_delta_second_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000180, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000184, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000188, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetDeltaSecond_delta_second_2) == 0x00018C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetDeltaSecond_delta_second_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_7) == 0x000190, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000194, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000198, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_8) == 0x00019C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetUniqueRideTransform_location_1) == 0x0001A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetUniqueRideTransform_location_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Location_2) == 0x0001D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Rotation_2) == 0x0001DC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_BreakTransform_Scale_2) == 0x0001E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetDeltaSecond_delta_second_3) == 0x0001F4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetDeltaSecond_delta_second_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0001F8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetDeltaSecond_delta_second_4) == 0x0001FC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetDeltaSecond_delta_second_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000200, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Add_VectorVector_ReturnValue) == 0x00020C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000218, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_RotateAngleAxis_ReturnValue) == 0x00021C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_FMax_ReturnValue_1) == 0x000228, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_FMin_ReturnValue) == 0x00022C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_9) == 0x000230, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetDeltaSecond_delta_second_5) == 0x000234, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetDeltaSecond_delta_second_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000238, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x00023C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000240, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_GetDeltaSecond_delta_second_6) == 0x000244, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_GetDeltaSecond_delta_second_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000248, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00024C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_FMin_ReturnValue_1) == 0x000250, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev, CallFunc_Less_FloatFloat_ReturnValue_10) == 0x000254, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev::CallFunc_Less_FloatFloat_ReturnValue_10' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRide
// 0x00C0 (0x00C0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueRide final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EBA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_chkPosEnd;                                       // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_chkPosStt;                                       // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_chkEndOffset;                                    // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_chkPosOffset;                                    // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_turnAccel;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_deltaSecond;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EBB[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EBC[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetUniqueRideRot_location;                // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUniqueRidePos_location;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateUniqueRideCheckBg_dummy;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueRide");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide) == 0x0000C0, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueRide");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, L_chkPosEnd) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::L_chkPosEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, L_chkPosStt) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::L_chkPosStt' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, L_chkEndOffset) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::L_chkEndOffset' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, L_chkPosOffset) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::L_chkPosOffset' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, L_turnAccel) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::L_turnAccel' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, L_deltaSecond) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::L_deltaSecond' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_GetUniqueRideRot_location) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_GetUniqueRideRot_location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_BreakTransform_Location) == 0x00008C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_BreakTransform_Scale) == 0x0000A4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_GetUniqueRidePos_location) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_GetUniqueRidePos_location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRide, CallFunc_UpdateUniqueRideCheckBg_dummy) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRide::CallFunc_UpdateUniqueRideCheckBg_dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRideCheckBg
// 0x0150 (0x0150 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EBD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_chkPosEnd;                                       // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_chkPosStt;                                       // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_chkEndOffset;                                    // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_chkPosOffset;                                    // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_turnAccel;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_deltaSecond;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EBE[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EBF[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_1;       // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg) == 0x000150, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, L_chkPosEnd) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::L_chkPosEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, L_chkPosStt) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::L_chkPosStt' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, L_chkEndOffset) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::L_chkEndOffset' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, L_chkPosOffset) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::L_chkPosOffset' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, L_turnAccel) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::L_turnAccel' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, L_deltaSecond) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::L_deltaSecond' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, Temp_object_Variable) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_Cross_VectorVector_ReturnValue) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_Add_VectorVector_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_LineTraceSingleForObjects_OutHit) == 0x00009C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000124, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_MakeRotationFromAxes_ReturnValue_1) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_MakeRotationFromAxes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000134, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckTimeDilation
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckTimeDilation final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckTimeDilation) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckTimeDilation");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckTimeDilation) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_CheckTimeDilation");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckTimeDilation, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckTimeDilation::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckTimeDilation, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_CheckTimeDilation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetTimeDilationAttackUnqObj
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallAttackThrowCancel
// 0x0058 (0x0058 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CallAttackThrowCancel final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC0[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCaptureOwnerMale_return;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_male;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC2[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC3[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_CallAttackThrowCancel");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel) == 0x000058, "Wrong size on BP_UniqueObjectComponentBase_C_CallAttackThrowCancel");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, Temp_bool_Variable) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, Temp_bool_Variable_1) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, Temp_object_Variable) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, Temp_object_Variable_1) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, Temp_bool_Variable_2) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, Temp_object_Variable_2) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, Temp_object_Variable_3) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, CallFunc_IsCaptureOwnerMale_return) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::CallFunc_IsCaptureOwnerMale_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, CallFunc_IsCaptureOwnerMale_male) == 0x000031, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::CallFunc_IsCaptureOwnerMale_male' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, K2Node_Select_Default) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, K2Node_Select_Default_1) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallAttackThrowCancel, K2Node_Select_Default_2) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_CallAttackThrowCancel::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetThrowMontageCancel
// 0x000C (0x000C - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetThrowMontageCancel final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_in;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cancel_in;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CancelInput_skip;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetThrowMontageCancel) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetThrowMontageCancel");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetThrowMontageCancel) == 0x00000C, "Wrong size on BP_UniqueObjectComponentBase_C_SetThrowMontageCancel");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetThrowMontageCancel, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetThrowMontageCancel::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetThrowMontageCancel, Time_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetThrowMontageCancel::Time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetThrowMontageCancel, Cancel_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetThrowMontageCancel::Cancel_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetThrowMontageCancel, CallFunc_CancelInput_skip) == 0x000009, "Member 'BP_UniqueObjectComponentBase_C_SetThrowMontageCancel::CallFunc_CancelInput_skip' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetThrowMontageCancel, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000A, "Member 'BP_UniqueObjectComponentBase_C_SetThrowMontageCancel::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateThrowMontageCancel
// 0x000C (0x000C - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel) == 0x00000C, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel, CallFunc_GetElapsedTime_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel, CallFunc_IsOver_ReturnValue) == 0x00000A, "Member 'BP_UniqueObjectComponentBase_C_UpdateThrowMontageCancel::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueCameraHitLerp
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueCameraHitLerp
// 0x000C (0x000C - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp) == 0x00000C, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp, CallFunc_GetRate_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp, CallFunc_Ease_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueCameraHitLerp::CallFunc_Ease_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputFailure
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetSeInputFailure final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          L_sound;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetSeInputFailure) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetSeInputFailure");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetSeInputFailure) == 0x000040, "Wrong size on BP_UniqueObjectComponentBase_C_SetSeInputFailure");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputFailure, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputFailure::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputFailure, L_sound) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputFailure::L_sound' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputFailure, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputFailure::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputFailure, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputFailure::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputFailure, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputFailure::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputGauge
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetSeInputGauge final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          L_sound;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC9[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_PlaySoundAttachedRS_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetSeInputGauge) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetSeInputGauge");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetSeInputGauge) == 0x000040, "Wrong size on BP_UniqueObjectComponentBase_C_SetSeInputGauge");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputGauge, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputGauge::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputGauge, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputGauge::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputGauge, L_sound) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputGauge::L_sound' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputGauge, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputGauge, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputGauge::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputGauge, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputGauge::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputGauge, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputGauge::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputGauge, CallFunc_PlaySoundAttachedRS_ReturnValue) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputGauge::CallFunc_PlaySoundAttachedRS_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickRollSuccess
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECA[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess, CallFunc_GetHud_hud_main) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollSuccess::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetHitDamageMesh
// 0x0030 (0x0030 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetHitDamageMesh final
{
public:
	bool                                          Reset_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECB[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component_1;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetHitDamageMesh");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh) == 0x000030, "Wrong size on BP_UniqueObjectComponentBase_C_SetHitDamageMesh");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, Reset_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::Reset_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, Dummy) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, L_index) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::L_index' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, K2Node_DynamicCast_AsStatic_Mesh_Component_1) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::K2Node_DynamicCast_AsStatic_Mesh_Component_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000029, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetHitDamageMesh, CallFunc_SetStaticMesh_ReturnValue_1) == 0x00002A, "Member 'BP_UniqueObjectComponentBase_C_SetHitDamageMesh::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPlayerMontageFirstAttack
// 0x0003 (0x0003 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckProcedurePhase_return;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallUniqueAttackSuccess_return;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack) == 0x000003, "Wrong size on BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack::Dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack, CallFunc_CheckProcedurePhase_return) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack::CallFunc_CheckProcedurePhase_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack, CallFunc_CallUniqueAttackSuccess_return) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack::CallFunc_CallUniqueAttackSuccess_return' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackInterpolate
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAttackInterpolate final
{
public:
	float                                         Interpolate_time_in;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAttackInterpolate) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAttackInterpolate");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAttackInterpolate) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_SetAttackInterpolate");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackInterpolate, Interpolate_time_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAttackInterpolate::Interpolate_time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAttackInterpolate, Dummy) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetAttackInterpolate::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallUniqueInputStart
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CallUniqueInputStart final
{
public:
	bool                                          Force_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CallUniqueInputStart) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_CallUniqueInputStart");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CallUniqueInputStart) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_CallUniqueInputStart");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallUniqueInputStart, Force_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CallUniqueInputStart::Force_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallUniqueInputStart, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_CallUniqueInputStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallUniqueObjectEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CallUniqueObjectEnd final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CallUniqueObjectEnd) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_CallUniqueObjectEnd");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CallUniqueObjectEnd) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_CallUniqueObjectEnd");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallUniqueObjectEnd, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CallUniqueObjectEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputRepeat
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetSeInputRepeat final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SetPsychicObjectSound_rs_atom_comp;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetSeInputRepeat) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetSeInputRepeat");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetSeInputRepeat) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetSeInputRepeat");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputRepeat, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputRepeat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputRepeat, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputRepeat::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputRepeat, CallFunc_SetPsychicObjectSound_rs_atom_comp) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputRepeat::CallFunc_SetPsychicObjectSound_rs_atom_comp' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputRotate
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetSeInputRotate final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SetPsychicObjectSound_rs_atom_comp;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetSeInputRotate) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetSeInputRotate");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetSeInputRotate) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetSeInputRotate");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputRotate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputRotate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputRotate, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputRotate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSeInputRotate, CallFunc_SetPsychicObjectSound_rs_atom_comp) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetSeInputRotate::CallFunc_SetPsychicObjectSound_rs_atom_comp' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickHold
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECF[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main_1;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold, CallFunc_GetHud_hud_main) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000A, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000B, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00000D, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold, CallFunc_GetHud_hud_main_1) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHold::CallFunc_GetHud_hud_main_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickHoldPercent
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED0[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent, CallFunc_GetHud_hud_main) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent, CallFunc_GetRate_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent, CallFunc_SelectFloat_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent, CallFunc_SelectFloat_ReturnValue_2) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickHoldPercent::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconRushPercent
// 0x0070 (0x0070 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent final
{
public:
	float                                         Rate_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_rate;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED1[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED2[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED3[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED4[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent) == 0x000070, "Wrong size on BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, Rate_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::Rate_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, L_rate) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00000A, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, Temp_bool_Variable) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, K2Node_Select_Default) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00004D, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_SelectFloat_ReturnValue_1) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_SelectFloat_ReturnValue_2) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_GetHud_hud_main) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent, CallFunc_SelectFloat_ReturnValue_3) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickRollStart
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED5[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart, CallFunc_GetHud_hud_main) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickRollStart::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallUniqueAddGauge
// 0x0005 (0x0005 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CallUniqueAddGauge final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CallUniqueAddGauge) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_CallUniqueAddGauge");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CallUniqueAddGauge) == 0x000005, "Wrong size on BP_UniqueObjectComponentBase_C_CallUniqueAddGauge");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallUniqueAddGauge, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CallUniqueAddGauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallUniqueAddGauge, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_CallUniqueAddGauge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallUniqueAddGauge, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_CallUniqueAddGauge::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallUniqueAddGauge, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'BP_UniqueObjectComponentBase_C_CallUniqueAddGauge::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CallUniqueAddGauge, CallFunc_BooleanOR_ReturnValue_2) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_CallUniqueAddGauge::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.LoadEffectParameter
// 0x0170 (0x0170 - 0x0000)
struct BP_UniqueObjectComponentBase_C_LoadEffectParameter final
{
public:
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicObjectSizeParameter            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0138)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_LoadEffectParameter) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_LoadEffectParameter");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_LoadEffectParameter) == 0x000170, "Wrong size on BP_UniqueObjectComponentBase_C_LoadEffectParameter");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadEffectParameter, CallFunc_GetEnumeratorName_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_LoadEffectParameter::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadEffectParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_LoadEffectParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadEffectParameter, CallFunc_RightChop_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_LoadEffectParameter::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadEffectParameter, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_LoadEffectParameter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadEffectParameter, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_LoadEffectParameter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_LoadEffectParameter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000168, "Member 'BP_UniqueObjectComponentBase_C_LoadEffectParameter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueObjectCameraLookAtPos
// 0x006C (0x006C - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos final
{
public:
	float                                         Look_rate_in;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos;                                               // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_target;                                          // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED6[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEnemyWeakPoint_weak_pos;               // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos) == 0x00006C, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, Look_rate_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::Look_rate_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, Pos) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, L_target) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::L_target' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_GetEnemyWeakPoint_weak_pos) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_GetEnemyWeakPoint_weak_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_GetComponentBounds_Origin) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_GetComponentBounds_BoxExtent) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_GetComponentBounds_SphereRadius) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_SelectVector_ReturnValue) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_VLerp_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_VLerp_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetMoveVelocity
// 0x000C (0x000C - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetMoveVelocity final
{
public:
	struct FVector                                VelocityOut;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetMoveVelocity) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetMoveVelocity");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetMoveVelocity) == 0x00000C, "Wrong size on BP_UniqueObjectComponentBase_C_GetMoveVelocity");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMoveVelocity, VelocityOut) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetMoveVelocity::VelocityOut' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.Get Unique Move Look at Target Pos
// 0x000C (0x000C - 0x0000)
struct BP_UniqueObjectComponentBase_C_Get_Unique_Move_Look_at_Target_Pos final
{
public:
	struct FVector                                TargetPos;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_Get_Unique_Move_Look_at_Target_Pos) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_Get_Unique_Move_Look_at_Target_Pos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_Get_Unique_Move_Look_at_Target_Pos) == 0x00000C, "Wrong size on BP_UniqueObjectComponentBase_C_Get_Unique_Move_Look_at_Target_Pos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_Get_Unique_Move_Look_at_Target_Pos, TargetPos) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_Get_Unique_Move_Look_at_Target_Pos::TargetPos' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueObjectCameraOwnerRotation
// 0x001C (0x001C - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED7[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation) == 0x00001C, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation, Rotation) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueAttackCollision
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueAttackCollision final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueAttackCollision) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueAttackCollision");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueAttackCollision) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueAttackCollision");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueAttackCollision, Dummy) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueAttackCollision::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWaitEnemy
// 0x0003 (0x0003 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputWaitEnemy final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success_in;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputWaitEnemy) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputWaitEnemy");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputWaitEnemy) == 0x000003, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputWaitEnemy");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitEnemy, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitEnemy::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitEnemy, Success_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitEnemy::Success_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitEnemy, Dummy) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitEnemy::Dummy' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncInputWaitEnemy
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PrevAsyncInputWaitEnemy final
{
public:
	float                                         NewLocalVar_0;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PrevAsyncInputWaitEnemy) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_PrevAsyncInputWaitEnemy");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PrevAsyncInputWaitEnemy) == 0x000004, "Wrong size on BP_UniqueObjectComponentBase_C_PrevAsyncInputWaitEnemy");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PrevAsyncInputWaitEnemy, NewLocalVar_0) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PrevAsyncInputWaitEnemy::NewLocalVar_0' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncInputWaitEnemy
// 0x0160 (0x0160 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy final
{
public:
	bool                                          L_bSuccess;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED9[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDA[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInputDuel_success;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInputWait_dummy;                       // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDB[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_7;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputSuccess_dummy;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_2;                     // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_Select_Default_1;                           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputFailure_dummy;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDC[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_3;                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy) == 0x000160, "Wrong size on BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, L_bSuccess) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::L_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_bool_Variable) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_string_Variable) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_string_Variable_1) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_bool_Variable_1) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_string_Variable_2) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_string_Variable_3) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_bool_Variable_2) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_string_Variable_4) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_string_Variable_5) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_string_Variable_6) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_bool_Variable_3) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_CheckInputDuel_success) == 0x000089, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_CheckInputDuel_success' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_SetInputWait_dummy) == 0x00008A, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_SetInputWait_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, Temp_string_Variable_7) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, K2Node_Select_Default) == 0x0000A0, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_SetInputSuccess_dummy) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_SetInputSuccess_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_IsOver_ReturnValue) == 0x0000B1, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_BooleanAND_ReturnValue) == 0x0000B3, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_IsOver_ReturnValue_1) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_BooleanOR_ReturnValue) == 0x0000B5, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B6, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_IsOver_ReturnValue_2) == 0x0000B7, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_IsOver_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, K2Node_Select_Default_1) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, K2Node_Select_Default_2) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_SetInputFailure_dummy) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_SetInputFailure_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, K2Node_Select_Default_3) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000100, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000110, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000120, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000130, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_PostAsyncInputWaitEnemy::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ApplyUniqueRideLocationRotation
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_ApplyUniqueRideLocationRotation final
{
public:
	bool                                          L_update;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_ApplyUniqueRideLocationRotation) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_ApplyUniqueRideLocationRotation");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_ApplyUniqueRideLocationRotation) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_ApplyUniqueRideLocationRotation");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ApplyUniqueRideLocationRotation, L_update) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_ApplyUniqueRideLocationRotation::L_update' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueRideFrontDir
// 0x004C (0x004C - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir final
{
public:
	struct FVector                                Front_dir;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_update;                                          // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDD[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir) == 0x00004C, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, Front_dir) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::Front_dir' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, L_update) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::L_update' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, CallFunc_GetRightVector_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir, CallFunc_Normal_ReturnValue) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueRideTransform
// 0x0080 (0x0080 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueRideTransform final
{
public:
	struct FTransform                             Location;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          L_update;                                          // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDE[0xF];                                     // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueRideTransform) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueRideTransform");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueRideTransform) == 0x000080, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueRideTransform");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideTransform, Location) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideTransform::Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideTransform, L_update) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideTransform::L_update' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideTransform, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideTransform, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueRidePos
// 0x001C (0x001C - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueRidePos final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_update;                                          // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDF[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueRidePos) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueRidePos");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueRidePos) == 0x00001C, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueRidePos");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRidePos, Location) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRidePos::Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRidePos, L_update) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRidePos::L_update' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRidePos, CallFunc_Add_VectorVector_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRidePos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueRideRot
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueRideRot final
{
public:
	struct FRotator                               Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_update;                                          // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE0[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueRideRot) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueRideRot");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueRideRot) == 0x000028, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueRideRot");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideRot, Location) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideRot::Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideRot, L_update) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideRot::L_update' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideRot, CallFunc_Cross_VectorVector_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideRot::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueRideRot, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueRideRot::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickButtonPercent
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE1[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent, CallFunc_GetHud_hud_main) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent, CallFunc_GetRate_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent, CallFunc_SelectFloat_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent, CallFunc_SelectFloat_ReturnValue_2) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetPursuitIconStickButtonPercent::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideTimer
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueRideTimer final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueRideTimer) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueRideTimer");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueRideTimer) == 0x000028, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueRideTimer");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideTimer, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideTimer::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideTimer, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideTimer::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideTimer, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideTimer, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideTimer::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideTimer, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideTimer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideTimer, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000021, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideTimer::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRideTimer
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueRideTimerOver_return;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE4[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer, CallFunc_IsUniqueRideTimerOver_return) == 0x000009, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer::CallFunc_IsUniqueRideTimerOver_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer, CallFunc_GetRate_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideTimer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.IsUniqueRideTimerOver
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver, CallFunc_IsOver_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.StartUniqueObjectCamera
// 0x00E8 (0x00E8 - 0x0000)
struct BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera final
{
public:
	bool                                          Socket_type_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Control_type_in;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Remote_type_in;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE6[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_radiusEmn;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraUniqueObjectParameter           L_cameraParam;                                     // 0x0008(0x0058)(Edit, BlueprintVisible)
	class ARSBattleCharacter_C*                   L_enemyChara;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerCameraComponent_C*            L_cameraComp;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sideIdx;                                         // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE7[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue_1;     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraUniqueObjectParameter           CallFunc_GetUniqueObjectCameraParameter_return_;   // 0x0080(0x0058)()
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera) == 0x0000E8, "Wrong size on BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, Socket_type_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::Socket_type_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, Control_type_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::Control_type_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, Remote_type_in) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::Remote_type_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, L_radiusEmn) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::L_radiusEmn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, L_cameraParam) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::L_cameraParam' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, L_enemyChara) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::L_enemyChara' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, L_cameraComp) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::L_cameraComp' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, L_sideIdx) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::L_sideIdx' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, CallFunc_GetScaledCapsuleRadius_ReturnValue_1) == 0x00007C, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::CallFunc_GetScaledCapsuleRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, CallFunc_GetUniqueObjectCameraParameter_return_) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::CallFunc_GetUniqueObjectCameraParameter_return_' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, K2Node_DynamicCast_AsRSBattle_Character) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, CallFunc_IsValid_ReturnValue_1) == 0x0000E1, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, CallFunc_IsValid_ReturnValue_2) == 0x0000E2, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera, CallFunc_IsValid_ReturnValue_3) == 0x0000E3, "Member 'BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.EndUniqueObjectCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera final
{
public:
	class UBP_PlayerCameraComponent_C*            L_cameraComp;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       L_enemyActor;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sideIdx;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera, L_cameraComp) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera::L_cameraComp' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera, L_enemyActor) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera::L_enemyActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera, L_sideIdx) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera::L_sideIdx' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_EndUniqueObjectCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueObjectCameraTriggerInfo
// 0x0070 (0x0070 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraTriggerInfo                     Trigger_info_in;                                   // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE9[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo) == 0x000070, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo, Trigger_info_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo::Trigger_info_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo, CallFunc_Conv_BoolToString_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueObjectCameraRemoteOption
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EEA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption, CallFunc_GetMainPlayer_Player) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ResetUniqueObjectCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera) == 0x000018, "Wrong size on BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera, CallFunc_GetMainPlayer_Player) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_ResetUniqueObjectCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueScaleChange
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueScaleChange final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EEB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CurveIn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueScaleChange");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange) == 0x000028, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueScaleChange");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange, FlagIn) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueScaleChange::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange, CurveIn) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueScaleChange::CurveIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueScaleChange::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange, CallFunc_GetTimeRange_MinTime) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueScaleChange::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange, CallFunc_GetTimeRange_MaxTime) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueScaleChange::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueScaleChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueScaleChange, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000025, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueScaleChange::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueScaleChange
// 0x0030 (0x0030 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange final
{
public:
	float                                         L_rate;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EEC[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange) == 0x000030, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange, L_rate) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange, CallFunc_IsOver_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange, CallFunc_GetRate_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueScaleChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckUniqueReboundHeight
// 0x01B0 (0x01B0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight final
{
public:
	float                                         L_grabHeight;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_tgtPos;                                          // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EED[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EEE[0x1];                                     // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EEF[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight) == 0x0001B0, "Wrong size on BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, L_grabHeight) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::L_grabHeight' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, L_tgtPos) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::L_tgtPos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, Temp_object_Variable) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_GetMeshBoundCentrePos_pos) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_X_1) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_Y_1) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_Z_1) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_SelectFloat_ReturnValue) == 0x000064, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_X_2) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_Y_2) == 0x00006C, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_Z_2) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_Add_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_MakeVector_ReturnValue_1) == 0x000084, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000118, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_bBlockingHit) == 0x000119, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011A, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_FaceIndex) == 0x00017C, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_TraceStart) == 0x000180, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakHitResult_TraceEnd) == 0x00018C, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_X_3) == 0x000198, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_Y_3) == 0x00019C, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_BreakVector_Z_3) == 0x0001A0, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001A4, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight, CallFunc_FMax_ReturnValue) == 0x0001A8, "Member 'BP_UniqueObjectComponentBase_C_CheckUniqueReboundHeight::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SearchEnemyTargetActorFix
// 0x0058 (0x0058 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix final
{
public:
	class ARSCharacterBase*                       L_battleActor;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF0[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF1[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetId_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF2[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF3[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF4[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF5[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetBattleActorList_ReturnValue;           // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix) == 0x000058, "Wrong size on BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, L_battleActor) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::L_battleActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_GetId_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_GetBattleManager_BattleManager) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_GetBattleActorList_ReturnValue) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_GetBattleActorList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_SearchEnemyTargetActorFix::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.TraceMultiCapsule
// 0x01A0 (0x01A0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_TraceMultiCapsule final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset_up_in;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset_dn_in;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_in;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF6[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Hit_height;                                        // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bDebug;                                          // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF7[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_radius;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_return;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF8[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_height;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posTraceEnd;                                     // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posTraceStt;                                     // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF9[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EFA[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_CapsuleTraceMultiForObjects_OutHits;      // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CapsuleTraceMultiForObjects_ReturnValue;  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFB[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFC[0x1];                                     // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EFD[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_TraceMultiCapsule");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule) == 0x0001A0, "Wrong size on BP_UniqueObjectComponentBase_C_TraceMultiCapsule");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, Pos_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::Pos_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, Offset_up_in) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::Offset_up_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, Offset_dn_in) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::Offset_dn_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, Radius_in) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::Radius_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, Return) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, Hit_height) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::Hit_height' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, L_bDebug) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::L_bDebug' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, L_radius) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::L_radius' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, L_return) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::L_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, L_height) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::L_height' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, L_posTraceEnd) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::L_posTraceEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, L_posTraceStt) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::L_posTraceStt' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_MakeVector_ReturnValue) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_MakeVector_ReturnValue_1) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_GetDebuggingManager_Manager) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_VSize_ReturnValue) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00009C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Add_VectorVector_ReturnValue) == 0x0000AC, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_X_1) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_Y_1) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_Z_1) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_CapsuleTraceMultiForObjects_OutHits) == 0x0000E8, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_CapsuleTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_CapsuleTraceMultiForObjects_ReturnValue) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_CapsuleTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_SelectColor_ReturnValue) == 0x000100, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_bBlockingHit) == 0x000111, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_bInitialOverlap) == 0x000112, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_Location) == 0x00011C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_Normal) == 0x000134, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_ImpactNormal) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_FaceIndex) == 0x000174, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_TraceStart) == 0x000178, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakHitResult_TraceEnd) == 0x000184, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_X_2) == 0x000190, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_Y_2) == 0x000194, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_BreakVector_Z_2) == 0x000198, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_TraceMultiCapsule, CallFunc_Less_FloatFloat_ReturnValue) == 0x00019C, "Member 'BP_UniqueObjectComponentBase_C_TraceMultiCapsule::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetSocketPlayerTransform
// 0x0070 (0x0070 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform final
{
public:
	struct FTransform                             Return;                                            // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform) == 0x000070, "Wrong size on BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitUniqueRideCapsule
// 0x0140 (0x0140 - 0x0000)
struct BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule final
{
public:
	class UCapsuleComponent*                      Capsule_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_in;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Half_height_in;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot_in;                                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketCapsuleTransform_return;         // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EFF[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F00[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule) == 0x000140, "Wrong size on BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, Capsule_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::Capsule_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, Radius_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::Radius_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, Half_height_in) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::Half_height_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, Rot_in) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::Rot_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_GetSocketCapsuleTransform_return) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_GetSocketCapsuleTransform_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_BreakTransform_Location_1) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_BreakTransform_Rotation_1) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_BreakTransform_Scale_1) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_NegateRotator_ReturnValue) == 0x0000D4, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E0, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_ComposeRotators_ReturnValue) == 0x0000EC, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_GetDisplayName_ReturnValue) == 0x000108, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule, CallFunc_Less_FloatFloat_ReturnValue) == 0x000138, "Member 'BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsule
// 0x0070 (0x0070 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F01[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketCapsuleTransform_return;         // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule) == 0x000070, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule, CallFunc_GetSocketCapsuleTransform_return) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule::CallFunc_GetSocketCapsuleTransform_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000064, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRideCapsule
// 0x00D8 (0x00D8 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule final
{
public:
	struct FVector                                L_dirHz;                                           // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_lenNew;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_lenOffset;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_vecHz;                                           // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F02[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F03[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule) == 0x0000D8, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, L_dirHz) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::L_dirHz' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, L_lenNew) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::L_lenNew' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, L_lenOffset) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::L_lenOffset' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, L_vecHz) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::L_vecHz' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Normal_ReturnValue) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Cross_VectorVector_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x00006C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Less_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_IsValid_ReturnValue_1) == 0x000099, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_GetSocketLocation_location) == 0x00009C, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_BreakVector_X) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_BreakVector_Y) == 0x0000C4, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule, CallFunc_MakeVector_ReturnValue) == 0x0000CC, "Member 'BP_UniqueObjectComponentBase_C_UpdateUniqueRideCapsule::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsuleCollision
// 0x0003 (0x0003 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision final
{
public:
	ECollisionEnabled                             Collision_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Simulate_in;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Gravity_in;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision) == 0x000003, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision, Collision_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision::Collision_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision, Simulate_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision::Simulate_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision, Gravity_in) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision::Gravity_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsuleLocationRotation
// 0x0228 (0x0228 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation final
{
public:
	struct FVector                                Location_in;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation_in;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Teleport_in;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F04[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_hitNrl;                                          // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_hitPos;                                          // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bHit;                                            // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_sweep;                                           // 0x0035(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F05[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               L_rot;                                             // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_pos;                                             // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posWork;                                         // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_nrlHit;                                          // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rotNew;                                          // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F06[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F07[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F08[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F09[0x2];                                     // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation) == 0x000228, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, Location_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::Location_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, Rotation_in) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::Rotation_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, Teleport_in) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::Teleport_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_hitNrl) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_hitNrl' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_hitPos) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_hitPos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_bHit) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_bHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_sweep) == 0x000035, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_sweep' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_rot) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_rot' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_pos) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_pos' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_posWork) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_posWork' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_nrlHit) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_nrlHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, L_rotNew) == 0x000068, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::L_rotNew' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_DegSin_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakVector_X) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakVector_Y) == 0x00007C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakVector_Z) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Abs_ReturnValue) == 0x000084, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00008C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A4, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakVector_X_1) == 0x0000CC, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakVector_Y_1) == 0x0000D0, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakVector_Z_1) == 0x0000D4, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Normal_ReturnValue) == 0x0000E4, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F0, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x0000F4, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_bBlockingHit) == 0x00017C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017D, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_Time) == 0x000180, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_Distance) == 0x000184, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_ImpactPoint) == 0x000194, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_ImpactNormal) == 0x0001AC, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_FaceIndex) == 0x0001DC, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_TraceStart) == 0x0001E0, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_BreakHitResult_TraceEnd) == 0x0001EC, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001F8, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x000204, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000210, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00021C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsuleShape
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F0A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_posWork;                                         // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_nrlHit;                                          // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_rotNew;                                          // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape) == 0x000050, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape, L_posWork) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape::L_posWork' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape, L_nrlHit) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape::L_nrlHit' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape, L_rotNew) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape::L_rotNew' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape, CallFunc_Cross_VectorVector_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetSocketCapsuleTransform
// 0x0070 (0x0070 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform final
{
public:
	struct FTransform                             Return;                                            // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform) == 0x000010, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform) == 0x000070, "Wrong size on BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPlayerFlying
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetPlayerFlying final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F0B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMovementPropertyInterface> K2Node_DynamicCast_AsMovement_Property_Interface;  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearFlyingInterface_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F0C[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMovementPropertyInterface> K2Node_DynamicCast_AsMovement_Property_Interface_1; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFlyingInterface_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetPlayerFlying) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetPlayerFlying");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetPlayerFlying) == 0x000038, "Wrong size on BP_UniqueObjectComponentBase_C_SetPlayerFlying");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerFlying, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerFlying::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerFlying, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerFlying::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerFlying, K2Node_DynamicCast_AsMovement_Property_Interface) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerFlying::K2Node_DynamicCast_AsMovement_Property_Interface' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerFlying, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerFlying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerFlying, CallFunc_ClearFlyingInterface_ReturnValue) == 0x000019, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerFlying::CallFunc_ClearFlyingInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerFlying, K2Node_DynamicCast_AsMovement_Property_Interface_1) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerFlying::K2Node_DynamicCast_AsMovement_Property_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerFlying, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerFlying::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetPlayerFlying, CallFunc_SetFlyingInterface_ReturnValue) == 0x000031, "Member 'BP_UniqueObjectComponentBase_C_SetPlayerFlying::CallFunc_SetFlyingInterface_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueObjectCameraParameter
// 0x00B8 (0x00B8 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter final
{
public:
	struct FCameraUniqueObjectParameter           Return_;                                           // 0x0000(0x0058)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_return;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCaptureOwnerMale_male;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F0D[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraUniqueObjectParameter           K2Node_Select_Default;                             // 0x0060(0x0058)()
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter) == 0x0000B8, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter, Return_) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter::Return_' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter, Temp_bool_Variable) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter, CallFunc_IsCaptureOwnerMale_return) == 0x000059, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter::CallFunc_IsCaptureOwnerMale_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter, CallFunc_IsCaptureOwnerMale_male) == 0x00005A, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter::CallFunc_IsCaptureOwnerMale_male' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter, K2Node_Select_Default) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter::K2Node_Select_Default' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetMeshCompHitUnqObj
// 0x00A0 (0x00A0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj final
{
public:
	class UPrimitiveComponent*                    Prim_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal_in;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_result_in;                                     // 0x0014(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj) == 0x0000A0, "Wrong size on BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj, Prim_comp_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj::Prim_comp_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj, Normal_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj::Normal_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj, Hit_result_in) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj::Hit_result_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetClearDelayDeathWait
// 0x000C (0x000C - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F0E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitTimeIn;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait) == 0x00000C, "Wrong size on BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait, FlagIn) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait, WaitTimeIn) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait::WaitTimeIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateClearDelayDeathWait
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_UpdateClearDelayDeathWait::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetOwnerLocationRotation
// 0x00CC (0x00CC - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation final
{
public:
	struct FVector                                Location_in;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation_in;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sweep_in;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Add_capsule_height_in;                             // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F0F[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCaptureOwnerHalfHeight_half_height;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F10[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation) == 0x0000CC, "Wrong size on BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, Location_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::Location_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, Rotation_in) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::Rotation_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, Sweep_in) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::Sweep_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, Add_capsule_height_in) == 0x000019, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::Add_capsule_height_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, CallFunc_GetCaptureOwnerHalfHeight_half_height) == 0x00001C, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::CallFunc_GetCaptureOwnerHalfHeight_half_height' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsuleHit
// 0x00A0 (0x00A0 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit final
{
public:
	class UPrimitiveComponent*                    Prim_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_normal_in;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_result_in;                                     // 0x0014(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit) == 0x0000A0, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit, Prim_comp_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit::Prim_comp_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit, Hit_normal_in) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit::Hit_normal_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit, Hit_result_in) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit::Hit_result_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckAchievementThrowObject
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckAchievementThrowObject final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckAchievementThrowObject) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckAchievementThrowObject");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckAchievementThrowObject) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_CheckAchievementThrowObject");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckAchievementThrowObject, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckAchievementThrowObject::Return' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAchievementUniqueInput
// 0x0030 (0x0030 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput final
{
public:
	bool                                          Force_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F11[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClearGetterManager*                    CallFunc_GetClearGetterManager_ClearGetterManager; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementManager*                    CallFunc_GetAchievementManager_AchievementManager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAchievementUniqueInput_return;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput) == 0x000030, "Wrong size on BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, Force_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::Force_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, CallFunc_GetClearGetterManager_ClearGetterManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::CallFunc_GetClearGetterManager_ClearGetterManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, CallFunc_GetAchievementManager_AchievementManager) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::CallFunc_GetAchievementManager_AchievementManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, K2Node_DynamicCast_AsPlayer_Interface) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, CallFunc_IsAIPlayer_ReturnValue) == 0x00002A, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, CallFunc_IsValid_ReturnValue_1) == 0x00002B, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput, CallFunc_CheckAchievementUniqueInput_return) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput::CallFunc_CheckAchievementUniqueInput_return' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckAchievementUniqueInput
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CheckAchievementUniqueInput final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CheckAchievementUniqueInput) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_CheckAchievementUniqueInput");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CheckAchievementUniqueInput) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_CheckAchievementUniqueInput");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CheckAchievementUniqueInput, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CheckAchievementUniqueInput::Return' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressLiftUp
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F12[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp, CallFunc_GetTimeRange_MinTime) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp, CallFunc_GetTimeRange_MaxTime) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressLiftUpParameter
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetUniquePressLiftUpParameter final
{
public:
	class UCurveFloat*                            Lift_up_curve_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUpParameter) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetUniquePressLiftUpParameter");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUpParameter) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_SetUniquePressLiftUpParameter");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetUniquePressLiftUpParameter, Lift_up_curve_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetUniquePressLiftUpParameter::Lift_up_curve_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAttackDirectionUnqObj
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F13[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direction;                                         // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj, Return) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj::Return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj, Direction) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj::Direction' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDuelType
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetDuelType final
{
public:
	bool                                          Duel_type_in;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetDuelType) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetDuelType");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetDuelType) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_SetDuelType");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDuelType, Duel_type_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetDuelType::Duel_type_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetDuelType, Return) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetDuelType::Return' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCallEndUniqueObjectStateWait
// 0x000C (0x000C - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait final
{
public:
	bool                                          FlagIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F14[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitTimeIn;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait) == 0x00000C, "Wrong size on BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait, FlagIn) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait, WaitTimeIn) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait::WaitTimeIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateCallEndUniqueObjectStateWait
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait) == 0x000002, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_UpdateCallEndUniqueObjectStateWait::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevEventCancel
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_PrevEventCancel final
{
public:
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_PrevEventCancel) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_PrevEventCancel");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_PrevEventCancel) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_PrevEventCancel");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PrevEventCancel, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_PrevEventCancel::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_PrevEventCancel, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_PrevEventCancel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputReserve
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputReserve final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Reserve_wait_in;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Skip_auto_off_in;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use_reserve_button;                                // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectUniqueInputButton               Reserve_button_in;                                 // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputType                 Reserve_type_in;                                   // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputSetting_dummy;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputReserve) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputReserve");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputReserve) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputReserve");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputReserve, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputReserve::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputReserve, Reserve_wait_in) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_SetInputReserve::Reserve_wait_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputReserve, Skip_auto_off_in) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_SetInputReserve::Skip_auto_off_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputReserve, Use_reserve_button) == 0x000003, "Member 'BP_UniqueObjectComponentBase_C_SetInputReserve::Use_reserve_button' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputReserve, Reserve_button_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetInputReserve::Reserve_button_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputReserve, Reserve_type_in) == 0x000005, "Member 'BP_UniqueObjectComponentBase_C_SetInputReserve::Reserve_type_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputReserve, CallFunc_SetInputSetting_dummy) == 0x000006, "Member 'BP_UniqueObjectComponentBase_C_SetInputReserve::CallFunc_SetInputSetting_dummy' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputReserve, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000007, "Member 'BP_UniqueObjectComponentBase_C_SetInputReserve::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateInputReserve
// 0x0198 (0x0198 - 0x0000)
struct BP_UniqueObjectComponentBase_C_UpdateInputReserve final
{
public:
	bool                                          L_reserveSuccess;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F15[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInputStickTrigger_return;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInputStickTrigger_return_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F16[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F17[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_x;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_y;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F18[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F19[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRightStickAxisRawValue_RStickX;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightStickAxisRawValue_RStickY;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_6;            // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_7;            // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrgPsychicObjectUnique_ReturnValue;     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnPsychicObjectUnique_ReturnValue;      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgPsychicObjectNormal_ReturnValue;     // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgUniqueCircle_ReturnValue;            // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnUniqueCircle_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgUniqueTriangle_ReturnValue;          // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgJump_ReturnValue;                    // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F1A[0x1];                                     // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1B[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_hud_main_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInputStickTrigger_return_2;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInputStickTrigger_return_3;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F1C[0x5];                                     // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_x_1;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMoveValue_value_y_1;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_8;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_9;            // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_10;           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_11;           // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F1D[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F1E[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRightStickAxisRawValue_RStickX_1;      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightStickAxisRawValue_RStickY_1;      // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_12;           // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_13;           // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_14;           // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_15;           // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrgPsychicObjectUnique_ReturnValue_1;   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnPsychicObjectUnique_ReturnValue_1;    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgPsychicObjectNormal_ReturnValue_1;   // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgUniqueCircle_ReturnValue_1;          // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnUniqueCircle_ReturnValue_1;           // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgUniqueTriangle_ReturnValue_1;        // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrgJump_ReturnValue_1;                  // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F1F[0x1];                                     // 0x016F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0177(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_8;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_9;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_10;                   // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_11;                   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F20[0x2];                                     // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_UpdateInputReserve) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_UpdateInputReserve");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_UpdateInputReserve) == 0x000198, "Wrong size on BP_UniqueObjectComponentBase_C_UpdateInputReserve");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, L_reserveSuccess) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::L_reserveSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, L_index) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::L_index' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetHud_hud_main) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetHud_hud_main' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_CheckInputStickTrigger_return) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_CheckInputStickTrigger_return' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_CheckInputStickTrigger_return_1) == 0x000011, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_CheckInputStickTrigger_return_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetInputMoveValue_value_x) == 0x000080, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetInputMoveValue_value_x' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetInputMoveValue_value_y) == 0x000084, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetInputMoveValue_value_y' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000089, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x00008A, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x00008B, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetInputManager_BP_InputManager) == 0x000090, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, Temp_int_Variable) == 0x000098, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsValid_ReturnValue) == 0x00009C, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetRightStickAxisRawValue_RStickX) == 0x0000A0, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetRightStickAxisRawValue_RStickX' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetRightStickAxisRawValue_RStickY) == 0x0000A4, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetRightStickAxisRawValue_RStickY' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x0000A8, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x0000A9, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_6) == 0x0000AA, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_7) == 0x0000AB, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgPsychicObjectUnique_ReturnValue) == 0x0000B8, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgPsychicObjectUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsOnPsychicObjectUnique_ReturnValue) == 0x0000B9, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsOnPsychicObjectUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgPsychicObjectNormal_ReturnValue) == 0x0000BA, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgPsychicObjectNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgUniqueCircle_ReturnValue) == 0x0000BB, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgUniqueCircle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsOnUniqueCircle_ReturnValue) == 0x0000BC, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsOnUniqueCircle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgUniqueTriangle_ReturnValue) == 0x0000BD, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgUniqueTriangle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgJump_ReturnValue) == 0x0000BE, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetHud_hud_main_1) == 0x0000C8, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetHud_hud_main_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_CheckInputStickTrigger_return_2) == 0x0000D0, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_CheckInputStickTrigger_return_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_CheckInputStickTrigger_return_3) == 0x0000D1, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_CheckInputStickTrigger_return_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000D2, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000D8, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E8, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000F8, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000108, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000118, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000128, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetInputMoveValue_value_x_1) == 0x000138, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetInputMoveValue_value_x_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetInputMoveValue_value_y_1) == 0x00013C, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetInputMoveValue_value_y_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_8) == 0x000140, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_9) == 0x000141, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_10) == 0x000142, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_11) == 0x000143, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetInputManager_BP_InputManager_1) == 0x000148, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetInputManager_BP_InputManager_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsValid_ReturnValue_1) == 0x000150, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetRightStickAxisRawValue_RStickX_1) == 0x000154, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetRightStickAxisRawValue_RStickX_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_GetRightStickAxisRawValue_RStickY_1) == 0x000158, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_GetRightStickAxisRawValue_RStickY_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_12) == 0x00015C, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_13) == 0x00015D, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_14) == 0x00015E, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_FloatFloat_ReturnValue_15) == 0x00015F, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, Temp_int_Loop_Counter_Variable_1) == 0x000160, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Add_IntInt_ReturnValue_3) == 0x000164, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgPsychicObjectUnique_ReturnValue_1) == 0x000168, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgPsychicObjectUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsOnPsychicObjectUnique_ReturnValue_1) == 0x000169, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsOnPsychicObjectUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgPsychicObjectNormal_ReturnValue_1) == 0x00016A, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgPsychicObjectNormal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgUniqueCircle_ReturnValue_1) == 0x00016B, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgUniqueCircle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsOnUniqueCircle_ReturnValue_1) == 0x00016C, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsOnUniqueCircle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgUniqueTriangle_ReturnValue_1) == 0x00016D, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgUniqueTriangle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_IsTrgJump_ReturnValue_1) == 0x00016E, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_IsTrgJump_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, Temp_int_Array_Index_Variable_1) == 0x000170, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000174, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000175, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess) == 0x000176, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_1) == 0x000177, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_2) == 0x000178, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_3) == 0x000179, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_4) == 0x00017A, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_5) == 0x00017B, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, Temp_int_Variable_1) == 0x00017C, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000185, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_6) == 0x000186, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000187, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_7) == 0x000188, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_8) == 0x000189, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_9) == 0x00018A, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_10) == 0x00018B, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, K2Node_SwitchEnum_CmpSuccess_11) == 0x00018C, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::K2Node_SwitchEnum_CmpSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00018D, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Array_Length_ReturnValue_1) == 0x000190, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Less_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_UpdateInputReserve, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000195, "Member 'BP_UniqueObjectComponentBase_C_UpdateInputReserve::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ClearInputReserveWait
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_ClearInputReserveWait final
{
public:
	bool                                          L_reserveSuccess;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F21[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_ClearInputReserveWait) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_ClearInputReserveWait");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_ClearInputReserveWait) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_ClearInputReserveWait");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ClearInputReserveWait, L_reserveSuccess) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_ClearInputReserveWait::L_reserveSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ClearInputReserveWait, L_index) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_ClearInputReserveWait::L_index' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputSuccessDelay
// 0x0014 (0x0014 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputSuccessDelay final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F22[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_in;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F23[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputSuccessDelay) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputSuccessDelay");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputSuccessDelay) == 0x000014, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputSuccessDelay");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputSuccessDelay, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputSuccessDelay::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputSuccessDelay, Time_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetInputSuccessDelay::Time_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputSuccessDelay, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetInputSuccessDelay::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputSuccessDelay, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_SetInputSuccessDelay::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputSuccessDelay, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetInputSuccessDelay::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetLockInputMode
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetLockInputMode final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F24[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F25[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerInputType                              CallFunc_GetInputType_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F26[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F27[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetLockInputMode) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetLockInputMode");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetLockInputMode) == 0x000050, "Wrong size on BP_UniqueObjectComponentBase_C_SetLockInputMode");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_GetMainPlayer_Player) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_GetInputType_ReturnValue) == 0x000021, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_GetInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000023, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetLockInputMode, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_SetLockInputMode::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitialSkeletalMeshParam
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam final
{
public:
	bool                                          L_flag;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F28[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 L_skeletalMesh;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam) == 0x000020, "Wrong size on BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam, L_flag) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam::L_flag' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam, L_skeletalMesh) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam::L_skeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_InitialSkeletalMeshParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSkeletalMeshParam
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F29[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Ref_name_in;                                       // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F2A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 L_skeletalMesh;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_flag;                                            // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F2B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 L_skeletalMesh_0;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F2C[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F2D[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam) == 0x000050, "Wrong size on BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, Flag_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, Ref_name_in) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::Ref_name_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, L_skeletalMesh) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::L_skeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, L_flag) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::L_flag' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, L_skeletalMesh_0) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::L_skeletalMesh_0' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, CallFunc_Array_RemoveItem_ReturnValue) == 0x00002D, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, CallFunc_Array_Find_ReturnValue) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ClearInputReserveSkipAutoOff
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff final
{
public:
	bool                                          L_reserveSuccess;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F2E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff) == 0x000008, "Wrong size on BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff, L_reserveSuccess) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff::L_reserveSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff, L_index) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_ClearInputReserveSkipAutoOff::L_index' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWaitTime
// 0x000C (0x000C - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetInputWaitTime final
{
public:
	int32                                         IndexIn;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F2F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetInputWaitTime) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetInputWaitTime");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetInputWaitTime) == 0x00000C, "Wrong size on BP_UniqueObjectComponentBase_C_SetInputWaitTime");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitTime, IndexIn) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitTime::IndexIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitTime, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitTime::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetInputWaitTime, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_SetInputWaitTime::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetMaterialParameterMeshList
// 0x0080 (0x0080 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList final
{
public:
	TArray<class ABP_PsychicObjectBasic_C*>       Child_list_in;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 Mesh_list;                                         // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 L_meshList;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F30[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F31[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F32[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList) == 0x000080, "Wrong size on BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, Child_list_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::Child_list_in' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, Mesh_list) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::Mesh_list' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, L_meshList) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::L_meshList' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, L_psyObj) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::L_psyObj' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, Temp_int_Loop_Num_Variable_1) == 0x000050, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetEventSetting
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueObjectComponentBase_C_SetEventSetting final
{
public:
	bool                                          Event_start_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_SetEventSetting) == 0x000001, "Wrong alignment on BP_UniqueObjectComponentBase_C_SetEventSetting");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_SetEventSetting) == 0x000001, "Wrong size on BP_UniqueObjectComponentBase_C_SetEventSetting");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_SetEventSetting, Event_start_in) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_SetEventSetting::Event_start_in' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CancelSAS
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueObjectComponentBase_C_CancelSAS final
{
public:
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F33[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASManager_C*                       CallFunc_GetSASManager_SAS_Manager;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASManager_C>     K2Node_DynamicCast_AsBPI_SASManager;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CancelSAS_Success;                        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_CancelSAS) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_CancelSAS");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_CancelSAS) == 0x000038, "Wrong size on BP_UniqueObjectComponentBase_C_CancelSAS");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, Temp_int_Loop_Num_Variable) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, CallFunc_GetSASManager_SAS_Manager) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::CallFunc_GetSASManager_SAS_Manager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, K2Node_DynamicCast_AsBPI_SASManager) == 0x000020, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::K2Node_DynamicCast_AsBPI_SASManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, CallFunc_CancelSAS_Success) == 0x000032, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::CallFunc_CancelSAS_Success' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, CallFunc_IsControlAI_bAI) == 0x000033, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_CancelSAS, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_UniqueObjectComponentBase_C_CancelSAS::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.NeedsEndSASCutin
// 0x0090 (0x0090 - 0x0000)
struct BP_UniqueObjectComponentBase_C_NeedsEndSASCutin final
{
public:
	bool                                          bNeedsEndCutin;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F34[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               NewLocalVar_2;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F35[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectIdC_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F36[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectIdC_ReturnValue_1;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F37[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_2;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F38[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_3;   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectIdC_ReturnValue_2;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectIdC_ReturnValue_3;      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F39[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_4;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectIdC_ReturnValue_4;      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_NeedsEndSASCutin");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin) == 0x000090, "Wrong size on BP_UniqueObjectComponentBase_C_NeedsEndSASCutin");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, bNeedsEndCutin) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::bNeedsEndCutin' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, NewLocalVar_2) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000018, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, CallFunc_CheckPsychicObjectIdC_ReturnValue) == 0x000029, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::CallFunc_CheckPsychicObjectIdC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000030, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, CallFunc_CheckPsychicObjectIdC_ReturnValue_1) == 0x000041, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::CallFunc_CheckPsychicObjectIdC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_AsPsychic_Object_Interface_2) == 0x000048, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_AsPsychic_Object_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_AsPsychic_Object_Interface_3) == 0x000060, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_AsPsychic_Object_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, CallFunc_CheckPsychicObjectIdC_ReturnValue_2) == 0x000071, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::CallFunc_CheckPsychicObjectIdC_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, CallFunc_CheckPsychicObjectIdC_ReturnValue_3) == 0x000072, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::CallFunc_CheckPsychicObjectIdC_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_AsPsychic_Object_Interface_4) == 0x000078, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_AsPsychic_Object_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, CallFunc_DoesImplementInterface_ReturnValue) == 0x000089, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, CallFunc_CheckPsychicObjectIdC_ReturnValue_4) == 0x00008A, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::CallFunc_CheckPsychicObjectIdC_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_NeedsEndSASCutin, CallFunc_IsValid_ReturnValue_1) == 0x00008B, "Member 'BP_UniqueObjectComponentBase_C_NeedsEndSASCutin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ForceWarpPartyMember
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_ForceWarpPartyMember final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_ForceWarpPartyMember) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_ForceWarpPartyMember");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_ForceWarpPartyMember) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_ForceWarpPartyMember");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ForceWarpPartyMember, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_ForceWarpPartyMember::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_ForceWarpPartyMember, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_ForceWarpPartyMember::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueObjectPlayerMontage
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage final
{
public:
	EPsychicObjectUniqueMontageIndex              MontageIndexIn;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeft;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMaleHero;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F3A[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage, MontageIndexIn) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage::MontageIndexIn' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage, bLeft) == 0x000001, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage::bLeft' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage, bMaleHero) == 0x000002, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage::bMaleHero' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage, Montage) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage::Montage' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueCaptureTime
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetUniqueCaptureTime final
{
public:
	TArray<float>                                 CaptureTimeList;                                   // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetUniqueCaptureTime) == 0x000008, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetUniqueCaptureTime");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetUniqueCaptureTime) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_GetUniqueCaptureTime");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetUniqueCaptureTime, CaptureTimeList) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetUniqueCaptureTime::CaptureTimeList' has a wrong offset!");

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAttackCountMontageIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex final
{
public:
	EPsychicObjectUniqueMontageIndex              Montage;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F3B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueMontageIndex              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueMontageIndex              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueMontageIndex              Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueMontageIndex              Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueMontageIndex              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex) == 0x000004, "Wrong alignment on BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex");
static_assert(sizeof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex) == 0x000010, "Wrong size on BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex, Montage) == 0x000000, "Member 'BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex::Montage' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex, Temp_int_Variable) == 0x000004, "Member 'BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex, Temp_byte_Variable) == 0x000008, "Member 'BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex, Temp_byte_Variable_1) == 0x000009, "Member 'BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex, Temp_byte_Variable_2) == 0x00000A, "Member 'BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex, Temp_byte_Variable_3) == 0x00000B, "Member 'BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex, K2Node_Select_Default) == 0x00000C, "Member 'BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex::K2Node_Select_Default' has a wrong offset!");

}

