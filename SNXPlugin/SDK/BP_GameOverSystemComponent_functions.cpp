#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameOverSystemComponent

#include "Basic.hpp"

#include "BP_GameOverSystemComponent_classes.hpp"
#include "BP_GameOverSystemComponent_parameters.hpp"


namespace SDK
{

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ExecuteUbergraph_BP_GameOverSystemComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::ExecuteUbergraph_BP_GameOverSystemComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "ExecuteUbergraph_BP_GameOverSystemComponent");

	Params::BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateBrainFieldOutRestart
// (BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::PrivateBrainFieldOutRestart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateBrainFieldOutRestart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventOnBrainFieldClose
// (BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventOnBrainFieldClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventOnBrainFieldClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "ReceiveTick");

	Params::BP_GameOverSystemComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "ReceiveEndPlay");

	Params::BP_GameOverSystemComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_GameOverSystemComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.StartDeadGameOver
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::StartDeadGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "StartDeadGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateFinishGameOver
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::PrivateFinishGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateFinishGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventStartUIGameOver
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventStartUIGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventStartUIGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventBrainTalkDeadBlur
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventBrainTalkDeadBlur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventBrainTalkDeadBlur");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventBrainTalkDead
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventBrainTalkDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventBrainTalkDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventPlayerAnimationDead
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventPlayerAnimationDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventPlayerAnimationDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventChangeDeadCamera
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventChangeDeadCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventChangeDeadCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateSetupPostProcess
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::PrivateSetupPostProcess(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateSetupPostProcess");

	Params::BP_GameOverSystemComponent_C_PrivateSetupPostProcess Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventBrainFieldOut
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventBrainFieldOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventBrainFieldOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventRecoverEffectNPC
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventRecoverEffectNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventRecoverEffectNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventRecoverEffectPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventRecoverEffectPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventRecoverEffectPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.IsPlayingDeadGameOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GameOverSystemComponent_C::IsPlayingDeadGameOver(bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "IsPlayingDeadGameOver");

	Params::BP_GameOverSystemComponent_C_IsPlayingDeadGameOver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateLoadAsset
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::PrivateLoadAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateLoadAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.StartDeadRecover
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             RecoverCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::StartDeadRecover(class ARSBattleCharacter_C* RecoverCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "StartDeadRecover");

	Params::BP_GameOverSystemComponent_C_StartDeadRecover Parms{};

	Parms.RecoverCharacter = RecoverCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateStartSequence
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   InSequencer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::PrivateStartSequence(class ULevelSequence* InSequencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateStartSequence");

	Params::BP_GameOverSystemComponent_C_PrivateStartSequence Parms{};

	Parms.InSequencer = InSequencer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.IsPlayingAny
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GameOverSystemComponent_C::IsPlayingAny(bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "IsPlayingAny");

	Params::BP_GameOverSystemComponent_C_IsPlayingAny Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventWaitStandupNPC
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventWaitStandupNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventWaitStandupNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventPlayerStandup
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventPlayerStandup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventPlayerStandup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateBrainFieldSwitchBG
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBrainField                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GameOverSystemComponent_C::PrivateBrainFieldSwitchBG(bool IsBrainField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateBrainFieldSwitchBG");

	Params::BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG Parms{};

	Parms.IsBrainField = IsBrainField;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventRecoverCamera
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventRecoverCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventRecoverCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateSetupRecoverCamera
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::PrivateSetupRecoverCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateSetupRecoverCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventEraseHUD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventEraseHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventEraseHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateEraseHUD
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::PrivateEraseHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateEraseHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.UpdateRecoverCamera
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::UpdateRecoverCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "UpdateRecoverCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventStartCutEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventStartCutEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventStartCutEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.UpdateRecover
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::UpdateRecover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "UpdateRecover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateCalcRecoverStartTransform
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             NPC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FinishTransform                                        (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_GameOverSystemComponent_C::PrivateCalcRecoverStartTransform(class ARSBattlePlayer_C* Player, class ARSBattleCharacter_C* NPC, struct FTransform* FinishTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateCalcRecoverStartTransform");

	Params::BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform Parms{};

	Parms.Player = Player;
	Parms.NPC = NPC;

	UObject::ProcessEvent(Func, &Parms);

	if (FinishTransform != nullptr)
		*FinishTransform = std::move(Parms.FinishTransform);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateCalcRecoverFinishTransform
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       BaseTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       RestoreRelativeTransform                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class ARSBattleCharacter_C*             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FinishTransform                                        (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_GameOverSystemComponent_C::PrivateCalcRecoverFinishTransform(const struct FTransform& BaseTransform, const struct FTransform& RestoreRelativeTransform, class ARSBattleCharacter_C* Character, struct FTransform* FinishTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateCalcRecoverFinishTransform");

	Params::BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform Parms{};

	Parms.BaseTransform = std::move(BaseTransform);
	Parms.RestoreRelativeTransform = std::move(RestoreRelativeTransform);
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (FinishTransform != nullptr)
		*FinishTransform = std::move(Parms.FinishTransform);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventCameraTopView
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventCameraTopView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventCameraTopView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ReloadPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::ReloadPlayer(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "ReloadPlayer");

	Params::BP_GameOverSystemComponent_C_ReloadPlayer Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventBrainTalkRevival
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventBrainTalkRevival()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventBrainTalkRevival");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventRevivePlayer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::EventRevivePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "EventRevivePlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateBrainFieldClose
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::PrivateBrainFieldClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateBrainFieldClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivatePlayEnpcBattleVoice
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameOverSystemComponent_C::PrivatePlayEnpcBattleVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivatePlayEnpcBattleVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.IsPlayingDeadRecover
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GameOverSystemComponent_C::IsPlayingDeadRecover(bool* IsPlaying) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "IsPlayingDeadRecover");

	Params::BP_GameOverSystemComponent_C_IsPlayingDeadRecover Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateGetGameOverBrainTalkID
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             BrainTalkID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::PrivateGetGameOverBrainTalkID(class FName* BrainTalkID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateGetGameOverBrainTalkID");

	Params::BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BrainTalkID != nullptr)
		*BrainTalkID = Parms.BrainTalkID;
}


// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateGetRecoverBrainTalkID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             BrainTalkID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOverSystemComponent_C::PrivateGetRecoverBrainTalkID(class FName* BrainTalkID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOverSystemComponent_C", "PrivateGetRecoverBrainTalkID");

	Params::BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BrainTalkID != nullptr)
		*BrainTalkID = Parms.BrainTalkID;
}

}

