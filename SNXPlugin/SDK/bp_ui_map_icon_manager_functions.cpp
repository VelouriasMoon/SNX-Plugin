#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_ui_map_icon_manager

#include "Basic.hpp"

#include "bp_ui_map_icon_manager_classes.hpp"
#include "bp_ui_map_icon_manager_parameters.hpp"


namespace SDK
{

// Function bp_ui_map_icon_manager.bp_ui_map_icon_manager_C.GetElementNum
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TableIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_ui_map_icon_manager_C::GetElementNum(int32 TableIndex, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ui_map_icon_manager_C", "GetElementNum");

	Params::bp_ui_map_icon_manager_C_GetElementNum Parms{};

	Parms.TableIndex = TableIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function bp_ui_map_icon_manager.bp_ui_map_icon_manager_C.GetElement
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TableIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUiSceneMapIconDataCell          Param                                                  (Parm, OutParm)

void Ubp_ui_map_icon_manager_C::GetElement(int32 TableIndex, int32 Param_Index, struct FUiSceneMapIconDataCell* Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ui_map_icon_manager_C", "GetElement");

	Params::bp_ui_map_icon_manager_C_GetElement Parms{};

	Parms.TableIndex = TableIndex;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Param != nullptr)
		*Param = std::move(Parms.Param);
}


// Function bp_ui_map_icon_manager.bp_ui_map_icon_manager_C.GetElementList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUiSceneMapIconType                     Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Locate                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FUiSceneMapIconNode>      ResultList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void Ubp_ui_map_icon_manager_C::GetElementList(EUiSceneMapIconType Type, int32 Locate, int32 Area, TArray<struct FUiSceneMapIconNode>& ResultList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ui_map_icon_manager_C", "GetElementList");

	Params::bp_ui_map_icon_manager_C_GetElementList Parms{};

	Parms.Type = Type;
	Parms.Locate = Locate;
	Parms.Area = Area;
	Parms.ResultList = std::move(ResultList);

	UObject::ProcessEvent(Func, &Parms);

	ResultList = std::move(Parms.ResultList);
}


// Function bp_ui_map_icon_manager.bp_ui_map_icon_manager_C.GetArrangeElementList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FMapArrangeItemNode>      ResultList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// EMapIconType                            MapIconType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_ui_map_icon_manager_C::GetArrangeElementList(int32 Location, int32 Area, TArray<struct FMapArrangeItemNode>& ResultList, EMapIconType MapIconType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ui_map_icon_manager_C", "GetArrangeElementList");

	Params::bp_ui_map_icon_manager_C_GetArrangeElementList Parms{};

	Parms.Location = Location;
	Parms.Area = Area;
	Parms.ResultList = std::move(ResultList);
	Parms.MapIconType = MapIconType;

	UObject::ProcessEvent(Func, &Parms);

	ResultList = std::move(Parms.ResultList);
}


// Function bp_ui_map_icon_manager.bp_ui_map_icon_manager_C.GetArrangeIconType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PointIDName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMapIconType                            RetIconType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_ui_map_icon_manager_C::GetArrangeIconType(class FName PointIDName, EMapIconType* RetIconType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ui_map_icon_manager_C", "GetArrangeIconType");

	Params::bp_ui_map_icon_manager_C_GetArrangeIconType Parms{};

	Parms.PointIDName = PointIDName;

	UObject::ProcessEvent(Func, &Parms);

	if (RetIconType != nullptr)
		*RetIconType = Parms.RetIconType;
}

}

