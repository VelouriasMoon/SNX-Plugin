#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RSBattleEnemy

#include "Basic.hpp"

#include "RSBattleEnemy_classes.hpp"
#include "RSBattleEnemy_parameters.hpp"


namespace SDK
{

// Function RSBattleEnemy.RSBattleEnemy_C.ExecuteUbergraph_RSBattleEnemy
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::ExecuteUbergraph_RSBattleEnemy(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ExecuteUbergraph_RSBattleEnemy");

	Params::RSBattleEnemy_C_ExecuteUbergraph_RSBattleEnemy Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UnbindLostActionResetTick
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UnbindLostActionResetTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UnbindLostActionResetTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BindLostActionResetTick
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::BindLostActionResetTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BindLostActionResetTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnHitCrashVisionAttack
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnHitCrashVisionAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnHitCrashVisionAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDeadCrashVision
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnDeadCrashVision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDeadCrashVision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateOutRangeFade_Native
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ToTargetLenge                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceDisp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateOutRangeFade_Native(float ToTargetLenge, bool ForceDisp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateOutRangeFade_Native");

	Params::RSBattleEnemy_C_UpdateOutRangeFade_Native Parms{};

	Parms.ToTargetLenge = ToTargetLenge;
	Parms.ForceDisp = ForceDisp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.AddResetSecondRate
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::AddResetSecondRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "AddResetSecondRate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdatePreviousElapsedTime
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdatePreviousElapsedTime(float ElapsedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdatePreviousElapsedTime");

	Params::RSBattleEnemy_C_UpdatePreviousElapsedTime Parms{};

	Parms.ElapsedTime = ElapsedTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnFinishSpawnWaitDelayTimer
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnFinishSpawnWaitDelayTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnFinishSpawnWaitDelayTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnAbsorption
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnAbsorption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnAbsorption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnGeneralEnemyBreak
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnGeneralEnemyBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnGeneralEnemyBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnGeneralFloat
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnGeneralFloat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnGeneralFloat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnSpawnStartCharaCondition
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnSpawnStartCharaCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnSpawnStartCharaCondition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDeadBrainCrash
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnDeadBrainCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDeadBrainCrash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnFellOutOfWorld
// (Event, Public, BlueprintEvent)

void ARSBattleEnemy_C::OnFellOutOfWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnFellOutOfWorld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.setEmPosDiscover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          DiscoverPos                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetEmPosDiscover(const struct FVector& DiscoverPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "setEmPosDiscover");

	Params::RSBattleEnemy_C_SetEmPosDiscover Parms{};

	Parms.DiscoverPos = std::move(DiscoverPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ARSBattleEnemy_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReceiveMontageBlendingOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Interrupted                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ReceiveMontageBlendingOut(class UAnimMontage* Montage, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReceiveMontageBlendingOut");

	Params::RSBattleEnemy_C_ReceiveMontageBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.Interrupted = Interrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetTargetHateEvent
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetTargetHateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetTargetHateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ARSBattleEnemy_C::BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::RSBattleEnemy_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.EventPhysicsIdling
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   IdlingSec                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   IdleRestoreDelay                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::EventPhysicsIdling(float IdlingSec, float IdleRestoreDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EventPhysicsIdling");

	Params::RSBattleEnemy_C_EventPhysicsIdling Parms{};

	Parms.IdlingSec = IdlingSec;
	Parms.IdleRestoreDelay = IdleRestoreDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReceiveEndPlay");

	Params::RSBattleEnemy_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCBadState                             bad                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::BadStateEffectOn(EHCBadState bad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOn");

	Params::RSBattleEnemy_C_BadStateEffectOn Parms{};

	Parms.bad = bad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_1_BadStateOffDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EHCBadState                             bad_state                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_1_BadStateOffDelegate__DelegateSignature(EHCBadState bad_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_1_BadStateOffDelegate__DelegateSignature");

	Params::RSBattleEnemy_C_BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_1_BadStateOffDelegate__DelegateSignature Parms{};

	Parms.bad_state = bad_state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_0_BadStateOnDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EHCBadState                             bad_state                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_0_BadStateOnDelegate__DelegateSignature(EHCBadState bad_state, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_0_BadStateOnDelegate__DelegateSignature");

	Params::RSBattleEnemy_C_BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_0_BadStateOnDelegate__DelegateSignature Parms{};

	Parms.bad_state = bad_state;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BndEvt__DamageAccept_K2Node_ComponentBoundEvent_0_DamageHitDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::BndEvt__DamageAccept_K2Node_ComponentBoundEvent_0_DamageHitDelegate__DelegateSignature(const struct FHCHitResult& HitResult, int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BndEvt__DamageAccept_K2Node_ComponentBoundEvent_0_DamageHitDelegate__DelegateSignature");

	Params::RSBattleEnemy_C_BndEvt__DamageAccept_K2Node_ComponentBoundEvent_0_DamageHitDelegate__DelegateSignature Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetSuperArmor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuperArmor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetSuperArmor(bool bSuperArmor, class FName ClaimantName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetSuperArmor");

	Params::RSBattleEnemy_C_SetSuperArmor Parms{};

	Parms.bSuperArmor = bSuperArmor;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DamageAfter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::DamageAfter(TArray<struct FHCHitResult>& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DamageAfter");

	Params::RSBattleEnemy_C_DamageAfter Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ARSBattleEnemy_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReceiveTick");

	Params::RSBattleEnemy_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.HideCore
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::HideCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "HideCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_1_BrainCrashAccessOnDelegate__DelegateSignature
// (BlueprintEvent)

void ARSBattleEnemy_C::BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_1_BrainCrashAccessOnDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_1_BrainCrashAccessOnDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_0_BrainCrashAccessOffDelegate__DelegateSignature
// (BlueprintEvent)

void ARSBattleEnemy_C::BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_0_BrainCrashAccessOffDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BndEvt__CharactersParameter_K2Node_ComponentBoundEvent_0_BrainCrashAccessOffDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainCrashEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBeginActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimMontage*                     PlayerEndMontage                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::OnBrainCrashEnd(bool bBeginActor, class UAnimMontage* PlayerEndMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainCrashEnd");

	Params::RSBattleEnemy_C_OnBrainCrashEnd Parms{};

	Parms.bBeginActor = bBeginActor;
	Parms.PlayerEndMontage = PlayerEndMontage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainCrashDead
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnBrainCrashDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainCrashDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainCrashDamage
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnBrainCrashDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainCrashDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainCrashStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBeginActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnBrainCrashStart(bool bBeginActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainCrashStart");

	Params::RSBattleEnemy_C_OnBrainCrashStart Parms{};

	Parms.bBeginActor = bBeginActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.12_SetParameterDefaultRepopTimeTerritory
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::One2_SetParameterDefaultRepopTimeTerritory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "12_SetParameterDefaultRepopTimeTerritory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.11_SetParameterDefaultRepopRange
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::One1_SetParameterDefaultRepopRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "11_SetParameterDefaultRepopRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.10_SetParameterDefaultRepopTime
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::One0_SetParameterDefaultRepopTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "10_SetParameterDefaultRepopTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.04_SetParameterDefaultTerritoryArea
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::Zero4_SetParameterDefaultTerritoryArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "04_SetParameterDefaultTerritoryArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.03_SetParameterDefaultCaptureArea
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::Zero3_SetParameterDefaultCaptureArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "03_SetParameterDefaultCaptureArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.02_SetParameterDefaultSensingArea
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::Zero2_SetParameterDefaultSensingArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "02_SetParameterDefaultSensingArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.01_SetParameterDefaultSearchRange
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::Zero1_SetParameterDefaultSearchRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "01_SetParameterDefaultSearchRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.00_SetParameterDefaultSearchAngle
// (BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::Zero0_SetParameterDefaultSearchAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "00_SetParameterDefaultSearchAngle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnUnDiscovery
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnUnDiscovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnUnDiscovery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDiscovery
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnDiscovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDiscovery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateDeadStaging
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateDeadStaging(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateDeadStaging");

	Params::RSBattleEnemy_C_UpdateDeadStaging Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartDeadStaging
// (Protected, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StartDeadStaging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartDeadStaging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDeadCoreEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnDeadCoreEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDeadCoreEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartDamageAnimFunc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// int32                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDown                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartDamageAnimFunc(const struct FHCHitResult& HitResult, int32 DamageValue, bool IsDown, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartDamageAnimFunc");

	Params::RSBattleEnemy_C_StartDamageAnimFunc Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.DamageValue = DamageValue;
	Parms.IsDown = IsDown;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BeginMoveBackward
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BeginMoveBackward(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BeginMoveBackward");

	Params::RSBattleEnemy_C_BeginMoveBackward Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EndMoveBackward
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EndMoveBackward(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EndMoveBackward");

	Params::RSBattleEnemy_C_EndMoveBackward Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsAbleMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAble                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsAbleMove(bool* IsAble)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsAbleMove");

	Params::RSBattleEnemy_C_IsAbleMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsAble != nullptr)
		*IsAble = Parms.IsAble;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetHeadLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetHeadLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetHeadLocation");

	Params::RSBattleEnemy_C_GetHeadLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDamageActorHit
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnDamageActorHit(struct FHCHitResult& HitResult, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDamageActorHit");

	Params::RSBattleEnemy_C_OnDamageActorHit Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnDead(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDead");

	Params::RSBattleEnemy_C_OnDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnRevive
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnRevive(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnRevive");

	Params::RSBattleEnemy_C_OnRevive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetBattling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBattling                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetBattling(bool bBattling, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetBattling");

	Params::RSBattleEnemy_C_SetBattling Parms{};

	Parms.bBattling = bBattling;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.On Hit Damage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::On_Hit_Damage(TArray<struct FHCHitResult>& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "On Hit Damage");

	Params::RSBattleEnemy_C_On_Hit_Damage Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnableMoveRange
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnableMoveRange(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnableMoveRange");

	Params::RSBattleEnemy_C_IsEnableMoveRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetTargetPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetTargetPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetTargetPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateLayoutStartUp
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateLayoutStartUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateLayoutStartUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetParamEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetParamEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetParamEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDistanceAngleCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Range                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoHeight                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          SelfLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SelfLocationOn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsDistanceAngleCheck(class AActor* Target, const struct FVector& TargetLocation, float Range, float Angle, const struct FRotator& Rot, bool NoHeight, const struct FVector& SelfLocation, bool SelfLocationOn, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDistanceAngleCheck");

	Params::RSBattleEnemy_C_IsDistanceAngleCheck Parms{};

	Parms.Target = Target;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.Range = Range;
	Parms.Angle = Angle;
	Parms.Rot = std::move(Rot);
	Parms.NoHeight = NoHeight;
	Parms.SelfLocation = std::move(SelfLocation);
	Parms.SelfLocationOn = SelfLocationOn;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsShortDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsShortDistance(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsShortDistance");

	Params::RSBattleEnemy_C_IsShortDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsMiddleDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsMiddleDistance(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsMiddleDistance");

	Params::RSBattleEnemy_C_IsMiddleDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnHitDamageCall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnHitDamageCall(TArray<struct FHCHitResult>& Result, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnHitDamageCall");

	Params::RSBattleEnemy_C_OnHitDamageCall Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsLongDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsLongDistance(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsLongDistance");

	Params::RSBattleEnemy_C_IsLongDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDamagePartHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// int32                                   Da_age                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::DebugDamagePartHit(const struct FHCHitResult& Result, int32 Da_age)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDamagePartHit");

	Params::RSBattleEnemy_C_DebugDamagePartHit Parms{};

	Parms.Result = std::move(Result);
	Parms.Da_age = Da_age;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.MainTick
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::MainTick(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "MainTick");

	Params::RSBattleEnemy_C_MainTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DamageMotionEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::DamageMotionEnd(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DamageMotionEnd");

	Params::RSBattleEnemy_C_DamageMotionEnd Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemySound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_EnemySound                         Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetEnemySound(Enum_EnemySound* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemySound");

	Params::RSBattleEnemy_C_GetEnemySound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetCursorLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ARSBattleEnemy_C::GetTargetCursorLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetCursorLocation");

	Params::RSBattleEnemy_C_GetTargetCursorLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBrainCrashDamageLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBrainCrashDamageLocation(struct FVector* WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBrainCrashDamageLocation");

	Params::RSBattleEnemy_C_GetBrainCrashDamageLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WorldLocation != nullptr)
		*WorldLocation = std::move(Parms.WorldLocation);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDamageDownWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsDamageDownWait(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDamageDownWait");

	Params::RSBattleEnemy_C_IsDamageDownWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DamageDownCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Timer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::DamageDownCheck(float Timer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DamageDownCheck");

	Params::RSBattleEnemy_C_DamageDownCheck Parms{};

	Parms.Timer = Timer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.FlyDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::FlyDown(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "FlyDown");

	Params::RSBattleEnemy_C_FlyDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateEnemyHp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BossOnly                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateEnemyHp(bool BossOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateEnemyHp");

	Params::RSBattleEnemy_C_UpdateEnemyHp Parms{};

	Parms.BossOnly = BossOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsTargetBoss
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsTargetBoss(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsTargetBoss");

	Params::RSBattleEnemy_C_IsTargetBoss Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function RSBattleEnemy.RSBattleEnemy_C.NoNavMoveRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::NoNavMoveRotation(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "NoNavMoveRotation");

	Params::RSBattleEnemy_C_NoNavMoveRotation Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.PlayAnimDamageMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::PlayAnimDamageMontage(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "PlayAnimDamageMontage");

	Params::RSBattleEnemy_C_PlayAnimDamageMontage Parms{};

	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.RequestDamageMotion
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSideDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PsychicObjectCombo                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttackObj                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WasStartDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RequestDamageMotion(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, bool IsSideDamage, class UPrimitiveComponent* Primitive, bool PsychicObjectCombo, const struct FHCSkillCommonInfo& Skill, class AActor* Attacker, class AActor* AttackObj, bool WasStartDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RequestDamageMotion");

	Params::RSBattleEnemy_C_RequestDamageMotion Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.IsSideDamage = IsSideDamage;
	Parms.Primitive = Primitive;
	Parms.PsychicObjectCombo = PsychicObjectCombo;
	Parms.Skill = std::move(Skill);
	Parms.Attacker = Attacker;
	Parms.AttackObj = AttackObj;
	Parms.WasStartDamage = WasStartDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAliveAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyAliveAnimKind                      Alive                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetAliveAnim(EnemyAliveAnimKind Alive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAliveAnim");

	Params::RSBattleEnemy_C_SetAliveAnim Parms{};

	Parms.Alive = Alive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.Get Param Table Resistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EEnemyDamageType                        Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Resistance                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::Get_Param_Table_Resistance(EEnemyDamageType Damage, float* Resistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Get Param Table Resistance");

	Params::RSBattleEnemy_C_Get_Param_Table_Resistance Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);

	if (Resistance != nullptr)
		*Resistance = Parms.Resistance;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetParamBasicAccumulation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EEnemyDamageType                        Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Accumulation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetParamBasicAccumulation(EEnemyDamageType Damage, float* Accumulation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetParamBasicAccumulation");

	Params::RSBattleEnemy_C_GetParamBasicAccumulation Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);

	if (Accumulation != nullptr)
		*Accumulation = Parms.Accumulation;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDamageAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyDamageAnimKind                     Alive                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetDamageAnim(EnemyDamageAnimKind Alive, class UPrimitiveComponent* Primitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDamageAnim");

	Params::RSBattleEnemy_C_SetDamageAnim Parms{};

	Parms.Alive = Alive;
	Parms.Primitive = Primitive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDamageDownAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyDamageDownAnimKind                 Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetDamageDownAnim(EnemyDamageDownAnimKind Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDamageDownAnim");

	Params::RSBattleEnemy_C_SetDamageDownAnim Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDamageAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RotZ                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsDamageAngle(const struct FVector& Location, float Angle, float RotZ, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDamageAngle");

	Params::RSBattleEnemy_C_IsDamageAngle Parms{};

	Parms.Location = std::move(Location);
	Parms.Angle = Angle;
	Parms.RotZ = RotZ;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function RSBattleEnemy.RSBattleEnemy_C.TimerDecrement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Base                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARSBattleEnemy_C::TimerDecrement(float Base, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "TimerDecrement");

	Params::RSBattleEnemy_C_TimerDecrement Parms{};

	Parms.Base = Base;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateTargetDistance
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateTargetDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateTargetDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BrainCrashDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::BrainCrashDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BrainCrashDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateMotionFootParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateMotionFootParam(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateMotionFootParam");

	Params::RSBattleEnemy_C_UpdateMotionFootParam Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetMotionFootParamCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<bool>                            MotionParam                                            (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetMotionFootParamCheck(TArray<bool>* MotionParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetMotionFootParamCheck");

	Params::RSBattleEnemy_C_GetMotionFootParamCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MotionParam != nullptr)
		*MotionParam = std::move(Parms.MotionParam);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsMotionFootParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_EnemyMotionParam                   MotionParam                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsMotionFootParam(Enum_EnemyMotionParam MotionParam, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsMotionFootParam");

	Params::RSBattleEnemy_C_IsMotionFootParam Parms{};

	Parms.MotionParam = MotionParam;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateMotionFootLock
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateMotionFootLock(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateMotionFootLock");

	Params::RSBattleEnemy_C_UpdateMotionFootLock Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateDeadBoss
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateDeadBoss(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateDeadBoss");

	Params::RSBattleEnemy_C_UpdateDeadBoss Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetPhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IncludeSelf                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetPhysics(class FName Param_Name, bool On, bool IncludeSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetPhysics");

	Params::RSBattleEnemy_C_SetPhysics Parms{};

	Parms.Param_Name = Param_Name;
	Parms.On = On;
	Parms.IncludeSelf = IncludeSelf;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.AddRagdollPower
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::AddRagdollPower(class FName Param_Name, const struct FVector& Power)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "AddRagdollPower");

	Params::RSBattleEnemy_C_AddRagdollPower Parms{};

	Parms.Param_Name = Param_Name;
	Parms.Power = std::move(Power);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetRagdollDamage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetRagdollDamage(TArray<struct FHCHitResult>& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetRagdollDamage");

	Params::RSBattleEnemy_C_SetRagdollDamage Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetRotationRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetRotationRate(float Rate, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetRotationRate");

	Params::RSBattleEnemy_C_SetRotationRate Parms{};

	Parms.Rate = Rate;
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ChangeRagdollBoneName
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ChangeRagdollBoneName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ChangeRagdollBoneName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcIntegerScale
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           Return                                                 (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::CalcIntegerScale(TArray<int32>& Num, float Scale, TArray<int32>* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcIntegerScale");

	Params::RSBattleEnemy_C_CalcIntegerScale Parms{};

	Parms.Num = std::move(Num);
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);

	Num = std::move(Parms.Num);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcFloatScale
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<float>                           Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<float>                           Return                                                 (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::CalcFloatScale(TArray<float>& Num, float Scale, TArray<float>* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcFloatScale");

	Params::RSBattleEnemy_C_CalcFloatScale Parms{};

	Parms.Num = std::move(Num);
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);

	Num = std::move(Parms.Num);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsPsychicObjectCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCHitResult                     HCHitResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsPsychicObjectCombo(const struct FHCHitResult& HCHitResult, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsPsychicObjectCombo");

	Params::RSBattleEnemy_C_IsPsychicObjectCombo Parms{};

	Parms.HCHitResult = std::move(HCHitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.FlyUp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::FlyUp(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "FlyUp");

	Params::RSBattleEnemy_C_FlyUp Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.AddEnemyListManager
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::AddEnemyListManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "AddEnemyListManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetAiDataTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Enum                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoProblemNotFound                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAiParamEnemy                    Param                                                  (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetAiDataTable(uint8 Enum, bool NoProblemNotFound, struct FAiParamEnemy* Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetAiDataTable");

	Params::RSBattleEnemy_C_GetAiDataTable Parms{};

	Parms.Enum = Enum;
	Parms.NoProblemNotFound = NoProblemNotFound;

	UObject::ProcessEvent(Func, &Parms);

	if (Param != nullptr)
		*Param = std::move(Parms.Param);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetAiDataTableString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Enum                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetAiDataTableString(uint8 Enum, class FString* Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetAiDataTableString");

	Params::RSBattleEnemy_C_GetAiDataTableString Parms{};

	Parms.Enum = Enum;

	UObject::ProcessEvent(Func, &Parms);

	if (Param != nullptr)
		*Param = std::move(Parms.Param);
}


// Function RSBattleEnemy.RSBattleEnemy_C.Set Enemy Target Battle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::Set_Enemy_Target_Battle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Set Enemy Target Battle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetEnemyTargetBattle
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetEnemyTargetBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetEnemyTargetBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnAttackActorHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnAttackActorHit(const struct FHCHitResult& HitResult, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnAttackActorHit");

	Params::RSBattleEnemy_C_OnAttackActorHit Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDamageElecDown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCBadState                             bad                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetDamageElecDown(EHCBadState bad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDamageElecDown");

	Params::RSBattleEnemy_C_SetDamageElecDown Parms{};

	Parms.bad = bad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateDamageAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DamageEnd                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DamageDownEnd                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateDamageAnim(bool* DamageEnd, bool* DamageDownEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateDamageAnim");

	Params::RSBattleEnemy_C_UpdateDamageAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageEnd != nullptr)
		*DamageEnd = Parms.DamageEnd;

	if (DamageDownEnd != nullptr)
		*DamageDownEnd = Parms.DamageDownEnd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAnimRootMotionScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetAnimRootMotionScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAnimRootMotionScale");

	Params::RSBattleEnemy_C_SetAnimRootMotionScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateFloodedAnimRootMotionScale
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateFloodedAnimRootMotionScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateFloodedAnimRootMotionScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsFloodedAnimRootMotionScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsFloodedAnimRootMotionScale(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsFloodedAnimRootMotionScale");

	Params::RSBattleEnemy_C_IsFloodedAnimRootMotionScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateBrainCrashMotionCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Timer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateBrainCrashMotionCheck(float Timer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateBrainCrashMotionCheck");

	Params::RSBattleEnemy_C_UpdateBrainCrashMotionCheck Parms{};

	Parms.Timer = Timer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainFieldStart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnBrainFieldStart(bool MoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainFieldStart");

	Params::RSBattleEnemy_C_OnBrainFieldStart Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainFieldEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnBrainFieldEnd(bool MoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainFieldEnd");

	Params::RSBattleEnemy_C_OnBrainFieldEnd Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetMoveRootMotion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetMoveRootMotion(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetMoveRootMotion");

	Params::RSBattleEnemy_C_SetMoveRootMotion Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StopDamageMontage
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StopDamageMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StopDamageMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.NotDamageMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::NotDamageMontage(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "NotDamageMontage");

	Params::RSBattleEnemy_C_NotDamageMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DamageMontage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Damage_Enable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DamageMontage(TArray<struct FHCHitResult>& Result, bool* Damage_Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DamageMontage");

	Params::RSBattleEnemy_C_DamageMontage Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);

	if (Damage_Enable != nullptr)
		*Damage_Enable = Parms.Damage_Enable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.WeakMaterialRate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::WeakMaterialRate(float DeltaSec, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "WeakMaterialRate");

	Params::RSBattleEnemy_C_WeakMaterialRate Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function RSBattleEnemy.RSBattleEnemy_C.WeakMaterialEmissiveRate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::WeakMaterialEmissiveRate(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "WeakMaterialEmissiveRate");

	Params::RSBattleEnemy_C_WeakMaterialEmissiveRate Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHitWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               SkillInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHitWeak(class UPrimitiveComponent* Primitive, struct FHCSkillCommonInfo& SkillInfo, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHitWeak");

	Params::RSBattleEnemy_C_IsHitWeak Parms{};

	Parms.Primitive = Primitive;
	Parms.SkillInfo = std::move(SkillInfo);

	UObject::ProcessEvent(Func, &Parms);

	SkillInfo = std::move(Parms.SkillInfo);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHitPart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   No                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHitPart(class UPrimitiveComponent* Primitive, int32 No, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHitPart");

	Params::RSBattleEnemy_C_IsHitPart Parms{};

	Parms.Primitive = Primitive;
	Parms.No = No;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.WeakMaterialHitDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::WeakMaterialHitDamage(TArray<struct FHCHitResult>& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "WeakMaterialHitDamage");

	Params::RSBattleEnemy_C_WeakMaterialHitDamage Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNotTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsNotTarget(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNotTarget");

	Params::RSBattleEnemy_C_IsNotTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEvent(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEvent");

	Params::RSBattleEnemy_C_IsEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DeadCleanup
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DeadCleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DeadCleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateMoveTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateMoveTimer(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateMoveTimer");

	Params::RSBattleEnemy_C_UpdateMoveTimer Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsMoveCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsMoveCheck(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsMoveCheck");

	Params::RSBattleEnemy_C_IsMoveCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetMoveRun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetMoveRun(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetMoveRun");

	Params::RSBattleEnemy_C_SetMoveRun Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetMoveWalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetMoveWalk(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetMoveWalk");

	Params::RSBattleEnemy_C_SetMoveWalk Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetAiTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Enum                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AiTimer                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetAiTimer(uint8 Enum, float* AiTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetAiTimer");

	Params::RSBattleEnemy_C_GetAiTimer Parms{};

	Parms.Enum = Enum;

	UObject::ProcessEvent(Func, &Parms);

	if (AiTimer != nullptr)
		*AiTimer = Parms.AiTimer;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAiTimer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Enum                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetAiTimer(uint8 Enum, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAiTimer");

	Params::RSBattleEnemy_C_SetAiTimer Parms{};

	Parms.Enum = Enum;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateWeakUIDisplay
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateWeakUIDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateWeakUIDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.WeakDamageHitCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::WeakDamageHitCheck(TArray<struct FHCHitResult>& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "WeakDamageHitCheck");

	Params::RSBattleEnemy_C_WeakDamageHitCheck Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);
}


// Function RSBattleEnemy.RSBattleEnemy_C.WeakObjectRecommend
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::WeakObjectRecommend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "WeakObjectRecommend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.AddWeakObjectRecommend
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWeakObjectRecommendEnemy        Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::AddWeakObjectRecommend(const struct FWeakObjectRecommendEnemy& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "AddWeakObjectRecommend");

	Params::RSBattleEnemy_C_AddWeakObjectRecommend Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.RemoveWeakObjectRecommend
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWeakObjectRecommendEnemy        Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::RemoveWeakObjectRecommend(const struct FWeakObjectRecommendEnemy& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RemoveWeakObjectRecommend");

	Params::RSBattleEnemy_C_RemoveWeakObjectRecommend Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DedugDrawWeakObjectRecommend
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DedugDrawWeakObjectRecommend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DedugDrawWeakObjectRecommend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEventVisible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetEventVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEventVisible");

	Params::RSBattleEnemy_C_SetEventVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBrainCrashEffectLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ARSBattleEnemy_C::GetBrainCrashEffectLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBrainCrashEffectLocation");

	Params::RSBattleEnemy_C_GetBrainCrashEffectLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.WeakObjectUIIconUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Draw                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::WeakObjectUIIconUpdate(int32 Param_Index, bool Draw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "WeakObjectUIIconUpdate");

	Params::RSBattleEnemy_C_WeakObjectUIIconUpdate Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Draw = Draw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcTick
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::CalcTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetMoveTo
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetMoveTo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetMoveTo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAttackWeakHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCHitResult                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ARSBattleEnemy_C::SetAttackWeakHit(class ARSBattlePlayer_C* Player, const struct FHCHitResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAttackWeakHit");

	Params::RSBattleEnemy_C_SetAttackWeakHit Parms{};

	Parms.Player = Player;
	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetHomeLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetHomeLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetHomeLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetTargetHate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetTargetHate(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetTargetHate");

	Params::RSBattleEnemy_C_SetTargetHate Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetHate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Target                                                 (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetTargetHate(TArray<class AActor*>* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetHate");

	Params::RSBattleEnemy_C_GetTargetHate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = std::move(Parms.Target);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetTargetHate
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetTargetHate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetTargetHate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetLockHate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetTargetLockHate(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetLockHate");

	Params::RSBattleEnemy_C_GetTargetLockHate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SubEnemyListManager
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SubEnemyListManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SubEnemyListManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.WeakUiDamageHit
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::WeakUiDamageHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "WeakUiDamageHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetMoveCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetMoveCheck(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetMoveCheck");

	Params::RSBattleEnemy_C_SetMoveCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsMoveCheckDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsMoveCheckDistance(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsMoveCheckDistance");

	Params::RSBattleEnemy_C_IsMoveCheckDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.isSuperArmor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuperArmor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsSuperArmor(bool* bSuperArmor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "isSuperArmor");

	Params::RSBattleEnemy_C_IsSuperArmor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSuperArmor != nullptr)
		*bSuperArmor = Parms.bSuperArmor;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDamageSuperArmor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsDamageSuperArmor(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDamageSuperArmor");

	Params::RSBattleEnemy_C_IsDamageSuperArmor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetBaseMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Param_BaseMontage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetBaseMontage(class UAnimMontage* Param_BaseMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetBaseMontage");

	Params::RSBattleEnemy_C_SetBaseMontage Parms{};

	Parms.Param_BaseMontage = Param_BaseMontage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBaseMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     Param_BaseMontage                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBaseMontage(class UAnimMontage** Param_BaseMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBaseMontage");

	Params::RSBattleEnemy_C_GetBaseMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_BaseMontage != nullptr)
		*Param_BaseMontage = Parms.Param_BaseMontage;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsMotionEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsMotionEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsMotionEnd");

	Params::RSBattleEnemy_C_IsMotionEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugWeakHitArea
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DebugWeakHitArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugWeakHitArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetWeakComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetWeakComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetWeakComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsIgnoreHitCheck
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              PPrimitive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsIgnoreHitCheck(class UPrimitiveComponent* PPrimitive, const struct FVector& HitPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsIgnoreHitCheck");

	Params::RSBattleEnemy_C_IsIgnoreHitCheck Parms{};

	Parms.PPrimitive = PPrimitive;
	Parms.HitPosition = std::move(HitPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetHitObjectType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<EObjectTypeQuery>                ObjectType                                             (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetHitObjectType(TArray<EObjectTypeQuery>* ObjectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetHitObjectType");

	Params::RSBattleEnemy_C_GetHitObjectType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ObjectType != nullptr)
		*ObjectType = std::move(Parms.ObjectType);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcFinalDamageByDefence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARSBattleEnemy_C::CalcFinalDamageByDefence(float Damage, class AActor* AttackActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcFinalDamageByDefence");

	Params::RSBattleEnemy_C_CalcFinalDamageByDefence Parms{};

	Parms.Damage = Damage;
	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDirectly                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnStealth(bool IsDirectly, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStealth");

	Params::RSBattleEnemy_C_OnStealth Parms{};

	Parms.IsDirectly = IsDirectly;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateStealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateStealth(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateStealth");

	Params::RSBattleEnemy_C_UpdateStealth Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsStealthEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsStealthEnable(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsStealthEnable");

	Params::RSBattleEnemy_C_IsStealthEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OffStealth
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OffStealth(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OffStealth");

	Params::RSBattleEnemy_C_OffStealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ChangeStealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StealthSee                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ChangeStealth(bool StealthSee, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ChangeStealth");

	Params::RSBattleEnemy_C_ChangeStealth Parms{};

	Parms.StealthSee = StealthSee;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsRandomLocationCheckGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCheck                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsRandomLocationCheckGround(bool* IsCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsRandomLocationCheckGround");

	Params::RSBattleEnemy_C_IsRandomLocationCheckGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsCheck != nullptr)
		*IsCheck = Parms.IsCheck;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetRandomLocationCheckGround
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCheck                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetRandomLocationCheckGround(bool IsCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetRandomLocationCheckGround");

	Params::RSBattleEnemy_C_SetRandomLocationCheckGround Parms{};

	Parms.IsCheck = IsCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetRandomLocationCheckGroundHeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Top                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Bottom                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetRandomLocationCheckGroundHeight(float Top, float Bottom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetRandomLocationCheckGroundHeight");

	Params::RSBattleEnemy_C_SetRandomLocationCheckGroundHeight Parms{};

	Parms.Top = Top;
	Parms.Bottom = Bottom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEnemyAssetLoad
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnEnemyAssetLoad(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEnemyAssetLoad");

	Params::RSBattleEnemy_C_OnEnemyAssetLoad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.LandCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLand                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::LandCheck(bool* IsLand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "LandCheck");

	Params::RSBattleEnemy_C_LandCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsLand != nullptr)
		*IsLand = Parms.IsLand;
}


// Function RSBattleEnemy.RSBattleEnemy_C.HitDamageMaterialArmor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::HitDamageMaterialArmor(TArray<struct FHCHitResult>& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "HitDamageMaterialArmor");

	Params::RSBattleEnemy_C_HitDamageMaterialArmor Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);
}


// Function RSBattleEnemy.RSBattleEnemy_C.Update Hit Damage Material Armor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::Update_Hit_Damage_Material_Armor(float Sec, float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Update Hit Damage Material Armor");

	Params::RSBattleEnemy_C_Update_Hit_Damage_Material_Armor Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SeeThroughWeakSphereUseOnOff
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SeeThroughWeakSphereUseOnOff(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SeeThroughWeakSphereUseOnOff");

	Params::RSBattleEnemy_C_SeeThroughWeakSphereUseOnOff Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.WeakHitStop
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    IsMaterialChange                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::WeakHitStop(TArray<struct FHCHitResult>& HitResult, bool IsMaterialChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "WeakHitStop");

	Params::RSBattleEnemy_C_WeakHitStop Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.IsMaterialChange = IsMaterialChange;

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCTTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   EnemyEnum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastTimer                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetCTTimer(uint8 EnemyEnum, float* LastTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCTTimer");

	Params::RSBattleEnemy_C_GetCTTimer Parms{};

	Parms.EnemyEnum = EnemyEnum;

	UObject::ProcessEvent(Func, &Parms);

	if (LastTimer != nullptr)
		*LastTimer = Parms.LastTimer;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetCTTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   EnemyEnum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetCTTimer(uint8 EnemyEnum, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetCTTimer");

	Params::RSBattleEnemy_C_SetCTTimer Parms{};

	Parms.EnemyEnum = EnemyEnum;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetActionTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   EnemyEnum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetActionTime(uint8 EnemyEnum, float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetActionTime");

	Params::RSBattleEnemy_C_GetActionTime Parms{};

	Parms.EnemyEnum = EnemyEnum;

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemySoundEnum
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemySound                         SoundEnum                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetEnemySoundEnum(Enum_EnemySound* SoundEnum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemySoundEnum");

	Params::RSBattleEnemy_C_GetEnemySoundEnum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SoundEnum != nullptr)
		*SoundEnum = Parms.SoundEnum;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Stealth End
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Stealth_End(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Stealth End");

	Params::RSBattleEnemy_C_Stealth_End Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CounterAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCSkillAttackType                      AttackType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsHitWeek                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CounterAttack(EHCSkillAttackType AttackType, class AActor* Attacker, bool Param_IsHitWeek, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CounterAttack");

	Params::RSBattleEnemy_C_CounterAttack Parms{};

	Parms.AttackType = AttackType;
	Parms.Attacker = Attacker;
	Parms.Param_IsHitWeek = Param_IsHitWeek;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetRandomRangeLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SrcLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RangeMin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RangeMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckWall                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          NewLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetRandomRangeLocation(const struct FVector& SrcLocation, const struct FVector& TargetLocation, float RangeMin, float RangeMax, bool CheckWall, struct FVector* NewLocation, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetRandomRangeLocation");

	Params::RSBattleEnemy_C_GetRandomRangeLocation Parms{};

	Parms.SrcLocation = std::move(SrcLocation);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.RangeMin = RangeMin;
	Parms.RangeMax = RangeMax;
	Parms.CheckWall = CheckWall;

	UObject::ProcessEvent(Func, &Parms);

	if (NewLocation != nullptr)
		*NewLocation = std::move(Parms.NewLocation);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetInvisibleHPGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInvisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetInvisibleHPGauge(bool bInvisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetInvisibleHPGauge");

	Params::RSBattleEnemy_C_SetInvisibleHPGauge Parms{};

	Parms.bInvisible = bInvisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DeadDropItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DeadDropItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DeadDropItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DeadAvatar
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DeadAvatar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DeadAvatar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetStealthTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetStealthTargetActor(class AActor** TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetStealthTargetActor");

	Params::RSBattleEnemy_C_GetStealthTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSeeThroughBreak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StealthSeeBreak                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSeeBreak                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsSeeThroughBreak(bool StealthSeeBreak, bool* IsSeeBreak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSeeThroughBreak");

	Params::RSBattleEnemy_C_IsSeeThroughBreak Parms{};

	Parms.StealthSeeBreak = StealthSeeBreak;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSeeBreak != nullptr)
		*IsSeeBreak = Parms.IsSeeBreak;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DeadStart
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DeadStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DeadStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnableDamageCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CollisionName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ECollisionEnabled                       CollisionEnable                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetEnableDamageCollision(const class FString& CollisionName, ECollisionEnabled CollisionEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnableDamageCollision");

	Params::RSBattleEnemy_C_SetEnableDamageCollision Parms{};

	Parms.CollisionName = std::move(CollisionName);
	Parms.CollisionEnable = CollisionEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetCollisionHitWall
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetCollisionHitWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetCollisionHitWall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.Dead Effect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAvatar                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Dead_Effect(bool IsAvatar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Dead Effect");

	Params::RSBattleEnemy_C_Dead_Effect Parms{};

	Parms.IsAvatar = IsAvatar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDisplayAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugDisplayAction(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDisplayAction");

	Params::RSBattleEnemy_C_DebugDisplayAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDisplayFront
// (Private, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DebugDisplayFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDisplayFront");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnableDamageCollisions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   CollisionNames                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// ECollisionEnabled                       CollisionEnable                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetEnableDamageCollisions(TArray<class FString>& CollisionNames, ECollisionEnabled CollisionEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnableDamageCollisions");

	Params::RSBattleEnemy_C_SetEnableDamageCollisions Parms{};

	Parms.CollisionNames = std::move(CollisionNames);
	Parms.CollisionEnable = CollisionEnable;

	UObject::ProcessEvent(Func, &Parms);

	CollisionNames = std::move(Parms.CollisionNames);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetTargetHateEventCore
// (Private, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetTargetHateEventCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetTargetHateEventCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.InitSpawn
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::InitSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InitSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetSpawnCollisionState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetSpawnCollisionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetSpawnCollisionState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetSpawnVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetSpawnVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetSpawnVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetBrainCrashState
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetBrainCrashState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetBrainCrashState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateDelayDead
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateDelayDead(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateDelayDead");

	Params::RSBattleEnemy_C_UpdateDelayDead Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDelayDead
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetDelayDead(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDelayDead");

	Params::RSBattleEnemy_C_SetDelayDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.InitializeActionTable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::InitializeActionTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InitializeActionTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSkipLowPriorityTick
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSimple                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Skip                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsSkipLowPriorityTick(float DeltaSeconds, bool IsSimple, bool* Skip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSkipLowPriorityTick");

	Params::RSBattleEnemy_C_IsSkipLowPriorityTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.IsSimple = IsSimple;

	UObject::ProcessEvent(Func, &Parms);

	if (Skip != nullptr)
		*Skip = Parms.Skip;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDisplayAiData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DebugDisplayAiData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDisplayAiData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugSetAiData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AiEnum                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Probability                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::DebugSetAiData(int32 AiEnum, float Probability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugSetAiData");

	Params::RSBattleEnemy_C_DebugSetAiData Parms{};

	Parms.AiEnum = AiEnum;
	Parms.Probability = Probability;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugResetAiData
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DebugResetAiData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugResetAiData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOnFlame
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectOnFlame(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOnFlame");

	Params::RSBattleEnemy_C_BadStateEffectOnFlame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOffFlame
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectOffFlame(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOffFlame");

	Params::RSBattleEnemy_C_BadStateEffectOffFlame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Kick Bad State Effect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBadStateParticleData>    ParticleParams                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    bAttachLocationOnly                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class URSParticleSystemComponentBase*>NewParam                                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::Kick_Bad_State_Effect(TArray<struct FBadStateParticleData>& ParticleParams, bool bAttachLocationOnly, TArray<class URSParticleSystemComponentBase*>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Kick Bad State Effect");

	Params::RSBattleEnemy_C_Kick_Bad_State_Effect Parms{};

	Parms.ParticleParams = std::move(ParticleParams);
	Parms.bAttachLocationOnly = bAttachLocationOnly;

	UObject::ProcessEvent(Func, &Parms);

	ParticleParams = std::move(Parms.ParticleParams);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StopBadStateEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class URSParticleSystemComponentBase*>ParticleHandles                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::StopBadStateEffect(TArray<class URSParticleSystemComponentBase*>& ParticleHandles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StopBadStateEffect");

	Params::RSBattleEnemy_C_StopBadStateEffect Parms{};

	Parms.ParticleHandles = std::move(ParticleHandles);

	UObject::ProcessEvent(Func, &Parms);

	ParticleHandles = std::move(Parms.ParticleHandles);
}


// Function RSBattleEnemy.RSBattleEnemy_C.KickBadStateEffectOne
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBadStateParticleData            ParticleParam                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    bAttachLocationOnly                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class URSParticleSystemComponentBase*>OutHandles                                             (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::KickBadStateEffectOne(struct FBadStateParticleData& ParticleParam, bool bAttachLocationOnly, TArray<class URSParticleSystemComponentBase*>* OutHandles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "KickBadStateEffectOne");

	Params::RSBattleEnemy_C_KickBadStateEffectOne Parms{};

	Parms.ParticleParam = std::move(ParticleParam);
	Parms.bAttachLocationOnly = bAttachLocationOnly;

	UObject::ProcessEvent(Func, &Parms);

	ParticleParam = std::move(Parms.ParticleParam);

	if (OutHandles != nullptr)
		*OutHandles = std::move(Parms.OutHandles);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOnElec
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectOnElec(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOnElec");

	Params::RSBattleEnemy_C_BadStateEffectOnElec Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOffElec
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectOffElec(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOffElec");

	Params::RSBattleEnemy_C_BadStateEffectOffElec Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOnOil
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectOnOil(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOnOil");

	Params::RSBattleEnemy_C_BadStateEffectOnOil Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOffOil
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNoMaterial                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectOffOil(bool bNoMaterial, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOffOil");

	Params::RSBattleEnemy_C_BadStateEffectOffOil Parms{};

	Parms.bNoMaterial = bNoMaterial;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOnFlooded
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectOnFlooded(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOnFlooded");

	Params::RSBattleEnemy_C_BadStateEffectOnFlooded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectOffFlooded
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNoMaterial                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectOffFlooded(bool bNoMaterial, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectOffFlooded");

	Params::RSBattleEnemy_C_BadStateEffectOffFlooded Parms{};

	Parms.bNoMaterial = bNoMaterial;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RestoreHateData
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::RestoreHateData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RestoreHateData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetHateData
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetHateData(class ARSCharacterBase* TargetActor, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetHateData");

	Params::RSBattleEnemy_C_SetHateData Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsContinuityDamageMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyAliveAnimKind                      AliveAnimKind                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsContinuityDamageMotion(EnemyAliveAnimKind AliveAnimKind, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsContinuityDamageMotion");

	Params::RSBattleEnemy_C_IsContinuityDamageMotion Parms{};

	Parms.AliveAnimKind = AliveAnimKind;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReplaceHitResult
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FHCHitResult                     ReturnHitResult                                        (Parm, OutParm, ContainsInstancedReference)

void ARSBattleEnemy_C::ReplaceHitResult(const struct FHCHitResult& HitResult, struct FHCHitResult* ReturnHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReplaceHitResult");

	Params::RSBattleEnemy_C_ReplaceHitResult Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnHitResult != nullptr)
		*ReturnHitResult = std::move(Parms.ReturnHitResult);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetCanDropData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_CanDropData                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetCanDropData(bool Param_CanDropData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetCanDropData");

	Params::RSBattleEnemy_C_SetCanDropData Parms{};

	Parms.Param_CanDropData = Param_CanDropData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCanDropData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetCanDropData(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCanDropData");

	Params::RSBattleEnemy_C_GetCanDropData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetupAnimController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetupAnimController(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetupAnimController");

	Params::RSBattleEnemy_C_SetupAnimController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetStealth
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetStealth(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetStealth");

	Params::RSBattleEnemy_C_SetStealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcAccumulationByDefence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RefWince                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefKnockback                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefLaunch                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlame                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefElectric                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlooded                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefOil                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefConfusion                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCrashScale                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCrashCapCheckRate                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CalcAccumulationByDefence(float& RefWince, float& RefKnockback, float& RefDown, float& RefLaunch, float& RefFlame, float& RefElectric, float& RefFlooded, float& RefOil, float& RefConfusion, float& RefCrashScale, float& RefCrashCapCheckRate, class AActor* AttackActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcAccumulationByDefence");

	Params::RSBattleEnemy_C_CalcAccumulationByDefence Parms{};

	Parms.RefWince = RefWince;
	Parms.RefKnockback = RefKnockback;
	Parms.RefDown = RefDown;
	Parms.RefLaunch = RefLaunch;
	Parms.RefFlame = RefFlame;
	Parms.RefElectric = RefElectric;
	Parms.RefFlooded = RefFlooded;
	Parms.RefOil = RefOil;
	Parms.RefConfusion = RefConfusion;
	Parms.RefCrashScale = RefCrashScale;
	Parms.RefCrashCapCheckRate = RefCrashCapCheckRate;
	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);

	RefWince = Parms.RefWince;
	RefKnockback = Parms.RefKnockback;
	RefDown = Parms.RefDown;
	RefLaunch = Parms.RefLaunch;
	RefFlame = Parms.RefFlame;
	RefElectric = Parms.RefElectric;
	RefFlooded = Parms.RefFlooded;
	RefOil = Parms.RefOil;
	RefConfusion = Parms.RefConfusion;
	RefCrashScale = Parms.RefCrashScale;
	RefCrashCapCheckRate = Parms.RefCrashCapCheckRate;

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateSpawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateSpawn(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateSpawn");

	Params::RSBattleEnemy_C_UpdateSpawn Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SpawnWaitUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SpawnWaitUpdate(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SpawnWaitUpdate");

	Params::RSBattleEnemy_C_SpawnWaitUpdate Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SpawnStartUpdate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SpawnStartUpdate(float DeltaSec, bool* bEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SpawnStartUpdate");

	Params::RSBattleEnemy_C_SpawnStartUpdate Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReceivedNotifyAnimEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Received                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ReceivedNotifyAnimEnd(bool* Received)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReceivedNotifyAnimEnd");

	Params::RSBattleEnemy_C_ReceivedNotifyAnimEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Received != nullptr)
		*Received = Parms.Received;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDelayDeath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetDelayDeath(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDelayDeath");

	Params::RSBattleEnemy_C_SetDelayDeath Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateHitStop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateHitStop(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateHitStop");

	Params::RSBattleEnemy_C_UpdateHitStop Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.LoadSound
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::LoadSound(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "LoadSound");

	Params::RSBattleEnemy_C_LoadSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UnloadSound
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UnloadSound(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UnloadSound");

	Params::RSBattleEnemy_C_UnloadSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDestroy
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnDestroy(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDestroy");

	Params::RSBattleEnemy_C_OnDestroy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEnemyAssetUnload
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnEnemyAssetUnload(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEnemyAssetUnload");

	Params::RSBattleEnemy_C_OnEnemyAssetUnload Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateReturn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateReturn(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateReturn");

	Params::RSBattleEnemy_C_UpdateReturn Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ResetAction(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetAction");

	Params::RSBattleEnemy_C_ResetAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.LoadSequence
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::LoadSequence(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "LoadSequence");

	Params::RSBattleEnemy_C_LoadSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UnloadSequence
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UnloadSequence(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UnloadSequence");

	Params::RSBattleEnemy_C_UnloadSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartFinishMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStart                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartFinishMove(bool* IsStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartFinishMove");

	Params::RSBattleEnemy_C_StartFinishMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsStart != nullptr)
		*IsStart = Parms.IsStart;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckDeadHitStop
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::CheckDeadHitStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckDeadHitStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateDelayDeath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateDelayDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateDelayDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartCrashDamageMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StartCrashDamageMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartCrashDamageMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateCrashDamageMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateCrashDamageMaterial(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateCrashDamageMaterial");

	Params::RSBattleEnemy_C_UpdateCrashDamageMaterial Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHitCrashDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               SkillInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHitCrashDamage(class UPrimitiveComponent* Primitive, struct FHCSkillCommonInfo& SkillInfo, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHitCrashDamage");

	Params::RSBattleEnemy_C_IsHitCrashDamage Parms{};

	Parms.Primitive = Primitive;
	Parms.SkillInfo = std::move(SkillInfo);

	UObject::ProcessEvent(Func, &Parms);

	SkillInfo = std::move(Parms.SkillInfo);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUniqueDownCondition
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PsychicObjectCombo                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDown                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsUniqueDownCondition(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, bool PsychicObjectCombo, const struct FHCSkillCommonInfo& Skill, class AActor* Attacker, bool* bDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUniqueDownCondition");

	Params::RSBattleEnemy_C_IsUniqueDownCondition Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.PsychicObjectCombo = PsychicObjectCombo;
	Parms.Skill = std::move(Skill);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (bDown != nullptr)
		*bDown = Parms.bDown;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetLockOnTargetInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetLockOnTargetInterface(class AActor** TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetLockOnTargetInterface");

	Params::RSBattleEnemy_C_GetLockOnTargetInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStartDamageDown
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnStartDamageDown(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, const struct FHCSkillCommonInfo& Skill, class AActor* Attacker, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStartDamageDown");

	Params::RSBattleEnemy_C_OnStartDamageDown Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.Skill = std::move(Skill);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStartDamageSmall
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnStartDamageSmall(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, const struct FHCSkillCommonInfo& Skill, class AActor* Attacker, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStartDamageSmall");

	Params::RSBattleEnemy_C_OnStartDamageSmall Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.Skill = std::move(Skill);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStartDamageLarge
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnStartDamageLarge(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, const struct FHCSkillCommonInfo& Skill, class AActor* Attacker, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStartDamageLarge");

	Params::RSBattleEnemy_C_OnStartDamageLarge Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.Skill = std::move(Skill);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetAiUniqueCondition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   ConditionNo                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetAiUniqueCondition(uint8 ConditionNo, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetAiUniqueCondition");

	Params::RSBattleEnemy_C_GetAiUniqueCondition Parms{};

	Parms.ConditionNo = ConditionNo;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateOnHateAdd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCBadState                             BadState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::BadStateOnHateAdd(EHCBadState BadState, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateOnHateAdd");

	Params::RSBattleEnemy_C_BadStateOnHateAdd Parms{};

	Parms.BadState = BadState;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDisplayHateData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DebugDisplayHateData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDisplayHateData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.RequestLaunchMotion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RequestLaunchMotion(const struct FHCSkillCommonInfo& Skill, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RequestLaunchMotion");

	Params::RSBattleEnemy_C_RequestLaunchMotion Parms{};

	Parms.Skill = std::move(Skill);

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckReactionHitStop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerHitStopType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCHitStopCauseType                     CauseType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnoreTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void ARSBattleEnemy_C::CheckReactionHitStop(class AActor* Attacker, EPlayerHitStopType Type, EHCHitStopCauseType CauseType, bool bIgnoreTarget, const struct FHCSkillCommonInfo& Skill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckReactionHitStop");

	Params::RSBattleEnemy_C_CheckReactionHitStop Parms{};

	Parms.Attacker = Attacker;
	Parms.Type = Type;
	Parms.CauseType = CauseType;
	Parms.bIgnoreTarget = bIgnoreTarget;
	Parms.Skill = std::move(Skill);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.RequestDownMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PsychicObjectCombo                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Obj                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RequestDownMotion(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, bool PsychicObjectCombo, const struct FHCSkillCommonInfo& Skill, class AActor* Actor, class AActor* Obj, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RequestDownMotion");

	Params::RSBattleEnemy_C_RequestDownMotion Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.PsychicObjectCombo = PsychicObjectCombo;
	Parms.Skill = std::move(Skill);
	Parms.Actor = Actor;
	Parms.Obj = Obj;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUniqueKnockBackCondition
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PsychicObjectCombo                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bKnockBack                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsUniqueKnockBackCondition(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, bool PsychicObjectCombo, const struct FHCSkillCommonInfo& Skill, class AActor* Attacker, bool* bKnockBack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUniqueKnockBackCondition");

	Params::RSBattleEnemy_C_IsUniqueKnockBackCondition Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.PsychicObjectCombo = PsychicObjectCombo;
	Parms.Skill = std::move(Skill);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (bKnockBack != nullptr)
		*bKnockBack = Parms.bKnockBack;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RequestReactionLMotion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PsychicObjectCombo                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RequestReactionLMotion(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, bool PsychicObjectCombo, const struct FHCSkillCommonInfo& Skill, class AActor* Actor, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RequestReactionLMotion");

	Params::RSBattleEnemy_C_RequestReactionLMotion Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.PsychicObjectCombo = PsychicObjectCombo;
	Parms.Skill = std::move(Skill);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RequestBlowMotion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PsychicObjectCombo                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RequestBlowMotion(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, bool PsychicObjectCombo, const struct FHCSkillCommonInfo& Skill, class AActor* Actor, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RequestBlowMotion");

	Params::RSBattleEnemy_C_RequestBlowMotion Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.PsychicObjectCombo = PsychicObjectCombo;
	Parms.Skill = std::move(Skill);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ForceDownMotion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCHitStopCauseType                     HitStopCauseType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::ForceDownMotion(class AActor* Attacker, EHCHitStopCauseType HitStopCauseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ForceDownMotion");

	Params::RSBattleEnemy_C_ForceDownMotion Parms{};

	Parms.Attacker = Attacker;
	Parms.HitStopCauseType = HitStopCauseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BeginAvatar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAvatar                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BeginAvatar(bool IsAvatar, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BeginAvatar");

	Params::RSBattleEnemy_C_BeginAvatar Parms{};

	Parms.IsAvatar = IsAvatar;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RequestDamageShake
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RequestDamageShake(bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RequestDamageShake");

	Params::RSBattleEnemy_C_RequestDamageShake Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateBossHpDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateBossHpDisplay(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateBossHpDisplay");

	Params::RSBattleEnemy_C_UpdateBossHpDisplay Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CreateEnemyWeapon
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CreateEnemyWeapon(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CreateEnemyWeapon");

	Params::RSBattleEnemy_C_CreateEnemyWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnArmorBreak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnArmorBreak(const struct FHCHitResult& HitResult, bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnArmorBreak");

	Params::RSBattleEnemy_C_OnArmorBreak Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartReactionLFlash
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StartReactionLFlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartReactionLFlash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SelectShake
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShakeLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ReturnClass                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnScale                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SelectShake(class UClass* ShakeClass, float Scale, const struct FVector& ShakeLocation, class UClass** ReturnClass, float* ReturnScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SelectShake");

	Params::RSBattleEnemy_C_SelectShake Parms{};

	Parms.ShakeClass = ShakeClass;
	Parms.Scale = Scale;
	Parms.ShakeLocation = std::move(ShakeLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnClass != nullptr)
		*ReturnClass = Parms.ReturnClass;

	if (ReturnScale != nullptr)
		*ReturnScale = Parms.ReturnScale;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CreateBrainCore
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::CreateBrainCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CreateBrainCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartCrashChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               SkillInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bStart                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartCrashChance(const struct FHCSkillCommonInfo& SkillInfo, bool* bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartCrashChance");

	Params::RSBattleEnemy_C_StartCrashChance Parms{};

	Parms.SkillInfo = std::move(SkillInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (bStart != nullptr)
		*bStart = Parms.bStart;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateOnMaterial
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCSkillAttribute                       Attribute                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateOnMaterial(EHCSkillAttribute Attribute, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateOnMaterial");

	Params::RSBattleEnemy_C_BadStateOnMaterial Parms{};

	Parms.Attribute = Attribute;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateOffMaterial
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCSkillAttribute                       Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateOffMaterial(EHCSkillAttribute Attr, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateOffMaterial");

	Params::RSBattleEnemy_C_BadStateOffMaterial Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RequestPressDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Obj                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RequestPressDown(const struct FHCSkillCommonInfo& Skill, class AActor* Attacker, class AActor* Obj, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RequestPressDown");

	Params::RSBattleEnemy_C_RequestPressDown Parms{};

	Parms.Skill = std::move(Skill);
	Parms.Attacker = Attacker;
	Parms.Obj = Obj;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdatePressDown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdatePressDown(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdatePressDown");

	Params::RSBattleEnemy_C_UpdatePressDown Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.Request Press Kill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Request_Press_Kill(const struct FHCSkillCommonInfo& Skill, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Request Press Kill");

	Params::RSBattleEnemy_C_Request_Press_Kill Parms{};

	Parms.Skill = std::move(Skill);

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckCounterAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void ARSBattleEnemy_C::CheckCounterAttack(const struct FHCSkillCommonInfo& Skill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckCounterAttack");

	Params::RSBattleEnemy_C_CheckCounterAttack Parms{};

	Parms.Skill = std::move(Skill);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetCounterAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetCounterAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetCounterAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckWinceCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::CheckWinceCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckWinceCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCounterSuperArmor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    SuperArmor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsCounterSuperArmor(bool* SuperArmor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCounterSuperArmor");

	Params::RSBattleEnemy_C_IsCounterSuperArmor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SuperArmor != nullptr)
		*SuperArmor = Parms.SuperArmor;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSetWinceCounter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsSetWinceCounter(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSetWinceCounter");

	Params::RSBattleEnemy_C_IsSetWinceCounter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUniqueReactionSmallCondition
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDir                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PsychicObjectCombo                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bReactionSmall                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsUniqueReactionSmallCondition(const struct FRotator& Rot, const struct FVector& HitPosition, const struct FVector& HitDir, class UPrimitiveComponent* Primitive, bool PsychicObjectCombo, const struct FHCSkillCommonInfo& Skill, class AActor* Attacker, bool* bReactionSmall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUniqueReactionSmallCondition");

	Params::RSBattleEnemy_C_IsUniqueReactionSmallCondition Parms{};

	Parms.Rot = std::move(Rot);
	Parms.HitPosition = std::move(HitPosition);
	Parms.HitDir = std::move(HitDir);
	Parms.Primitive = Primitive;
	Parms.PsychicObjectCombo = PsychicObjectCombo;
	Parms.Skill = std::move(Skill);
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (bReactionSmall != nullptr)
		*bReactionSmall = Parms.bReactionSmall;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetUniqueSeeWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetUniqueSeeWeak(bool On, bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetUniqueSeeWeak");

	Params::RSBattleEnemy_C_SetUniqueSeeWeak Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnableFitGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EnableFitGround(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnableFitGround");

	Params::RSBattleEnemy_C_EnableFitGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DisableFitGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DisableFitGround(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DisableFitGround");

	Params::RSBattleEnemy_C_DisableFitGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateFitGround
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateFitGround(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateFitGround");

	Params::RSBattleEnemy_C_UpdateFitGround Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDisplayMotionInfo
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugDisplayMotionInfo(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDisplayMotionInfo");

	Params::RSBattleEnemy_C_DebugDisplayMotionInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartWeakDamageMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StartWeakDamageMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartWeakDamageMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateWeakDamageMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateWeakDamageMaterial(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateWeakDamageMaterial");

	Params::RSBattleEnemy_C_UpdateWeakDamageMaterial Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetAvoidAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemyAvoidType                     AvoidEnum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   AvoidAction                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetAvoidAction(Enum_EnemyAvoidType AvoidEnum, uint8* AvoidAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetAvoidAction");

	Params::RSBattleEnemy_C_GetAvoidAction Parms{};

	Parms.AvoidEnum = AvoidEnum;

	UObject::ProcessEvent(Func, &Parms);

	if (AvoidAction != nullptr)
		*AvoidAction = Parms.AvoidAction;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcBrainCrashDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::CalcBrainCrashDamage(int32* Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcBrainCrashDamage");

	Params::RSBattleEnemy_C_CalcBrainCrashDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Damage != nullptr)
		*Damage = Parms.Damage;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckLastBossBrainCrash
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::CheckLastBossBrainCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckLastBossBrainCrash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.LimitCrashAccumulation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::LimitCrashAccumulation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "LimitCrashAccumulation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnableDiscoverIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnableDiscoverIcon(bool Enable, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnableDiscoverIcon");

	Params::RSBattleEnemy_C_SetEnableDiscoverIcon Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCheckCapsuleRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetCheckCapsuleRadius(float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCheckCapsuleRadius");

	Params::RSBattleEnemy_C_GetCheckCapsuleRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnableIK
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::EnableIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnableIK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DisableIK
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DisableIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DisableIK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ProcFellOutOfWorld
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ProcFellOutOfWorld(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ProcFellOutOfWorld");

	Params::RSBattleEnemy_C_ProcFellOutOfWorld Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateWeakAroundEffect
// (Protected, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateWeakAroundEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateWeakAroundEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.LaunchDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::LaunchDown(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "LaunchDown");

	Params::RSBattleEnemy_C_LaunchDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartLookAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartLookAt(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartLookAt");

	Params::RSBattleEnemy_C_StartLookAt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.FinishLookAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FinishRotZero                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::FinishLookAt(bool FinishRotZero, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "FinishLookAt");

	Params::RSBattleEnemy_C_FinishLookAt Parms{};

	Parms.FinishRotZero = FinishRotZero;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RequestAddDamageL
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RequestAddDamageL(const struct FHCSkillCommonInfo& Skill, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RequestAddDamageL");

	Params::RSBattleEnemy_C_RequestAddDamageL Parms{};

	Parms.Skill = std::move(Skill);

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetAddBlend
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetAddBlend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetAddBlend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateLookAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateLookAt(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateLookAt");

	Params::RSBattleEnemy_C_UpdateLookAt Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateBadStateMaterial
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateBadStateMaterial(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateBadStateMaterial");

	Params::RSBattleEnemy_C_UpdateBadStateMaterial Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainCrashAccessOff
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnBrainCrashAccessOff(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainCrashAccessOff");

	Params::RSBattleEnemy_C_OnBrainCrashAccessOff Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainCrashAccessOn
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnBrainCrashAccessOn(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainCrashAccessOn");

	Params::RSBattleEnemy_C_OnBrainCrashAccessOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CallFuncDamageDownStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CallFuncDamageDownStart(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CallFuncDamageDownStart");

	Params::RSBattleEnemy_C_CallFuncDamageDownStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetWeakNumber
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ARSBattleEnemy_C::GetWeakNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetWeakNumber");

	Params::RSBattleEnemy_C_GetWeakNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DoEventStart
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DoEventStart(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DoEventStart");

	Params::RSBattleEnemy_C_DoEventStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DoEventEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DoEventEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DoEventEnd");

	Params::RSBattleEnemy_C_DoEventEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DoStaticEventStart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DoStaticEventStart(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DoStaticEventStart");

	Params::RSBattleEnemy_C_DoStaticEventStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DoStaticEventEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DoStaticEventEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DoStaticEventEnd");

	Params::RSBattleEnemy_C_DoStaticEventEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DoDynamicEventStart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DoDynamicEventStart(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DoDynamicEventStart");

	Params::RSBattleEnemy_C_DoDynamicEventStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DoDynamicEventEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DoDynamicEventEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DoDynamicEventEnd");

	Params::RSBattleEnemy_C_DoDynamicEventEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcMoveScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MoveScale                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::CalcMoveScale(float CurrentTime, float MaxTime, float* MoveScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcMoveScale");

	Params::RSBattleEnemy_C_CalcMoveScale Parms{};

	Parms.CurrentTime = CurrentTime;
	Parms.MaxTime = MaxTime;

	UObject::ProcessEvent(Func, &Parms);

	if (MoveScale != nullptr)
		*MoveScale = Parms.MoveScale;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetAttacking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bAttacking                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetTargetAttacking(bool* bAttacking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetAttacking");

	Params::RSBattleEnemy_C_GetTargetAttacking Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAttacking != nullptr)
		*bAttacking = Parms.bAttacking;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SwitchLookAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SwitchLookAt(bool bEnable, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SwitchLookAt");

	Params::RSBattleEnemy_C_SwitchLookAt Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DestroyEnemyWeapon
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DestroyEnemyWeapon(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DestroyEnemyWeapon");

	Params::RSBattleEnemy_C_DestroyEnemyWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DestroyBrainCore
// (Protected, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DestroyBrainCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DestroyBrainCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDebugAiTableKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AiEnum                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// uint8                                   ReturnKey                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetDebugAiTableKey(int32 AiEnum, bool* bSuccess, uint8* ReturnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDebugAiTableKey");

	Params::RSBattleEnemy_C_GetDebugAiTableKey Parms{};

	Parms.AiEnum = AiEnum;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (ReturnKey != nullptr)
		*ReturnKey = Parms.ReturnKey;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDisplayUniqueConditionDescription
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugDisplayUniqueConditionDescription(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDisplayUniqueConditionDescription");

	Params::RSBattleEnemy_C_DebugDisplayUniqueConditionDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugAddIgnoreAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugAddIgnoreAction(uint8 Action, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugAddIgnoreAction");

	Params::RSBattleEnemy_C_DebugAddIgnoreAction Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugResetIgnoreAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugResetIgnoreAction(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugResetIgnoreAction");

	Params::RSBattleEnemy_C_DebugResetIgnoreAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugRemoveIgnoreAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugRemoveIgnoreAction(uint8 Action, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugRemoveIgnoreAction");

	Params::RSBattleEnemy_C_DebugRemoveIgnoreAction Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.PreTick
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::PreTick(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "PreTick");

	Params::RSBattleEnemy_C_PreTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.PostTick
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::PostTick(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "PostTick");

	Params::RSBattleEnemy_C_PostTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnableFitGroundTmp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EnableFitGroundTmp(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnableFitGroundTmp");

	Params::RSBattleEnemy_C_EnableFitGroundTmp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DisableFitGroundTmp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DisableFitGroundTmp(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DisableFitGroundTmp");

	Params::RSBattleEnemy_C_DisableFitGroundTmp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnArmorHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ARSBattleEnemy_C::OnArmorHit(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnArmorHit");

	Params::RSBattleEnemy_C_OnArmorHit Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStartHideArmor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnStartHideArmor(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStartHideArmor");

	Params::RSBattleEnemy_C_OnStartHideArmor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartDamageFloating
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartDamageFloating(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartDamageFloating");

	Params::RSBattleEnemy_C_StartDamageFloating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EndDamageFloating
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EndDamageFloating(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EndDamageFloating");

	Params::RSBattleEnemy_C_EndDamageFloating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DoBattleSequencerStart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSetEnemyEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDriveSequence                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DoBattleSequencerStart(bool bSetEnemyEvent, bool bDriveSequence, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DoBattleSequencerStart");

	Params::RSBattleEnemy_C_DoBattleSequencerStart Parms{};

	Parms.bSetEnemyEvent = bSetEnemyEvent;
	Parms.bDriveSequence = bDriveSequence;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DoBattleSequencerEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSetEnemyEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDriveSequence                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DoBattleSequencerEnd(bool bSetEnemyEvent, bool bDriveSequence, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DoBattleSequencerEnd");

	Params::RSBattleEnemy_C_DoBattleSequencerEnd Parms{};

	Parms.bSetEnemyEvent = bSetEnemyEvent;
	Parms.bDriveSequence = bDriveSequence;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.InitSaveBodyWeakValue
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::InitSaveBodyWeakValue(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InitSaveBodyWeakValue");

	Params::RSBattleEnemy_C_InitSaveBodyWeakValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetWeakEmissiveOff
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           WeakSlotName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetWeakEmissiveOff(const class FString& WeakSlotName, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetWeakEmissiveOff");

	Params::RSBattleEnemy_C_SetWeakEmissiveOff Parms{};

	Parms.WeakSlotName = std::move(WeakSlotName);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RestoreWeakEmissive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           WeakSlotName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RestoreWeakEmissive(const class FString& WeakSlotName, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RestoreWeakEmissive");

	Params::RSBattleEnemy_C_RestoreWeakEmissive Parms{};

	Parms.WeakSlotName = std::move(WeakSlotName);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUniqueDisableAvoid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsUniqueDisableAvoid(bool* bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUniqueDisableAvoid");

	Params::RSBattleEnemy_C_IsUniqueDisableAvoid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisable != nullptr)
		*bDisable = Parms.bDisable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCameraLookAtPos
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ARSBattleEnemy_C::GetCameraLookAtPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCameraLookAtPos");

	Params::RSBattleEnemy_C_GetCameraLookAtPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetIdleMove
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsIdle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetIdleMove(bool IsIdle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetIdleMove");

	Params::RSBattleEnemy_C_SetIdleMove Parms{};

	Parms.IsIdle = IsIdle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCurrentActionTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ActionTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetCurrentActionTime(float* ActionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCurrentActionTime");

	Params::RSBattleEnemy_C_GetCurrentActionTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActionTime != nullptr)
		*ActionTime = Parms.ActionTime;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartChangeTimeDilation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAddDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartChangeTimeDilation(bool bAddDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartChangeTimeDilation");

	Params::RSBattleEnemy_C_StartChangeTimeDilation Parms{};

	Parms.bAddDamage = bAddDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateUniqueObjState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateUniqueObjState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateUniqueObjState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyLandingCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyLandingCheck(bool* bHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyLandingCheck");

	Params::RSBattleEnemy_C_IsEnemyLandingCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartChangePlayRate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAddDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartChangePlayRate(bool bAddDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartChangePlayRate");

	Params::RSBattleEnemy_C_StartChangePlayRate Parms{};

	Parms.bAddDamage = bAddDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetBrainCrashReceive
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetBrainCrashReceive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetBrainCrashReceive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetHiddenCharacterAttachment
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetHiddenCharacterAttachment(bool NewHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetHiddenCharacterAttachment");

	Params::RSBattleEnemy_C_SetHiddenCharacterAttachment Parms{};

	Parms.NewHidden = NewHidden;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDrawSearchRange
// (Protected, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::DebugDrawSearchRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDrawSearchRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateAdjustZCharaCapsule
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateAdjustZCharaCapsule(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateAdjustZCharaCapsule");

	Params::RSBattleEnemy_C_UpdateAdjustZCharaCapsule Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAdjustCharaCapsule
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetAdjustCharaCapsule(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAdjustCharaCapsule");

	Params::RSBattleEnemy_C_SetAdjustCharaCapsule Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.KickCrashChanceLoopEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::KickCrashChanceLoopEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "KickCrashChanceLoopEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StopCrashChanceLoopEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StopCrashChanceLoopEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StopCrashChanceLoopEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateScouting
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateScouting(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateScouting");

	Params::RSBattleEnemy_C_UpdateScouting Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetActorAllTickEnabled
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetActorAllTickEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetActorAllTickEnabled");

	Params::RSBattleEnemy_C_SetActorAllTickEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateDetectIcon
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateDetectIcon(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateDetectIcon");

	Params::RSBattleEnemy_C_UpdateDetectIcon Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnableWeakCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EnableWeakCollision(bool bEnable, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnableWeakCollision");

	Params::RSBattleEnemy_C_EnableWeakCollision Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.AddCharaCollisionList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCapsuleComponent*                Capsule                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ListNo                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::AddCharaCollisionList(class UCapsuleComponent* Capsule, int32* ListNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "AddCharaCollisionList");

	Params::RSBattleEnemy_C_AddCharaCollisionList Parms{};

	Parms.Capsule = Capsule;

	UObject::ProcessEvent(Func, &Parms);

	if (ListNo != nullptr)
		*ListNo = Parms.ListNo;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateChangeCharaCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateChangeCharaCollision(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateChangeCharaCollision");

	Params::RSBattleEnemy_C_UpdateChangeCharaCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetCharaCollision
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetCharaCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetCharaCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugMainTick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::DebugMainTick(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugMainTick");

	Params::RSBattleEnemy_C_DebugMainTick Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnableInvincible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EnableInvincible(bool bEnable, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnableInvincible");

	Params::RSBattleEnemy_C_EnableInvincible Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUniqueEnableMove
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsUniqueEnableMove(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUniqueEnableMove");

	Params::RSBattleEnemy_C_IsUniqueEnableMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetSpeedScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Param_SpeedScale                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetSpeedScale(float* Param_SpeedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetSpeedScale");

	Params::RSBattleEnemy_C_GetSpeedScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SpeedScale != nullptr)
		*Param_SpeedScale = Parms.Param_SpeedScale;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNotDamageMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bNotDamageMotion                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsNotDamageMotion(bool* Param_bNotDamageMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNotDamageMotion");

	Params::RSBattleEnemy_C_IsNotDamageMotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bNotDamageMotion != nullptr)
		*Param_bNotDamageMotion = Parms.Param_bNotDamageMotion;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EventDeath
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WatchDeath                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EventDeath(bool WatchDeath, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EventDeath");

	Params::RSBattleEnemy_C_EventDeath Parms{};

	Parms.WatchDeath = WatchDeath;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SwitchMaterialStealth
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SwitchStealth                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SwitchMaterialStealth(bool SwitchStealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SwitchMaterialStealth");

	Params::RSBattleEnemy_C_SwitchMaterialStealth Parms{};

	Parms.SwitchStealth = SwitchStealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetMaterialStealthParameter
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetMaterialStealthParameter(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetMaterialStealthParameter");

	Params::RSBattleEnemy_C_SetMaterialStealthParameter Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetMaterialStealthParameterFromTime
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetMaterialStealthParameterFromTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetMaterialStealthParameterFromTime");

	Params::RSBattleEnemy_C_SetMaterialStealthParameterFromTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CameraAttentionStartDelete
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      ActorCurveIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bChangeFov                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TargetFov                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      FovCurveIn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CameraAttentionStartDelete(class UCurveFloat* ActorCurveIn, bool bChangeFov, float TargetFov, class UCurveFloat* FovCurveIn, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CameraAttentionStartDelete");

	Params::RSBattleEnemy_C_CameraAttentionStartDelete Parms{};

	Parms.ActorCurveIn = ActorCurveIn;
	Parms.bChangeFov = bChangeFov;
	Parms.TargetFov = TargetFov;
	Parms.FovCurveIn = FovCurveIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CameraAttentionEndDelete
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      FovCurveOut                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CameraAttentionEndDelete(class UCurveFloat* FovCurveOut, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CameraAttentionEndDelete");

	Params::RSBattleEnemy_C_CameraAttentionEndDelete Parms{};

	Parms.FovCurveOut = FovCurveOut;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Get Search Range
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Range                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::Get_Search_Range(float* Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Get Search Range");

	Params::RSBattleEnemy_C_Get_Search_Range Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Range != nullptr)
		*Range = Parms.Range;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetSearchAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetSearchAngle(float* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetSearchAngle");

	Params::RSBattleEnemy_C_GetSearchAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetSensingArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Area                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetSensingArea(float* Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetSensingArea");

	Params::RSBattleEnemy_C_GetSensingArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Area != nullptr)
		*Area = Parms.Area;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCaptureArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Area                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetCaptureArea(float* Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCaptureArea");

	Params::RSBattleEnemy_C_GetCaptureArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Area != nullptr)
		*Area = Parms.Area;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetMoveArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Area                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetMoveArea(float* Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetMoveArea");

	Params::RSBattleEnemy_C_GetMoveArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Area != nullptr)
		*Area = Parms.Area;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDefault_SearchRange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetDefault_SearchRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDefault_SearchRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDefault_SearchAngle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetDefault_SearchAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDefault_SearchAngle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDefault_SensingArea
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetDefault_SensingArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDefault_SensingArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDefault_CaptureArea
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetDefault_CaptureArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDefault_CaptureArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDefault_TerritoryArea
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetDefault_TerritoryArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDefault_TerritoryArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDefault_RepopTime
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetDefault_RepopTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDefault_RepopTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDefault_RepopRange
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetDefault_RepopRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDefault_RepopRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDefault_RepopTimeTerritory
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetDefault_RepopTimeTerritory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDefault_RepopTimeTerritory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateIsChangeParameter
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateIsChangeParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateIsChangeParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStealthHalf
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnStealthHalf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStealthHalf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OffStealthHalf
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OffStealthHalf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OffStealthHalf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateStealthHalf
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateStealthHalf(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateStealthHalf");

	Params::RSBattleEnemy_C_UpdateStealthHalf Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetStealthHalfTime
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetStealthHalfTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetStealthHalfTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetOverwriteParam
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetOverwriteParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetOverwriteParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateIconOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBadStateAddParticleData         Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent*         Handle                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::BadStateIconOn(const struct FBadStateAddParticleData& Data, class UParticleSystemComponent** Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateIconOn");

	Params::RSBattleEnemy_C_BadStateIconOn Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	if (Handle != nullptr)
		*Handle = Parms.Handle;
}


// Function RSBattleEnemy.RSBattleEnemy_C.AddBattleActor
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::AddBattleActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "AddBattleActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUniqueEffectiveSas
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEffectiveSas                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   WinceRate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   KnockBackRate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DownRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CrashRate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::IsUniqueEffectiveSas(class AActor*& AttackActor, bool* IsEffectiveSas, float* WinceRate, float* KnockBackRate, float* DownRate, float* CrashRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUniqueEffectiveSas");

	Params::RSBattleEnemy_C_IsUniqueEffectiveSas Parms{};

	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);

	AttackActor = Parms.AttackActor;

	if (IsEffectiveSas != nullptr)
		*IsEffectiveSas = Parms.IsEffectiveSas;

	if (WinceRate != nullptr)
		*WinceRate = Parms.WinceRate;

	if (KnockBackRate != nullptr)
		*KnockBackRate = Parms.KnockBackRate;

	if (DownRate != nullptr)
		*DownRate = Parms.DownRate;

	if (CrashRate != nullptr)
		*CrashRate = Parms.CrashRate;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetAcceptanceRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   AcceptanceRadius                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetAcceptanceRadius(float* AcceptanceRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetAcceptanceRadius");

	Params::RSBattleEnemy_C_GetAcceptanceRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AcceptanceRadius != nullptr)
		*AcceptanceRadius = Parms.AcceptanceRadius;
}


// Function RSBattleEnemy.RSBattleEnemy_C.KickDetectIcon
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEnemyFindPlayerType                    FindType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::KickDetectIcon(EEnemyFindPlayerType FindType, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "KickDetectIcon");

	Params::RSBattleEnemy_C_KickDetectIcon Parms{};

	Parms.FindType = FindType;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StopDetectIcon
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StopDetectIcon(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StopDetectIcon");

	Params::RSBattleEnemy_C_StopDetectIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartEnableWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartEnableWeak(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartEnableWeak");

	Params::RSBattleEnemy_C_StartEnableWeak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EndEnableWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EndEnableWeak(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EndEnableWeak");

	Params::RSBattleEnemy_C_EndEnableWeak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReserveBaseMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Param_BaseMontage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::ReserveBaseMontage(class UAnimMontage* Param_BaseMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReserveBaseMontage");

	Params::RSBattleEnemy_C_ReserveBaseMontage Parms{};

	Parms.Param_BaseMontage = Param_BaseMontage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateBaseMontage
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateBaseMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateBaseMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsPathAreaOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AreaOut                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsPathAreaOut(bool* AreaOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsPathAreaOut");

	Params::RSBattleEnemy_C_IsPathAreaOut Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AreaOut != nullptr)
		*AreaOut = Parms.AreaOut;
}


// Function RSBattleEnemy.RSBattleEnemy_C.PlayGeneralBrainCrashSequence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::PlayGeneralBrainCrashSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "PlayGeneralBrainCrashSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStartAction
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnStartAction(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStartAction");

	Params::RSBattleEnemy_C_OnStartAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnableCharacterTick
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnableCharacterTick(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnableCharacterTick");

	Params::RSBattleEnemy_C_IsEnableCharacterTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnBrainFieldMoveInner
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnBrainFieldMoveInner(bool MoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnBrainFieldMoveInner");

	Params::RSBattleEnemy_C_OnBrainFieldMoveInner Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateFall
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateFall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnPathAreaOut
// (Private, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnPathAreaOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnPathAreaOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CallFuncDamageDownLoop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CallFuncDamageDownLoop(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CallFuncDamageDownLoop");

	Params::RSBattleEnemy_C_CallFuncDamageDownLoop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNoMoveAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bNoMoveAnim                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsNoMoveAnim(bool* bNoMoveAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNoMoveAnim");

	Params::RSBattleEnemy_C_IsNoMoveAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNoMoveAnim != nullptr)
		*bNoMoveAnim = Parms.bNoMoveAnim;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCreateBossCore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCreateBossCore                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsCreateBossCore(bool* bCreateBossCore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCreateBossCore");

	Params::RSBattleEnemy_C_IsCreateBossCore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCreateBossCore != nullptr)
		*bCreateBossCore = Parms.bCreateBossCore;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RepopEntry
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::RepopEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RepopEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.RepopInit
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::RepopInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RepopInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.InsidePlayerCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          MyPos                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInside                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::InsidePlayerCamera(const struct FVector& MyPos, bool* IsInside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InsidePlayerCamera");

	Params::RSBattleEnemy_C_InsidePlayerCamera Parms{};

	Parms.MyPos = std::move(MyPos);

	UObject::ProcessEvent(Func, &Parms);

	if (IsInside != nullptr)
		*IsInside = Parms.IsInside;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Start Brain Talk Party Bad Status Attribute
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCSkillAttribute                       PartyBadStatusAttribute                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Start_Brain_Talk_Party_Bad_Status_Attribute(EHCSkillAttribute PartyBadStatusAttribute, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Start Brain Talk Party Bad Status Attribute");

	Params::RSBattleEnemy_C_Start_Brain_Talk_Party_Bad_Status_Attribute Parms{};

	Parms.PartyBadStatusAttribute = PartyBadStatusAttribute;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.PreAreaOutResetParam
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::PreAreaOutResetParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "PreAreaOutResetParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.AreaOutResetParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::AreaOutResetParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "AreaOutResetParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetAllBadStatus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetAllBadStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetAllBadStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetShell
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ResetShell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetShell");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.InitAreaOut
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::InitAreaOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InitAreaOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateAreaOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateAreaOut(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateAreaOut");

	Params::RSBattleEnemy_C_UpdateAreaOut Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetStealthEndLaunchFlag
// (Private, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetStealthEndLaunchFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetStealthEndLaunchFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StealthEndLaunchLanding
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StealthEndLaunchLanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StealthEndLaunchLanding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckEmphasisCrashGauge
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CheckEmphasisCrashGauge(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckEmphasisCrashGauge");

	Params::RSBattleEnemy_C_CheckEmphasisCrashGauge Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetReasonBattleEnd
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EReasonBattleEnd                        Reason                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetReasonBattleEnd(EReasonBattleEnd* Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetReasonBattleEnd");

	Params::RSBattleEnemy_C_GetReasonBattleEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Reason != nullptr)
		*Reason = Parms.Reason;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartBrainTalkEffectiveSas
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::StartBrainTalkEffectiveSas(E_SASKindNative SasKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartBrainTalkEffectiveSas");

	Params::RSBattleEnemy_C_StartBrainTalkEffectiveSas Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetNoDisplayDiscoverIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetNoDisplayDiscoverIcon(bool Enable, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetNoDisplayDiscoverIcon");

	Params::RSBattleEnemy_C_SetNoDisplayDiscoverIcon Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CopyParamToAvatar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleEnemy_C*                 Original                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CopyParamToAvatar(class ARSBattleEnemy_C* Original, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CopyParamToAvatar");

	Params::RSBattleEnemy_C_CopyParamToAvatar Parms{};

	Parms.Original = Original;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartBrainTalkOnBadState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCBadState                             BadState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::StartBrainTalkOnBadState(class AActor* Attacker, EHCBadState BadState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartBrainTalkOnBadState");

	Params::RSBattleEnemy_C_StartBrainTalkOnBadState Parms{};

	Parms.Attacker = Attacker;
	Parms.BadState = BadState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DisplayEnemyHp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DisplaySeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DisplayEnemyHp(float DisplaySeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DisplayEnemyHp");

	Params::RSBattleEnemy_C_DisplayEnemyHp Parms{};

	Parms.DisplaySeconds = DisplaySeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAnimScaleHitStop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyDamageAnimKind                     DamageAnimKind                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetAnimScaleHitStop(EnemyDamageAnimKind DamageAnimKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAnimScaleHitStop");

	Params::RSBattleEnemy_C_SetAnimScaleHitStop Parms{};

	Parms.DamageAnimKind = DamageAnimKind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAnimScaleHitStopProduct
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetAnimScaleHitStopProduct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAnimScaleHitStopProduct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAnimScaleHitStopSlow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetAnimScaleHitStopSlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAnimScaleHitStopSlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReSetAnimScaleHitStop
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::ReSetAnimScaleHitStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReSetAnimScaleHitStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetRowNameAnimScaleHitStop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyDamageAnimKind                     DamageAnimKind                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             RowName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetRowNameAnimScaleHitStop(EnemyDamageAnimKind DamageAnimKind, class FName* RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetRowNameAnimScaleHitStop");

	Params::RSBattleEnemy_C_GetRowNameAnimScaleHitStop Parms{};

	Parms.DamageAnimKind = DamageAnimKind;

	UObject::ProcessEvent(Func, &Parms);

	if (RowName != nullptr)
		*RowName = Parms.RowName;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetBaseMontagePlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetBaseMontagePlayRate(float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetBaseMontagePlayRate");

	Params::RSBattleEnemy_C_SetBaseMontagePlayRate Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckMapGimmickHitSlow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ARSBattleEnemy_C::CheckMapGimmickHitSlow(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckMapGimmickHitSlow");

	Params::RSBattleEnemy_C_CheckMapGimmickHitSlow Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDiscoveredOnce
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    DiscoverdOnce                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsDiscoveredOnce(bool* DiscoverdOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDiscoveredOnce");

	Params::RSBattleEnemy_C_IsDiscoveredOnce Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DiscoverdOnce != nullptr)
		*DiscoverdOnce = Parms.DiscoverdOnce;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckStealthCriticalHitSlow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ARSBattleEnemy_C::CheckStealthCriticalHitSlow(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckStealthCriticalHitSlow");

	Params::RSBattleEnemy_C_CheckStealthCriticalHitSlow Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDamaging
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// float                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnDamaging(const struct FHCHitResult& HitResult, float DamageValue, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDamaging");

	Params::RSBattleEnemy_C_OnDamaging Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.DamageValue = DamageValue;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.InitUro
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::InitUro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InitUro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateUro
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::UpdateUro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateUro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.PrioritizeTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::PrioritizeTick(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "PrioritizeTick");

	Params::RSBattleEnemy_C_PrioritizeTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcTickSeconds
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CalcTickSeconds(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcTickSeconds");

	Params::RSBattleEnemy_C_CalcTickSeconds Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.MainTickSometime
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::MainTickSometime(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "MainTickSometime");

	Params::RSBattleEnemy_C_MainTickSometime Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.InitCheckUpdateWeakMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::InitCheckUpdateWeakMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InitCheckUpdateWeakMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.InitUpdateSeeThrought
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::InitUpdateSeeThrought()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InitUpdateSeeThrought");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckSimpleEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::CheckSimpleEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckSimpleEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CallFuncDamageDownEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CallFuncDamageDownEnd(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CallFuncDamageDownEnd");

	Params::RSBattleEnemy_C_CallFuncDamageDownEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetUseWaitNoInterpolation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUse                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetUseWaitNoInterpolation(bool bUse, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetUseWaitNoInterpolation");

	Params::RSBattleEnemy_C_SetUseWaitNoInterpolation Parms{};

	Parms.bUse = bUse;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RestoreInitRotationRate
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::RestoreInitRotationRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RestoreInitRotationRate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBossHpDisp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsDisp                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsBossHpDisp(bool* IsDisp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBossHpDisp");

	Params::RSBattleEnemy_C_IsBossHpDisp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDisp != nullptr)
		*IsDisp = Parms.IsDisp;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SpawnStartChangeCharaCondition
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SpawnStartChangeCharaCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SpawnStartChangeCharaCondition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnableWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bEnableWeak                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnableWeak(bool* Param_bEnableWeak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnableWeak");

	Params::RSBattleEnemy_C_IsEnableWeak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bEnableWeak != nullptr)
		*Param_bEnableWeak = Parms.Param_bEnableWeak;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetStopWeakEmissive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetStopWeakEmissive(bool IsStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetStopWeakEmissive");

	Params::RSBattleEnemy_C_SetStopWeakEmissive Parms{};

	Parms.IsStop = IsStop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsStopWeakEmissive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsStop                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsStopWeakEmissive(bool* IsStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsStopWeakEmissive");

	Params::RSBattleEnemy_C_IsStopWeakEmissive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsStop != nullptr)
		*IsStop = Parms.IsStop;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Is Disable Weak Around Effect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Is_Disable_Weak_Around_Effect(int32 Param_Index, bool* IsDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Is Disable Weak Around Effect");

	Params::RSBattleEnemy_C_Is_Disable_Weak_Around_Effect Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (IsDisable != nullptr)
		*IsDisable = Parms.IsDisable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDisableWeakAroundEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetDisableWeakAroundEffect(int32 Param_Index, bool IsDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDisableWeakAroundEffect");

	Params::RSBattleEnemy_C_SetDisableWeakAroundEffect Parms{};

	Parms.Param_Index = Param_Index;
	Parms.IsDisable = IsDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.Set Event Wait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsEventWait                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Set_Event_Wait(bool Param_IsEventWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Set Event Wait");

	Params::RSBattleEnemy_C_Set_Event_Wait Parms{};

	Parms.Param_IsEventWait = Param_IsEventWait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetBT_ForceBreak
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsBT_ForceBreak                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetBT_ForceBreak(bool Param_IsBT_ForceBreak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetBT_ForceBreak");

	Params::RSBattleEnemy_C_SetBT_ForceBreak Parms{};

	Parms.Param_IsBT_ForceBreak = Param_IsBT_ForceBreak;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetWander
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsWander                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetWander(bool Param_IsWander)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetWander");

	Params::RSBattleEnemy_C_SetWander Parms{};

	Parms.Param_IsWander = Param_IsWander;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetBattleStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsBattleStart                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetBattleStart(bool Param_IsBattleStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetBattleStart");

	Params::RSBattleEnemy_C_SetBattleStart Parms{};

	Parms.Param_IsBattleStart = Param_IsBattleStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetSpawnState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemySpawnState                    Param_SpawnState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetSpawnState(Enum_EnemySpawnState Param_SpawnState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetSpawnState");

	Params::RSBattleEnemy_C_SetSpawnState Parms{};

	Parms.Param_SpawnState = Param_SpawnState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnableOutOfBattleField
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SetEnable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_GroupID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BossField                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnableOutOfBattleField(bool SetEnable, int32 Param_GroupID, bool BossField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnableOutOfBattleField");

	Params::RSBattleEnemy_C_SetEnableOutOfBattleField Parms{};

	Parms.SetEnable = SetEnable;
	Parms.Param_GroupID = Param_GroupID;
	Parms.BossField = BossField;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.EventManagerEnd
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RestoreEnableTick                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RestoreVisibility                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EventManagerEnd(bool RestoreEnableTick, bool RestoreVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EventManagerEnd");

	Params::RSBattleEnemy_C_EventManagerEnd Parms{};

	Parms.RestoreEnableTick = RestoreEnableTick;
	Parms.RestoreVisibility = RestoreVisibility;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBattleStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsBattleStart                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetBattleStart(bool* Param_IsBattleStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBattleStart");

	Params::RSBattleEnemy_C_GetBattleStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsBattleStart != nullptr)
		*Param_IsBattleStart = Parms.Param_IsBattleStart;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyEnableOutOfBossBattlefield
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SetEnable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyEnableOutOfBossBattlefield(bool SetEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyEnableOutOfBossBattlefield");

	Params::RSBattleEnemy_C_SetEnemyEnableOutOfBossBattlefield Parms{};

	Parms.SetEnable = SetEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnDamageArmorBreak
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnDamageArmorBreak(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnDamageArmorBreak");

	Params::RSBattleEnemy_C_OnDamageArmorBreak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetFormType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEnemyFormType                          Param_FormType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetFormType(EEnemyFormType Param_FormType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetFormType");

	Params::RSBattleEnemy_C_SetFormType Parms{};

	Parms.Param_FormType = Param_FormType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetArmorFlashControl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetArmorFlashControl(const struct FHCHitResult& Result, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetArmorFlashControl");

	Params::RSBattleEnemy_C_SetArmorFlashControl Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EventManagerStart
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableTick                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EventManagerStart(bool EnableTick, bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EventManagerStart");

	Params::RSBattleEnemy_C_EventManagerStart Parms{};

	Parms.EnableTick = EnableTick;
	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDeadMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnableConsiderFlag                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetDeadMontage(bool bEnableConsiderFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDeadMontage");

	Params::RSBattleEnemy_C_SetDeadMontage Parms{};

	Parms.bEnableConsiderFlag = bEnableConsiderFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetUpNativeParam
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetUpNativeParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetUpNativeParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.LostSightInBattle
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::LostSightInBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "LostSightInBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHitAttackArmor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHitAttackArmor(struct FHCHitResult& HitResult, bool* bHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHitAttackArmor");

	Params::RSBattleEnemy_C_IsHitAttackArmor Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetNoCollisionAndStopAiFade
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNoColAndStopAi                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetNoCollisionAndStopAiFade(bool bNoColAndStopAi, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetNoCollisionAndStopAiFade");

	Params::RSBattleEnemy_C_SetNoCollisionAndStopAiFade Parms{};

	Parms.bNoColAndStopAi = bNoColAndStopAi;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyEnableOutOfNotBossBattlefield
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SetEnable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyEnableOutOfNotBossBattlefield(bool SetEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyEnableOutOfNotBossBattlefield");

	Params::RSBattleEnemy_C_SetEnemyEnableOutOfNotBossBattlefield Parms{};

	Parms.SetEnable = SetEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartUpdateAreaOut
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StartUpdateAreaOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartUpdateAreaOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.FrameDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::FrameDamage(float Sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "FrameDamage");

	Params::RSBattleEnemy_C_FrameDamage Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartSpawn
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::StartSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAreaOutActorLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetAreaOutActorLocation(const struct FVector& NewLocation, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAreaOutActorLocation");

	Params::RSBattleEnemy_C_SetAreaOutActorLocation Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckExecuteNotifyKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharaExecuteNotifyKind                 ExecuteKind                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsExecute                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CheckExecuteNotifyKind(class AActor* Param_Owner, ECharaExecuteNotifyKind ExecuteKind, bool* IsExecute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckExecuteNotifyKind");

	Params::RSBattleEnemy_C_CheckExecuteNotifyKind Parms{};

	Parms.Param_Owner = Param_Owner;
	Parms.ExecuteKind = ExecuteKind;

	UObject::ProcessEvent(Func, &Parms);

	if (IsExecute != nullptr)
		*IsExecute = Parms.IsExecute;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetET_StopWaitMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     WaitMontage                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetET_StopWaitMontage(class UAnimMontage** WaitMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetET_StopWaitMontage");

	Params::RSBattleEnemy_C_GetET_StopWaitMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WaitMontage != nullptr)
		*WaitMontage = Parms.WaitMontage;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckAttractSelf
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CheckAttractSelf(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckAttractSelf");

	Params::RSBattleEnemy_C_CheckAttractSelf Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAllowanceWaitSeconds
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::SetAllowanceWaitSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAllowanceWaitSeconds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.AreaStart
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::AreaStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "AreaStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UniqueBossLostActionAbort
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUniqueAbort                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UniqueBossLostActionAbort(bool* IsUniqueAbort)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UniqueBossLostActionAbort");

	Params::RSBattleEnemy_C_UniqueBossLostActionAbort Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsUniqueAbort != nullptr)
		*IsUniqueAbort = Parms.IsUniqueAbort;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsPsychicFieldDamageRateToBoss
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsPsychicFieldDamageRateToBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsPsychicFieldDamageRateToBoss");

	Params::RSBattleEnemy_C_IsPsychicFieldDamageRateToBoss Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DirectAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseFixDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   FixDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDataTable*                       DataTable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SkillName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttackerOwner                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreInvalid                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCHitEffectInfo                 Effect_Info                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    UseHitPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoDamageDisplay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNotifyAttackActorHit                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DirectAttack(bool UseFixDamage, int32 FixDamage, class UDataTable* DataTable, class FName SkillName, class AActor* Attacker, class AActor* AttackerOwner, bool IgnoreInvalid, const struct FHCHitEffectInfo& Effect_Info, bool UseHitPosition, const struct FVector& HitPosition, bool NoDamageDisplay, bool bNotifyAttackActorHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DirectAttack");

	Params::RSBattleEnemy_C_DirectAttack Parms{};

	Parms.UseFixDamage = UseFixDamage;
	Parms.FixDamage = FixDamage;
	Parms.DataTable = DataTable;
	Parms.SkillName = SkillName;
	Parms.Attacker = Attacker;
	Parms.AttackerOwner = AttackerOwner;
	Parms.IgnoreInvalid = IgnoreInvalid;
	Parms.Effect_Info = std::move(Effect_Info);
	Parms.UseHitPosition = UseHitPosition;
	Parms.HitPosition = std::move(HitPosition);
	Parms.NoDamageDisplay = NoDamageDisplay;
	Parms.bNotifyAttackActorHit = bNotifyAttackActorHit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetBattlefieldFenceAppearRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FenceBattleRate                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetBattlefieldFenceAppearRate(float FenceBattleRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetBattlefieldFenceAppearRate");

	Params::RSBattleEnemy_C_SetBattlefieldFenceAppearRate Parms{};

	Parms.FenceBattleRate = FenceBattleRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnHitDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnHitDamage(const struct FHCHitResult& Result, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnHitDamage");

	Params::RSBattleEnemy_C_OnHitDamage Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetLocationAreaID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   LocationId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetLocationAreaID(int32* LocationId, int32* AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetLocationAreaID");

	Params::RSBattleEnemy_C_GetLocationAreaID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocationId != nullptr)
		*LocationId = Parms.LocationId;

	if (AreaId != nullptr)
		*AreaId = Parms.AreaId;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetGroupID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewGroupID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetGroupID(int32 NewGroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetGroupID");

	Params::RSBattleEnemy_C_SetGroupID Parms{};

	Parms.NewGroupID = NewGroupID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckSpawnCondition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpawnOK                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CheckSpawnCondition(bool* IsSpawnOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckSpawnCondition");

	Params::RSBattleEnemy_C_CheckSpawnCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSpawnOK != nullptr)
		*IsSpawnOK = Parms.IsSpawnOK;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Is Enable Spawn by Condition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpawnOK                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Is_Enable_Spawn_by_Condition(bool* IsSpawnOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Is Enable Spawn by Condition");

	Params::RSBattleEnemy_C_Is_Enable_Spawn_by_Condition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSpawnOK != nullptr)
		*IsSpawnOK = Parms.IsSpawnOK;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SufferDamageAfterInterface
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TakedDamage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SufferDamageAfterInterface(const struct FHCHitResult& HitResult, int32 Damage, int32 TakedDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SufferDamageAfterInterface");

	Params::RSBattleEnemy_C_SufferDamageAfterInterface Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.Damage = Damage;
	Parms.TakedDamage = TakedDamage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckCondisionByRareSpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleSimulatorRareSpawnCondision      Condision                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOK                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CheckCondisionByRareSpawn(EBattleSimulatorRareSpawnCondision Condision, float Value, bool* IsOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckCondisionByRareSpawn");

	Params::RSBattleEnemy_C_CheckCondisionByRareSpawn Parms{};

	Parms.Condision = Condision;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (IsOK != nullptr)
		*IsOK = Parms.IsOK;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDeadBeforeHitResult
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ARSBattleEnemy_C::SetDeadBeforeHitResult(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDeadBeforeHitResult");

	Params::RSBattleEnemy_C_SetDeadBeforeHitResult Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDeadBeforeHitResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (Parm, OutParm, ContainsInstancedReference)

void ARSBattleEnemy_C::GetDeadBeforeHitResult(struct FHCHitResult* HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDeadBeforeHitResult");

	Params::RSBattleEnemy_C_GetDeadBeforeHitResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HitResult != nullptr)
		*HitResult = std::move(Parms.HitResult);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDeadBeforeHitResultByDirectAttack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ARSBattleEnemy_C::SetDeadBeforeHitResultByDirectAttack(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDeadBeforeHitResultByDirectAttack");

	Params::RSBattleEnemy_C_SetDeadBeforeHitResultByDirectAttack Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStartCrashVisionEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUniqueEffect                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnStartCrashVisionEffect(bool bUniqueEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStartCrashVisionEffect");

	Params::RSBattleEnemy_C_OnStartCrashVisionEffect Parms{};

	Parms.bUniqueEffect = bUniqueEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.CrashVisionDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::CrashVisionDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CrashVisionDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnableSpawnByConditionEnemyHpRate
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpawnOK                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnableSpawnByConditionEnemyHpRate(bool* IsSpawnOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnableSpawnByConditionEnemyHpRate");

	Params::RSBattleEnemy_C_IsEnableSpawnByConditionEnemyHpRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSpawnOK != nullptr)
		*IsSpawnOK = Parms.IsSpawnOK;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RareSpawnResultLog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::RareSpawnResultLog(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RareSpawnResultLog");

	Params::RSBattleEnemy_C_RareSpawnResultLog Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.RareEnemySelfDestroy
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::RareEnemySelfDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RareEnemySelfDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetAvatarCopyTags
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InAvatarCopyTags                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetAvatarCopyTags(bool InAvatarCopyTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetAvatarCopyTags");

	Params::RSBattleEnemy_C_SetAvatarCopyTags Parms{};

	Parms.InAvatarCopyTags = InAvatarCopyTags;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsAvatarCopyTags
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    AvatarCopyTags                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsAvatarCopyTags(bool* AvatarCopyTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsAvatarCopyTags");

	Params::RSBattleEnemy_C_IsAvatarCopyTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AvatarCopyTags != nullptr)
		*AvatarCopyTags = Parms.AvatarCopyTags;
}


// Function RSBattleEnemy.RSBattleEnemy_C.PlayBattleStartRevivalBossBT
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::PlayBattleStartRevivalBossBT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "PlayBattleStartRevivalBossBT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetSpawnLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetSpawnLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetSpawnLocation");

	Params::RSBattleEnemy_C_GetSpawnLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetSpawnRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetSpawnRotation(struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetSpawnRotation");

	Params::RSBattleEnemy_C_GetSpawnRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnSimulatorStartDirectionOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnSimulatorStartDirectionOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnSimulatorStartDirectionOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnSimulatorStartDirectionClose
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MoveDelaySec                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::OnSimulatorStartDirectionClose(float MoveDelaySec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnSimulatorStartDirectionClose");

	Params::RSBattleEnemy_C_OnSimulatorStartDirectionClose Parms{};

	Parms.MoveDelaySec = MoveDelaySec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnSimulatorStartDirectionCloseProduct
// (Protected, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::OnSimulatorStartDirectionCloseProduct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnSimulatorStartDirectionCloseProduct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateSimulatorStart
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateSimulatorStart(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateSimulatorStart");

	Params::RSBattleEnemy_C_UpdateSimulatorStart Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnableLostActionTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::SetEnableLostActionTimer(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnableLostActionTimer");

	Params::RSBattleEnemy_C_SetEnableLostActionTimer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateEnableLostActionTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::UpdateEnableLostActionTimer(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateEnableLostActionTimer");

	Params::RSBattleEnemy_C_UpdateEnableLostActionTimer Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsExistEnableLostActionTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bExist                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsExistEnableLostActionTimer(bool* bExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsExistEnableLostActionTimer");

	Params::RSBattleEnemy_C_IsExistEnableLostActionTimer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExist != nullptr)
		*bExist = Parms.bExist;
}


// Function RSBattleEnemy.RSBattleEnemy_C.TickLostActionReset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::TickLostActionReset(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "TickLostActionReset");

	Params::RSBattleEnemy_C_TickLostActionReset Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartLostActionResetTick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyActionAnimKind                     LostAction                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::StartLostActionResetTick(EnemyActionAnimKind LostAction, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartLostActionResetTick");

	Params::RSBattleEnemy_C_StartLostActionResetTick Parms{};

	Parms.LostAction = LostAction;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RSBattleEnemy.RSBattleEnemy_C.EndLostActionResetTick
// (Public, BlueprintCallable, BlueprintEvent)

void ARSBattleEnemy_C::EndLostActionResetTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EndLostActionResetTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsLostActionResetTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bTick                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsLostActionResetTick(bool* bTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsLostActionResetTick");

	Params::RSBattleEnemy_C_IsLostActionResetTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTick != nullptr)
		*bTick = Parms.bTick;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartFallIfFlyingIF
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartFallIfFlyingIF(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartFallIfFlyingIF");

	Params::RSBattleEnemy_C_StartFallIfFlyingIF Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEndAnimDieIF
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnEndAnimDieIF(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEndAnimDieIF");

	Params::RSBattleEnemy_C_OnEndAnimDieIF Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetAction_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::ResetAction_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetAction_Native");

	Params::RSBattleEnemy_C_ResetAction_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateFall_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::UpdateFall_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateFall_Native");

	Params::RSBattleEnemy_C_UpdateFall_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateDamageAnim_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DamageEnd                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DamageDownEnd                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateDamageAnim_Native(bool* DamageEnd, bool* DamageDownEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateDamageAnim_Native");

	Params::RSBattleEnemy_C_UpdateDamageAnim_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageEnd != nullptr)
		*DamageEnd = Parms.DamageEnd;

	if (DamageDownEnd != nullptr)
		*DamageDownEnd = Parms.DamageDownEnd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SwitchDispCore_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisplayOn                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SwitchDispCore_Native(bool DisplayOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SwitchDispCore_Native");

	Params::RSBattleEnemy_C_SwitchDispCore_Native Parms{};

	Parms.DisplayOn = DisplayOn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StoreWeakState_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::StoreWeakState_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StoreWeakState_Native");

	Params::RSBattleEnemy_C_StoreWeakState_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StopCrashChanceLoopEffect_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::StopCrashChanceLoopEffect_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StopCrashChanceLoopEffect_Native");

	Params::RSBattleEnemy_C_StopCrashChanceLoopEffect_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartVanish_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   VanishSec                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartVanish                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EndVanish                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::StartVanish_Native(float VanishSec, float StartVanish, float EndVanish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartVanish_Native");

	Params::RSBattleEnemy_C_StartVanish_Native Parms{};

	Parms.VanishSec = VanishSec;
	Parms.StartVanish = StartVanish;
	Parms.EndVanish = EndVanish;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartDamageFloating_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::StartDamageFloating_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartDamageFloating_Native");

	Params::RSBattleEnemy_C_StartDamageFloating_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetWeakEmissiveOff_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           WeakSlotName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetWeakEmissiveOff_Native(const class FString& WeakSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetWeakEmissiveOff_Native");

	Params::RSBattleEnemy_C_SetWeakEmissiveOff_Native Parms{};

	Parms.WeakSlotName = std::move(WeakSlotName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetUseWaitNoInterpolation_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Use                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetUseWaitNoInterpolation_Native(bool Use)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetUseWaitNoInterpolation_Native");

	Params::RSBattleEnemy_C_SetUseWaitNoInterpolation_Native Parms{};

	Parms.Use = Use;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetReserveAction_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param00                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param01                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetReserveAction_Native(uint8 Action, float Param00, float Param01)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetReserveAction_Native");

	Params::RSBattleEnemy_C_SetReserveAction_Native Parms{};

	Parms.Action = Action;
	Parms.Param00 = Param00;
	Parms.Param01 = Param01;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetLanding_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLanding                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetLanding_Native(bool bLanding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetLanding_Native");

	Params::RSBattleEnemy_C_SetLanding_Native Parms{};

	Parms.bLanding = bLanding;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetIsMoveAnim_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewIsMoveAnim                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetIsMoveAnim_Native(bool NewIsMoveAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetIsMoveAnim_Native");

	Params::RSBattleEnemy_C_SetIsMoveAnim_Native Parms{};

	Parms.NewIsMoveAnim = NewIsMoveAnim;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetIsLaunchDown_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewIsLaunchDown                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetIsLaunchDown_Native(bool NewIsLaunchDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetIsLaunchDown_Native");

	Params::RSBattleEnemy_C_SetIsLaunchDown_Native Parms{};

	Parms.NewIsLaunchDown = NewIsLaunchDown;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetIsLandCheck_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewIsLandCheck                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetIsLandCheck_Native(bool NewIsLandCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetIsLandCheck_Native");

	Params::RSBattleEnemy_C_SetIsLandCheck_Native Parms{};

	Parms.NewIsLandCheck = NewIsLandCheck;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetIsBrainAccess_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewIsBrainAccess                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetIsBrainAccess_Native(bool NewIsBrainAccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetIsBrainAccess_Native");

	Params::RSBattleEnemy_C_SetIsBrainAccess_Native Parms{};

	Parms.NewIsBrainAccess = NewIsBrainAccess;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetIdleMove_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsIdle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetIdleMove_Native(bool IsIdle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetIdleMove_Native");

	Params::RSBattleEnemy_C_SetIdleMove_Native Parms{};

	Parms.IsIdle = IsIdle;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetHp_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetHp_Native(int32 HP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetHp_Native");

	Params::RSBattleEnemy_C_SetHp_Native Parms{};

	Parms.HP = HP;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDownTimer_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetDownTimer_Native(float NewTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDownTimer_Native");

	Params::RSBattleEnemy_C_SetDownTimer_Native Parms{};

	Parms.NewTime = NewTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetDamageCollisionDisable_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClaimantName                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetDamageCollisionDisable_Native(const class FName& ClaimantName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetDamageCollisionDisable_Native");

	Params::RSBattleEnemy_C_SetDamageCollisionDisable_Native Parms{};

	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SafeDestroy_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SafeDestroy_Native(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SafeDestroy_Native");

	Params::RSBattleEnemy_C_SafeDestroy_Native Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RestoreWeakState_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::RestoreWeakState_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RestoreWeakState_Native");

	Params::RSBattleEnemy_C_RestoreWeakState_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.RestoreWeakEmissive_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           WeakSlotName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::RestoreWeakEmissive_Native(const class FString& WeakSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "RestoreWeakEmissive_Native");

	Params::RSBattleEnemy_C_RestoreWeakEmissive_Native Parms{};

	Parms.WeakSlotName = std::move(WeakSlotName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetStateReceivedExecuteAi_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::ResetStateReceivedExecuteAi_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetStateReceivedExecuteAi_Native");

	Params::RSBattleEnemy_C_ResetStateReceivedExecuteAi_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetCore_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RemoveCore                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::ResetCore_Native(class AActor* Enemy, bool RemoveCore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetCore_Native");

	Params::RSBattleEnemy_C_ResetCore_Native Parms{};

	Parms.Enemy = Enemy;
	Parms.RemoveCore = RemoveCore;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReceivedNotifyAnimEnd_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Received                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ReceivedNotifyAnimEnd_Native(bool* Received)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReceivedNotifyAnimEnd_Native");

	Params::RSBattleEnemy_C_ReceivedNotifyAnimEnd_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Received != nullptr)
		*Received = Parms.Received;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OutputLogCrashChanceEnd_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::OutputLogCrashChanceEnd_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OutputLogCrashChanceEnd_Native");

	Params::RSBattleEnemy_C_OutputLogCrashChanceEnd_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.LeaveBrainCrashAccess_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::LeaveBrainCrashAccess_Native(class ARSCharacterBase* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "LeaveBrainCrashAccess_Native");

	Params::RSBattleEnemy_C_LeaveBrainCrashAccess_Native Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.LaunchDown_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::LaunchDown_Native(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "LaunchDown_Native");

	Params::RSBattleEnemy_C_LaunchDown_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.KickCrashChanceLoopEffect_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::KickCrashChanceLoopEffect_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "KickCrashChanceLoopEffect_Native");

	Params::RSBattleEnemy_C_KickCrashChanceLoopEffect_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsMotionEnd_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsMotionEnd_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsMotionEnd_Native");

	Params::RSBattleEnemy_C_IsMotionEnd_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsIgnoreLandingCheck_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIgnoreLandingCheck                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsIgnoreLandingCheck_Native(bool* bIgnoreLandingCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsIgnoreLandingCheck_Native");

	Params::RSBattleEnemy_C_IsIgnoreLandingCheck_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIgnoreLandingCheck != nullptr)
		*bIgnoreLandingCheck = Parms.bIgnoreLandingCheck;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyLandingCheck_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyLandingCheck_Native(bool* bHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyLandingCheck_Native");

	Params::RSBattleEnemy_C_IsEnemyLandingCheck_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBrainCrashMiss_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMiss                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsBrainCrashMiss_Native(bool* IsMiss)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBrainCrashMiss_Native");

	Params::RSBattleEnemy_C_IsBrainCrashMiss_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMiss != nullptr)
		*IsMiss = Parms.IsMiss;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetSearchingComponent_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USearchingComponent*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USearchingComponent* ARSBattleEnemy_C::GetSearchingComponent_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetSearchingComponent_Native");

	Params::RSBattleEnemy_C_GetSearchingComponent_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetLostData_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_LostMoveTimeMin                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LostMoveTimeMax                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_LostMoveRotationRate                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_SpeedScale                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsNoMoveAnim                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetLostData_Native(float* Param_LostMoveTimeMin, float* LostMoveTimeMax, float* Param_LostMoveRotationRate, float* Param_SpeedScale, bool* IsNoMoveAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetLostData_Native");

	Params::RSBattleEnemy_C_GetLostData_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_LostMoveTimeMin != nullptr)
		*Param_LostMoveTimeMin = Parms.Param_LostMoveTimeMin;

	if (LostMoveTimeMax != nullptr)
		*LostMoveTimeMax = Parms.LostMoveTimeMax;

	if (Param_LostMoveRotationRate != nullptr)
		*Param_LostMoveRotationRate = Parms.Param_LostMoveRotationRate;

	if (Param_SpeedScale != nullptr)
		*Param_SpeedScale = Parms.Param_SpeedScale;

	if (IsNoMoveAnim != nullptr)
		*IsNoMoveAnim = Parms.IsNoMoveAnim;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetHitObjectType_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EObjectTypeQuery>                ObjectType                                             (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetHitObjectType_Native(TArray<EObjectTypeQuery>* ObjectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetHitObjectType_Native");

	Params::RSBattleEnemy_C_GetHitObjectType_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ObjectType != nullptr)
		*ObjectType = std::move(Parms.ObjectType);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetFall_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::GetFall_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetFall_Native");

	Params::RSBattleEnemy_C_GetFall_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetFailedFall_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::GetFailedFall_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetFailedFall_Native");

	Params::RSBattleEnemy_C_GetFailedFall_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCurrentActionTime_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ActionTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetCurrentActionTime_Native(float* ActionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCurrentActionTime_Native");

	Params::RSBattleEnemy_C_GetCurrentActionTime_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActionTime != nullptr)
		*ActionTime = Parms.ActionTime;
}


// Function RSBattleEnemy.RSBattleEnemy_C.FlyDown_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::FlyDown_Native(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "FlyDown_Native");

	Params::RSBattleEnemy_C_FlyDown_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EntryBrainCrashAccess_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EntryBrainCrashAccess_Native(class ARSCharacterBase* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EntryBrainCrashAccess_Native");

	Params::RSBattleEnemy_C_EntryBrainCrashAccess_Native Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EndDamageFloating_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EndDamageFloating_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EndDamageFloating_Native");

	Params::RSBattleEnemy_C_EndDamageFloating_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnableFitGroundTmp_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EnableFitGroundTmp_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnableFitGroundTmp_Native");

	Params::RSBattleEnemy_C_EnableFitGroundTmp_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnableAllWeak_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EnableAllWeak_Native(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnableAllWeak_Native");

	Params::RSBattleEnemy_C_EnableAllWeak_Native Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DropFlyingEnemy_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::DropFlyingEnemy_Native(class AActor* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DropFlyingEnemy_Native");

	Params::RSBattleEnemy_C_DropFlyingEnemy_Native Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DisableFitGroundTmp_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::DisableFitGroundTmp_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DisableFitGroundTmp_Native");

	Params::RSBattleEnemy_C_DisableFitGroundTmp_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DeadStart_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::DeadStart_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DeadStart_Native");

	Params::RSBattleEnemy_C_DeadStart_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DamageMotionEnd_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::DamageMotionEnd_Native(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DamageMotionEnd_Native");

	Params::RSBattleEnemy_C_DamageMotionEnd_Native Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DamageFloatEnd_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::DamageFloatEnd_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DamageFloatEnd_Native");

	Params::RSBattleEnemy_C_DamageFloatEnd_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckSASHologramAttack_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESASHologramAttackTiming                Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSCharacterBase*                 RequestCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CheckSASHologramAttack_Native(ESASHologramAttackTiming Timing, class ARSCharacterBase* RequestCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckSASHologramAttack_Native");

	Params::RSBattleEnemy_C_CheckSASHologramAttack_Native Parms{};

	Parms.Timing = Timing;
	Parms.RequestCharacter = RequestCharacter;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckNpcDrive_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENpcDriveCheckType                      CheckType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           EnemyActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CheckNpcDrive_Native(ENpcDriveCheckType CheckType, class AActor* EnemyActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckNpcDrive_Native");

	Params::RSBattleEnemy_C_CheckNpcDrive_Native Parms{};

	Parms.CheckType = CheckType;
	Parms.EnemyActor = EnemyActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CameraAttentionEnd_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      FovCurveOut                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CameraAttentionEnd_Native(class UCurveFloat* FovCurveOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CameraAttentionEnd_Native");

	Params::RSBattleEnemy_C_CameraAttentionEnd_Native Parms{};

	Parms.FovCurveOut = FovCurveOut;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CallFuncDamageDownStart_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CallFuncDamageDownStart_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CallFuncDamageDownStart_Native");

	Params::RSBattleEnemy_C_CallFuncDamageDownStart_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CallFuncDamageDownLoop_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CallFuncDamageDownLoop_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CallFuncDamageDownLoop_Native");

	Params::RSBattleEnemy_C_CallFuncDamageDownLoop_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CallFuncDamageDownEnd_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CallFuncDamageDownEnd_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CallFuncDamageDownEnd_Native");

	Params::RSBattleEnemy_C_CallFuncDamageDownEnd_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CallDead_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::CallDead_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CallDead_Native");

	Params::RSBattleEnemy_C_CallDead_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BrainCrashLock_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::BrainCrashLock_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BrainCrashLock_Native");

	Params::RSBattleEnemy_C_BrainCrashLock_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsPossibleTargetAttack_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsPossibleTargetAttack_CallFromCPP(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsPossibleTargetAttack_CallFromCPP");

	Params::RSBattleEnemy_C_IsPossibleTargetAttack_CallFromCPP Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyStateAttack_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsEnemyStateAttack_CallFromCPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyStateAttack_CallFromCPP");

	Params::RSBattleEnemy_C_IsEnemyStateAttack_CallFromCPP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEndCrashChance_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::OnEndCrashChance_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEndCrashChance_Native");

	Params::RSBattleEnemy_C_OnEndCrashChance_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateMoveMaxSpeed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::UpdateMoveMaxSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateMoveMaxSpeed");

	Params::RSBattleEnemy_C_UpdateMoveMaxSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnemyUpdateEvDitherNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EnemyUpdateEvDitherNative(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnemyUpdateEvDitherNative");

	Params::RSBattleEnemy_C_EnemyUpdateEvDitherNative Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnemyStartEvDitherNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisp                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DitherTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EnemyStartEvDitherNative(bool bDisp, float DitherTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnemyStartEvDitherNative");

	Params::RSBattleEnemy_C_EnemyStartEvDitherNative Parms{};

	Parms.bDisp = bDisp;
	Parms.DitherTime = DitherTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnemyEndEvDitherNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisp                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::EnemyEndEvDitherNative(bool bDisp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnemyEndEvDitherNative");

	Params::RSBattleEnemy_C_EnemyEndEvDitherNative Parms{};

	Parms.bDisp = bDisp;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsFlyEnemyCheck_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsFlyEnemyCheck_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsFlyEnemyCheck_Native");

	Params::RSBattleEnemy_C_IsFlyEnemyCheck_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyDamageDown_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsEnemyDamageDown_CallFromCPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyDamageDown_CallFromCPP");

	Params::RSBattleEnemy_C_IsEnemyDamageDown_CallFromCPP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartReactionDilation_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   ReactionKind                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAddDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::StartReactionDilation_CallFromCPP(uint8 ReactionKind, bool bAddDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartReactionDilation_CallFromCPP");

	Params::RSBattleEnemy_C_StartReactionDilation_CallFromCPP Parms{};

	Parms.ReactionKind = ReactionKind;
	Parms.bAddDamage = bAddDamage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCheckLookScrollTick
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsCheckLookScrollTick(const struct FVector& Start, const struct FVector& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCheckLookScrollTick");

	Params::RSBattleEnemy_C_IsCheckLookScrollTick Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetTickEnableMeshOnly
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMeshOnly                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetTickEnableMeshOnly(bool bMeshOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetTickEnableMeshOnly");

	Params::RSBattleEnemy_C_SetTickEnableMeshOnly Parms{};

	Parms.bMeshOnly = bMeshOnly;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCheckSameCompareGroundLoaction
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsCheckSameCompareGroundLoaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCheckSameCompareGroundLoaction");

	Params::RSBattleEnemy_C_IsCheckSameCompareGroundLoaction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyConsiderDownDead
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::SetEnemyConsiderDownDead(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyConsiderDownDead");

	Params::RSBattleEnemy_C_SetEnemyConsiderDownDead Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyTribe
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEnemyTribe                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EEnemyTribe ARSBattleEnemy_C::GetEnemyTribe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyTribe");

	Params::RSBattleEnemy_C_GetEnemyTribe Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnCrashVisionDead
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::OnCrashVisionDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnCrashVisionDead");

	Params::RSBattleEnemy_C_OnCrashVisionDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnNotifyPlayerDead
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::OnNotifyPlayerDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnNotifyPlayerDead");

	Params::RSBattleEnemy_C_OnNotifyPlayerDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyInterfaceSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemySound                         Enum                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetEnemyInterfaceSound(Enum_EnemySound* Enum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyInterfaceSound");

	Params::RSBattleEnemy_C_GetEnemyInterfaceSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enum != nullptr)
		*Enum = Parms.Enum;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BeginEnemyAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyAttackAnimKind                     Attack                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BeginEnemyAttack(EnemyAttackAnimKind Attack, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BeginEnemyAttack");

	Params::RSBattleEnemy_C_BeginEnemyAttack Parms{};

	Parms.Attack = Attack;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyDamageDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyDamageDown(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyDamageDown");

	Params::RSBattleEnemy_C_IsEnemyDamageDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyDamageWince
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyDamageWince(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyDamageWince");

	Params::RSBattleEnemy_C_IsEnemyDamageWince Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyMoveAnimKind                       Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyMove(EnemyMoveAnimKind Move, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyMove");

	Params::RSBattleEnemy_C_IsEnemyMove Parms{};

	Parms.Move = Move;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BeginEnemyMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyMoveAnimKind                       Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BeginEnemyMove(EnemyMoveAnimKind Move, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BeginEnemyMove");

	Params::RSBattleEnemy_C_BeginEnemyMove Parms{};

	Parms.Move = Move;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyAttackAnimKind                     Attack                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyAttack(EnemyAttackAnimKind Attack, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyAttack");

	Params::RSBattleEnemy_C_IsEnemyAttack Parms{};

	Parms.Attack = Attack;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyActionAnimKind                     Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyAction(EnemyActionAnimKind Action, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyAction");

	Params::RSBattleEnemy_C_IsEnemyAction Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BeginEnemyAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyActionAnimKind                     Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BeginEnemyAction(EnemyActionAnimKind Action, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BeginEnemyAction");

	Params::RSBattleEnemy_C_BeginEnemyAction Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.isEnemyDamageBlow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyDamageBlow(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "isEnemyDamageBlow");

	Params::RSBattleEnemy_C_IsEnemyDamageBlow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyDamageknockBack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyDamageknockBack(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyDamageknockBack");

	Params::RSBattleEnemy_C_IsEnemyDamageknockBack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.isEnemyDamageLaunch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyDamageLaunch(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "isEnemyDamageLaunch");

	Params::RSBattleEnemy_C_IsEnemyDamageLaunch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyStateAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyStateAction(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyStateAction");

	Params::RSBattleEnemy_C_IsEnemyStateAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyStateDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyStateDamage(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyStateDamage");

	Params::RSBattleEnemy_C_IsEnemyStateDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyStateAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyStateAttack(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyStateAttack");

	Params::RSBattleEnemy_C_IsEnemyStateAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyStateMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyStateMove(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyStateMove");

	Params::RSBattleEnemy_C_IsEnemyStateMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyStateDamageDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyStateDamageDown(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyStateDamageDown");

	Params::RSBattleEnemy_C_IsEnemyStateDamageDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyBossActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyBossActive(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyBossActive");

	Params::RSBattleEnemy_C_IsEnemyBossActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyBrainCrashPerformance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyBrainCrashPerformance(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyBrainCrashPerformance");

	Params::RSBattleEnemy_C_SetEnemyBrainCrashPerformance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetEnemyTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ResetEnemyTarget(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetEnemyTarget");

	Params::RSBattleEnemy_C_ResetEnemyTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyTarget(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyTarget");

	Params::RSBattleEnemy_C_SetEnemyTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyDamageReaction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyDamageReaction(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyDamageReaction");

	Params::RSBattleEnemy_C_SetEnemyDamageReaction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyBrainFieldEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyBrainFieldEnd(bool MoveBrainField, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyBrainFieldEnd");

	Params::RSBattleEnemy_C_SetEnemyBrainFieldEnd Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyBrainFieldStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyBrainFieldStart(bool MoveBrainField, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyBrainFieldStart");

	Params::RSBattleEnemy_C_SetEnemyBrainFieldStart Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyGroundTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       Return                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetEnemyGroundTransform(const struct FTransform& Transform, struct FTransform* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyGroundTransform");

	Params::RSBattleEnemy_C_GetEnemyGroundTransform Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function RSBattleEnemy.RSBattleEnemy_C.ResetEnemyWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ResetEnemyWait(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ResetEnemyWait");

	Params::RSBattleEnemy_C_ResetEnemyWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyWait(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyWait");

	Params::RSBattleEnemy_C_SetEnemyWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnSwitchVisibleBrainFieldLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unused                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnSwitchVisibleBrainFieldLevel(bool Visible, bool* Unused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnSwitchVisibleBrainFieldLevel");

	Params::RSBattleEnemy_C_OnSwitchVisibleBrainFieldLevel Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);

	if (Unused != nullptr)
		*Unused = Parms.Unused;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyBrainCrashParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BrainCrashTimer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BrainCrashMissScale                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyBrainCrashParam(float BrainCrashTimer, float BrainCrashMissScale, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyBrainCrashParam");

	Params::RSBattleEnemy_C_SetEnemyBrainCrashParam Parms{};

	Parms.BrainCrashTimer = BrainCrashTimer;
	Parms.BrainCrashMissScale = BrainCrashMissScale;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyStealthSeeEnable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ShadowChange                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyStealthSeeEnable(bool On, bool ShadowChange, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyStealthSeeEnable");

	Params::RSBattleEnemy_C_SetEnemyStealthSeeEnable Parms{};

	Parms.On = On;
	Parms.ShadowChange = ShadowChange;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnableEnemyMoveRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReturn                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnableEnemyMoveRange(bool* bReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnableEnemyMoveRange");

	Params::RSBattleEnemy_C_IsEnableEnemyMoveRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturn != nullptr)
		*bReturn = Parms.bReturn;
}


// Function RSBattleEnemy.RSBattleEnemy_C.PlayerActionForEnemyReaction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// BattlePrototype::EPsychicObjectAttackTypePsychicObjectType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PsychicObjLocation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::PlayerActionForEnemyReaction(BattlePrototype::EPsychicObjectAttackType PsychicObjectType, const struct FVector& PsychicObjLocation, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "PlayerActionForEnemyReaction");

	Params::RSBattleEnemy_C_PlayerActionForEnemyReaction Parms{};

	Parms.PsychicObjectType = PsychicObjectType;
	Parms.PsychicObjLocation = std::move(PsychicObjLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EnemyDataDrop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_SpawnLocation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SpawnDir                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDrop                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EnemyDataDrop(const struct FVector& Param_SpawnLocation, const struct FVector& SpawnDir, bool* IsDrop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EnemyDataDrop");

	Params::RSBattleEnemy_C_EnemyDataDrop Parms{};

	Parms.Param_SpawnLocation = std::move(Param_SpawnLocation);
	Parms.SpawnDir = std::move(SpawnDir);

	UObject::ProcessEvent(Func, &Parms);

	if (IsDrop != nullptr)
		*IsDrop = Parms.IsDrop;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemySpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Spawn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemySpawn(bool Spawn, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemySpawn");

	Params::RSBattleEnemy_C_SetEnemySpawn Parms{};

	Parms.Spawn = Spawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SpawnStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SpawnStart(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SpawnStart");

	Params::RSBattleEnemy_C_SpawnStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHideWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsHideWeak                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHideWeak(bool* Param_IsHideWeak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHideWeak");

	Params::RSBattleEnemy_C_IsHideWeak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsHideWeak != nullptr)
		*Param_IsHideWeak = Parms.Param_IsHideWeak;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ReturnStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ReturnStart(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ReturnStart");

	Params::RSBattleEnemy_C_ReturnStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsAttacking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAttack                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsAttacking(bool* IsAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsAttacking");

	Params::RSBattleEnemy_C_IsAttacking Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsAttack != nullptr)
		*IsAttack = Parms.IsAttack;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSPartyPlayerKind                      TargetKind                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetTargetKind(ERSPartyPlayerKind* TargetKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetKind");

	Params::RSBattleEnemy_C_GetTargetKind Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetKind != nullptr)
		*TargetKind = Parms.TargetKind;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBrainCore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_co2000Base_C*                 CoreObject                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBrainCore(class ABP_co2000Base_C** CoreObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBrainCore");

	Params::RSBattleEnemy_C_GetBrainCore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CoreObject != nullptr)
		*CoreObject = Parms.CoreObject;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyStateFloating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFloating                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyStateFloating(bool* IsFloating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyStateFloating");

	Params::RSBattleEnemy_C_IsEnemyStateFloating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFloating != nullptr)
		*IsFloating = Parms.IsFloating;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcCameraShake
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           InputShakeClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputScale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShakeLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           OutputShakeClass                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutputScale                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::CalcCameraShake(class UClass* InputShakeClass, float InputScale, const struct FVector& ShakeLocation, class UClass** OutputShakeClass, float* OutputScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcCameraShake");

	Params::RSBattleEnemy_C_CalcCameraShake Parms{};

	Parms.InputShakeClass = InputShakeClass;
	Parms.InputScale = InputScale;
	Parms.ShakeLocation = std::move(ShakeLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputShakeClass != nullptr)
		*OutputShakeClass = Parms.OutputShakeClass;

	if (OutputScale != nullptr)
		*OutputScale = Parms.OutputScale;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyPressDownEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyPressDownEnd(bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyPressDownEnd");

	Params::RSBattleEnemy_C_SetEnemyPressDownEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.EndUniqueObjState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::EndUniqueObjState(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "EndUniqueObjState");

	Params::RSBattleEnemy_C_EndUniqueObjState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartUniqueObjState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         AttackObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartUniqueObjState(class ABP_PsychicObjectBasic_C* AttackObject, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartUniqueObjState");

	Params::RSBattleEnemy_C_StartUniqueObjState Parms{};

	Parms.AttackObject = AttackObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckUniqueObjState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CheckUniqueObjState(const struct FHCHitResult& HitResult, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckUniqueObjState");

	Params::RSBattleEnemy_C_CheckUniqueObjState Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUniqueObjState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_ReturnState                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsUniqueObjState(bool* Param_ReturnState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUniqueObjState");

	Params::RSBattleEnemy_C_IsUniqueObjState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ReturnState != nullptr)
		*Param_ReturnState = Parms.Param_ReturnState;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SwitchDispCore
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisplayOn                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SwitchDispCore(bool DisplayOn, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SwitchDispCore");

	Params::RSBattleEnemy_C_SwitchDispCore Parms{};

	Parms.DisplayOn = DisplayOn;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnStartCrashChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStart                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnStartCrashChance(bool* bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnStartCrashChance");

	Params::RSBattleEnemy_C_OnStartCrashChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bStart != nullptr)
		*bStart = Parms.bStart;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEndCrashChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnEndCrashChance(bool* bEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEndCrashChance");

	Params::RSBattleEnemy_C_OnEndCrashChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsPossibleTargetAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsPossibleTargetAttack(class AActor* Attacker, bool* bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsPossibleTargetAttack");

	Params::RSBattleEnemy_C_IsPossibleTargetAttack Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDisableLostAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsDisableLostAction(bool* bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDisableLostAction");

	Params::RSBattleEnemy_C_IsDisableLostAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisable != nullptr)
		*bDisable = Parms.bDisable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCoreCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDamagePartCollisionComponent*    CoreCollision                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetCoreCollision(class UDamagePartCollisionComponent** CoreCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCoreCollision");

	Params::RSBattleEnemy_C_GetCoreCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CoreCollision != nullptr)
		*CoreCollision = Parms.CoreCollision;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnSpawnMoveStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnSpawnMoveStart(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnSpawnMoveStart");

	Params::RSBattleEnemy_C_OnSpawnMoveStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEnemyBrainFieldResetAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMoveBrainField                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bReset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnEnemyBrainFieldResetAction(bool bMoveBrainField, bool* bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEnemyBrainFieldResetAction");

	Params::RSBattleEnemy_C_OnEnemyBrainFieldResetAction Parms{};

	Parms.bMoveBrainField = bMoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (bReset != nullptr)
		*bReset = Parms.bReset;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEnemyBrainFieldFinishWeapon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMoveBrainField                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnEnemyBrainFieldFinishWeapon(bool bMoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEnemyBrainFieldFinishWeapon");

	Params::RSBattleEnemy_C_OnEnemyBrainFieldFinishWeapon Parms{};

	Parms.bMoveBrainField = bMoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEnemyBrainFieldResetStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMoveBrainField                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnEnemyBrainFieldResetStatus(bool bMoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEnemyBrainFieldResetStatus");

	Params::RSBattleEnemy_C_OnEnemyBrainFieldResetStatus Parms{};

	Parms.bMoveBrainField = bMoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyBrainFieldMoveInner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyBrainFieldMoveInner(bool MoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyBrainFieldMoveInner");

	Params::RSBattleEnemy_C_SetEnemyBrainFieldMoveInner Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyBrainFieldMoveNormal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyBrainFieldMoveNormal(bool MoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyBrainFieldMoveNormal");

	Params::RSBattleEnemy_C_SetEnemyBrainFieldMoveNormal Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.OnEnemyBrainFieldCutChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::OnEnemyBrainFieldCutChange(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "OnEnemyBrainFieldCutChange");

	Params::RSBattleEnemy_C_OnEnemyBrainFieldCutChange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.ChangeAiType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemyAiType                        Param_ChangeAiType                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFailed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::ChangeAiType(Enum_EnemyAiType Param_ChangeAiType, bool* bFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "ChangeAiType");

	Params::RSBattleEnemy_C_ChangeAiType Parms{};

	Parms.Param_ChangeAiType = Param_ChangeAiType;

	UObject::ProcessEvent(Func, &Parms);

	if (bFailed != nullptr)
		*bFailed = Parms.bFailed;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CheckChangeAiTypeForHpRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Failed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CheckChangeAiTypeForHpRate(bool* Failed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CheckChangeAiTypeForHpRate");

	Params::RSBattleEnemy_C_CheckChangeAiTypeForHpRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Failed != nullptr)
		*Failed = Parms.Failed;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsChangeAiTypeAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemyAiType                        InAiType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsChangeAiTypeAction(Enum_EnemyAiType InAiType, bool* bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsChangeAiTypeAction");

	Params::RSBattleEnemy_C_IsChangeAiTypeAction Parms{};

	Parms.InAiType = InAiType;

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;
}


// Function RSBattleEnemy.RSBattleEnemy_C.em1200_ChangePhaseParamSetting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em1200_ChangePhaseParamSetting(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "em1200_ChangePhaseParamSetting");

	Params::RSBattleEnemy_C_Em1200_ChangePhaseParamSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.em1210_AddPSychicFlyObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         FlyObj                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em1210_AddPSychicFlyObj(class ABP_PsychicObjectBasic_C* FlyObj, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "em1210_AddPSychicFlyObj");

	Params::RSBattleEnemy_C_Em1210_AddPSychicFlyObj Parms{};

	Parms.FlyObj = FlyObj;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartReactionDilation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   ReactionKind                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AddDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartReactionDilation(uint8 ReactionKind, bool AddDamage, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartReactionDilation");

	Params::RSBattleEnemy_C_StartReactionDilation Parms{};

	Parms.ReactionKind = ReactionKind;
	Parms.AddDamage = AddDamage;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyDiscoveredOnceInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDiscoverd                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyDiscoveredOnceInterface(bool* bDiscoverd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyDiscoveredOnceInterface");

	Params::RSBattleEnemy_C_IsEnemyDiscoveredOnceInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDiscoverd != nullptr)
		*bDiscoverd = Parms.bDiscoverd;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Em0700_EnableInvalidDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em0700_EnableInvalidDamage(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Em0700_EnableInvalidDamage");

	Params::RSBattleEnemy_C_Em0700_EnableInvalidDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Em1400_StartDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TotalDuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em1400_StartDither(float TotalDuration, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Em1400_StartDither");

	Params::RSBattleEnemy_C_Em1400_StartDither Parms{};

	Parms.TotalDuration = TotalDuration;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Em1400_EndDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em1400_EndDither(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Em1400_EndDither");

	Params::RSBattleEnemy_C_Em1400_EndDither Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Em1400_UpdateDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEasingFunc                             EasingFunc                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em1400_UpdateDither(EEasingFunc EasingFunc, float DeltaSec, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Em1400_UpdateDither");

	Params::RSBattleEnemy_C_Em1400_UpdateDither Parms{};

	Parms.EasingFunc = EasingFunc;
	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Em1400_SetSpawnTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em1400_SetSpawnTransform(const struct FTransform& SpawnTransform, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Em1400_SetSpawnTransform");

	Params::RSBattleEnemy_C_Em1400_SetSpawnTransform Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Em1400_GetSpawnTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawTransform                                          (Parm, OutParm, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em1400_GetSpawnTransform(struct FTransform* SpawTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Em1400_GetSpawnTransform");

	Params::RSBattleEnemy_C_Em1400_GetSpawnTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpawTransform != nullptr)
		*SpawTransform = std::move(Parms.SpawTransform);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBrainFieldEnemyAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnemyAlive                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsBrainFieldEnemyAlive(bool* bEnemyAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBrainFieldEnemyAlive");

	Params::RSBattleEnemy_C_IsBrainFieldEnemyAlive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnemyAlive != nullptr)
		*bEnemyAlive = Parms.bEnemyAlive;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSwitchAttackCollisionInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSwitch                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsSwitchAttackCollisionInfo(bool* IsSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSwitchAttackCollisionInfo");

	Params::RSBattleEnemy_C_IsSwitchAttackCollisionInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSwitch != nullptr)
		*IsSwitch = Parms.IsSwitch;
}


// Function RSBattleEnemy.RSBattleEnemy_C.SetEnemyUpDownWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DownWait                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::SetEnemyUpDownWait(bool DownWait, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "SetEnemyUpDownWait");

	Params::RSBattleEnemy_C_SetEnemyUpDownWait Parms{};

	Parms.DownWait = DownWait;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyUpDownWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bUpDownWait                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyUpDownWait(bool* Param_bUpDownWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyUpDownWait");

	Params::RSBattleEnemy_C_IsEnemyUpDownWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bUpDownWait != nullptr)
		*Param_bUpDownWait = Parms.Param_bUpDownWait;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartCriticalHitSlow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     InHitResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartCriticalHitSlow(const struct FHCHitResult& InHitResult, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartCriticalHitSlow");

	Params::RSBattleEnemy_C_StartCriticalHitSlow Parms{};

	Parms.InHitResult = std::move(InHitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.em1130_EnableWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em1130_EnableWeak(bool bEnable, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "em1130_EnableWeak");

	Params::RSBattleEnemy_C_Em1130_EnableWeak Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemySpawnConditionCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpawnOK                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetEnemySpawnConditionCheck(bool* IsSpawnOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemySpawnConditionCheck");

	Params::RSBattleEnemy_C_GetEnemySpawnConditionCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSpawnOK != nullptr)
		*IsSpawnOK = Parms.IsSpawnOK;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartEnemyCrashVisionHitEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartEnemyCrashVisionHitEffect(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartEnemyCrashVisionHitEffect");

	Params::RSBattleEnemy_C_StartEnemyCrashVisionHitEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.StartEnemyCrashVisionHitUniqueEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::StartEnemyCrashVisionHitUniqueEffect(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "StartEnemyCrashVisionHitUniqueEffect");

	Params::RSBattleEnemy_C_StartEnemyCrashVisionHitUniqueEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BindingCrashVisionEnemy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BindingCrashVisionEnemy(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BindingCrashVisionEnemy");

	Params::RSBattleEnemy_C_BindingCrashVisionEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.em8300_DeadBattleSimulator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em8300_DeadBattleSimulator(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "em8300_DeadBattleSimulator");

	Params::RSBattleEnemy_C_Em8300_DeadBattleSimulator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyRepop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Repop                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyRepop(bool* Repop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyRepop");

	Params::RSBattleEnemy_C_IsEnemyRepop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Repop != nullptr)
		*Repop = Parms.Repop;
}


// Function RSBattleEnemy.RSBattleEnemy_C.getEmPosDiscover
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          DiscoverPos                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetEmPosDiscover(struct FVector* DiscoverPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "getEmPosDiscover");

	Params::RSBattleEnemy_C_GetEmPosDiscover Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DiscoverPos != nullptr)
		*DiscoverPos = std::move(Parms.DiscoverPos);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNeedResetStateMachine
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ResetSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsNeedResetStateMachine(float ElapsedTime, float ResetSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNeedResetStateMachine");

	Params::RSBattleEnemy_C_IsNeedResetStateMachine Parms{};

	Parms.ElapsedTime = ElapsedTime;
	Parms.ResetSecond = ResetSecond;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetAndUpdateContinuousSameDamageReaction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::GetAndUpdateContinuousSameDamageReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetAndUpdateContinuousSameDamageReaction");

	Params::RSBattleEnemy_C_GetAndUpdateContinuousSameDamageReaction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetIsBattleMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    IsBattleMode                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetIsBattleMode(bool* IsBattleMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetIsBattleMode");

	Params::RSBattleEnemy_C_GetIsBattleMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBattleMode != nullptr)
		*IsBattleMode = Parms.IsBattleMode;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBattling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bBatting                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsBattling(bool* bBatting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBattling");

	Params::RSBattleEnemy_C_IsBattling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBatting != nullptr)
		*bBatting = Parms.bBatting;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsTargetEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsTargetEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsTargetEnemy");

	Params::RSBattleEnemy_C_IsTargetEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsArmor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              Prim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsArmor(class UPrimitiveComponent* Prim, bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsArmor");

	Params::RSBattleEnemy_C_IsArmor Parms{};

	Parms.Prim = Prim;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDamagePartDir
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UDamagePartCollisionComponent*    DamagePart                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ARSBattleEnemy_C::GetDamagePartDir(class UDamagePartCollisionComponent* DamagePart) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDamagePartDir");

	Params::RSBattleEnemy_C_GetDamagePartDir Parms{};

	Parms.DamagePart = DamagePart;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyEnumLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetEnemyEnumLength(int32* Length) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyEnumLength");

	Params::RSBattleEnemy_C_GetEnemyEnumLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHitWall
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          Src                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Dst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHit                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHitWall(const struct FVector& Src, const struct FVector& Dst, bool* IsHit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHitWall");

	Params::RSBattleEnemy_C_IsHitWall Parms{};

	Parms.Src = std::move(Src);
	Parms.Dst = std::move(Dst);

	UObject::ProcessEvent(Func, &Parms);

	if (IsHit != nullptr)
		*IsHit = Parms.IsHit;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsRangeArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          HomePos                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurPos                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Range                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InRange                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsRangeArea(const struct FVector& HomePos, const struct FVector& CurPos, float Range, bool* InRange) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsRangeArea");

	Params::RSBattleEnemy_C_IsRangeArea Parms{};

	Parms.HomePos = std::move(HomePos);
	Parms.CurPos = std::move(CurPos);
	Parms.Range = Range;

	UObject::ProcessEvent(Func, &Parms);

	if (InRange != nullptr)
		*InRange = Parms.InRange;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetRandomRangeLocationCore
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          SrcLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RangeMin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RangeMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckWall                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ANavigationData*                  NaviData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetRandomRangeLocationCore(const struct FVector& SrcLocation, const struct FVector& TargetLocation, float RangeMin, float RangeMax, bool CheckWall, class ANavigationData* NaviData, struct FVector* NewLocation, bool* IsSuccess) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetRandomRangeLocationCore");

	Params::RSBattleEnemy_C_GetRandomRangeLocationCore Parms{};

	Parms.SrcLocation = std::move(SrcLocation);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.RangeMin = RangeMin;
	Parms.RangeMax = RangeMax;
	Parms.CheckWall = CheckWall;
	Parms.NaviData = NaviData;

	UObject::ProcessEvent(Func, &Parms);

	if (NewLocation != nullptr)
		*NewLocation = std::move(Parms.NewLocation);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetInvisibleHPGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsInvisible                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetInvisibleHPGauge(bool* IsInvisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetInvisibleHPGauge");

	Params::RSBattleEnemy_C_GetInvisibleHPGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsInvisible != nullptr)
		*IsInvisible = Parms.IsInvisible;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetRangeType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// Enum_EnemyRange                         RangeType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetTargetRangeType(Enum_EnemyRange* RangeType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetRangeType");

	Params::RSBattleEnemy_C_GetTargetRangeType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RangeType != nullptr)
		*RangeType = Parms.RangeType;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetRangeActions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// Enum_EnemyRange                         RangeType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<uint8>                           Actions                                                (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetRangeActions(Enum_EnemyRange RangeType, TArray<uint8>* Actions) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetRangeActions");

	Params::RSBattleEnemy_C_GetRangeActions Parms{};

	Parms.RangeType = RangeType;

	UObject::ProcessEvent(Func, &Parms);

	if (Actions != nullptr)
		*Actions = std::move(Parms.Actions);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetWeakTargetPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          AttackerPos                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetWeakTargetPoint(const struct FVector& AttackerPos, struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetWeakTargetPoint");

	Params::RSBattleEnemy_C_GetWeakTargetPoint Parms{};

	Parms.AttackerPos = std::move(AttackerPos);

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTopTargetPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetTopTargetPoint(struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTopTargetPoint");

	Params::RSBattleEnemy_C_GetTopTargetPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetCursorPoint
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetTargetCursorPoint(struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetCursorPoint");

	Params::RSBattleEnemy_C_GetTargetCursorPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsStateStealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsStateStealth(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsStateStealth");

	Params::RSBattleEnemy_C_IsStateStealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Is Brain Crash Dead State
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_IsBrainCrashDead                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Is_Brain_Crash_Dead_State(bool* Param_IsBrainCrashDead) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Is Brain Crash Dead State");

	Params::RSBattleEnemy_C_Is_Brain_Crash_Dead_State Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsBrainCrashDead != nullptr)
		*Param_IsBrainCrashDead = Parms.Param_IsBrainCrashDead;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetWeakUIPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetWeakUIPoint(int32 Param_Index, struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetWeakUIPoint");

	Params::RSBattleEnemy_C_GetWeakUIPoint Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCollisionHitWall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsCollisionHitWall(bool* bHit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCollisionHitWall");

	Params::RSBattleEnemy_C_IsCollisionHitWall Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCollisionHitChara
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsCollisionHitChara(bool* bHit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCollisionHitChara");

	Params::RSBattleEnemy_C_IsCollisionHitChara Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCollisionHitAny
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsCollisionHitAny(bool* bHit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCollisionHitAny");

	Params::RSBattleEnemy_C_IsCollisionHitAny Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetMoveActions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<uint8>                           Actions                                                (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetMoveActions(TArray<uint8>* Actions) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetMoveActions");

	Params::RSBattleEnemy_C_GetMoveActions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actions != nullptr)
		*Actions = std::move(Parms.Actions);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetRangeDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// Enum_EnemyRange                         RangeType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetRangeDistance(Enum_EnemyRange RangeType, float* Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetRangeDistance");

	Params::RSBattleEnemy_C_GetRangeDistance Parms{};

	Parms.RangeType = RangeType;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNotVanish
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    NotVanish                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsNotVanish(bool* NotVanish) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNotVanish");

	Params::RSBattleEnemy_C_IsNotVanish Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NotVanish != nullptr)
		*NotVanish = Parms.NotVanish;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHitWallCapsule
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          CheckLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHit                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHitWallCapsule(const struct FVector& CheckLocation, bool* IsHit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHitWallCapsule");

	Params::RSBattleEnemy_C_IsHitWallCapsule Parms{};

	Parms.CheckLocation = std::move(CheckLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (IsHit != nullptr)
		*IsHit = Parms.IsHit;
}


// Function RSBattleEnemy.RSBattleEnemy_C.InMoveArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          CheckLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AreaScale                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InArea                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::InMoveArea(const struct FVector& CheckLocation, float AreaScale, bool* InArea) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InMoveArea");

	Params::RSBattleEnemy_C_InMoveArea Parms{};

	Parms.CheckLocation = std::move(CheckLocation);
	Parms.AreaScale = AreaScale;

	UObject::ProcessEvent(Func, &Parms);

	if (InArea != nullptr)
		*InArea = Parms.InArea;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsTargetable
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsTargetable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsTargetable");

	Params::RSBattleEnemy_C_IsTargetable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyBaseLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          baseLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetEnemyBaseLocation(struct FVector* baseLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyBaseLocation");

	Params::RSBattleEnemy_C_GetEnemyBaseLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (baseLocation != nullptr)
		*baseLocation = std::move(Parms.baseLocation);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsIgnoreVisionFog
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsIgnoreVisionFog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsIgnoreVisionFog");

	Params::RSBattleEnemy_C_IsIgnoreVisionFog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBodyMeshArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class USkeletalMeshComponent*>   MeshArray                                              (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBodyMeshArray(TArray<class USkeletalMeshComponent*>* MeshArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBodyMeshArray");

	Params::RSBattleEnemy_C_GetBodyMeshArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshArray != nullptr)
		*MeshArray = std::move(Parms.MeshArray);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSimpleEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsSimple                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsSimpleEnemy(bool* IsSimple) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSimpleEnemy");

	Params::RSBattleEnemy_C_IsSimpleEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSimple != nullptr)
		*IsSimple = Parms.IsSimple;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBrainCrashRange
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARSBattleEnemy_C::GetBrainCrashRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBrainCrashRange");

	Params::RSBattleEnemy_C_GetBrainCrashRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CalcRangeType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   CheckDistance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_EnemyRange                         RangeType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::CalcRangeType(float CheckDistance, Enum_EnemyRange* RangeType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CalcRangeType");

	Params::RSBattleEnemy_C_CalcRangeType Parms{};

	Parms.CheckDistance = CheckDistance;

	UObject::ProcessEvent(Func, &Parms);

	if (RangeType != nullptr)
		*RangeType = Parms.RangeType;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetMainPlayerRangeType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// Enum_EnemyRange                         RangeType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetMainPlayerRangeType(Enum_EnemyRange* RangeType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetMainPlayerRangeType");

	Params::RSBattleEnemy_C_GetMainPlayerRangeType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RangeType != nullptr)
		*RangeType = Parms.RangeType;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsIdleResetMoveMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bReset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsIdleResetMoveMode(bool* bReset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsIdleResetMoveMode");

	Params::RSBattleEnemy_C_IsIdleResetMoveMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReset != nullptr)
		*bReset = Parms.bReset;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsInvisibleHPGauge
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bInvisible                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsInvisibleHPGauge(bool* bInvisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsInvisibleHPGauge");

	Params::RSBattleEnemy_C_IsInvisibleHPGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bInvisible != nullptr)
		*bInvisible = Parms.bInvisible;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBerserkCharacter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsBerserkCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBerserkCharacter");

	Params::RSBattleEnemy_C_IsBerserkCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetSpecialDamageTableType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ESpecialDamageTableType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESpecialDamageTableType ARSBattleEnemy_C::GetSpecialDamageTableType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetSpecialDamageTableType");

	Params::RSBattleEnemy_C_GetSpecialDamageTableType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCrashChanceCursorPoint
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetCrashChanceCursorPoint(struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCrashChanceCursorPoint");

	Params::RSBattleEnemy_C_GetCrashChanceCursorPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetHpGaugePoint
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetHpGaugePoint(struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetHpGaugePoint");

	Params::RSBattleEnemy_C_GetHpGaugePoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBrainCrashAccess
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsBrainCrashAccess() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBrainCrashAccess");

	Params::RSBattleEnemy_C_IsBrainCrashAccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBrainCrashSuccess
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsBrainCrashSuccess() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBrainCrashSuccess");

	Params::RSBattleEnemy_C_IsBrainCrashSuccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugMakeMotionInfoText
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             InfoText                                               (Parm, OutParm)

void ARSBattleEnemy_C::DebugMakeMotionInfoText(class FText* InfoText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugMakeMotionInfoText");

	Params::RSBattleEnemy_C_DebugMakeMotionInfoText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfoText != nullptr)
		*InfoText = std::move(Parms.InfoText);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSpawnWait
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bSpawnWait                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsSpawnWait(bool* bSpawnWait) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSpawnWait");

	Params::RSBattleEnemy_C_IsSpawnWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSpawnWait != nullptr)
		*bSpawnWait = Parms.bSpawnWait;
}


// Function RSBattleEnemy.RSBattleEnemy_C.UpdateEnableIK
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::UpdateEnableIK(bool* Dummy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "UpdateEnableIK");

	Params::RSBattleEnemy_C_UpdateEnableIK Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSuspendIKCondition
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsSuspendIKCondition(bool* bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSuspendIKCondition");

	Params::RSBattleEnemy_C_IsSuspendIKCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBrainCrashMiss
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    IsMiss                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsBrainCrashMiss(bool* IsMiss) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBrainCrashMiss");

	Params::RSBattleEnemy_C_IsBrainCrashMiss Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMiss != nullptr)
		*IsMiss = Parms.IsMiss;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHitFromMainPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHitFromMainPlayer(class AActor* Attacker, bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHitFromMainPlayer");

	Params::RSBattleEnemy_C_IsHitFromMainPlayer Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.CanTakeBrainField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    CanTake                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::CanTakeBrainField(bool* CanTake) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "CanTakeBrainField");

	Params::RSBattleEnemy_C_CanTakeBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanTake != nullptr)
		*CanTake = Parms.CanTake;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsHitWeak_ChangeDefaultEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ChangeDefault                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsHitWeak_ChangeDefaultEffect(bool* ChangeDefault) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsHitWeak_ChangeDefaultEffect");

	Params::RSBattleEnemy_C_IsHitWeak_ChangeDefaultEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChangeDefault != nullptr)
		*ChangeDefault = Parms.ChangeDefault;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugGetUniqueConditionText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class FText>                     Text                                                   (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::DebugGetUniqueConditionText(TArray<class FText>* Text) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugGetUniqueConditionText");

	Params::RSBattleEnemy_C_DebugGetUniqueConditionText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCurrentTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bTarget                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsCurrentTarget(bool* bTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCurrentTarget");

	Params::RSBattleEnemy_C_IsCurrentTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTarget != nullptr)
		*bTarget = Parms.bTarget;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugIsEnableUniqueCondition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   ConditionNo                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EnableCondition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugIsEnableUniqueCondition(int32 ConditionNo, bool* EnableCondition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugIsEnableUniqueCondition");

	Params::RSBattleEnemy_C_DebugIsEnableUniqueCondition Parms{};

	Parms.ConditionNo = ConditionNo;

	UObject::ProcessEvent(Func, &Parms);

	if (EnableCondition != nullptr)
		*EnableCondition = Parms.EnableCondition;
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugFindIgnoreAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// uint8                                   Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Find                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugFindIgnoreAction(uint8 Action, bool* Find) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugFindIgnoreAction");

	Params::RSBattleEnemy_C_DebugFindIgnoreAction Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	if (Find != nullptr)
		*Find = Parms.Find;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnableSlashEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnableSlashEffect(struct FHCHitResult& HitResult, bool* bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnableSlashEffect");

	Params::RSBattleEnemy_C_IsEnableSlashEffect Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsIdleMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsIdle                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsIdleMove(bool* IsIdle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsIdleMove");

	Params::RSBattleEnemy_C_IsIdleMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsIdle != nullptr)
		*IsIdle = Parms.IsIdle;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetWeakTargetTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          AttackerPos                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       WeakTransform                                          (Parm, OutParm, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetWeakTargetTransform(const struct FVector& AttackerPos, struct FTransform* WeakTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetWeakTargetTransform");

	Params::RSBattleEnemy_C_GetWeakTargetTransform Parms{};

	Parms.AttackerPos = std::move(AttackerPos);

	UObject::ProcessEvent(Func, &Parms);

	if (WeakTransform != nullptr)
		*WeakTransform = std::move(Parms.WeakTransform);
}


// Function RSBattleEnemy.RSBattleEnemy_C.DebugDisplayAiBasic
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::DebugDisplayAiBasic(bool* Dummy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "DebugDisplayAiBasic");

	Params::RSBattleEnemy_C_DebugDisplayAiBasic Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEyePosition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ARSBattleEnemy_C::GetEyePosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEyePosition");

	Params::RSBattleEnemy_C_GetEyePosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyFindChangeParam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FEnemyFindChangeParam            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FEnemyFindChangeParam ARSBattleEnemy_C::GetEnemyFindChangeParam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyFindChangeParam");

	Params::RSBattleEnemy_C_GetEnemyFindChangeParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBadStateIconParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EHCBadState                             BadType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBadStateAddParticleData         ParamData                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBadStateIconParam(EHCBadState BadType, struct FBadStateAddParticleData* ParamData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBadStateIconParam");

	Params::RSBattleEnemy_C_GetBadStateIconParam Parms{};

	Parms.BadType = BadType;

	UObject::ProcessEvent(Func, &Parms);

	if (ParamData != nullptr)
		*ParamData = std::move(Parms.ParamData);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBadStateIconCameraOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBadStateIconCameraOffset(float* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBadStateIconCameraOffset");

	Params::RSBattleEnemy_C_GetBadStateIconCameraOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsInvincible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_bInvincible                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsInvincible(bool* Param_bInvincible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsInvincible");

	Params::RSBattleEnemy_C_IsInvincible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bInvincible != nullptr)
		*Param_bInvincible = Parms.Param_bInvincible;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDownTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetDownTime(float* Time) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDownTime");

	Params::RSBattleEnemy_C_GetDownTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsInvisibleMiniMap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsInvisibleMiniMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsInvisibleMiniMap");

	Params::RSBattleEnemy_C_IsInvisibleMiniMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsReceiveSasEffectAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    CheckAccelerator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ChackTelepo                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CheckStealth                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CheckStealthSee                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CheckMetal                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReceivedSas                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsReceiveSasEffectAttack(bool CheckAccelerator, bool ChackTelepo, bool CheckStealth, bool CheckStealthSee, bool CheckMetal, class AActor* AttackActor, bool* ReceivedSas) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsReceiveSasEffectAttack");

	Params::RSBattleEnemy_C_IsReceiveSasEffectAttack Parms{};

	Parms.CheckAccelerator = CheckAccelerator;
	Parms.ChackTelepo = ChackTelepo;
	Parms.CheckStealth = CheckStealth;
	Parms.CheckStealthSee = CheckStealthSee;
	Parms.CheckMetal = CheckMetal;
	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);

	if (ReceivedSas != nullptr)
		*ReceivedSas = Parms.ReceivedSas;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetAssasinAttackHitType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EAssassinAttackHit                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EAssassinAttackHit ARSBattleEnemy_C::GetAssasinAttackHitType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetAssasinAttackHitType");

	Params::RSBattleEnemy_C_GetAssasinAttackHitType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.BadStateEffectDispSwitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bInDisp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::BadStateEffectDispSwitch(bool bInDisp, bool* bSuccess) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "BadStateEffectDispSwitch");

	Params::RSBattleEnemy_C_BadStateEffectDispSwitch Parms{};

	Parms.bInDisp = bInDisp;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetWeakTargetSocketName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     SocketName                                             (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetWeakTargetSocketName(TArray<class FName>* SocketName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetWeakTargetSocketName");

	Params::RSBattleEnemy_C_GetWeakTargetSocketName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SocketName != nullptr)
		*SocketName = std::move(Parms.SocketName);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTickIntervalSeconds
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EEnemyTickPriorityType                  PriorityType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DefaultSeconds                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxSeconds                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetTickIntervalSeconds(EEnemyTickPriorityType PriorityType, float* DefaultSeconds, float* MaxSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTickIntervalSeconds");

	Params::RSBattleEnemy_C_GetTickIntervalSeconds Parms{};

	Parms.PriorityType = PriorityType;

	UObject::ProcessEvent(Func, &Parms);

	if (DefaultSeconds != nullptr)
		*DefaultSeconds = Parms.DefaultSeconds;

	if (MaxSeconds != nullptr)
		*MaxSeconds = Parms.MaxSeconds;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsExecSometimeTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bExec                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsExecSometimeTick(bool* bExec) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsExecSometimeTick");

	Params::RSBattleEnemy_C_IsExecSometimeTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExec != nullptr)
		*bExec = Parms.bExec;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBrainFieldProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// Enum_EnemyBrainFieldProgress            Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBrainFieldProgress(Enum_EnemyBrainFieldProgress* Progress) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBrainFieldProgress");

	Params::RSBattleEnemy_C_GetBrainFieldProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUseWaitNoInterpolation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bUse                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsUseWaitNoInterpolation(bool* bUse) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUseWaitNoInterpolation");

	Params::RSBattleEnemy_C_IsUseWaitNoInterpolation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bUse != nullptr)
		*bUse = Parms.bUse;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetInitRotationRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetInitRotationRate(struct FRotator* Rotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetInitRotationRate");

	Params::RSBattleEnemy_C_GetInitRotationRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCurrentActionRotationScaleRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetCurrentActionRotationScaleRate(float* Scale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCurrentActionRotationScaleRate");

	Params::RSBattleEnemy_C_GetCurrentActionRotationScaleRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetArmorPartsList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<int32>                           Armor                                                  (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetArmorPartsList(TArray<int32>* Armor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetArmorPartsList");

	Params::RSBattleEnemy_C_GetArmorPartsList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Armor != nullptr)
		*Armor = std::move(Parms.Armor);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBrainCrashSequenceEm8300
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    IsUnique                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ULevelSequence*                   Sequence                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBrainCrashSequenceEm8300(bool IsUnique, class ULevelSequence** Sequence) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBrainCrashSequenceEm8300");

	Params::RSBattleEnemy_C_GetBrainCrashSequenceEm8300 Parms{};

	Parms.IsUnique = IsUnique;

	UObject::ProcessEvent(Func, &Parms);

	if (Sequence != nullptr)
		*Sequence = Parms.Sequence;
}


// Function RSBattleEnemy.RSBattleEnemy_C.InBrainFieldProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    InBrainField                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::InBrainFieldProgress(bool* InBrainField) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "InBrainFieldProgress");

	Params::RSBattleEnemy_C_InBrainFieldProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InBrainField != nullptr)
		*InBrainField = Parms.InBrainField;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNotAbleBrainCrashTarget
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsNotAbleBrainCrashTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNotAbleBrainCrashTarget");

	Params::RSBattleEnemy_C_IsNotAbleBrainCrashTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsPlayerOutOfBattleFieldFence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsPlayerOutOfBattleFieldFence(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsPlayerOutOfBattleFieldFence");

	Params::RSBattleEnemy_C_IsPlayerOutOfBattleFieldFence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUseBattleFieldFence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsUseBattleFieldFence(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUseBattleFieldFence");

	Params::RSBattleEnemy_C_IsUseBattleFieldFence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNotApplyPhotoModeMeshProfile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bNotApply                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsNotApplyPhotoModeMeshProfile(bool* bNotApply) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNotApplyPhotoModeMeshProfile");

	Params::RSBattleEnemy_C_IsNotApplyPhotoModeMeshProfile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNotApply != nullptr)
		*bNotApply = Parms.bNotApply;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDebugInvincible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsDebugInvincible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDebugInvincible");

	Params::RSBattleEnemy_C_IsDebugInvincible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDamageHitDirectionIF
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ARSBattleEnemy_C::GetDamageHitDirectionIF() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDamageHitDirectionIF");

	Params::RSBattleEnemy_C_GetDamageHitDirectionIF Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCurrentTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* ARSBattleEnemy_C::GetCurrentTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCurrentTarget");

	Params::RSBattleEnemy_C_GetCurrentTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsReflectContainer
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsReflectContainer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsReflectContainer");

	Params::RSBattleEnemy_C_IsReflectContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsExecLowProcess
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsExecLowProcess() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsExecLowProcess");

	Params::RSBattleEnemy_C_IsExecLowProcess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTopHeightLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ARSBattleEnemy_C::GetTopHeightLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTopHeightLocation");

	Params::RSBattleEnemy_C_GetTopHeightLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyAiComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UEnemyAiComponentBase*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UEnemyAiComponentBase* ARSBattleEnemy_C::GetEnemyAiComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyAiComponent");

	Params::RSBattleEnemy_C_GetEnemyAiComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyScriptComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UEnemyScriptComponent*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UEnemyScriptComponent* ARSBattleEnemy_C::GetEnemyScriptComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyScriptComponent");

	Params::RSBattleEnemy_C_GetEnemyScriptComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUpdateEnemyTickEnable
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsUpdateEnemyTickEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUpdateEnemyTickEnable");

	Params::RSBattleEnemy_C_IsUpdateEnemyTickEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUpdateEnemySpawn
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsUpdateEnemySpawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUpdateEnemySpawn");

	Params::RSBattleEnemy_C_IsUpdateEnemySpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsTickDisableCondition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsTickDisableCondition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsTickDisableCondition");

	Params::RSBattleEnemy_C_IsTickDisableCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemySpawn_Interface
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsEnemySpawn_Interface() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemySpawn_Interface");

	Params::RSBattleEnemy_C_IsEnemySpawn_Interface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyFalling_Interface
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsEnemyFalling_Interface() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyFalling_Interface");

	Params::RSBattleEnemy_C_IsEnemyFalling_Interface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCheckHeightChangeTick
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsCheckHeightChangeTick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCheckHeightChangeTick");

	Params::RSBattleEnemy_C_IsCheckHeightChangeTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDisableUroAction_Interface
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsDisableUroAction_Interface() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDisableUroAction_Interface");

	Params::RSBattleEnemy_C_IsDisableUroAction_Interface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsCheckLookTargetTick
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsCheckLookTargetTick(const struct FVector& Start, const struct FVector& End) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsCheckLookTargetTick");

	Params::RSBattleEnemy_C_IsCheckLookTargetTick Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemyAnimControllerComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UEnemyAnimControllerComponent*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UEnemyAnimControllerComponent* ARSBattleEnemy_C::GetEnemyAnimControllerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemyAnimControllerComponent");

	Params::RSBattleEnemy_C_GetEnemyAnimControllerComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsPressDown_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsPressDown_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsPressDown_Native");

	Params::RSBattleEnemy_C_IsPressDown_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsLaunchDown_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsLaunchDown_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsLaunchDown_Native");

	Params::RSBattleEnemy_C_IsLaunchDown_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDamageMotionEnd_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsDamageMotionEnd_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDamageMotionEnd_Native");

	Params::RSBattleEnemy_C_IsDamageMotionEnd_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBrainSuccess_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsBrainSuccess_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBrainSuccess_Native");

	Params::RSBattleEnemy_C_IsBrainSuccess_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetCharacter_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* ARSBattleEnemy_C::GetTargetCharacter_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetCharacter_Native");

	Params::RSBattleEnemy_C_GetTargetCharacter_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetPressDownLoop_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::GetPressDownLoop_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetPressDownLoop_Native");

	Params::RSBattleEnemy_C_GetPressDownLoop_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetNewDamageFloating_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::GetNewDamageFloating_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetNewDamageFloating_Native");

	Params::RSBattleEnemy_C_GetNewDamageFloating_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetLostActionInfoList_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<struct FEmLostActionInfo>        LostActionInfo                                         (Parm, OutParm, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetLostActionInfoList_Native(TArray<struct FEmLostActionInfo>* LostActionInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetLostActionInfoList_Native");

	Params::RSBattleEnemy_C_GetLostActionInfoList_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LostActionInfo != nullptr)
		*LostActionInfo = std::move(Parms.LostActionInfo);
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetIsLandCheck
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::GetIsLandCheck() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetIsLandCheck");

	Params::RSBattleEnemy_C_GetIsLandCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetIsJumpEnd
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::GetIsJumpEnd() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetIsJumpEnd");

	Params::RSBattleEnemy_C_GetIsJumpEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetHateTarget_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UHateTargetComponent*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UHateTargetComponent* ARSBattleEnemy_C::GetHateTarget_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetHateTarget_Native");

	Params::RSBattleEnemy_C_GetHateTarget_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDownUpMoveAnimKind_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EnemyMoveAnimKind                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EnemyMoveAnimKind ARSBattleEnemy_C::GetDownUpMoveAnimKind_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDownUpMoveAnimKind_Native");

	Params::RSBattleEnemy_C_GetDownUpMoveAnimKind_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDownTimer_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARSBattleEnemy_C::GetDownTimer_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDownTimer_Native");

	Params::RSBattleEnemy_C_GetDownTimer_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDebugEnemyDownInfinity_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::GetDebugEnemyDownInfinity_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDebugEnemyDownInfinity_Native");

	Params::RSBattleEnemy_C_GetDebugEnemyDownInfinity_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetCapsuleComponent_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UCapsuleComponent*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UCapsuleComponent* ARSBattleEnemy_C::GetCapsuleComponent_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetCapsuleComponent_Native");

	Params::RSBattleEnemy_C_GetCapsuleComponent_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsWeakUiDamageHit_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsWeakUiDamageHit_CallFromCPP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsWeakUiDamageHit_CallFromCPP");

	Params::RSBattleEnemy_C_IsWeakUiDamageHit_CallFromCPP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNotFindPlayer_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsNotFindPlayer_CallFromCPP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNotFindPlayer_CallFromCPP");

	Params::RSBattleEnemy_C_IsNotFindPlayer_CallFromCPP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsUniqueAroundEffectPause
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsUniqueAroundEffectPause() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsUniqueAroundEffectPause");

	Params::RSBattleEnemy_C_IsUniqueAroundEffectPause Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetUniqueTickEnableRange
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARSBattleEnemy_C::GetUniqueTickEnableRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetUniqueTickEnableRange");

	Params::RSBattleEnemy_C_GetUniqueTickEnableRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBossEnemy_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsBossEnemy_CallFromCPP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBossEnemy_CallFromCPP");

	Params::RSBattleEnemy_C_IsBossEnemy_CallFromCPP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSpawned
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsSpawned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSpawned");

	Params::RSBattleEnemy_C_IsSpawned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsDisableDownMotionInterface
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsDisableDownMotionInterface() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsDisableDownMotionInterface");

	Params::RSBattleEnemy_C_IsDisableDownMotionInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsSuspendFollowAttackInterface
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsSuspendFollowAttackInterface() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsSuspendFollowAttackInterface");

	Params::RSBattleEnemy_C_IsSuspendFollowAttackInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsInvincible_Native
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsInvincible_Native() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsInvincible_Native");

	Params::RSBattleEnemy_C_IsInvincible_Native Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyConsiderDownDead
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARSBattleEnemy_C::IsEnemyConsiderDownDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyConsiderDownDead");

	Params::RSBattleEnemy_C_IsEnemyConsiderDownDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyActive(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyActive");

	Params::RSBattleEnemy_C_IsEnemyActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsBossEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bBoss                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsBossEnemy(bool* bBoss) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsBossEnemy");

	Params::RSBattleEnemy_C_IsBossEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBoss != nullptr)
		*bBoss = Parms.bBoss;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetDistanceToPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetDistanceToPlayer(float* Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetDistanceToPlayer");

	Params::RSBattleEnemy_C_GetDistanceToPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetTargetDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetTargetDistance(float* Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetTargetDistance");

	Params::RSBattleEnemy_C_GetTargetDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetEnemySpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetEnemySpawn(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetEnemySpawn");

	Params::RSBattleEnemy_C_GetEnemySpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetHeightCheckFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::GetHeightCheckFlag(bool* NewParam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetHeightCheckFlag");

	Params::RSBattleEnemy_C_GetHeightCheckFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsFlyEnemyCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsFlyEnemyCheck(bool* NewParam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsFlyEnemyCheck");

	Params::RSBattleEnemy_C_IsFlyEnemyCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetBrainCrashSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    IsUnique                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ULevelSequence*                   Sequence                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetBrainCrashSequence(bool IsUnique, class ULevelSequence** Sequence) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetBrainCrashSequence");

	Params::RSBattleEnemy_C_GetBrainCrashSequence Parms{};

	Parms.IsUnique = IsUnique;

	UObject::ProcessEvent(Func, &Parms);

	if (Sequence != nullptr)
		*Sequence = Parms.Sequence;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetMoveToTargetAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EnemyMoveAnimKind                       MoveAnim                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetMoveToTargetAnim(EnemyMoveAnimKind* MoveAnim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetMoveToTargetAnim");

	Params::RSBattleEnemy_C_GetMoveToTargetAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MoveAnim != nullptr)
		*MoveAnim = Parms.MoveAnim;
}


// Function RSBattleEnemy.RSBattleEnemy_C.GetMainPlayerDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARSBattleEnemy_C::GetMainPlayerDistance(float* Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "GetMainPlayerDistance");

	Params::RSBattleEnemy_C_GetMainPlayerDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsRealThings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bReal                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsRealThings(bool* bReal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsRealThings");

	Params::RSBattleEnemy_C_IsRealThings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReal != nullptr)
		*bReal = Parms.bReal;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemySpawnNow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    SpawnNow                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemySpawnNow(bool* SpawnNow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemySpawnNow");

	Params::RSBattleEnemy_C_IsEnemySpawnNow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnNow != nullptr)
		*SpawnNow = Parms.SpawnNow;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsNotFindPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bNotFind                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsNotFindPlayer(bool* bNotFind) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsNotFindPlayer");

	Params::RSBattleEnemy_C_IsNotFindPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNotFind != nullptr)
		*bNotFind = Parms.bNotFind;
}


// Function RSBattleEnemy.RSBattleEnemy_C.IsEnemyTickDisableCondition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bDisableCondition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::IsEnemyTickDisableCondition(bool* bDisableCondition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "IsEnemyTickDisableCondition");

	Params::RSBattleEnemy_C_IsEnemyTickDisableCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisableCondition != nullptr)
		*bDisableCondition = Parms.bDisableCondition;
}


// Function RSBattleEnemy.RSBattleEnemy_C.Em8310_IsMaskMan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bMaskMan                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARSBattleEnemy_C::Em8310_IsMaskMan(bool* bMaskMan) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RSBattleEnemy_C", "Em8310_IsMaskMan");

	Params::RSBattleEnemy_C_Em8310_IsMaskMan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bMaskMan != nullptr)
		*bMaskMan = Parms.bMaskMan;
}

}

