#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SingleAttackComponent

#include "Basic.hpp"

#include "EWeaponAttackAnimStopType_structs.hpp"


namespace SDK::Params
{

// Function SingleAttackComponent.SingleAttackComponent_C.ExecuteUbergraph_SingleAttackComponent
// 0x0004 (0x0004 - 0x0000)
struct SingleAttackComponent_C_ExecuteUbergraph_SingleAttackComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SingleAttackComponent_C_ExecuteUbergraph_SingleAttackComponent) == 0x000004, "Wrong alignment on SingleAttackComponent_C_ExecuteUbergraph_SingleAttackComponent");
static_assert(sizeof(SingleAttackComponent_C_ExecuteUbergraph_SingleAttackComponent) == 0x000004, "Wrong size on SingleAttackComponent_C_ExecuteUbergraph_SingleAttackComponent");
static_assert(offsetof(SingleAttackComponent_C_ExecuteUbergraph_SingleAttackComponent, EntryPoint) == 0x000000, "Member 'SingleAttackComponent_C_ExecuteUbergraph_SingleAttackComponent::EntryPoint' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.InputButton
// 0x0009 (0x0009 - 0x0000)
struct SingleAttackComponent_C_InputButton final
{
public:
	bool                                          IsPressed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableAttack_bEnable;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableAcceptInputAttack_bEnable;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStartAttack_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_InputButton) == 0x000001, "Wrong alignment on SingleAttackComponent_C_InputButton");
static_assert(sizeof(SingleAttackComponent_C_InputButton) == 0x000009, "Wrong size on SingleAttackComponent_C_InputButton");
static_assert(offsetof(SingleAttackComponent_C_InputButton, IsPressed) == 0x000000, "Member 'SingleAttackComponent_C_InputButton::IsPressed' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButton, Dummy) == 0x000001, "Member 'SingleAttackComponent_C_InputButton::Dummy' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButton, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'SingleAttackComponent_C_InputButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButton, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'SingleAttackComponent_C_InputButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButton, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'SingleAttackComponent_C_InputButton::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButton, CallFunc_IsEnableAttack_bEnable) == 0x000005, "Member 'SingleAttackComponent_C_InputButton::CallFunc_IsEnableAttack_bEnable' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButton, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'SingleAttackComponent_C_InputButton::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButton, CallFunc_IsEnableAcceptInputAttack_bEnable) == 0x000007, "Member 'SingleAttackComponent_C_InputButton::CallFunc_IsEnableAcceptInputAttack_bEnable' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButton, CallFunc_CheckStartAttack_ReturnValue) == 0x000008, "Member 'SingleAttackComponent_C_InputButton::CallFunc_CheckStartAttack_ReturnValue' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.ClearInputForSingleAttack
// 0x0001 (0x0001 - 0x0000)
struct SingleAttackComponent_C_ClearInputForSingleAttack final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_ClearInputForSingleAttack) == 0x000001, "Wrong alignment on SingleAttackComponent_C_ClearInputForSingleAttack");
static_assert(sizeof(SingleAttackComponent_C_ClearInputForSingleAttack) == 0x000001, "Wrong size on SingleAttackComponent_C_ClearInputForSingleAttack");
static_assert(offsetof(SingleAttackComponent_C_ClearInputForSingleAttack, Dummy) == 0x000000, "Member 'SingleAttackComponent_C_ClearInputForSingleAttack::Dummy' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.OnMontageBlendingOut
// 0x0010 (0x0010 - 0x0000)
struct SingleAttackComponent_C_OnMontageBlendingOut final
{
public:
	class UAnimMontage*                           Param_Montage;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndAttack_Dummy;                          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEndCondition_bEnd;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_OnMontageBlendingOut) == 0x000008, "Wrong alignment on SingleAttackComponent_C_OnMontageBlendingOut");
static_assert(sizeof(SingleAttackComponent_C_OnMontageBlendingOut) == 0x000010, "Wrong size on SingleAttackComponent_C_OnMontageBlendingOut");
static_assert(offsetof(SingleAttackComponent_C_OnMontageBlendingOut, Param_Montage) == 0x000000, "Member 'SingleAttackComponent_C_OnMontageBlendingOut::Param_Montage' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_OnMontageBlendingOut, bInterrupted) == 0x000008, "Member 'SingleAttackComponent_C_OnMontageBlendingOut::bInterrupted' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_OnMontageBlendingOut, ReturnValue) == 0x000009, "Member 'SingleAttackComponent_C_OnMontageBlendingOut::ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_OnMontageBlendingOut, CallFunc_EndAttack_Dummy) == 0x00000A, "Member 'SingleAttackComponent_C_OnMontageBlendingOut::CallFunc_EndAttack_Dummy' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_OnMontageBlendingOut, CallFunc_IsEndCondition_bEnd) == 0x00000B, "Member 'SingleAttackComponent_C_OnMontageBlendingOut::CallFunc_IsEndCondition_bEnd' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.ClearInput
// 0x0002 (0x0002 - 0x0000)
struct SingleAttackComponent_C_ClearInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearInputForSingleAttack_Dummy;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_ClearInput) == 0x000001, "Wrong alignment on SingleAttackComponent_C_ClearInput");
static_assert(sizeof(SingleAttackComponent_C_ClearInput) == 0x000002, "Wrong size on SingleAttackComponent_C_ClearInput");
static_assert(offsetof(SingleAttackComponent_C_ClearInput, ReturnValue) == 0x000000, "Member 'SingleAttackComponent_C_ClearInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_ClearInput, CallFunc_ClearInputForSingleAttack_Dummy) == 0x000001, "Member 'SingleAttackComponent_C_ClearInput::CallFunc_ClearInputForSingleAttack_Dummy' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.CheckStartAttack
// 0x000C (0x000C - 0x0000)
struct SingleAttackComponent_C_CheckStartAttack final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          bStart_l;                                          // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponAttackAnimStopType                     CallFunc_GetWeaponAnimStopType_Type;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComboCheck_bCombo;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIgnoreCheckStartAttack_bIgnoreCheckStartAttack; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStartSingleAttack_IsStart;              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_CheckStartAttack) == 0x000004, "Wrong alignment on SingleAttackComponent_C_CheckStartAttack");
static_assert(sizeof(SingleAttackComponent_C_CheckStartAttack) == 0x00000C, "Wrong size on SingleAttackComponent_C_CheckStartAttack");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, DeltaTime) == 0x000000, "Member 'SingleAttackComponent_C_CheckStartAttack::DeltaTime' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, ReturnValue) == 0x000004, "Member 'SingleAttackComponent_C_CheckStartAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, bStart_l) == 0x000005, "Member 'SingleAttackComponent_C_CheckStartAttack::bStart_l' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, CallFunc_GetWeaponAnimStopType_Type) == 0x000006, "Member 'SingleAttackComponent_C_CheckStartAttack::CallFunc_GetWeaponAnimStopType_Type' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'SingleAttackComponent_C_CheckStartAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, CallFunc_IsComboCheck_bCombo) == 0x000008, "Member 'SingleAttackComponent_C_CheckStartAttack::CallFunc_IsComboCheck_bCombo' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, CallFunc_IsIgnoreCheckStartAttack_bIgnoreCheckStartAttack) == 0x000009, "Member 'SingleAttackComponent_C_CheckStartAttack::CallFunc_IsIgnoreCheckStartAttack_bIgnoreCheckStartAttack' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'SingleAttackComponent_C_CheckStartAttack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_CheckStartAttack, CallFunc_IsStartSingleAttack_IsStart) == 0x00000B, "Member 'SingleAttackComponent_C_CheckStartAttack::CallFunc_IsStartSingleAttack_IsStart' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.InputButtonByCombo
// 0x0004 (0x0004 - 0x0000)
struct SingleAttackComponent_C_InputButtonByCombo final
{
public:
	bool                                          bPressed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bComboFirst;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputButton_Dummy;                        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_InputButtonByCombo) == 0x000001, "Wrong alignment on SingleAttackComponent_C_InputButtonByCombo");
static_assert(sizeof(SingleAttackComponent_C_InputButtonByCombo) == 0x000004, "Wrong size on SingleAttackComponent_C_InputButtonByCombo");
static_assert(offsetof(SingleAttackComponent_C_InputButtonByCombo, bPressed) == 0x000000, "Member 'SingleAttackComponent_C_InputButtonByCombo::bPressed' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButtonByCombo, bComboFirst) == 0x000001, "Member 'SingleAttackComponent_C_InputButtonByCombo::bComboFirst' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButtonByCombo, ReturnValue) == 0x000002, "Member 'SingleAttackComponent_C_InputButtonByCombo::ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_InputButtonByCombo, CallFunc_InputButton_Dummy) == 0x000003, "Member 'SingleAttackComponent_C_InputButtonByCombo::CallFunc_InputButton_Dummy' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.EndAttack
// 0x0003 (0x0003 - 0x0000)
struct SingleAttackComponent_C_EndAttack final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndAttack_Dummy;                          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttacking_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_EndAttack) == 0x000001, "Wrong alignment on SingleAttackComponent_C_EndAttack");
static_assert(sizeof(SingleAttackComponent_C_EndAttack) == 0x000003, "Wrong size on SingleAttackComponent_C_EndAttack");
static_assert(offsetof(SingleAttackComponent_C_EndAttack, Dummy) == 0x000000, "Member 'SingleAttackComponent_C_EndAttack::Dummy' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_EndAttack, CallFunc_EndAttack_Dummy) == 0x000001, "Member 'SingleAttackComponent_C_EndAttack::CallFunc_EndAttack_Dummy' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_EndAttack, CallFunc_IsAttacking_ReturnValue) == 0x000002, "Member 'SingleAttackComponent_C_EndAttack::CallFunc_IsAttacking_ReturnValue' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.IsEndCondition
// 0x0010 (0x0010 - 0x0000)
struct SingleAttackComponent_C_IsEndCondition final
{
public:
	class UAnimMontage*                           Param_Montage;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnd;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_result;                                          // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttacking_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_IsEndCondition) == 0x000008, "Wrong alignment on SingleAttackComponent_C_IsEndCondition");
static_assert(sizeof(SingleAttackComponent_C_IsEndCondition) == 0x000010, "Wrong size on SingleAttackComponent_C_IsEndCondition");
static_assert(offsetof(SingleAttackComponent_C_IsEndCondition, Param_Montage) == 0x000000, "Member 'SingleAttackComponent_C_IsEndCondition::Param_Montage' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_IsEndCondition, bEnd) == 0x000008, "Member 'SingleAttackComponent_C_IsEndCondition::bEnd' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_IsEndCondition, L_result) == 0x000009, "Member 'SingleAttackComponent_C_IsEndCondition::L_result' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_IsEndCondition, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'SingleAttackComponent_C_IsEndCondition::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_IsEndCondition, CallFunc_IsAttacking_ReturnValue) == 0x00000B, "Member 'SingleAttackComponent_C_IsEndCondition::CallFunc_IsAttacking_ReturnValue' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.GetWeaponAnimStopType
// 0x0005 (0x0005 - 0x0000)
struct SingleAttackComponent_C_GetWeaponAnimStopType final
{
public:
	EWeaponAttackAnimStopType                     Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponAttackAnimStopType                     Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAttackAnimStopType                     Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAttackAnimStopType                     K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SingleAttackComponent_C_GetWeaponAnimStopType) == 0x000001, "Wrong alignment on SingleAttackComponent_C_GetWeaponAnimStopType");
static_assert(sizeof(SingleAttackComponent_C_GetWeaponAnimStopType) == 0x000005, "Wrong size on SingleAttackComponent_C_GetWeaponAnimStopType");
static_assert(offsetof(SingleAttackComponent_C_GetWeaponAnimStopType, Type) == 0x000000, "Member 'SingleAttackComponent_C_GetWeaponAnimStopType::Type' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_GetWeaponAnimStopType, Temp_bool_Variable) == 0x000001, "Member 'SingleAttackComponent_C_GetWeaponAnimStopType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_GetWeaponAnimStopType, Temp_byte_Variable) == 0x000002, "Member 'SingleAttackComponent_C_GetWeaponAnimStopType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_GetWeaponAnimStopType, Temp_byte_Variable_1) == 0x000003, "Member 'SingleAttackComponent_C_GetWeaponAnimStopType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_GetWeaponAnimStopType, K2Node_Select_Default) == 0x000004, "Member 'SingleAttackComponent_C_GetWeaponAnimStopType::K2Node_Select_Default' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.IsStartSingleAttack
// 0x0003 (0x0003 - 0x0000)
struct SingleAttackComponent_C_IsStartSingleAttack final
{
public:
	bool                                          IsStart;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bStart_l;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableAttack_bEnable;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleAttackComponent_C_IsStartSingleAttack) == 0x000001, "Wrong alignment on SingleAttackComponent_C_IsStartSingleAttack");
static_assert(sizeof(SingleAttackComponent_C_IsStartSingleAttack) == 0x000003, "Wrong size on SingleAttackComponent_C_IsStartSingleAttack");
static_assert(offsetof(SingleAttackComponent_C_IsStartSingleAttack, IsStart) == 0x000000, "Member 'SingleAttackComponent_C_IsStartSingleAttack::IsStart' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_IsStartSingleAttack, bStart_l) == 0x000001, "Member 'SingleAttackComponent_C_IsStartSingleAttack::bStart_l' has a wrong offset!");
static_assert(offsetof(SingleAttackComponent_C_IsStartSingleAttack, CallFunc_IsEnableAttack_bEnable) == 0x000002, "Member 'SingleAttackComponent_C_IsStartSingleAttack::CallFunc_IsEnableAttack_bEnable' has a wrong offset!");

// Function SingleAttackComponent.SingleAttackComponent_C.GetCurrentMontage
// 0x0008 (0x0008 - 0x0000)
struct SingleAttackComponent_C_GetCurrentMontage final
{
public:
	class UAnimMontage*                           Param_Montage;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SingleAttackComponent_C_GetCurrentMontage) == 0x000008, "Wrong alignment on SingleAttackComponent_C_GetCurrentMontage");
static_assert(sizeof(SingleAttackComponent_C_GetCurrentMontage) == 0x000008, "Wrong size on SingleAttackComponent_C_GetCurrentMontage");
static_assert(offsetof(SingleAttackComponent_C_GetCurrentMontage, Param_Montage) == 0x000000, "Member 'SingleAttackComponent_C_GetCurrentMontage::Param_Montage' has a wrong offset!");

}

