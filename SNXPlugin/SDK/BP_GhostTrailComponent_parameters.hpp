#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GhostTrailComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.ExecuteUbergraph_BP_GhostTrailComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent) == 0x000004, "Wrong alignment on BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent");
static_assert(sizeof(BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent) == 0x000008, "Wrong size on BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent");
static_assert(offsetof(BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent, EntryPoint) == 0x000000, "Member 'BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_GhostTrailComponent_C_ExecuteUbergraph_BP_GhostTrailComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_GhostTrailComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_GhostTrailComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_GhostTrailComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_GhostTrailComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_GhostTrailComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_GhostTrailComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.InitManager
// 0x0008 (0x0008 - 0x0000)
struct BP_GhostTrailComponent_C_InitManager final
{
public:
	class ABP_GhostTrailManager_C*                CallFunc_SpawnManager_GhostTrailManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailComponent_C_InitManager) == 0x000008, "Wrong alignment on BP_GhostTrailComponent_C_InitManager");
static_assert(sizeof(BP_GhostTrailComponent_C_InitManager) == 0x000008, "Wrong size on BP_GhostTrailComponent_C_InitManager");
static_assert(offsetof(BP_GhostTrailComponent_C_InitManager, CallFunc_SpawnManager_GhostTrailManager) == 0x000000, "Member 'BP_GhostTrailComponent_C_InitManager::CallFunc_SpawnManager_GhostTrailManager' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.AddMeshesToGhost
// 0x0050 (0x0050 - 0x0000)
struct BP_GhostTrailComponent_C_AddMeshesToGhost final
{
public:
	class UMeshComponent*                         TmpMesh;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 MeshComponents;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MeshMustCastTrails_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EC3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC4[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EC5[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailComponent_C_AddMeshesToGhost) == 0x000008, "Wrong alignment on BP_GhostTrailComponent_C_AddMeshesToGhost");
static_assert(sizeof(BP_GhostTrailComponent_C_AddMeshesToGhost) == 0x000050, "Wrong size on BP_GhostTrailComponent_C_AddMeshesToGhost");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, TmpMesh) == 0x000000, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::TmpMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, MeshComponents) == 0x000008, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::MeshComponents' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, CallFunc_MeshMustCastTrails_ReturnValue) == 0x000020, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::CallFunc_MeshMustCastTrails_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000038, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddMeshesToGhost, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GhostTrailComponent_C_AddMeshesToGhost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.MeshMustCastTrails
// 0x0040 (0x0040 - 0x0000)
struct BP_GhostTrailComponent_C_MeshMustCastTrails final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EC6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        L_Component;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EC7[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EC8[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_MeshMustCastTrails) == 0x000008, "Wrong alignment on BP_GhostTrailComponent_C_MeshMustCastTrails");
static_assert(sizeof(BP_GhostTrailComponent_C_MeshMustCastTrails) == 0x000040, "Wrong size on BP_GhostTrailComponent_C_MeshMustCastTrails");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, Component) == 0x000000, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::Component' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, ReturnValue) == 0x000008, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, L_Component) == 0x000010, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::L_Component' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002D, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_IsVisible_ReturnValue) == 0x00002E, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_BooleanAND_ReturnValue) == 0x00002F, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_ComponentHasTag_ReturnValue) == 0x000030, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_BooleanAND_ReturnValue_1) == 0x000038, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_MeshMustCastTrails, CallFunc_BooleanAND_ReturnValue_2) == 0x000039, "Member 'BP_GhostTrailComponent_C_MeshMustCastTrails::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.SetTrailActive
// 0x0002 (0x0002 - 0x0000)
struct BP_GhostTrailComponent_C_SetTrailActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_SetTrailActive) == 0x000001, "Wrong alignment on BP_GhostTrailComponent_C_SetTrailActive");
static_assert(sizeof(BP_GhostTrailComponent_C_SetTrailActive) == 0x000002, "Wrong size on BP_GhostTrailComponent_C_SetTrailActive");
static_assert(offsetof(BP_GhostTrailComponent_C_SetTrailActive, Active) == 0x000000, "Member 'BP_GhostTrailComponent_C_SetTrailActive::Active' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetTrailActive, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_GhostTrailComponent_C_SetTrailActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.GetTrailActive
// 0x0001 (0x0001 - 0x0000)
struct BP_GhostTrailComponent_C_GetTrailActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_GetTrailActive) == 0x000001, "Wrong alignment on BP_GhostTrailComponent_C_GetTrailActive");
static_assert(sizeof(BP_GhostTrailComponent_C_GetTrailActive) == 0x000001, "Wrong size on BP_GhostTrailComponent_C_GetTrailActive");
static_assert(offsetof(BP_GhostTrailComponent_C_GetTrailActive, Active) == 0x000000, "Member 'BP_GhostTrailComponent_C_GetTrailActive::Active' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.DestroyGhostAll
// 0x0001 (0x0001 - 0x0000)
struct BP_GhostTrailComponent_C_DestroyGhostAll final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_DestroyGhostAll) == 0x000001, "Wrong alignment on BP_GhostTrailComponent_C_DestroyGhostAll");
static_assert(sizeof(BP_GhostTrailComponent_C_DestroyGhostAll) == 0x000001, "Wrong size on BP_GhostTrailComponent_C_DestroyGhostAll");
static_assert(offsetof(BP_GhostTrailComponent_C_DestroyGhostAll, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_GhostTrailComponent_C_DestroyGhostAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.SetSpawnRandomDistance
// 0x0010 (0x0010 - 0x0000)
struct BP_GhostTrailComponent_C_SetSpawnRandomDistance final
{
public:
	struct FVector                                Param_SpawnRandomDistance;                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_SetSpawnRandomDistance) == 0x000004, "Wrong alignment on BP_GhostTrailComponent_C_SetSpawnRandomDistance");
static_assert(sizeof(BP_GhostTrailComponent_C_SetSpawnRandomDistance) == 0x000010, "Wrong size on BP_GhostTrailComponent_C_SetSpawnRandomDistance");
static_assert(offsetof(BP_GhostTrailComponent_C_SetSpawnRandomDistance, Param_SpawnRandomDistance) == 0x000000, "Member 'BP_GhostTrailComponent_C_SetSpawnRandomDistance::Param_SpawnRandomDistance' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetSpawnRandomDistance, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_GhostTrailComponent_C_SetSpawnRandomDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.ForceSpawnGhost
// 0x000C (0x000C - 0x0000)
struct BP_GhostTrailComponent_C_ForceSpawnGhost final
{
public:
	float                                         Param_GhostLifetime;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpGhostLifetime;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_ForceSpawnGhost) == 0x000004, "Wrong alignment on BP_GhostTrailComponent_C_ForceSpawnGhost");
static_assert(sizeof(BP_GhostTrailComponent_C_ForceSpawnGhost) == 0x00000C, "Wrong size on BP_GhostTrailComponent_C_ForceSpawnGhost");
static_assert(offsetof(BP_GhostTrailComponent_C_ForceSpawnGhost, Param_GhostLifetime) == 0x000000, "Member 'BP_GhostTrailComponent_C_ForceSpawnGhost::Param_GhostLifetime' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_ForceSpawnGhost, TmpGhostLifetime) == 0x000004, "Member 'BP_GhostTrailComponent_C_ForceSpawnGhost::TmpGhostLifetime' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_ForceSpawnGhost, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GhostTrailComponent_C_ForceSpawnGhost::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.SpawnManager
// 0x0070 (0x0070 - 0x0000)
struct BP_GhostTrailComponent_C_SpawnManager final
{
public:
	class ABP_GhostTrailManager_C*                Param_GhostTrailManager;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC9[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ECA[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GhostTrailManager_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailComponent_C_SpawnManager) == 0x000010, "Wrong alignment on BP_GhostTrailComponent_C_SpawnManager");
static_assert(sizeof(BP_GhostTrailComponent_C_SpawnManager) == 0x000070, "Wrong size on BP_GhostTrailComponent_C_SpawnManager");
static_assert(offsetof(BP_GhostTrailComponent_C_SpawnManager, Param_GhostTrailManager) == 0x000000, "Member 'BP_GhostTrailComponent_C_SpawnManager::Param_GhostTrailManager' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SpawnManager, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_GhostTrailComponent_C_SpawnManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SpawnManager, CallFunc_GetOwner_ReturnValue_1) == 0x000010, "Member 'BP_GhostTrailComponent_C_SpawnManager::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SpawnManager, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_GhostTrailComponent_C_SpawnManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SpawnManager, K2Node_DynamicCast_AsPawn) == 0x000050, "Member 'BP_GhostTrailComponent_C_SpawnManager::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SpawnManager, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_GhostTrailComponent_C_SpawnManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SpawnManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_GhostTrailComponent_C_SpawnManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SpawnManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'BP_GhostTrailComponent_C_SpawnManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.SetColor
// 0x0014 (0x0014 - 0x0000)
struct BP_GhostTrailComponent_C_SetColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_SetColor) == 0x000004, "Wrong alignment on BP_GhostTrailComponent_C_SetColor");
static_assert(sizeof(BP_GhostTrailComponent_C_SetColor) == 0x000014, "Wrong size on BP_GhostTrailComponent_C_SetColor");
static_assert(offsetof(BP_GhostTrailComponent_C_SetColor, Color) == 0x000000, "Member 'BP_GhostTrailComponent_C_SetColor::Color' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetColor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GhostTrailComponent_C_SetColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.AddTrailMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_GhostTrailComponent_C_AddTrailMesh final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_AddTrailMesh) == 0x000008, "Wrong alignment on BP_GhostTrailComponent_C_AddTrailMesh");
static_assert(sizeof(BP_GhostTrailComponent_C_AddTrailMesh) == 0x000010, "Wrong size on BP_GhostTrailComponent_C_AddTrailMesh");
static_assert(offsetof(BP_GhostTrailComponent_C_AddTrailMesh, Mesh) == 0x000000, "Member 'BP_GhostTrailComponent_C_AddTrailMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_AddTrailMesh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GhostTrailComponent_C_AddTrailMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.RemoveTrailMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_GhostTrailComponent_C_RemoveTrailMesh final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_RemoveTrailMesh) == 0x000008, "Wrong alignment on BP_GhostTrailComponent_C_RemoveTrailMesh");
static_assert(sizeof(BP_GhostTrailComponent_C_RemoveTrailMesh) == 0x000010, "Wrong size on BP_GhostTrailComponent_C_RemoveTrailMesh");
static_assert(offsetof(BP_GhostTrailComponent_C_RemoveTrailMesh, Mesh) == 0x000000, "Member 'BP_GhostTrailComponent_C_RemoveTrailMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_RemoveTrailMesh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GhostTrailComponent_C_RemoveTrailMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.SetTrailPause
// 0x0002 (0x0002 - 0x0000)
struct BP_GhostTrailComponent_C_SetTrailPause final
{
public:
	bool                                          bPauseSpawn;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_SetTrailPause) == 0x000001, "Wrong alignment on BP_GhostTrailComponent_C_SetTrailPause");
static_assert(sizeof(BP_GhostTrailComponent_C_SetTrailPause) == 0x000002, "Wrong size on BP_GhostTrailComponent_C_SetTrailPause");
static_assert(offsetof(BP_GhostTrailComponent_C_SetTrailPause, bPauseSpawn) == 0x000000, "Member 'BP_GhostTrailComponent_C_SetTrailPause::bPauseSpawn' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetTrailPause, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_GhostTrailComponent_C_SetTrailPause::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.SetVelocityDepending
// 0x0002 (0x0002 - 0x0000)
struct BP_GhostTrailComponent_C_SetVelocityDepending final
{
public:
	bool                                          bVelocityDepending;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_SetVelocityDepending) == 0x000001, "Wrong alignment on BP_GhostTrailComponent_C_SetVelocityDepending");
static_assert(sizeof(BP_GhostTrailComponent_C_SetVelocityDepending) == 0x000002, "Wrong size on BP_GhostTrailComponent_C_SetVelocityDepending");
static_assert(offsetof(BP_GhostTrailComponent_C_SetVelocityDepending, bVelocityDepending) == 0x000000, "Member 'BP_GhostTrailComponent_C_SetVelocityDepending::bVelocityDepending' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetVelocityDepending, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_GhostTrailComponent_C_SetVelocityDepending::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.SetPhotoMode
// 0x0014 (0x0014 - 0x0000)
struct BP_GhostTrailComponent_C_SetPhotoMode final
{
public:
	bool                                          bPhotoMode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ECB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MeshOffset;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHeight;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadius;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginPhotoMode_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndPhotoMode_ReturnValue;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_SetPhotoMode) == 0x000004, "Wrong alignment on BP_GhostTrailComponent_C_SetPhotoMode");
static_assert(sizeof(BP_GhostTrailComponent_C_SetPhotoMode) == 0x000014, "Wrong size on BP_GhostTrailComponent_C_SetPhotoMode");
static_assert(offsetof(BP_GhostTrailComponent_C_SetPhotoMode, bPhotoMode) == 0x000000, "Member 'BP_GhostTrailComponent_C_SetPhotoMode::bPhotoMode' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetPhotoMode, MeshOffset) == 0x000004, "Member 'BP_GhostTrailComponent_C_SetPhotoMode::MeshOffset' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetPhotoMode, CapsuleHeight) == 0x000008, "Member 'BP_GhostTrailComponent_C_SetPhotoMode::CapsuleHeight' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetPhotoMode, CapsuleRadius) == 0x00000C, "Member 'BP_GhostTrailComponent_C_SetPhotoMode::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetPhotoMode, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GhostTrailComponent_C_SetPhotoMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetPhotoMode, CallFunc_BeginPhotoMode_ReturnValue) == 0x000011, "Member 'BP_GhostTrailComponent_C_SetPhotoMode::CallFunc_BeginPhotoMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_SetPhotoMode, CallFunc_EndPhotoMode_ReturnValue) == 0x000012, "Member 'BP_GhostTrailComponent_C_SetPhotoMode::CallFunc_EndPhotoMode_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailComponent.BP_GhostTrailComponent_C.PhotoModeTick
// 0x0002 (0x0002 - 0x0000)
struct BP_GhostTrailComponent_C_PhotoModeTick final
{
public:
	bool                                          CallFunc_PhotoModeTick_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailComponent_C_PhotoModeTick) == 0x000001, "Wrong alignment on BP_GhostTrailComponent_C_PhotoModeTick");
static_assert(sizeof(BP_GhostTrailComponent_C_PhotoModeTick) == 0x000002, "Wrong size on BP_GhostTrailComponent_C_PhotoModeTick");
static_assert(offsetof(BP_GhostTrailComponent_C_PhotoModeTick, CallFunc_PhotoModeTick_ReturnValue) == 0x000000, "Member 'BP_GhostTrailComponent_C_PhotoModeTick::CallFunc_PhotoModeTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailComponent_C_PhotoModeTick, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_GhostTrailComponent_C_PhotoModeTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

