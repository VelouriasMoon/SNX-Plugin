#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_BrainCrashUtility

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_BrainCrashUtility_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetSafePointEnemyIndexFromName(class FName Param_Name, class UObject* __WorldContext, int32* EnemyIndex, bool* Valid);
	static void GetSafePointRotationAngle(class UObject* __WorldContext, int32* Angle);
	static void GetSafePointRotationAngleNum(class UObject* __WorldContext, int32* Num);
	static void GetSafePointSettingsFromEmName(class FName EmName, class UObject* __WorldContext, struct FBrainCrashSequenceSettings* Settings, bool* Find);
	static void SearchSafePoint(TArray<struct FBrainCrashSafePoint>& SafePoints, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, TArray<class ABP_SplineMesh_C*>& BattleFieldActors, TArray<class ATriggerBox*>& EventTriggerActors, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length);
	static void LoadSafePointLocationAsset(int32 LocationId, int32 AreaId, class UObject* __WorldContext, class UBrainCrashLocationSettings** LocationSetting, class FString* AssetPath);
	static void SearchSafePointFromLocationSettings(class UBrainCrashLocationSettings* BCLocationSettings, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, TArray<class ABP_SplineMesh_C*>& BattleFieldActors, TArray<class ATriggerBox*>& EventTriggers, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length);
	static void PrivateSearchSafePointNormalizeRotation(const struct FVector& Start, const struct FVector& Target, class UObject* __WorldContext, float* RawDir, float* NormalizedDir);
	static void PrivateSearchSafePointGetLength(const struct FBrainCrashSafePoint& SafePoint, const struct FVector& Location, const struct FVector& SequencerCenterLocation, float RotateYaw, class UObject* __WorldContext, float* Length);
	static void PrivateSearchSafePointBattleField(struct FBrainCrashSafePoint& SafePoint, struct FBrainCrashSequenceSettings& SequencerSettings, const struct FVector& Location, TArray<class ABP_SplineMesh_C*>& BattleFieldActors, class UObject* __WorldContext, bool* Usable);
	static void PrivateSearchSafePointEventTrigger(struct FBrainCrashSequenceSettings& SequenceSetting, const struct FTransform& SafePointTransform, const struct FVector& PlayerLocation, TArray<class ATriggerBox*>& TriggerActors, class UObject* __WorldContext, bool* Usable);
	static void SearchSafePointCheckBFET(TArray<struct FBrainCrashSafePoint>& SafePoints, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length);
	static void SearchSafePointCheckBFETFromLocationSettings(class UBrainCrashLocationSettings* BCLocationSettings, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length);
	static void PrivateSearchSafePointHeight(struct FBrainCrashSafePoint& SafePoint, const struct FVector& PlayerLocation, class UObject* __WorldContext, bool* Usable);
	static void SearchSafePointOld(TArray<struct FBrainCrashSafePoint>& SafePoints, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, TArray<class ABP_SplineMesh_C*>& BattleFieldActors, TArray<class ATriggerBox*>& EventTriggerActors, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_BrainCrashUtility_C">();
	}
	static class UBPFL_BrainCrashUtility_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_BrainCrashUtility_C>();
	}
};
static_assert(alignof(UBPFL_BrainCrashUtility_C) == 0x000008, "Wrong alignment on UBPFL_BrainCrashUtility_C");
static_assert(sizeof(UBPFL_BrainCrashUtility_C) == 0x000028, "Wrong size on UBPFL_BrainCrashUtility_C");

}

