#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChangeWeakStateComponent

#include "Basic.hpp"

#include "ST_emEnableWeakData_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_emWeakMaterial_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ChangeWeakStateComponent.ChangeWeakStateComponent_C
// 0x0118 (0x0300 - 0x01E8)
class UChangeWeakStateComponent_C final : public UChangeWeakStateComponentBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bChangeWeakState;                                  // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD2[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_emEnableWeakData>           EnableWeakDataList;                                // 0x01F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<bool>                                  bBeforeWeakStateList;                              // 0x0208(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<float>                                 CurrentTimeList;                                   // 0x0218(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<bool>                                  EnableWeakList;                                    // 0x0228(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<bool>                                  bChangeWeakMaterial;                               // 0x0238(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<bool>                                  bFullInactivateList;                               // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         WeakFullInactiveTime;                              // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedWeakFullInactiveTime;                       // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullInactiveWeak;                                 // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD3[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FullInactiveColorMapValueMin;                      // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FullInactiveColorMapValueMax;                      // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceEnableWeak;                                  // 0x026C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD4[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForceEnableWeakTime;                               // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedForceEnableWeakTime;                        // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  bChangeFullInactiveList;                           // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          StartWeakEmissive;                                 // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD5[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            WeakMaterialEmissiveCurve;                         // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            WeakMaterialRateCurveData;                         // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_emWeakMaterial>             WeakMaterialList;                                  // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         WeakEmissiveTime;                                  // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeakExtendTime;                                    // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWeakExtendTime;                                   // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD6[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentWeakExtendTime;                             // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 DisableWeakNumList;                                // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bEnableWeakExtendTime;                             // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD7[0x3];                                     // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxExtendTime;                                     // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddFirstExtendTime;                                // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddPconExtendTime;                                 // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_emWeakMaterial>             DisableWeakMaterialList;                           // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         DisableWeakEmissiveTime;                           // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FullInactiveFrenelColorPowerMin;                   // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FullInactiveFrenelColorPowerMax;                   // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ChangeWeakStateComponent(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void Enable_Weak(bool bEnable, int32 WeakListNum, bool bNotChangeCollision);
	void Restore_Weak_State();
	void Store_Weak_State();
	void Initialize();
	void Update(float DeltaSec);
	void Enable_All_Weak(bool bEnable);
	void Set_Change_Weak_Material(bool bChange, int32 WeakListNum);
	void Clear_Change_Weak_Material();
	void Is_Weak_Full_Inactive(int32 WeakListNum, bool* bFullInactive);
	void Set_Full_Inactive_Weak(bool bFullInactive, int32 WeakListNum);
	void Start_Full_Inactive_Weak();
	void Get_Full_Inactive_List(TArray<bool>* FullInactiveList);
	void End_Full_Inactive_Weak();
	void Is_All_Weak_Full_Inactive(bool* bAllWeakFullInactive);
	void Start_Force_Enable_Weak();
	void Is_Force_Enable_Weak(bool* Param_bForceEnableWeak);
	void End_Force_Enable_Weak();
	void Set_All_Weak_Full_Inactive(bool bFullInactive);
	void Add_Weak_Extend_Time();
	void End_Weak_Extend_Time();
	void Is_Weak_Extend_Time(bool* Param_bWeakExtendTime);
	void Is_Enable_Weak_Extend_Time(bool* Param_bWeakExtendTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChangeWeakStateComponent_C">();
	}
	static class UChangeWeakStateComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChangeWeakStateComponent_C>();
	}
};
static_assert(alignof(UChangeWeakStateComponent_C) == 0x000008, "Wrong alignment on UChangeWeakStateComponent_C");
static_assert(sizeof(UChangeWeakStateComponent_C) == 0x000300, "Wrong size on UChangeWeakStateComponent_C");
static_assert(offsetof(UChangeWeakStateComponent_C, UberGraphFrame) == 0x0001E8, "Member 'UChangeWeakStateComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bChangeWeakState) == 0x0001F0, "Member 'UChangeWeakStateComponent_C::bChangeWeakState' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, EnableWeakDataList) == 0x0001F8, "Member 'UChangeWeakStateComponent_C::EnableWeakDataList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bBeforeWeakStateList) == 0x000208, "Member 'UChangeWeakStateComponent_C::bBeforeWeakStateList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, CurrentTimeList) == 0x000218, "Member 'UChangeWeakStateComponent_C::CurrentTimeList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, EnableWeakList) == 0x000228, "Member 'UChangeWeakStateComponent_C::EnableWeakList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bChangeWeakMaterial) == 0x000238, "Member 'UChangeWeakStateComponent_C::bChangeWeakMaterial' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bFullInactivateList) == 0x000248, "Member 'UChangeWeakStateComponent_C::bFullInactivateList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, WeakFullInactiveTime) == 0x000258, "Member 'UChangeWeakStateComponent_C::WeakFullInactiveTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, ElapsedWeakFullInactiveTime) == 0x00025C, "Member 'UChangeWeakStateComponent_C::ElapsedWeakFullInactiveTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bFullInactiveWeak) == 0x000260, "Member 'UChangeWeakStateComponent_C::bFullInactiveWeak' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, FullInactiveColorMapValueMin) == 0x000264, "Member 'UChangeWeakStateComponent_C::FullInactiveColorMapValueMin' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, FullInactiveColorMapValueMax) == 0x000268, "Member 'UChangeWeakStateComponent_C::FullInactiveColorMapValueMax' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bForceEnableWeak) == 0x00026C, "Member 'UChangeWeakStateComponent_C::bForceEnableWeak' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, ForceEnableWeakTime) == 0x000270, "Member 'UChangeWeakStateComponent_C::ForceEnableWeakTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, ElapsedForceEnableWeakTime) == 0x000274, "Member 'UChangeWeakStateComponent_C::ElapsedForceEnableWeakTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bChangeFullInactiveList) == 0x000278, "Member 'UChangeWeakStateComponent_C::bChangeFullInactiveList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, StartWeakEmissive) == 0x000288, "Member 'UChangeWeakStateComponent_C::StartWeakEmissive' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, WeakMaterialEmissiveCurve) == 0x000290, "Member 'UChangeWeakStateComponent_C::WeakMaterialEmissiveCurve' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, WeakMaterialRateCurveData) == 0x000298, "Member 'UChangeWeakStateComponent_C::WeakMaterialRateCurveData' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, WeakMaterialList) == 0x0002A0, "Member 'UChangeWeakStateComponent_C::WeakMaterialList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, WeakEmissiveTime) == 0x0002B0, "Member 'UChangeWeakStateComponent_C::WeakEmissiveTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, WeakExtendTime) == 0x0002B4, "Member 'UChangeWeakStateComponent_C::WeakExtendTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bWeakExtendTime) == 0x0002B8, "Member 'UChangeWeakStateComponent_C::bWeakExtendTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, CurrentWeakExtendTime) == 0x0002BC, "Member 'UChangeWeakStateComponent_C::CurrentWeakExtendTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, DisableWeakNumList) == 0x0002C0, "Member 'UChangeWeakStateComponent_C::DisableWeakNumList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, bEnableWeakExtendTime) == 0x0002D0, "Member 'UChangeWeakStateComponent_C::bEnableWeakExtendTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, MaxExtendTime) == 0x0002D4, "Member 'UChangeWeakStateComponent_C::MaxExtendTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, AddFirstExtendTime) == 0x0002D8, "Member 'UChangeWeakStateComponent_C::AddFirstExtendTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, AddPconExtendTime) == 0x0002DC, "Member 'UChangeWeakStateComponent_C::AddPconExtendTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, DisableWeakMaterialList) == 0x0002E0, "Member 'UChangeWeakStateComponent_C::DisableWeakMaterialList' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, DisableWeakEmissiveTime) == 0x0002F0, "Member 'UChangeWeakStateComponent_C::DisableWeakEmissiveTime' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, FullInactiveFrenelColorPowerMin) == 0x0002F4, "Member 'UChangeWeakStateComponent_C::FullInactiveFrenelColorPowerMin' has a wrong offset!");
static_assert(offsetof(UChangeWeakStateComponent_C, FullInactiveFrenelColorPowerMax) == 0x0002F8, "Member 'UChangeWeakStateComponent_C::FullInactiveFrenelColorPowerMax' has a wrong offset!");

}

