#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PsychicBattleObject

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.ExecuteUbergraph_BP_PsychicBattleObject
// 0x0080 (0x0080 - 0x0000)
struct BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   K2Node_Event_Animation0100;                        // 0x0008(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   K2Node_Event_Animation0200;                        // 0x0018(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Event_SkelMeshComp0100;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Event_SkelMeshComp0200;                     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_Event_SkelMesh0100;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_Event_SkelMesh0200;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicBattleAnimationPhaseType              K2Node_Event_BattleAnimationPhase;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C7[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Event_Mesh0100_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Event_Mesh0200_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     K2Node_Event_UserPlayerID;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C8[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Event_Mesh0100;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Event_Mesh0200;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject");
static_assert(sizeof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject) == 0x000080, "Wrong size on BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, EntryPoint) == 0x000000, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_Animation0100) == 0x000008, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_Animation0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_Animation0200) == 0x000018, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_Animation0200' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_SkelMeshComp0100) == 0x000028, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_SkelMeshComp0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_SkelMeshComp0200) == 0x000030, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_SkelMeshComp0200' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_SkelMesh0100) == 0x000038, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_SkelMesh0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_SkelMesh0200) == 0x000040, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_SkelMesh0200' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_BattleAnimationPhase) == 0x000048, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_BattleAnimationPhase' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_Mesh0100_1) == 0x000050, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_Mesh0100_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_Mesh0200_1) == 0x000058, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_Mesh0200_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_UserPlayerID) == 0x000060, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_UserPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_Mesh0100) == 0x000068, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_Mesh0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, K2Node_Event_Mesh0200) == 0x000070, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::K2Node_Event_Mesh0200' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, CallFunc_SetStaticMesh_ReturnValue) == 0x000078, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000079, "Member 'BP_PsychicBattleObject_C_ExecuteUbergraph_BP_PsychicBattleObject::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.ChangeAppendMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicBattleObject_C_ChangeAppendMesh final
{
public:
	class UStaticMesh*                            Mesh0100;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh0200;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_ChangeAppendMesh) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_ChangeAppendMesh");
static_assert(sizeof(BP_PsychicBattleObject_C_ChangeAppendMesh) == 0x000010, "Wrong size on BP_PsychicBattleObject_C_ChangeAppendMesh");
static_assert(offsetof(BP_PsychicBattleObject_C_ChangeAppendMesh, Mesh0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_ChangeAppendMesh::Mesh0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_ChangeAppendMesh, Mesh0200) == 0x000008, "Member 'BP_PsychicBattleObject_C_ChangeAppendMesh::Mesh0200' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.SetUserID
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicBattleObject_C_SetUserID final
{
public:
	EPlayerID                                     UserPlayerID;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_SetUserID) == 0x000001, "Wrong alignment on BP_PsychicBattleObject_C_SetUserID");
static_assert(sizeof(BP_PsychicBattleObject_C_SetUserID) == 0x000001, "Wrong size on BP_PsychicBattleObject_C_SetUserID");
static_assert(offsetof(BP_PsychicBattleObject_C_SetUserID, UserPlayerID) == 0x000000, "Member 'BP_PsychicBattleObject_C_SetUserID::UserPlayerID' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.AppendMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicBattleObject_C_AppendMesh final
{
public:
	class UStaticMesh*                            Mesh0100;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh0200;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_AppendMesh) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_AppendMesh");
static_assert(sizeof(BP_PsychicBattleObject_C_AppendMesh) == 0x000010, "Wrong size on BP_PsychicBattleObject_C_AppendMesh");
static_assert(offsetof(BP_PsychicBattleObject_C_AppendMesh, Mesh0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_AppendMesh::Mesh0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_AppendMesh, Mesh0200) == 0x000008, "Member 'BP_PsychicBattleObject_C_AppendMesh::Mesh0200' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.PlayPhaseAnimation
// 0x0001 (0x0001 - 0x0000)
struct BP_PsychicBattleObject_C_PlayPhaseAnimation final
{
public:
	EPsychicBattleAnimationPhaseType              Param_BattleAnimationPhase;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_PlayPhaseAnimation) == 0x000001, "Wrong alignment on BP_PsychicBattleObject_C_PlayPhaseAnimation");
static_assert(sizeof(BP_PsychicBattleObject_C_PlayPhaseAnimation) == 0x000001, "Wrong size on BP_PsychicBattleObject_C_PlayPhaseAnimation");
static_assert(offsetof(BP_PsychicBattleObject_C_PlayPhaseAnimation, Param_BattleAnimationPhase) == 0x000000, "Member 'BP_PsychicBattleObject_C_PlayPhaseAnimation::Param_BattleAnimationPhase' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.CreateMeshes
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicBattleObject_C_CreateMeshes final
{
public:
	class USkeletalMesh*                          SkelMesh0100;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SkelMesh0200;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_CreateMeshes) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_CreateMeshes");
static_assert(sizeof(BP_PsychicBattleObject_C_CreateMeshes) == 0x000010, "Wrong size on BP_PsychicBattleObject_C_CreateMeshes");
static_assert(offsetof(BP_PsychicBattleObject_C_CreateMeshes, SkelMesh0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_CreateMeshes::SkelMesh0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_CreateMeshes, SkelMesh0200) == 0x000008, "Member 'BP_PsychicBattleObject_C_CreateMeshes::SkelMesh0200' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.SetMeshes
// 0x0010 (0x0010 - 0x0000)
struct BP_PsychicBattleObject_C_SetMeshes final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp0100;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComp0200;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_SetMeshes) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_SetMeshes");
static_assert(sizeof(BP_PsychicBattleObject_C_SetMeshes) == 0x000010, "Wrong size on BP_PsychicBattleObject_C_SetMeshes");
static_assert(offsetof(BP_PsychicBattleObject_C_SetMeshes, SkelMeshComp0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_SetMeshes::SkelMeshComp0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_SetMeshes, SkelMeshComp0200) == 0x000008, "Member 'BP_PsychicBattleObject_C_SetMeshes::SkelMeshComp0200' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.SetMontages
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicBattleObject_C_SetMontages final
{
public:
	TArray<class UAnimMontage*>                   Animation0100;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   Animation0200;                                     // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_SetMontages) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_SetMontages");
static_assert(sizeof(BP_PsychicBattleObject_C_SetMontages) == 0x000020, "Wrong size on BP_PsychicBattleObject_C_SetMontages");
static_assert(offsetof(BP_PsychicBattleObject_C_SetMontages, Animation0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_SetMontages::Animation0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_SetMontages, Animation0200) == 0x000010, "Member 'BP_PsychicBattleObject_C_SetMontages::Animation0200' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PsychicBattleObject_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PsychicBattleObject_C_ReceiveTick");
static_assert(sizeof(BP_PsychicBattleObject_C_ReceiveTick) == 0x000004, "Wrong size on BP_PsychicBattleObject_C_ReceiveTick");
static_assert(offsetof(BP_PsychicBattleObject_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PsychicBattleObject_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.PrivateSetMontages
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicBattleObject_C_PrivateSetMontages final
{
public:
	TArray<class UAnimMontage*>                   Animation0100;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   Animation0200;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            MontageObject;                                     // 0x0020(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_PrivateSetMontages) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_PrivateSetMontages");
static_assert(sizeof(BP_PsychicBattleObject_C_PrivateSetMontages) == 0x000048, "Wrong size on BP_PsychicBattleObject_C_PrivateSetMontages");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateSetMontages, Animation0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_PrivateSetMontages::Animation0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateSetMontages, Animation0200) == 0x000010, "Member 'BP_PsychicBattleObject_C_PrivateSetMontages::Animation0200' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateSetMontages, MontageObject) == 0x000020, "Member 'BP_PsychicBattleObject_C_PrivateSetMontages::MontageObject' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.PrivatePlayPhaseAnimation
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation final
{
public:
	EPsychicBattleAnimationPhaseType              Param_BattleAnimationPhase;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimationIndex;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Ch0200Montage;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Ch0100Montage;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53CA[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53CB[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53CC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation");
static_assert(sizeof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation) == 0x000048, "Wrong size on BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, Param_BattleAnimationPhase) == 0x000000, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::Param_BattleAnimationPhase' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, AnimationIndex) == 0x000004, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::AnimationIndex' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, Ch0200Montage) == 0x000008, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::Ch0200Montage' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, Ch0100Montage) == 0x000010, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::Ch0100Montage' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_IsValid_ReturnValue_3) == 0x000022, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000040, "Member 'BP_PsychicBattleObject_C_PrivatePlayPhaseAnimation::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.PrivateStopAnimation
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicBattleObject_C_PrivateStopAnimation final
{
public:
	class UAnimMontage*                           EnemyMontage;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           PlayerMontage;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53CD[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_PsychicBattleObject_C_PrivateStopAnimation) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_PrivateStopAnimation");
static_assert(sizeof(BP_PsychicBattleObject_C_PrivateStopAnimation) == 0x000030, "Wrong size on BP_PsychicBattleObject_C_PrivateStopAnimation");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateStopAnimation, EnemyMontage) == 0x000000, "Member 'BP_PsychicBattleObject_C_PrivateStopAnimation::EnemyMontage' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateStopAnimation, PlayerMontage) == 0x000008, "Member 'BP_PsychicBattleObject_C_PrivateStopAnimation::PlayerMontage' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateStopAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_PsychicBattleObject_C_PrivateStopAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateStopAnimation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PsychicBattleObject_C_PrivateStopAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateStopAnimation, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_PsychicBattleObject_C_PrivateStopAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateStopAnimation, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'BP_PsychicBattleObject_C_PrivateStopAnimation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateStopAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_PsychicBattleObject_C_PrivateStopAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.OnFinishAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_PsychicBattleObject_C_OnFinishAnimation final
{
public:
	class UAnimMontage*                           PlayMontage;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Interrupted;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53CE[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           EnemyMontage;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           PlayerMontage;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicBattleObject_C_OnFinishAnimation) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_OnFinishAnimation");
static_assert(sizeof(BP_PsychicBattleObject_C_OnFinishAnimation) == 0x000028, "Wrong size on BP_PsychicBattleObject_C_OnFinishAnimation");
static_assert(offsetof(BP_PsychicBattleObject_C_OnFinishAnimation, PlayMontage) == 0x000000, "Member 'BP_PsychicBattleObject_C_OnFinishAnimation::PlayMontage' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_OnFinishAnimation, Interrupted) == 0x000008, "Member 'BP_PsychicBattleObject_C_OnFinishAnimation::Interrupted' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_OnFinishAnimation, EnemyMontage) == 0x000010, "Member 'BP_PsychicBattleObject_C_OnFinishAnimation::EnemyMontage' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_OnFinishAnimation, PlayerMontage) == 0x000018, "Member 'BP_PsychicBattleObject_C_OnFinishAnimation::PlayerMontage' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_OnFinishAnimation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_PsychicBattleObject_C_OnFinishAnimation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_OnFinishAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_PsychicBattleObject_C_OnFinishAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.PrivateSetMeshes
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicBattleObject_C_PrivateSetMeshes final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp0100;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComp0200;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            MontageObject;                                     // 0x0010(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_PrivateSetMeshes) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_PrivateSetMeshes");
static_assert(sizeof(BP_PsychicBattleObject_C_PrivateSetMeshes) == 0x000038, "Wrong size on BP_PsychicBattleObject_C_PrivateSetMeshes");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateSetMeshes, SkelMeshComp0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_PrivateSetMeshes::SkelMeshComp0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateSetMeshes, SkelMeshComp0200) == 0x000008, "Member 'BP_PsychicBattleObject_C_PrivateSetMeshes::SkelMeshComp0200' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateSetMeshes, MontageObject) == 0x000010, "Member 'BP_PsychicBattleObject_C_PrivateSetMeshes::MontageObject' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.PrivateCreateMeshes
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicBattleObject_C_PrivateCreateMeshes final
{
public:
	class USkeletalMesh*                          SkelMesh0100;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SkelMesh0200;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            MontageObject;                                     // 0x0010(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_PrivateCreateMeshes) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_PrivateCreateMeshes");
static_assert(sizeof(BP_PsychicBattleObject_C_PrivateCreateMeshes) == 0x000038, "Wrong size on BP_PsychicBattleObject_C_PrivateCreateMeshes");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateCreateMeshes, SkelMesh0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_PrivateCreateMeshes::SkelMesh0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateCreateMeshes, SkelMesh0200) == 0x000008, "Member 'BP_PsychicBattleObject_C_PrivateCreateMeshes::SkelMesh0200' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateCreateMeshes, MontageObject) == 0x000010, "Member 'BP_PsychicBattleObject_C_PrivateCreateMeshes::MontageObject' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.PrivatePostSetupMesh
// 0x0048 (0x0048 - 0x0000)
struct BP_PsychicBattleObject_C_PrivatePostSetupMesh final
{
public:
	TSoftObjectPtr<class UAnimMontage>            MontageObject;                                     // 0x0000(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicBattleObject_C_PrivatePostSetupMesh) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_PrivatePostSetupMesh");
static_assert(sizeof(BP_PsychicBattleObject_C_PrivatePostSetupMesh) == 0x000048, "Wrong size on BP_PsychicBattleObject_C_PrivatePostSetupMesh");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePostSetupMesh, MontageObject) == 0x000000, "Member 'BP_PsychicBattleObject_C_PrivatePostSetupMesh::MontageObject' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePostSetupMesh, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_PsychicBattleObject_C_PrivatePostSetupMesh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePostSetupMesh, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'BP_PsychicBattleObject_C_PrivatePostSetupMesh::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivatePostSetupMesh, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_PsychicBattleObject_C_PrivatePostSetupMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.PrivateAppendMesh
// 0x0040 (0x0040 - 0x0000)
struct BP_PsychicBattleObject_C_PrivateAppendMesh final
{
public:
	class UStaticMesh*                            Mesh0100;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh0200;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            MontageObject;                                     // 0x0010(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicBattleObject_C_PrivateAppendMesh) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_PrivateAppendMesh");
static_assert(sizeof(BP_PsychicBattleObject_C_PrivateAppendMesh) == 0x000040, "Wrong size on BP_PsychicBattleObject_C_PrivateAppendMesh");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateAppendMesh, Mesh0100) == 0x000000, "Member 'BP_PsychicBattleObject_C_PrivateAppendMesh::Mesh0100' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateAppendMesh, Mesh0200) == 0x000008, "Member 'BP_PsychicBattleObject_C_PrivateAppendMesh::Mesh0200' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateAppendMesh, MontageObject) == 0x000010, "Member 'BP_PsychicBattleObject_C_PrivateAppendMesh::MontageObject' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateAppendMesh, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000038, "Member 'BP_PsychicBattleObject_C_PrivateAppendMesh::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateAppendMesh, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000039, "Member 'BP_PsychicBattleObject_C_PrivateAppendMesh::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateAppendMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x00003A, "Member 'BP_PsychicBattleObject_C_PrivateAppendMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicBattleObject_C_PrivateAppendMesh, CallFunc_SetStaticMesh_ReturnValue_1) == 0x00003B, "Member 'BP_PsychicBattleObject_C_PrivateAppendMesh::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.GetAppendMeshPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicBattleObject_C_GetAppendMeshPlayer final
{
public:
	class UStaticMeshComponent*                   MeshComp;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_GetAppendMeshPlayer) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_GetAppendMeshPlayer");
static_assert(sizeof(BP_PsychicBattleObject_C_GetAppendMeshPlayer) == 0x000008, "Wrong size on BP_PsychicBattleObject_C_GetAppendMeshPlayer");
static_assert(offsetof(BP_PsychicBattleObject_C_GetAppendMeshPlayer, MeshComp) == 0x000000, "Member 'BP_PsychicBattleObject_C_GetAppendMeshPlayer::MeshComp' has a wrong offset!");

// Function BP_PsychicBattleObject.BP_PsychicBattleObject_C.GetAppendMeshEnemy
// 0x0008 (0x0008 - 0x0000)
struct BP_PsychicBattleObject_C_GetAppendMeshEnemy final
{
public:
	class UStaticMeshComponent*                   MeshComp;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicBattleObject_C_GetAppendMeshEnemy) == 0x000008, "Wrong alignment on BP_PsychicBattleObject_C_GetAppendMeshEnemy");
static_assert(sizeof(BP_PsychicBattleObject_C_GetAppendMeshEnemy) == 0x000008, "Wrong size on BP_PsychicBattleObject_C_GetAppendMeshEnemy");
static_assert(offsetof(BP_PsychicBattleObject_C_GetAppendMeshEnemy, MeshComp) == 0x000000, "Member 'BP_PsychicBattleObject_C_GetAppendMeshEnemy::MeshComp' has a wrong offset!");

}

