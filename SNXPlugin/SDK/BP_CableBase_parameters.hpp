#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CableBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "ECableType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CableBase.BP_CableBase_C.ExecuteUbergraph_BP_CableBase
// 0x0130 (0x0130 - 0x0000)
struct BP_CableBase_C_ExecuteUbergraph_BP_CableBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E69[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E6A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ADebuggingItemFloat* InItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsReady_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E6B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)(ConstParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0050(0x0018)()
	class ADebuggingItemBase*                     CallFunc_SearchItem_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0070(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E6C[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADebuggingItemGroup*                    K2Node_DynamicCast_AsDebugging_Item_Group;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E6D[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADebuggingItemBase*                     CallFunc_SearchItem_ReturnValue_1;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ADebuggingItemFloat*              K2Node_CustomEvent_InItem;                         // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E6E[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADebuggingItemFloat*                    K2Node_DynamicCast_AsDebugging_Item_Float;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E6F[0xF];                                     // 0x00C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E70[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADebuggingItemFloat*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0118(0x0018)(ConstParm)
};
static_assert(alignof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase) == 0x000010, "Wrong alignment on BP_CableBase_C_ExecuteUbergraph_BP_CableBase");
static_assert(sizeof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase) == 0x000130, "Wrong size on BP_CableBase_C_ExecuteUbergraph_BP_CableBase");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, EntryPoint) == 0x000000, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_GetDebuggingManager_Manager) == 0x000008, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_IsReady_ReturnValue) == 0x000024, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_IsReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, Temp_text_Variable) == 0x000038, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_MakeLiteralText_ReturnValue) == 0x000050, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_SearchItem_ReturnValue) == 0x000068, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_SearchItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000070, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, K2Node_DynamicCast_AsDebugging_Item_Group) == 0x000090, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::K2Node_DynamicCast_AsDebugging_Item_Group' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_SearchItem_ReturnValue_1) == 0x0000A0, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_SearchItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, K2Node_CustomEvent_InItem) == 0x0000A8, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::K2Node_CustomEvent_InItem' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_GetValue_ReturnValue) == 0x0000B4, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, K2Node_DynamicCast_AsDebugging_Item_Float) == 0x0000B8, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::K2Node_DynamicCast_AsDebugging_Item_Float' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, K2Node_Event_DeltaSeconds) == 0x000108, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x000110, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_ExecuteUbergraph_BP_CableBase, Temp_text_Variable_1) == 0x000118, "Member 'BP_CableBase_C_ExecuteUbergraph_BP_CableBase::Temp_text_Variable_1' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CableBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CableBase_C_ReceiveTick");
static_assert(sizeof(BP_CableBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_CableBase_C_ReceiveTick");
static_assert(offsetof(BP_CableBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CableBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.OnChangedColoring
// 0x0008 (0x0008 - 0x0000)
struct BP_CableBase_C_OnChangedColoring final
{
public:
	const class ADebuggingItemFloat*              InItem;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_OnChangedColoring) == 0x000008, "Wrong alignment on BP_CableBase_C_OnChangedColoring");
static_assert(sizeof(BP_CableBase_C_OnChangedColoring) == 0x000008, "Wrong size on BP_CableBase_C_OnChangedColoring");
static_assert(offsetof(BP_CableBase_C_OnChangedColoring, InItem) == 0x000000, "Member 'BP_CableBase_C_OnChangedColoring::InItem' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.UserConstructionScript
// 0x002C (0x002C - 0x0000)
struct BP_CableBase_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumBones_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E71[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_CableBase_C_UserConstructionScript");
static_assert(sizeof(BP_CableBase_C_UserConstructionScript) == 0x00002C, "Wrong size on BP_CableBase_C_UserConstructionScript");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, Temp_int_Variable) == 0x000000, "Member 'BP_CableBase_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CableBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, CallFunc_GetBoneName_ReturnValue) == 0x000008, "Member 'BP_CableBase_C_UserConstructionScript::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, CallFunc_GetNumBones_ReturnValue) == 0x000010, "Member 'BP_CableBase_C_UserConstructionScript::CallFunc_GetNumBones_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_CableBase_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_CableBase_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, CallFunc_GetParentBone_ReturnValue) == 0x00001C, "Member 'BP_CableBase_C_UserConstructionScript::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_CableBase_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue_1) == 0x000028, "Member 'BP_CableBase_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetCodeColoring
// 0x0008 (0x0008 - 0x0000)
struct BP_CableBase_C_SetCodeColoring final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_SetCodeColoring) == 0x000004, "Wrong alignment on BP_CableBase_C_SetCodeColoring");
static_assert(sizeof(BP_CableBase_C_SetCodeColoring) == 0x000008, "Wrong size on BP_CableBase_C_SetCodeColoring");
static_assert(offsetof(BP_CableBase_C_SetCodeColoring, Rate) == 0x000000, "Member 'BP_CableBase_C_SetCodeColoring::Rate' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetCodeColoring, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BP_CableBase_C_SetCodeColoring::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetVisibility
// 0x0040 (0x0040 - 0x0000)
struct BP_CableBase_C_SetVisibility final
{
public:
	bool                                          New_Visibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E72[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E73[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E74[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSCableAnimInstance*                   K2Node_DynamicCast_AsRSCable_Anim_Instance;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_SetVisibility) == 0x000008, "Wrong alignment on BP_CableBase_C_SetVisibility");
static_assert(sizeof(BP_CableBase_C_SetVisibility) == 0x000040, "Wrong size on BP_CableBase_C_SetVisibility");
static_assert(offsetof(BP_CableBase_C_SetVisibility, New_Visibility) == 0x000000, "Member 'BP_CableBase_C_SetVisibility::New_Visibility' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetVisibility, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_CableBase_C_SetVisibility::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CableBase_C_SetVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetVisibility, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000018, "Member 'BP_CableBase_C_SetVisibility::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_CableBase_C_SetVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetVisibility, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_CableBase_C_SetVisibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetVisibility, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_CableBase_C_SetVisibility::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetVisibility, K2Node_DynamicCast_AsRSCable_Anim_Instance) == 0x000030, "Member 'BP_CableBase_C_SetVisibility::K2Node_DynamicCast_AsRSCable_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetVisibility, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_CableBase_C_SetVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetBoneParam
// 0x0040 (0x0040 - 0x0000)
struct BP_CableBase_C_SetBoneParam final
{
public:
	struct FCableAdditiveBoneParam                BoneParam;                                         // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSCableAnimInstance*                   K2Node_DynamicCast_AsRSCable_Anim_Instance;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_SetBoneParam) == 0x000008, "Wrong alignment on BP_CableBase_C_SetBoneParam");
static_assert(sizeof(BP_CableBase_C_SetBoneParam) == 0x000040, "Wrong size on BP_CableBase_C_SetBoneParam");
static_assert(offsetof(BP_CableBase_C_SetBoneParam, BoneParam) == 0x000000, "Member 'BP_CableBase_C_SetBoneParam::BoneParam' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetBoneParam, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_CableBase_C_SetBoneParam::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetBoneParam, K2Node_DynamicCast_AsRSCable_Anim_Instance) == 0x000030, "Member 'BP_CableBase_C_SetBoneParam::K2Node_DynamicCast_AsRSCable_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetBoneParam, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_CableBase_C_SetBoneParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.CheckCollision
// 0x03B0 (0x03B0 - 0x0000)
struct BP_CableBase_C_CheckCollision final
{
public:
	int32                                         CollisionIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TraceLength;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceVector;                                       // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E75[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E76[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E77[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E78[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E79[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7A[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7B[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7C[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7D[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7E[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0120(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7F[0x1];                                     // 0x01AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E80[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E81[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CableBase_C*                        K2Node_DynamicCast_AsBP_Cable_Base;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E82[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0268(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E83[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitLocation;        // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitNormal;          // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_K2_LineTraceComponent_BoneName;           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_LineTraceComponent_OutHit;             // 0x0320(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_LineTraceComponent_ReturnValue;        // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_CheckCollision) == 0x000008, "Wrong alignment on BP_CableBase_C_CheckCollision");
static_assert(sizeof(BP_CableBase_C_CheckCollision) == 0x0003B0, "Wrong size on BP_CableBase_C_CheckCollision");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CollisionIndex) == 0x000000, "Member 'BP_CableBase_C_CheckCollision::CollisionIndex' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, TraceLength) == 0x000004, "Member 'BP_CableBase_C_CheckCollision::TraceLength' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, TraceVector) == 0x000008, "Member 'BP_CableBase_C_CheckCollision::TraceVector' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_int_Variable) == 0x000014, "Member 'BP_CableBase_C_CheckCollision::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_object_Variable) == 0x000018, "Member 'BP_CableBase_C_CheckCollision::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_object_Variable_1) == 0x000030, "Member 'BP_CableBase_C_CheckCollision::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_int_Variable_1) == 0x000040, "Member 'BP_CableBase_C_CheckCollision::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000048, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_CableBase_C_CheckCollision::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_bool_Variable) == 0x000051, "Member 'BP_CableBase_C_CheckCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_bool_Variable_1) == 0x00005A, "Member 'BP_CableBase_C_CheckCollision::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Not_PreBool_ReturnValue_1) == 0x000060, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_CableBase_C_CheckCollision::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Array_LastIndex_ReturnValue) == 0x000084, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_int_Variable_2) == 0x000090, "Member 'BP_CableBase_C_CheckCollision::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_int_Variable_3) == 0x000094, "Member 'BP_CableBase_C_CheckCollision::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_CableBase_C_CheckCollision::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00009C, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000A4, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BP_CableBase_C_CheckCollision::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B5, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000C0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000C4, "Member 'BP_CableBase_C_CheckCollision::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_int_Variable_4) == 0x0000C8, "Member 'BP_CableBase_C_CheckCollision::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Array_Get_Item_2) == 0x0000CC, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_GetSocketLocation_ReturnValue) == 0x0000D4, "Member 'BP_CableBase_C_CheckCollision::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000E4, "Member 'BP_CableBase_C_CheckCollision::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, Temp_bool_Variable_2) == 0x0000E5, "Member 'BP_CableBase_C_CheckCollision::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000E8, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000EC, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000F0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F4, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000F8, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000FC, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000100, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000104, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_FMax_ReturnValue) == 0x000110, "Member 'BP_CableBase_C_CheckCollision::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000114, "Member 'BP_CableBase_C_CheckCollision::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000120, "Member 'BP_CableBase_C_CheckCollision::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001A8, "Member 'BP_CableBase_C_CheckCollision::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A9, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001AA, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_Time) == 0x0001AC, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_Distance) == 0x0001B0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_Location) == 0x0001B4, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_Normal) == 0x0001CC, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D8, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_PhysMat) == 0x0001E8, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_HitActor) == 0x0001F0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_HitComponent) == 0x0001F8, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_HitBoneName) == 0x000200, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_HitItem) == 0x000208, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_FaceIndex) == 0x00020C, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_TraceStart) == 0x000210, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_BreakHitResult_TraceEnd) == 0x00021C, "Member 'BP_CableBase_C_CheckCollision::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000228, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, K2Node_DynamicCast_AsBP_Cable_Base) == 0x000238, "Member 'BP_CableBase_C_CheckCollision::K2Node_DynamicCast_AsBP_Cable_Base' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'BP_CableBase_C_CheckCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Normal_ReturnValue) == 0x000244, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Add_VectorVector_ReturnValue) == 0x000250, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00025C, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_LineTraceSingle_OutHit) == 0x000268, "Member 'BP_CableBase_C_CheckCollision::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_LineTraceSingle_ReturnValue) == 0x0002F0, "Member 'BP_CableBase_C_CheckCollision::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002F4, "Member 'BP_CableBase_C_CheckCollision::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_K2_LineTraceComponent_HitLocation) == 0x000300, "Member 'BP_CableBase_C_CheckCollision::CallFunc_K2_LineTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_K2_LineTraceComponent_HitNormal) == 0x00030C, "Member 'BP_CableBase_C_CheckCollision::CallFunc_K2_LineTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_K2_LineTraceComponent_BoneName) == 0x000318, "Member 'BP_CableBase_C_CheckCollision::CallFunc_K2_LineTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_K2_LineTraceComponent_OutHit) == 0x000320, "Member 'BP_CableBase_C_CheckCollision::CallFunc_K2_LineTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CheckCollision, CallFunc_K2_LineTraceComponent_ReturnValue) == 0x0003A8, "Member 'BP_CableBase_C_CheckCollision::CallFunc_K2_LineTraceComponent_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.CodeStart
// 0x0010 (0x0010 - 0x0000)
struct BP_CableBase_C_CodeStart final
{
public:
	ECableType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDrive;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOptionNoCutin;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NexusDrive;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ExColor;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoCodeStart_bDummy;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E84[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_CodeStart) == 0x000004, "Wrong alignment on BP_CableBase_C_CodeStart");
static_assert(sizeof(BP_CableBase_C_CodeStart) == 0x000010, "Wrong size on BP_CableBase_C_CodeStart");
static_assert(offsetof(BP_CableBase_C_CodeStart, Type) == 0x000000, "Member 'BP_CableBase_C_CodeStart::Type' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, bDrive) == 0x000001, "Member 'BP_CableBase_C_CodeStart::bDrive' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, bOptionNoCutin) == 0x000002, "Member 'BP_CableBase_C_CodeStart::bOptionNoCutin' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, NexusDrive) == 0x000003, "Member 'BP_CableBase_C_CodeStart::NexusDrive' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, ExColor) == 0x000004, "Member 'BP_CableBase_C_CodeStart::ExColor' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, CallFunc_DoCodeStart_bDummy) == 0x000005, "Member 'BP_CableBase_C_CodeStart::CallFunc_DoCodeStart_bDummy' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'BP_CableBase_C_CodeStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, CallFunc_IsValid_ReturnValue_1) == 0x000007, "Member 'BP_CableBase_C_CodeStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_CableBase_C_CodeStart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeStart, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_CableBase_C_CodeStart::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.CodeEnd
// 0x0010 (0x0010 - 0x0000)
struct BP_CableBase_C_CodeEnd final
{
public:
	ECableType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoCodeEnd_bEnd;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E85[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_CodeEnd) == 0x000004, "Wrong alignment on BP_CableBase_C_CodeEnd");
static_assert(sizeof(BP_CableBase_C_CodeEnd) == 0x000010, "Wrong size on BP_CableBase_C_CodeEnd");
static_assert(offsetof(BP_CableBase_C_CodeEnd, Type) == 0x000000, "Member 'BP_CableBase_C_CodeEnd::Type' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CableBase_C_CodeEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeEnd, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_CableBase_C_CodeEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeEnd, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'BP_CableBase_C_CodeEnd::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeEnd, CallFunc_DoCodeEnd_bEnd) == 0x000004, "Member 'BP_CableBase_C_CodeEnd::CallFunc_DoCodeEnd_bEnd' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeEnd, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_CableBase_C_CodeEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeEnd, CallFunc_Array_RemoveItem_ReturnValue) == 0x00000C, "Member 'BP_CableBase_C_CodeEnd::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_CodeEnd, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'BP_CableBase_C_CodeEnd::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetCodeDither
// 0x0008 (0x0008 - 0x0000)
struct BP_CableBase_C_SetCodeDither final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_SetCodeDither) == 0x000004, "Wrong alignment on BP_CableBase_C_SetCodeDither");
static_assert(sizeof(BP_CableBase_C_SetCodeDither) == 0x000008, "Wrong size on BP_CableBase_C_SetCodeDither");
static_assert(offsetof(BP_CableBase_C_SetCodeDither, Rate) == 0x000000, "Member 'BP_CableBase_C_SetCodeDither::Rate' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetCodeDither, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BP_CableBase_C_SetCodeDither::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetCodePower
// 0x0004 (0x0004 - 0x0000)
struct BP_CableBase_C_SetCodePower final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_SetCodePower) == 0x000004, "Wrong alignment on BP_CableBase_C_SetCodePower");
static_assert(sizeof(BP_CableBase_C_SetCodePower) == 0x000004, "Wrong size on BP_CableBase_C_SetCodePower");
static_assert(offsetof(BP_CableBase_C_SetCodePower, Rate) == 0x000000, "Member 'BP_CableBase_C_SetCodePower::Rate' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.UpdateState
// 0x0050 (0x0050 - 0x0000)
struct BP_CableBase_C_UpdateState final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E86[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ParentActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERSCableAnimationState                        State;                                             // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E87[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatusAI_bResult;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E88[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSCableAnimInstance*                   K2Node_DynamicCast_AsRSCable_Anim_Instance;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_UpdateState) == 0x000008, "Wrong alignment on BP_CableBase_C_UpdateState");
static_assert(sizeof(BP_CableBase_C_UpdateState) == 0x000050, "Wrong size on BP_CableBase_C_UpdateState");
static_assert(offsetof(BP_CableBase_C_UpdateState, DeltaSeconds) == 0x000000, "Member 'BP_CableBase_C_UpdateState::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, ParentActor) == 0x000008, "Member 'BP_CableBase_C_UpdateState::ParentActor' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, State) == 0x000010, "Member 'BP_CableBase_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, CallFunc_GetAttachParentActor_ReturnValue) == 0x000018, "Member 'BP_CableBase_C_UpdateState::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000020, "Member 'BP_CableBase_C_UpdateState::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_CableBase_C_UpdateState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, CallFunc_IsActionStatusAI_bResult) == 0x000031, "Member 'BP_CableBase_C_UpdateState::CallFunc_IsActionStatusAI_bResult' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BP_CableBase_C_UpdateState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'BP_CableBase_C_UpdateState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, K2Node_DynamicCast_AsRSCable_Anim_Instance) == 0x000040, "Member 'BP_CableBase_C_UpdateState::K2Node_DynamicCast_AsRSCable_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateState, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_CableBase_C_UpdateState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetBrainFieldParam
// 0x001C (0x001C - 0x0000)
struct BP_CableBase_C_SetBrainFieldParam final
{
public:
	struct FVector                                BasePos;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrashRate;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_SetBrainFieldParam) == 0x000004, "Wrong alignment on BP_CableBase_C_SetBrainFieldParam");
static_assert(sizeof(BP_CableBase_C_SetBrainFieldParam) == 0x00001C, "Wrong size on BP_CableBase_C_SetBrainFieldParam");
static_assert(offsetof(BP_CableBase_C_SetBrainFieldParam, BasePos) == 0x000000, "Member 'BP_CableBase_C_SetBrainFieldParam::BasePos' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetBrainFieldParam, CrashRate) == 0x00000C, "Member 'BP_CableBase_C_SetBrainFieldParam::CrashRate' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetBrainFieldParam, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_CableBase_C_SetBrainFieldParam::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetBrainFieldParam, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_CableBase_C_SetBrainFieldParam::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetBrainFieldParam, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_CableBase_C_SetBrainFieldParam::CallFunc_BreakVector_Z' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.DoCodeStart
// 0x0005 (0x0005 - 0x0000)
struct BP_CableBase_C_DoCodeStart final
{
public:
	ECableType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOptionNoCutin;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNexusDrive;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bExColor;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_DoCodeStart) == 0x000001, "Wrong alignment on BP_CableBase_C_DoCodeStart");
static_assert(sizeof(BP_CableBase_C_DoCodeStart) == 0x000005, "Wrong size on BP_CableBase_C_DoCodeStart");
static_assert(offsetof(BP_CableBase_C_DoCodeStart, Type) == 0x000000, "Member 'BP_CableBase_C_DoCodeStart::Type' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_DoCodeStart, bOptionNoCutin) == 0x000001, "Member 'BP_CableBase_C_DoCodeStart::bOptionNoCutin' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_DoCodeStart, bNexusDrive) == 0x000002, "Member 'BP_CableBase_C_DoCodeStart::bNexusDrive' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_DoCodeStart, bExColor) == 0x000003, "Member 'BP_CableBase_C_DoCodeStart::bExColor' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_DoCodeStart, bDummy) == 0x000004, "Member 'BP_CableBase_C_DoCodeStart::bDummy' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.DoCodeEnd
// 0x0002 (0x0002 - 0x0000)
struct BP_CableBase_C_DoCodeEnd final
{
public:
	ECableType                                    Ttype;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnd;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_DoCodeEnd) == 0x000001, "Wrong alignment on BP_CableBase_C_DoCodeEnd");
static_assert(sizeof(BP_CableBase_C_DoCodeEnd) == 0x000002, "Wrong size on BP_CableBase_C_DoCodeEnd");
static_assert(offsetof(BP_CableBase_C_DoCodeEnd, Ttype) == 0x000000, "Member 'BP_CableBase_C_DoCodeEnd::Ttype' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_DoCodeEnd, bEnd) == 0x000001, "Member 'BP_CableBase_C_DoCodeEnd::bEnd' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.BeginOverrideGravity
// 0x0001 (0x0001 - 0x0000)
struct BP_CableBase_C_BeginOverrideGravity final
{
public:
	ERSCableGravityType                           Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_BeginOverrideGravity) == 0x000001, "Wrong alignment on BP_CableBase_C_BeginOverrideGravity");
static_assert(sizeof(BP_CableBase_C_BeginOverrideGravity) == 0x000001, "Wrong size on BP_CableBase_C_BeginOverrideGravity");
static_assert(offsetof(BP_CableBase_C_BeginOverrideGravity, Type) == 0x000000, "Member 'BP_CableBase_C_BeginOverrideGravity::Type' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.EndOverrideGravity
// 0x0001 (0x0001 - 0x0000)
struct BP_CableBase_C_EndOverrideGravity final
{
public:
	ERSCableGravityType                           Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_EndOverrideGravity) == 0x000001, "Wrong alignment on BP_CableBase_C_EndOverrideGravity");
static_assert(sizeof(BP_CableBase_C_EndOverrideGravity) == 0x000001, "Wrong size on BP_CableBase_C_EndOverrideGravity");
static_assert(offsetof(BP_CableBase_C_EndOverrideGravity, Type) == 0x000000, "Member 'BP_CableBase_C_EndOverrideGravity::Type' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetBrainFieldMode
// 0x0008 (0x0008 - 0x0000)
struct BP_CableBase_C_SetBrainFieldMode final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E89[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_SetBrainFieldMode) == 0x000004, "Wrong alignment on BP_CableBase_C_SetBrainFieldMode");
static_assert(sizeof(BP_CableBase_C_SetBrainFieldMode) == 0x000008, "Wrong size on BP_CableBase_C_SetBrainFieldMode");
static_assert(offsetof(BP_CableBase_C_SetBrainFieldMode, Enable) == 0x000000, "Member 'BP_CableBase_C_SetBrainFieldMode::Enable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetBrainFieldMode, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_CableBase_C_SetBrainFieldMode::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetMaterialScalarParameter
// 0x0010 (0x0010 - 0x0000)
struct BP_CableBase_C_SetMaterialScalarParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_SetMaterialScalarParameter) == 0x000004, "Wrong alignment on BP_CableBase_C_SetMaterialScalarParameter");
static_assert(sizeof(BP_CableBase_C_SetMaterialScalarParameter) == 0x000010, "Wrong size on BP_CableBase_C_SetMaterialScalarParameter");
static_assert(offsetof(BP_CableBase_C_SetMaterialScalarParameter, ParamName) == 0x000000, "Member 'BP_CableBase_C_SetMaterialScalarParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetMaterialScalarParameter, Value) == 0x000008, "Member 'BP_CableBase_C_SetMaterialScalarParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetMaterialScalarParameter, bDummy) == 0x00000C, "Member 'BP_CableBase_C_SetMaterialScalarParameter::bDummy' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.EnableTempVisibilityOff
// 0x0001 (0x0001 - 0x0000)
struct BP_CableBase_C_EnableTempVisibilityOff final
{
public:
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_EnableTempVisibilityOff) == 0x000001, "Wrong alignment on BP_CableBase_C_EnableTempVisibilityOff");
static_assert(sizeof(BP_CableBase_C_EnableTempVisibilityOff) == 0x000001, "Wrong size on BP_CableBase_C_EnableTempVisibilityOff");
static_assert(offsetof(BP_CableBase_C_EnableTempVisibilityOff, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000000, "Member 'BP_CableBase_C_EnableTempVisibilityOff::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.DisableTempVisibilityOff
// 0x0001 (0x0001 - 0x0000)
struct BP_CableBase_C_DisableTempVisibilityOff final
{
public:
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_DisableTempVisibilityOff) == 0x000001, "Wrong alignment on BP_CableBase_C_DisableTempVisibilityOff");
static_assert(sizeof(BP_CableBase_C_DisableTempVisibilityOff) == 0x000001, "Wrong size on BP_CableBase_C_DisableTempVisibilityOff");
static_assert(offsetof(BP_CableBase_C_DisableTempVisibilityOff, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000000, "Member 'BP_CableBase_C_DisableTempVisibilityOff::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SetAttachPlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_CableBase_C_SetAttachPlayer final
{
public:
	class ARSBattlePlayer_C*                      Param_AttachPlayer;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_AttachSocketName;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_SetAttachPlayer) == 0x000008, "Wrong alignment on BP_CableBase_C_SetAttachPlayer");
static_assert(sizeof(BP_CableBase_C_SetAttachPlayer) == 0x000010, "Wrong size on BP_CableBase_C_SetAttachPlayer");
static_assert(offsetof(BP_CableBase_C_SetAttachPlayer, Param_AttachPlayer) == 0x000000, "Member 'BP_CableBase_C_SetAttachPlayer::Param_AttachPlayer' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_SetAttachPlayer, Param_AttachSocketName) == 0x000008, "Member 'BP_CableBase_C_SetAttachPlayer::Param_AttachSocketName' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.RegisterCustomTimeDilation
// 0x000C (0x000C - 0x0000)
struct BP_CableBase_C_RegisterCustomTimeDilation final
{
public:
	float                                         TimeDilation;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ClaimantName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_RegisterCustomTimeDilation) == 0x000004, "Wrong alignment on BP_CableBase_C_RegisterCustomTimeDilation");
static_assert(sizeof(BP_CableBase_C_RegisterCustomTimeDilation) == 0x00000C, "Wrong size on BP_CableBase_C_RegisterCustomTimeDilation");
static_assert(offsetof(BP_CableBase_C_RegisterCustomTimeDilation, TimeDilation) == 0x000000, "Member 'BP_CableBase_C_RegisterCustomTimeDilation::TimeDilation' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_RegisterCustomTimeDilation, ClaimantName) == 0x000004, "Member 'BP_CableBase_C_RegisterCustomTimeDilation::ClaimantName' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.UnregisterCustomTimeDilation
// 0x000C (0x000C - 0x0000)
struct BP_CableBase_C_UnregisterCustomTimeDilation final
{
public:
	class FName                                   ClaimantName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_UnregisterCustomTimeDilation) == 0x000004, "Wrong alignment on BP_CableBase_C_UnregisterCustomTimeDilation");
static_assert(sizeof(BP_CableBase_C_UnregisterCustomTimeDilation) == 0x00000C, "Wrong size on BP_CableBase_C_UnregisterCustomTimeDilation");
static_assert(offsetof(BP_CableBase_C_UnregisterCustomTimeDilation, ClaimantName) == 0x000000, "Member 'BP_CableBase_C_UnregisterCustomTimeDilation::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UnregisterCustomTimeDilation, CallFunc_Map_Remove_ReturnValue) == 0x000008, "Member 'BP_CableBase_C_UnregisterCustomTimeDilation::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.UpdateTimeDilation
// 0x0040 (0x0040 - 0x0000)
struct BP_CableBase_C_UpdateTimeDilation final
{
public:
	float                                         LDilation;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_UpdateTimeDilation) == 0x000008, "Wrong alignment on BP_CableBase_C_UpdateTimeDilation");
static_assert(sizeof(BP_CableBase_C_UpdateTimeDilation) == 0x000040, "Wrong size on BP_CableBase_C_UpdateTimeDilation");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, LDilation) == 0x000000, "Member 'BP_CableBase_C_UpdateTimeDilation::LDilation' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'BP_CableBase_C_UpdateTimeDilation::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CableBase_C_UpdateTimeDilation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_CableBase_C_UpdateTimeDilation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_CableBase_C_UpdateTimeDilation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_CableBase_C_UpdateTimeDilation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_CableBase_C_UpdateTimeDilation::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_CableBase_C_UpdateTimeDilation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_CableBase_C_UpdateTimeDilation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_CableBase_C_UpdateTimeDilation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_CableBase_C_UpdateTimeDilation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_UpdateTimeDilation, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_CableBase_C_UpdateTimeDilation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.EventPhysicsIdling
// 0x0008 (0x0008 - 0x0000)
struct BP_CableBase_C_EventPhysicsIdling final
{
public:
	float                                         IdlingSec;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_EventPhysicsIdling) == 0x000004, "Wrong alignment on BP_CableBase_C_EventPhysicsIdling");
static_assert(sizeof(BP_CableBase_C_EventPhysicsIdling) == 0x000008, "Wrong size on BP_CableBase_C_EventPhysicsIdling");
static_assert(offsetof(BP_CableBase_C_EventPhysicsIdling, IdlingSec) == 0x000000, "Member 'BP_CableBase_C_EventPhysicsIdling::IdlingSec' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_EventPhysicsIdling, bDummy) == 0x000004, "Member 'BP_CableBase_C_EventPhysicsIdling::bDummy' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.GetSASStartAnimSequence
// 0x0008 (0x0008 - 0x0000)
struct BP_CableBase_C_GetSASStartAnimSequence final
{
public:
	class UAnimSequence*                          AnimSequence;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_GetSASStartAnimSequence) == 0x000008, "Wrong alignment on BP_CableBase_C_GetSASStartAnimSequence");
static_assert(sizeof(BP_CableBase_C_GetSASStartAnimSequence) == 0x000008, "Wrong size on BP_CableBase_C_GetSASStartAnimSequence");
static_assert(offsetof(BP_CableBase_C_GetSASStartAnimSequence, AnimSequence) == 0x000000, "Member 'BP_CableBase_C_GetSASStartAnimSequence::AnimSequence' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SwitchNexusDrive
// 0x0001 (0x0001 - 0x0000)
struct BP_CableBase_C_SwitchNexusDrive final
{
public:
	bool                                          bNexusDrive;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_SwitchNexusDrive) == 0x000001, "Wrong alignment on BP_CableBase_C_SwitchNexusDrive");
static_assert(sizeof(BP_CableBase_C_SwitchNexusDrive) == 0x000001, "Wrong size on BP_CableBase_C_SwitchNexusDrive");
static_assert(offsetof(BP_CableBase_C_SwitchNexusDrive, bNexusDrive) == 0x000000, "Member 'BP_CableBase_C_SwitchNexusDrive::bNexusDrive' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.SwitchExColor
// 0x0001 (0x0001 - 0x0000)
struct BP_CableBase_C_SwitchExColor final
{
public:
	bool                                          bExColor;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_SwitchExColor) == 0x000001, "Wrong alignment on BP_CableBase_C_SwitchExColor");
static_assert(sizeof(BP_CableBase_C_SwitchExColor) == 0x000001, "Wrong size on BP_CableBase_C_SwitchExColor");
static_assert(offsetof(BP_CableBase_C_SwitchExColor, bExColor) == 0x000000, "Member 'BP_CableBase_C_SwitchExColor::bExColor' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.IsCableMode
// 0x000C (0x000C - 0x0000)
struct BP_CableBase_C_IsCableMode final
{
public:
	ECableType                                    CableMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_IsCableMode) == 0x000004, "Wrong alignment on BP_CableBase_C_IsCableMode");
static_assert(sizeof(BP_CableBase_C_IsCableMode) == 0x00000C, "Wrong size on BP_CableBase_C_IsCableMode");
static_assert(offsetof(BP_CableBase_C_IsCableMode, CableMode) == 0x000000, "Member 'BP_CableBase_C_IsCableMode::CableMode' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_IsCableMode, bResult) == 0x000001, "Member 'BP_CableBase_C_IsCableMode::bResult' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_IsCableMode, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'BP_CableBase_C_IsCableMode::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CableBase_C_IsCableMode, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_CableBase_C_IsCableMode::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.GetCableIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CableBase_C_GetCableIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_GetCableIndex) == 0x000004, "Wrong alignment on BP_CableBase_C_GetCableIndex");
static_assert(sizeof(BP_CableBase_C_GetCableIndex) == 0x000004, "Wrong size on BP_CableBase_C_GetCableIndex");
static_assert(offsetof(BP_CableBase_C_GetCableIndex, Param_Index) == 0x000000, "Member 'BP_CableBase_C_GetCableIndex::Param_Index' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.GetMaterialLocationParamName
// 0x0008 (0x0008 - 0x0000)
struct BP_CableBase_C_GetMaterialLocationParamName final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CableBase_C_GetMaterialLocationParamName) == 0x000004, "Wrong alignment on BP_CableBase_C_GetMaterialLocationParamName");
static_assert(sizeof(BP_CableBase_C_GetMaterialLocationParamName) == 0x000008, "Wrong size on BP_CableBase_C_GetMaterialLocationParamName");
static_assert(offsetof(BP_CableBase_C_GetMaterialLocationParamName, ParamName) == 0x000000, "Member 'BP_CableBase_C_GetMaterialLocationParamName::ParamName' has a wrong offset!");

// Function BP_CableBase.BP_CableBase_C.IsDriveMode
// 0x0001 (0x0001 - 0x0000)
struct BP_CableBase_C_IsDriveMode final
{
public:
	bool                                          bDrive;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CableBase_C_IsDriveMode) == 0x000001, "Wrong alignment on BP_CableBase_C_IsDriveMode");
static_assert(sizeof(BP_CableBase_C_IsDriveMode) == 0x000001, "Wrong size on BP_CableBase_C_IsDriveMode");
static_assert(offsetof(BP_CableBase_C_IsDriveMode, bDrive) == 0x000000, "Member 'BP_CableBase_C_IsDriveMode::bDrive' has a wrong offset!");

}

