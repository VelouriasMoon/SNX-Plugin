#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ui_SceneMap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_ui_help_window_type_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ui_SceneMap.BP_ui_SceneMap_C
// 0x0290 (0x07C0 - 0x0530)
class ABP_ui_SceneMap_C : public ABP_UI_SceneMap
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UInstancedStaticMeshComponent*          IconNPCPlayer;                                     // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconWorldPortal;                                   // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconAreaPortalBefore;                              // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconAreaPortal;                                    // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconBouds;                                         // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconEnemy0630;                                     // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconShop;                                          // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconAreaChangeBar;                                 // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconSubquestCompleteActive;                        // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconTownNpc;                                       // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               Camera;                                            // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconSavePoint;                                     // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconPickDisable;                                   // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconPickActive;                                    // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   IconLastAreaPosition;                              // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconSas;                                           // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconObject;                                        // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   IconPlayerDirection;                               // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   IconCameraDirection;                               // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconSubQuestComplete;                              // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconSubQuestActive;                                // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconSubQuest;                                      // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconMainQuest;                                     // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconAreaChange;                                    // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconTreasureOpen;                                  // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconTreasureClose;                                 // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconFootprint;                                     // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          IconEnemy;                                         // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   IconPlayer;                                        // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Camera_IsPerspective;                              // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B89[0x7];                                     // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             UnvisibleTransform;                                // 0x0630(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FString                                 CurrentAreaName;                                   // 0x0660(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class Ubp_ui_map_icon_manager_C*              IconManager;                                       // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIMain3DViewModeSetting               CameraVIewSetting;                                 // 0x0678(0x0024)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         CameraLocationSpdY;                                // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraLocationSpdX;                                // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8A[0x4];                                     // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMapArrangeItemNode>            IconArrangeItemMaterial;                           // 0x06A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 BP_Name;                                           // 0x06B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             MaterialIconArray;                                 // 0x06C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FMapArrangeItemNode>            IconArrangeItemTreasure;                           // 0x06D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         PlayerDirectionOffset;                             // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8B[0x4];                                     // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      CollisionData;                                     // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugFlag;                                         // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B8C[0x7];                                     // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANpcTownPeople*>                 TownNpcList;                                       // 0x0700(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   ActiveQuest;                                       // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DetaileMapIconOffset;                              // 0x0718(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8D[0x4];                                     // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_ui_help_window_type>              HelpWindowIconList;                                // 0x0728(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsCameraControl;                                   // 0x0738(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B8E[0x3];                                     // 0x0739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AfterViewModeCamera;                               // 0x073C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AfterViewModeView;                                 // 0x0748(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotate;                                      // 0x0754(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                AfterViewModeMoveCamera;                           // 0x0760(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIMain3DViewModeSetting               CameraVIewSettingMouse;                            // 0x076C(0x0024)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         PortalOffset;                                      // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PortalScale;                                       // 0x0794(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyLenght;                                       // 0x07A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterViewModeCameraZ;                              // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterViewModeViewZ;                                // 0x07A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Isleap;                                            // 0x07AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInitResetCamra;                                  // 0x07AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B8F[0x2];                                     // 0x07AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             QuestIconDestination;                              // 0x07B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void QuestIconDestination__DelegateSignature();
	void ExecuteUbergraph_BP_ui_SceneMap(int32 EntryPoint);
	void UpdateMapGimmickReuse(const class AMapGimmickObject* Gimmick);
	void UpdateMapGimmick(const class AMapGimmickObject* Gimmick);
	void ChangeMinimapFloor(int32 Floor);
	void Event_UpdateTargetPoint(bool DestinationDispFlag);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Camera_Init();
	void Camera_InitPerspective();
	void Camera_InitOrthographic();
	void Camera_UpdateMinimap();
	void Camera_UpdateMinimapPerspective();
	void Camera_UpdateMinimapOrthographic();
	void Player_Init();
	void Player_Detaile();
	void Camera_SetHeight(float Height);
	void Camera_SetScale(float Scale);
	void Camera_SetPerspective(bool Isperspective, bool Force);
	void Camera_SetRotate(bool IsRotate);
	void PickUpPoint_Init();
	void SetupMinimap(class FName CurrentName);
	void SetupDetailMap(class FName CurrentName);
	void Icon_Init();
	void AreaChange_Init();
	void BgModel_Create(bool Param_IsDetailMap, class FName CurrentName);
	void BgModel_Release();
	void IconManager_Init();
	void Icon_SetRenderLayer(uint8 Layer);
	void Icon_SetVisible(int32 Visibleflag);
	void BgModel_SetUp();
	void BgModel_SetMaterialParamDivide(float Param);
	void GetAreaNum(int32* Num);
	void GetCurrentLevel(int32* Level);
	void GetCurrentArea(int32* Area);
	void BgModel_LoadNextArea();
	void BgModel_LoadPreviousArea();
	void Camera_Reset(bool TakeOverRotate);
	void Quest_Icon_Destination();
	void GetCurrentAreaName(class FString* Param_Name);
	void SasWall_Init(bool Reuse, class FName Gimmickname);
	void Shop_Init();
	void SavePoint_Init();
	void Camera_Detail_Location(const struct FVector2D& StickL, float Delta, float Speed, bool Mouse, bool* Update);
	void Camera_Detail_Rotation(const struct FVector2D& Stickr, float Delta, float Speed, bool Mouse, bool* Update);
	void Camera_Detail_Zoom(float Delta, float InputIn, float Speed, bool Mouse, bool* Update);
	void Camera_Detail_Init();
	void TreasureItem_Init();
	void LastAreaInit(int32* InfoBeforeIndex);
	void BgModel_ChangeFloor(bool Param_Isleap);
	void GetCurrentAreaCheck(bool* Flag);
	void Camera_SetScaleConfig(bool ScaleFlag);
	void InitMaterial();
	void GetAssetFilePath(class FName CurrentArea, class FString* FilePath);
	void Icon_All_Init();
	void Icon_Minimap_Init();
	void Camera_Reset_Floor();
	void QuestIcon_Init();
	void QuestIcon_Event();
	void QuestIcon_Update(EUINoticeMessageCallType Type, class FName Param_Name);
	void QuestIcon_Active(class FName Param_Name);
	void SetHelpWindowList(Enum_ui_help_window_type HelpwindowIcon);
	void Camera_Detail_Leap();
	void Camera_Capture();
	void GetFloorIndex(const struct FVector& Inputpos, int32* Floorindex);
	bool Camera_UpdateDetailMap();
	void Icon_TownNpc();
	class AActor* GetIconAdjustVector(TSubclassOf<class AActor> ActorClass, class FName FindName);
	void GetShopIconAdjust(class FName ActorName, int32 OffsetType, const struct FVector& Vectordata, struct FVector* RetVector);
	void GetSaveIconAdjust(class FName ActorName, int32 OffsetType, const struct FVector& Vectordata, struct FVector* RetVector);
	bool DebugUpdateIcon();
	void Camera_SubAreaOffset();
	void GimmickUseCheck(class FName ActorName, bool* IsUse);
	bool CameraSetPerspectiveNative(bool Isperspective);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ui_SceneMap_C">();
	}
	static class ABP_ui_SceneMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ui_SceneMap_C>();
	}
};
static_assert(alignof(ABP_ui_SceneMap_C) == 0x000010, "Wrong alignment on ABP_ui_SceneMap_C");
static_assert(sizeof(ABP_ui_SceneMap_C) == 0x0007C0, "Wrong size on ABP_ui_SceneMap_C");
static_assert(offsetof(ABP_ui_SceneMap_C, UberGraphFrame) == 0x000530, "Member 'ABP_ui_SceneMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconNPCPlayer) == 0x000538, "Member 'ABP_ui_SceneMap_C::IconNPCPlayer' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconWorldPortal) == 0x000540, "Member 'ABP_ui_SceneMap_C::IconWorldPortal' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconAreaPortalBefore) == 0x000548, "Member 'ABP_ui_SceneMap_C::IconAreaPortalBefore' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconAreaPortal) == 0x000550, "Member 'ABP_ui_SceneMap_C::IconAreaPortal' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconBouds) == 0x000558, "Member 'ABP_ui_SceneMap_C::IconBouds' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconEnemy0630) == 0x000560, "Member 'ABP_ui_SceneMap_C::IconEnemy0630' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconShop) == 0x000568, "Member 'ABP_ui_SceneMap_C::IconShop' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconAreaChangeBar) == 0x000570, "Member 'ABP_ui_SceneMap_C::IconAreaChangeBar' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconSubquestCompleteActive) == 0x000578, "Member 'ABP_ui_SceneMap_C::IconSubquestCompleteActive' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconTownNpc) == 0x000580, "Member 'ABP_ui_SceneMap_C::IconTownNpc' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, Camera) == 0x000588, "Member 'ABP_ui_SceneMap_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconSavePoint) == 0x000590, "Member 'ABP_ui_SceneMap_C::IconSavePoint' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconPickDisable) == 0x000598, "Member 'ABP_ui_SceneMap_C::IconPickDisable' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconPickActive) == 0x0005A0, "Member 'ABP_ui_SceneMap_C::IconPickActive' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconLastAreaPosition) == 0x0005A8, "Member 'ABP_ui_SceneMap_C::IconLastAreaPosition' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconSas) == 0x0005B0, "Member 'ABP_ui_SceneMap_C::IconSas' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconObject) == 0x0005B8, "Member 'ABP_ui_SceneMap_C::IconObject' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconPlayerDirection) == 0x0005C0, "Member 'ABP_ui_SceneMap_C::IconPlayerDirection' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconCameraDirection) == 0x0005C8, "Member 'ABP_ui_SceneMap_C::IconCameraDirection' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconSubQuestComplete) == 0x0005D0, "Member 'ABP_ui_SceneMap_C::IconSubQuestComplete' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconSubQuestActive) == 0x0005D8, "Member 'ABP_ui_SceneMap_C::IconSubQuestActive' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconSubQuest) == 0x0005E0, "Member 'ABP_ui_SceneMap_C::IconSubQuest' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconMainQuest) == 0x0005E8, "Member 'ABP_ui_SceneMap_C::IconMainQuest' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconAreaChange) == 0x0005F0, "Member 'ABP_ui_SceneMap_C::IconAreaChange' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconTreasureOpen) == 0x0005F8, "Member 'ABP_ui_SceneMap_C::IconTreasureOpen' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconTreasureClose) == 0x000600, "Member 'ABP_ui_SceneMap_C::IconTreasureClose' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconFootprint) == 0x000608, "Member 'ABP_ui_SceneMap_C::IconFootprint' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconEnemy) == 0x000610, "Member 'ABP_ui_SceneMap_C::IconEnemy' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconPlayer) == 0x000618, "Member 'ABP_ui_SceneMap_C::IconPlayer' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, DefaultSceneRoot) == 0x000620, "Member 'ABP_ui_SceneMap_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, Camera_IsPerspective) == 0x000628, "Member 'ABP_ui_SceneMap_C::Camera_IsPerspective' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, UnvisibleTransform) == 0x000630, "Member 'ABP_ui_SceneMap_C::UnvisibleTransform' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, CurrentAreaName) == 0x000660, "Member 'ABP_ui_SceneMap_C::CurrentAreaName' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconManager) == 0x000670, "Member 'ABP_ui_SceneMap_C::IconManager' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, CameraVIewSetting) == 0x000678, "Member 'ABP_ui_SceneMap_C::CameraVIewSetting' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, CameraLocationSpdY) == 0x00069C, "Member 'ABP_ui_SceneMap_C::CameraLocationSpdY' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, CameraLocationSpdX) == 0x0006A0, "Member 'ABP_ui_SceneMap_C::CameraLocationSpdX' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconArrangeItemMaterial) == 0x0006A8, "Member 'ABP_ui_SceneMap_C::IconArrangeItemMaterial' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, BP_Name) == 0x0006B8, "Member 'ABP_ui_SceneMap_C::BP_Name' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, MaterialIconArray) == 0x0006C8, "Member 'ABP_ui_SceneMap_C::MaterialIconArray' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IconArrangeItemTreasure) == 0x0006D8, "Member 'ABP_ui_SceneMap_C::IconArrangeItemTreasure' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, PlayerDirectionOffset) == 0x0006E8, "Member 'ABP_ui_SceneMap_C::PlayerDirectionOffset' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, CollisionData) == 0x0006F0, "Member 'ABP_ui_SceneMap_C::CollisionData' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, DebugFlag) == 0x0006F8, "Member 'ABP_ui_SceneMap_C::DebugFlag' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, TownNpcList) == 0x000700, "Member 'ABP_ui_SceneMap_C::TownNpcList' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, ActiveQuest) == 0x000710, "Member 'ABP_ui_SceneMap_C::ActiveQuest' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, DetaileMapIconOffset) == 0x000718, "Member 'ABP_ui_SceneMap_C::DetaileMapIconOffset' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, HelpWindowIconList) == 0x000728, "Member 'ABP_ui_SceneMap_C::HelpWindowIconList' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IsCameraControl) == 0x000738, "Member 'ABP_ui_SceneMap_C::IsCameraControl' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, AfterViewModeCamera) == 0x00073C, "Member 'ABP_ui_SceneMap_C::AfterViewModeCamera' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, AfterViewModeView) == 0x000748, "Member 'ABP_ui_SceneMap_C::AfterViewModeView' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, CameraRotate) == 0x000754, "Member 'ABP_ui_SceneMap_C::CameraRotate' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, AfterViewModeMoveCamera) == 0x000760, "Member 'ABP_ui_SceneMap_C::AfterViewModeMoveCamera' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, CameraVIewSettingMouse) == 0x00076C, "Member 'ABP_ui_SceneMap_C::CameraVIewSettingMouse' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, PortalOffset) == 0x000790, "Member 'ABP_ui_SceneMap_C::PortalOffset' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, PortalScale) == 0x000794, "Member 'ABP_ui_SceneMap_C::PortalScale' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, EnemyLenght) == 0x0007A0, "Member 'ABP_ui_SceneMap_C::EnemyLenght' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, AfterViewModeCameraZ) == 0x0007A4, "Member 'ABP_ui_SceneMap_C::AfterViewModeCameraZ' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, AfterViewModeViewZ) == 0x0007A8, "Member 'ABP_ui_SceneMap_C::AfterViewModeViewZ' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, Isleap) == 0x0007AC, "Member 'ABP_ui_SceneMap_C::Isleap' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, IsInitResetCamra) == 0x0007AD, "Member 'ABP_ui_SceneMap_C::IsInitResetCamra' has a wrong offset!");
static_assert(offsetof(ABP_ui_SceneMap_C, QuestIconDestination) == 0x0007B0, "Member 'ABP_ui_SceneMap_C::QuestIconDestination' has a wrong offset!");

}

