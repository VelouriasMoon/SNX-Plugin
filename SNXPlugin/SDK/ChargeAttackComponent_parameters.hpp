#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChargeAttackComponent

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EWeaponAttackAnimStopType_structs.hpp"
#include "ChargeAttackData_structs.hpp"
#include "EAttackEffectStopType_structs.hpp"
#include "FAttackEffectData_structs.hpp"


namespace SDK::Params
{

// Function ChargeAttackComponent.ChargeAttackComponent_C.ExecuteUbergraph_ChargeAttackComponent
// 0x0044 (0x0044 - 0x0000)
struct ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56DE[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56DF[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent) == 0x000004, "Wrong alignment on ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent");
static_assert(sizeof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent) == 0x000044, "Wrong size on ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, EntryPoint) == 0x000000, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_IsClosed_Variable_1) == 0x000006, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_Has_Been_Initd_Variable_1) == 0x000007, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_Has_Been_Initd_Variable_2) == 0x000008, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_IsClosed_Variable_2) == 0x000009, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_Has_Been_Initd_Variable_3) == 0x00000A, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_IsClosed_Variable_3) == 0x00000B, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_IsClosed_Variable_4) == 0x00000C, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_Has_Been_Initd_Variable_4) == 0x00000D, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_Has_Been_Initd_Variable_5) == 0x00000E, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, Temp_bool_IsClosed_Variable_5) == 0x000030, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'ChargeAttackComponent_C_ExecuteUbergraph_ChargeAttackComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.InputButton
// 0x0018 (0x0018 - 0x0000)
struct ChargeAttackComponent_C_InputButton final
{
public:
	bool                                          IsPressed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E0[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_InputButton) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_InputButton");
static_assert(sizeof(ChargeAttackComponent_C_InputButton) == 0x000018, "Wrong size on ChargeAttackComponent_C_InputButton");
static_assert(offsetof(ChargeAttackComponent_C_InputButton, IsPressed) == 0x000000, "Member 'ChargeAttackComponent_C_InputButton::IsPressed' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_InputButton, Dummy) == 0x000001, "Member 'ChargeAttackComponent_C_InputButton::Dummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_InputButton, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000008, "Member 'ChargeAttackComponent_C_InputButton::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_InputButton, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ChargeAttackComponent_C_InputButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_InputButton, CallFunc_IsControlAI_bAI) == 0x000011, "Member 'ChargeAttackComponent_C_InputButton::CallFunc_IsControlAI_bAI' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.CancelCharge
// 0x0001 (0x0001 - 0x0000)
struct ChargeAttackComponent_C_CancelCharge final
{
public:
	bool                                          CallFunc_ClearInput_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_CancelCharge) == 0x000001, "Wrong alignment on ChargeAttackComponent_C_CancelCharge");
static_assert(sizeof(ChargeAttackComponent_C_CancelCharge) == 0x000001, "Wrong size on ChargeAttackComponent_C_CancelCharge");
static_assert(offsetof(ChargeAttackComponent_C_CancelCharge, CallFunc_ClearInput_ReturnValue) == 0x000000, "Member 'ChargeAttackComponent_C_CancelCharge::CallFunc_ClearInput_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.IsStartCharge
// 0x0003 (0x0003 - 0x0000)
struct ChargeAttackComponent_C_IsStartCharge final
{
public:
	bool                                          IsStart;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bStart_l;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableAttack_bEnable;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_IsStartCharge) == 0x000001, "Wrong alignment on ChargeAttackComponent_C_IsStartCharge");
static_assert(sizeof(ChargeAttackComponent_C_IsStartCharge) == 0x000003, "Wrong size on ChargeAttackComponent_C_IsStartCharge");
static_assert(offsetof(ChargeAttackComponent_C_IsStartCharge, IsStart) == 0x000000, "Member 'ChargeAttackComponent_C_IsStartCharge::IsStart' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_IsStartCharge, bStart_l) == 0x000001, "Member 'ChargeAttackComponent_C_IsStartCharge::bStart_l' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_IsStartCharge, CallFunc_IsEnableAttack_bEnable) == 0x000002, "Member 'ChargeAttackComponent_C_IsStartCharge::CallFunc_IsEnableAttack_bEnable' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.ClearInputForChargeAttack
// 0x0010 (0x0010 - 0x0000)
struct ChargeAttackComponent_C_ClearInputForChargeAttack final
{
public:
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_ClearInputForChargeAttack) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_ClearInputForChargeAttack");
static_assert(sizeof(ChargeAttackComponent_C_ClearInputForChargeAttack) == 0x000010, "Wrong size on ChargeAttackComponent_C_ClearInputForChargeAttack");
static_assert(offsetof(ChargeAttackComponent_C_ClearInputForChargeAttack, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000000, "Member 'ChargeAttackComponent_C_ClearInputForChargeAttack::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ClearInputForChargeAttack, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'ChargeAttackComponent_C_ClearInputForChargeAttack::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.StartCharge
// 0x0030 (0x0030 - 0x0000)
struct ChargeAttackComponent_C_StartCharge final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComboCheck_bCombo;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E1[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_DisablePlayerFootIK_self_CastInput;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DisablePlayerFootIK_bDummy;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E2[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerInAerial_ReturnValue;             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_StartCharge) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_StartCharge");
static_assert(sizeof(ChargeAttackComponent_C_StartCharge) == 0x000030, "Wrong size on ChargeAttackComponent_C_StartCharge");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ChargeAttackComponent_C_StartCharge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, CallFunc_IsComboCheck_bCombo) == 0x000001, "Member 'ChargeAttackComponent_C_StartCharge::CallFunc_IsComboCheck_bCombo' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, CallFunc_DisablePlayerFootIK_self_CastInput) == 0x000008, "Member 'ChargeAttackComponent_C_StartCharge::CallFunc_DisablePlayerFootIK_self_CastInput' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, CallFunc_DisablePlayerFootIK_bDummy) == 0x000018, "Member 'ChargeAttackComponent_C_StartCharge::CallFunc_DisablePlayerFootIK_bDummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, CallFunc_IsControlAI_bAI) == 0x000019, "Member 'ChargeAttackComponent_C_StartCharge::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000020, "Member 'ChargeAttackComponent_C_StartCharge::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ChargeAttackComponent_C_StartCharge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'ChargeAttackComponent_C_StartCharge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartCharge, CallFunc_IsPlayerInAerial_ReturnValue) == 0x00002A, "Member 'ChargeAttackComponent_C_StartCharge::CallFunc_IsPlayerInAerial_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.SpawnChargeEffect
// 0x0038 (0x0038 - 0x0000)
struct ChargeAttackComponent_C_SpawnChargeEffect final
{
public:
	int32                                         Param_ChargeEffectIndex;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 LComponentClass;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E4[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E5[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySoundAttachedRS_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_SpawnChargeEffect) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_SpawnChargeEffect");
static_assert(sizeof(ChargeAttackComponent_C_SpawnChargeEffect) == 0x000038, "Wrong size on ChargeAttackComponent_C_SpawnChargeEffect");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, Param_ChargeEffectIndex) == 0x000000, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::Param_ChargeEffectIndex' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, LComponentClass) == 0x000008, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::LComponentClass' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnChargeEffect, CallFunc_PlaySoundAttachedRS_ReturnValue) == 0x000030, "Member 'ChargeAttackComponent_C_SpawnChargeEffect::CallFunc_PlaySoundAttachedRS_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.UpdateChargeEffect
// 0x0120 (0x0120 - 0x0000)
struct ChargeAttackComponent_C_UpdateChargeEffect final
{
public:
	int32                                         NextEffectIndex_l;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChargeSec_l;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RadialBlurManager_C*                CallFunc_GetRadialBlurManager_RadialBlurManager;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnChangeChargeLevel_bDummy;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChargeAttackData                      CallFunc_Array_Get_Item;                           // 0x0018(0x0070)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E7[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E8[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChargeAttackData                      CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E9[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_UpdateChargeEffect) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_UpdateChargeEffect");
static_assert(sizeof(ChargeAttackComponent_C_UpdateChargeEffect) == 0x000120, "Wrong size on ChargeAttackComponent_C_UpdateChargeEffect");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, NextEffectIndex_l) == 0x000000, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::NextEffectIndex_l' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, ChargeSec_l) == 0x000004, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::ChargeSec_l' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_GetRadialBlurManager_RadialBlurManager) == 0x000008, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_GetRadialBlurManager_RadialBlurManager' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_OnChangeChargeLevel_bDummy) == 0x000010, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_OnChangeChargeLevel_bDummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_Array_Get_Item) == 0x000018, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_GetSocketLocation_ReturnValue) == 0x000088, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_IsEnable_ReturnValue) == 0x000094, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_GetElapsedTime_ReturnValue) == 0x000098, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000115, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_UpdateChargeEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'ChargeAttackComponent_C_UpdateChargeEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.StartChargeLoop
// 0x0008 (0x0008 - 0x0000)
struct ChargeAttackComponent_C_StartChargeLoop final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnChangeChargeLevel_bDummy;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56EA[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_StartChargeLoop) == 0x000004, "Wrong alignment on ChargeAttackComponent_C_StartChargeLoop");
static_assert(sizeof(ChargeAttackComponent_C_StartChargeLoop) == 0x000008, "Wrong size on ChargeAttackComponent_C_StartChargeLoop");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeLoop, Temp_bool_Variable) == 0x000000, "Member 'ChargeAttackComponent_C_StartChargeLoop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeLoop, CallFunc_OnChangeChargeLevel_bDummy) == 0x000001, "Member 'ChargeAttackComponent_C_StartChargeLoop::CallFunc_OnChangeChargeLevel_bDummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeLoop, CallFunc_IsControlAI_bAI) == 0x000002, "Member 'ChargeAttackComponent_C_StartChargeLoop::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeLoop, K2Node_Select_Default) == 0x000004, "Member 'ChargeAttackComponent_C_StartChargeLoop::K2Node_Select_Default' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.StartChargeSE
// 0x0030 (0x0030 - 0x0000)
struct ChargeAttackComponent_C_StartChargeSE final
{
public:
	class UClass*                                 LComponentClass;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56EB[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAttachedRS_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_StartChargeSE) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_StartChargeSE");
static_assert(sizeof(ChargeAttackComponent_C_StartChargeSE) == 0x000030, "Wrong size on ChargeAttackComponent_C_StartChargeSE");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeSE, LComponentClass) == 0x000000, "Member 'ChargeAttackComponent_C_StartChargeSE::LComponentClass' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeSE, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'ChargeAttackComponent_C_StartChargeSE::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeSE, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'ChargeAttackComponent_C_StartChargeSE::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeSE, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ChargeAttackComponent_C_StartChargeSE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeSE, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ChargeAttackComponent_C_StartChargeSE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeSE, CallFunc_SpawnSoundAttachedRS_ReturnValue) == 0x000020, "Member 'ChargeAttackComponent_C_StartChargeSE::CallFunc_SpawnSoundAttachedRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeSE, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'ChargeAttackComponent_C_StartChargeSE::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.EndChargeSE
// 0x0001 (0x0001 - 0x0000)
struct ChargeAttackComponent_C_EndChargeSE final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_EndChargeSE) == 0x000001, "Wrong alignment on ChargeAttackComponent_C_EndChargeSE");
static_assert(sizeof(ChargeAttackComponent_C_EndChargeSE) == 0x000001, "Wrong size on ChargeAttackComponent_C_EndChargeSE");
static_assert(offsetof(ChargeAttackComponent_C_EndChargeSE, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ChargeAttackComponent_C_EndChargeSE::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.OnMontageBlendingOut
// 0x0018 (0x0018 - 0x0000)
struct ChargeAttackComponent_C_OnMontageBlendingOut final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndAttack_Dummy;                          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndAttack_Dummy_1;                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttacking_ReturnValue;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttacking_ReturnValue_1;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_OnMontageBlendingOut) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_OnMontageBlendingOut");
static_assert(sizeof(ChargeAttackComponent_C_OnMontageBlendingOut) == 0x000018, "Wrong size on ChargeAttackComponent_C_OnMontageBlendingOut");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, Montage) == 0x000000, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::Montage' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, bInterrupted) == 0x000008, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::bInterrupted' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, ReturnValue) == 0x000009, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_EndAttack_Dummy) == 0x00000B, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_EndAttack_Dummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_EndAttack_Dummy_1) == 0x00000C, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_EndAttack_Dummy_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00000E, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_IsAttacking_ReturnValue) == 0x00000F, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_IsAttacking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_IsAttacking_ReturnValue_1) == 0x000010, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_IsAttacking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000011, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000012, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000013, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnMontageBlendingOut, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000014, "Member 'ChargeAttackComponent_C_OnMontageBlendingOut::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.ClearInput
// 0x0001 (0x0001 - 0x0000)
struct ChargeAttackComponent_C_ClearInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_ClearInput) == 0x000001, "Wrong alignment on ChargeAttackComponent_C_ClearInput");
static_assert(sizeof(ChargeAttackComponent_C_ClearInput) == 0x000001, "Wrong size on ChargeAttackComponent_C_ClearInput");
static_assert(offsetof(ChargeAttackComponent_C_ClearInput, ReturnValue) == 0x000000, "Member 'ChargeAttackComponent_C_ClearInput::ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.CheckStartAttack
// 0x00B8 (0x00B8 - 0x0000)
struct ChargeAttackComponent_C_CheckStartAttack final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56EC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttackIndex_l;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChargeSec_l;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStart_l;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIgnoreCheckStartAttack_bIgnoreCheckStartAttack; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56ED[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttackMotionPlayRate_PlayRate;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStartCharge_IsStart;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56EE[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChargeAttackData                      CallFunc_Array_Get_Item;                           // 0x0038(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56EF[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_CheckStartAttack) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_CheckStartAttack");
static_assert(sizeof(ChargeAttackComponent_C_CheckStartAttack) == 0x0000B8, "Wrong size on ChargeAttackComponent_C_CheckStartAttack");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, DeltaTime) == 0x000000, "Member 'ChargeAttackComponent_C_CheckStartAttack::DeltaTime' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, ReturnValue) == 0x000004, "Member 'ChargeAttackComponent_C_CheckStartAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, AttackIndex_l) == 0x000008, "Member 'ChargeAttackComponent_C_CheckStartAttack::AttackIndex_l' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, ChargeSec_l) == 0x00000C, "Member 'ChargeAttackComponent_C_CheckStartAttack::ChargeSec_l' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, bStart_l) == 0x000010, "Member 'ChargeAttackComponent_C_CheckStartAttack::bStart_l' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'ChargeAttackComponent_C_CheckStartAttack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_IsOver_ReturnValue) == 0x000012, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_IsEnable_ReturnValue) == 0x000013, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_GetElapsedTime_ReturnValue) == 0x000014, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_IsIgnoreCheckStartAttack_bIgnoreCheckStartAttack) == 0x000018, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_IsIgnoreCheckStartAttack_bIgnoreCheckStartAttack' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'ChargeAttackComponent_C_CheckStartAttack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'ChargeAttackComponent_C_CheckStartAttack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_GetActorDeltaSeconds_ReturnValue) == 0x000024, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_GetActorDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_GetAttackMotionPlayRate_PlayRate) == 0x000028, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_GetAttackMotionPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_IsStartCharge_IsStart) == 0x000034, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_IsStartCharge_IsStart' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, Temp_bool_True_if_break_was_hit_Variable) == 0x000035, "Member 'ChargeAttackComponent_C_CheckStartAttack::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_Array_Get_Item) == 0x000038, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A9, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B1, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckStartAttack, CallFunc_BooleanOR_ReturnValue) == 0x0000B3, "Member 'ChargeAttackComponent_C_CheckStartAttack::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.InputButtonByCombo
// 0x0004 (0x0004 - 0x0000)
struct ChargeAttackComponent_C_InputButtonByCombo final
{
public:
	bool                                          bPressed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bComboFirst;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputButton_Dummy;                        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_InputButtonByCombo) == 0x000001, "Wrong alignment on ChargeAttackComponent_C_InputButtonByCombo");
static_assert(sizeof(ChargeAttackComponent_C_InputButtonByCombo) == 0x000004, "Wrong size on ChargeAttackComponent_C_InputButtonByCombo");
static_assert(offsetof(ChargeAttackComponent_C_InputButtonByCombo, bPressed) == 0x000000, "Member 'ChargeAttackComponent_C_InputButtonByCombo::bPressed' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_InputButtonByCombo, bComboFirst) == 0x000001, "Member 'ChargeAttackComponent_C_InputButtonByCombo::bComboFirst' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_InputButtonByCombo, ReturnValue) == 0x000002, "Member 'ChargeAttackComponent_C_InputButtonByCombo::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_InputButtonByCombo, CallFunc_InputButton_Dummy) == 0x000003, "Member 'ChargeAttackComponent_C_InputButtonByCombo::CallFunc_InputButton_Dummy' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.StartChargeEffect
// 0x0028 (0x0028 - 0x0000)
struct ChargeAttackComponent_C_StartChargeEffect final
{
public:
	TArray<struct FFAttackEffectData>             Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F0[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_StartChargeEffect) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_StartChargeEffect");
static_assert(sizeof(ChargeAttackComponent_C_StartChargeEffect) == 0x000028, "Wrong size on ChargeAttackComponent_C_StartChargeEffect");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeEffect, Data) == 0x000000, "Member 'ChargeAttackComponent_C_StartChargeEffect::Data' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeEffect, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'ChargeAttackComponent_C_StartChargeEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeEffect, Temp_int_Array_Index_Variable) == 0x000014, "Member 'ChargeAttackComponent_C_StartChargeEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeEffect, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'ChargeAttackComponent_C_StartChargeEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeEffect, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'ChargeAttackComponent_C_StartChargeEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartChargeEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'ChargeAttackComponent_C_StartChargeEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.StopChargeEffect
// 0x002C (0x002C - 0x0000)
struct ChargeAttackComponent_C_StopChargeEffect final
{
public:
	EAttackEffectStopType                         Timing;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56F1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F2[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F3[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_StopChargeEffect) == 0x000004, "Wrong alignment on ChargeAttackComponent_C_StopChargeEffect");
static_assert(sizeof(ChargeAttackComponent_C_StopChargeEffect) == 0x00002C, "Wrong size on ChargeAttackComponent_C_StopChargeEffect");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, Timing) == 0x000000, "Member 'ChargeAttackComponent_C_StopChargeEffect::Timing' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ChargeAttackComponent_C_StopChargeEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ChargeAttackComponent_C_StopChargeEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'ChargeAttackComponent_C_StopChargeEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'ChargeAttackComponent_C_StopChargeEffect::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'ChargeAttackComponent_C_StopChargeEffect::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ChargeAttackComponent_C_StopChargeEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'ChargeAttackComponent_C_StopChargeEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'ChargeAttackComponent_C_StopChargeEffect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'ChargeAttackComponent_C_StopChargeEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, CallFunc_Less_IntInt_ReturnValue_1) == 0x000025, "Member 'ChargeAttackComponent_C_StopChargeEffect::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffect, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'ChargeAttackComponent_C_StopChargeEffect::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.StopChargeEffectAll
// 0x001C (0x001C - 0x0000)
struct ChargeAttackComponent_C_StopChargeEffectAll final
{
public:
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56F4[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_StopChargeEffectAll) == 0x000004, "Wrong alignment on ChargeAttackComponent_C_StopChargeEffectAll");
static_assert(sizeof(ChargeAttackComponent_C_StopChargeEffectAll) == 0x00001C, "Wrong size on ChargeAttackComponent_C_StopChargeEffectAll");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, CallFunc_MakeLiteralInt_ReturnValue) == 0x000000, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, Temp_int_Variable) == 0x000004, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, Temp_int_Variable_1) == 0x000008, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, CallFunc_GetValidValue_ReturnValue) == 0x000014, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000015, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000016, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, CallFunc_Less_IntInt_ReturnValue) == 0x000017, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeEffectAll, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'ChargeAttackComponent_C_StopChargeEffectAll::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.OnChangeChargeLevel
// 0x0018 (0x0018 - 0x0000)
struct ChargeAttackComponent_C_OnChangeChargeLevel final
{
public:
	int32                                         ChargeLevel;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetChargeLevelForNexusDrive_bDummy;       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableSASEffect_bEnable;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_IsEnableSASEffect_Param0;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param2;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param3;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_OnChangeChargeLevel) == 0x000004, "Wrong alignment on ChargeAttackComponent_C_OnChangeChargeLevel");
static_assert(sizeof(ChargeAttackComponent_C_OnChangeChargeLevel) == 0x000018, "Wrong size on ChargeAttackComponent_C_OnChangeChargeLevel");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, ChargeLevel) == 0x000000, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::ChargeLevel' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, bDummy) == 0x000004, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::bDummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, CallFunc_SetChargeLevelForNexusDrive_bDummy) == 0x000006, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::CallFunc_SetChargeLevelForNexusDrive_bDummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, CallFunc_IsEnableSASEffect_bEnable) == 0x000007, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::CallFunc_IsEnableSASEffect_bEnable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, CallFunc_IsEnableSASEffect_Param0) == 0x000008, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::CallFunc_IsEnableSASEffect_Param0' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, CallFunc_IsEnableSASEffect_Param1) == 0x00000C, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::CallFunc_IsEnableSASEffect_Param1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, CallFunc_IsEnableSASEffect_Param2) == 0x000010, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::CallFunc_IsEnableSASEffect_Param2' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_OnChangeChargeLevel, CallFunc_IsEnableSASEffect_Param3) == 0x000014, "Member 'ChargeAttackComponent_C_OnChangeChargeLevel::CallFunc_IsEnableSASEffect_Param3' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.BranchAssassinAttack
// 0x001C (0x001C - 0x0000)
struct ChargeAttackComponent_C_BranchAssassinAttack final
{
public:
	bool                                          bBranch;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableSASEffect_bEnable;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F5[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsEnableSASEffect_Param0;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param1;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param2;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param3;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_BranchAssassinAttack) == 0x000004, "Wrong alignment on ChargeAttackComponent_C_BranchAssassinAttack");
static_assert(sizeof(ChargeAttackComponent_C_BranchAssassinAttack) == 0x00001C, "Wrong size on ChargeAttackComponent_C_BranchAssassinAttack");
static_assert(offsetof(ChargeAttackComponent_C_BranchAssassinAttack, bBranch) == 0x000000, "Member 'ChargeAttackComponent_C_BranchAssassinAttack::bBranch' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_BranchAssassinAttack, CallFunc_IsEnableSASEffect_bEnable) == 0x000001, "Member 'ChargeAttackComponent_C_BranchAssassinAttack::CallFunc_IsEnableSASEffect_bEnable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_BranchAssassinAttack, CallFunc_IsEnableSASEffect_Param0) == 0x000004, "Member 'ChargeAttackComponent_C_BranchAssassinAttack::CallFunc_IsEnableSASEffect_Param0' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_BranchAssassinAttack, CallFunc_IsEnableSASEffect_Param1) == 0x000008, "Member 'ChargeAttackComponent_C_BranchAssassinAttack::CallFunc_IsEnableSASEffect_Param1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_BranchAssassinAttack, CallFunc_IsEnableSASEffect_Param2) == 0x00000C, "Member 'ChargeAttackComponent_C_BranchAssassinAttack::CallFunc_IsEnableSASEffect_Param2' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_BranchAssassinAttack, CallFunc_IsEnableSASEffect_Param3) == 0x000010, "Member 'ChargeAttackComponent_C_BranchAssassinAttack::CallFunc_IsEnableSASEffect_Param3' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_BranchAssassinAttack, CallFunc_GetElapsedTime_ReturnValue) == 0x000014, "Member 'ChargeAttackComponent_C_BranchAssassinAttack::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_BranchAssassinAttack, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'ChargeAttackComponent_C_BranchAssassinAttack::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.CheckRushStop
// 0x0090 (0x0090 - 0x0000)
struct ChargeAttackComponent_C_CheckRushStop final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LDistSq;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerCollisionCheckResult            CallFunc_GetAsyncResult_ReturnValue;               // 0x0020(0x0040)(ConstParm)
	TScriptInterface<class ICommonAIInterface_C>  K2Node_DynamicCast_AsCommon_AIInterface;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F7[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCapsuleRadius_Radius;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2DSquared_ReturnValue;     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_CheckRushStop) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_CheckRushStop");
static_assert(sizeof(ChargeAttackComponent_C_CheckRushStop) == 0x000090, "Wrong size on ChargeAttackComponent_C_CheckRushStop");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, DeltaSeconds) == 0x000000, "Member 'ChargeAttackComponent_C_CheckRushStop::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, LDistSq) == 0x000004, "Member 'ChargeAttackComponent_C_CheckRushStop::LDistSq' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_GetAsyncResult_ReturnValue) == 0x000020, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_GetAsyncResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, K2Node_DynamicCast_AsCommon_AIInterface) == 0x000060, "Member 'ChargeAttackComponent_C_CheckRushStop::K2Node_DynamicCast_AsCommon_AIInterface' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'ChargeAttackComponent_C_CheckRushStop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_GetCapsuleRadius_Radius) == 0x000074, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_GetCapsuleRadius_Radius' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000078, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00007C, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_Vector_Distance2DSquared_ReturnValue) == 0x000088, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_Vector_Distance2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckRushStop, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00008C, "Member 'ChargeAttackComponent_C_CheckRushStop::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.StartAttack
// 0x0088 (0x0088 - 0x0000)
struct ChargeAttackComponent_C_StartAttack final
{
public:
	int32                                         AttackIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56F8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           AttackMontage_l;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAttackAnimStopType                     Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAttackAnimStopType                     Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponAttackAnimStopType                     K2Node_Select_Default;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56F9[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChargeAttackData                      CallFunc_Array_Get_Item;                           // 0x0018(0x0070)(HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_StartAttack) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_StartAttack");
static_assert(sizeof(ChargeAttackComponent_C_StartAttack) == 0x000088, "Wrong size on ChargeAttackComponent_C_StartAttack");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, AttackIndex) == 0x000000, "Member 'ChargeAttackComponent_C_StartAttack::AttackIndex' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, AttackMontage_l) == 0x000008, "Member 'ChargeAttackComponent_C_StartAttack::AttackMontage_l' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, Temp_byte_Variable) == 0x000010, "Member 'ChargeAttackComponent_C_StartAttack::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, Temp_byte_Variable_1) == 0x000011, "Member 'ChargeAttackComponent_C_StartAttack::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'ChargeAttackComponent_C_StartAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, CallFunc_IsValid_ReturnValue_1) == 0x000013, "Member 'ChargeAttackComponent_C_StartAttack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, Temp_bool_Variable) == 0x000014, "Member 'ChargeAttackComponent_C_StartAttack::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, CallFunc_IsValid_ReturnValue_2) == 0x000015, "Member 'ChargeAttackComponent_C_StartAttack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, K2Node_Select_Default) == 0x000016, "Member 'ChargeAttackComponent_C_StartAttack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_StartAttack, CallFunc_Array_Get_Item) == 0x000018, "Member 'ChargeAttackComponent_C_StartAttack::CallFunc_Array_Get_Item' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.CheckLanding
// 0x000C (0x000C - 0x0000)
struct ChargeAttackComponent_C_CheckLanding final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceLandCheck_bLand;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56FA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TraceLandCheck_LandHeight;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_CheckLanding) == 0x000004, "Wrong alignment on ChargeAttackComponent_C_CheckLanding");
static_assert(sizeof(ChargeAttackComponent_C_CheckLanding) == 0x00000C, "Wrong size on ChargeAttackComponent_C_CheckLanding");
static_assert(offsetof(ChargeAttackComponent_C_CheckLanding, DeltaSeconds) == 0x000000, "Member 'ChargeAttackComponent_C_CheckLanding::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckLanding, CallFunc_TraceLandCheck_bLand) == 0x000004, "Member 'ChargeAttackComponent_C_CheckLanding::CallFunc_TraceLandCheck_bLand' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_CheckLanding, CallFunc_TraceLandCheck_LandHeight) == 0x000008, "Member 'ChargeAttackComponent_C_CheckLanding::CallFunc_TraceLandCheck_LandHeight' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.TelepoTick
// 0x0058 (0x0058 - 0x0000)
struct ChargeAttackComponent_C_TelepoTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCheckTelepoFade_bFade;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56FB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTelepoAbleTarget_bBattleFieldEnemy;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56FC[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAttachedRS_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_IsActiveSAS_Telepo_self_CastInput;        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveSAS_Telepo_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56FD[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_CancelMeshFitGround_self_CastInput;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CancelMeshFitGround_bDummy;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndSAS_Telepo_bEnd;                       // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AttackMoveUpdate_ToTarget_bEnd;           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginSAS_Telepo_bBegin;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappear_bDisappear;                   // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_TelepoTick) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_TelepoTick");
static_assert(sizeof(ChargeAttackComponent_C_TelepoTick) == 0x000058, "Wrong size on ChargeAttackComponent_C_TelepoTick");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, DeltaSeconds) == 0x000000, "Member 'ChargeAttackComponent_C_TelepoTick::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_IsCheckTelepoFade_bFade) == 0x000004, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_IsCheckTelepoFade_bFade' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000008, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_CheckTelepoAbleTarget_bBattleFieldEnemy) == 0x000010, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_CheckTelepoAbleTarget_bBattleFieldEnemy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_SpawnSoundAttachedRS_ReturnValue) == 0x000018, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_SpawnSoundAttachedRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_IsActiveSAS_Telepo_self_CastInput) == 0x000020, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_IsActiveSAS_Telepo_self_CastInput' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_IsActiveSAS_Telepo_ReturnValue) == 0x000030, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_IsActiveSAS_Telepo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_IsControlAI_bAI) == 0x000031, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_CancelMeshFitGround_self_CastInput) == 0x000038, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_CancelMeshFitGround_self_CastInput' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_CancelMeshFitGround_bDummy) == 0x000048, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_CancelMeshFitGround_bDummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_IsOver_ReturnValue) == 0x000049, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004A, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_Not_PreBool_ReturnValue) == 0x00004B, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_EndSAS_Telepo_bEnd) == 0x00004C, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_EndSAS_Telepo_bEnd' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_AttackMoveUpdate_ToTarget_bEnd) == 0x00004D, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_AttackMoveUpdate_ToTarget_bEnd' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_BeginSAS_Telepo_bBegin) == 0x00004E, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_BeginSAS_Telepo_bBegin' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, CallFunc_IsDisappear_bDisappear) == 0x00004F, "Member 'ChargeAttackComponent_C_TelepoTick::CallFunc_IsDisappear_bDisappear' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTick, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'ChargeAttackComponent_C_TelepoTick::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.DoEndAttack
// 0x0028 (0x0028 - 0x0000)
struct ChargeAttackComponent_C_DoEndAttack final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56FE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_CancelMeshFitGround_self_CastInput;       // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CancelMeshFitGround_bDummy;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoEndAttack_bDummy;                       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_DoEndAttack) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_DoEndAttack");
static_assert(sizeof(ChargeAttackComponent_C_DoEndAttack) == 0x000028, "Wrong size on ChargeAttackComponent_C_DoEndAttack");
static_assert(offsetof(ChargeAttackComponent_C_DoEndAttack, bDummy) == 0x000000, "Member 'ChargeAttackComponent_C_DoEndAttack::bDummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_DoEndAttack, CallFunc_GetGameSystemManager_Manager) == 0x000008, "Member 'ChargeAttackComponent_C_DoEndAttack::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_DoEndAttack, CallFunc_CancelMeshFitGround_self_CastInput) == 0x000010, "Member 'ChargeAttackComponent_C_DoEndAttack::CallFunc_CancelMeshFitGround_self_CastInput' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_DoEndAttack, CallFunc_CancelMeshFitGround_bDummy) == 0x000020, "Member 'ChargeAttackComponent_C_DoEndAttack::CallFunc_CancelMeshFitGround_bDummy' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_DoEndAttack, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000021, "Member 'ChargeAttackComponent_C_DoEndAttack::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_DoEndAttack, CallFunc_IsControlAI_bAI) == 0x000022, "Member 'ChargeAttackComponent_C_DoEndAttack::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_DoEndAttack, CallFunc_DoEndAttack_bDummy) == 0x000023, "Member 'ChargeAttackComponent_C_DoEndAttack::CallFunc_DoEndAttack_bDummy' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.GetCharging
// 0x0001 (0x0001 - 0x0000)
struct ChargeAttackComponent_C_GetCharging final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_GetCharging) == 0x000001, "Wrong alignment on ChargeAttackComponent_C_GetCharging");
static_assert(sizeof(ChargeAttackComponent_C_GetCharging) == 0x000001, "Wrong size on ChargeAttackComponent_C_GetCharging");
static_assert(offsetof(ChargeAttackComponent_C_GetCharging, Result) == 0x000000, "Member 'ChargeAttackComponent_C_GetCharging::Result' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.SetRushEndMotion
// 0x0001 (0x0001 - 0x0000)
struct ChargeAttackComponent_C_SetRushEndMotion final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_SetRushEndMotion) == 0x000001, "Wrong alignment on ChargeAttackComponent_C_SetRushEndMotion");
static_assert(sizeof(ChargeAttackComponent_C_SetRushEndMotion) == 0x000001, "Wrong size on ChargeAttackComponent_C_SetRushEndMotion");
static_assert(offsetof(ChargeAttackComponent_C_SetRushEndMotion, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ChargeAttackComponent_C_SetRushEndMotion::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.PlayChargeControllerVibration
// 0x0050 (0x0050 - 0x0000)
struct ChargeAttackComponent_C_PlayChargeControllerVibration final
{
public:
	EHCHitControllerVibrationType                 Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHCHitControllerVibrationType                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56FF[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5700[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_PlayChargeControllerVibration) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_PlayChargeControllerVibration");
static_assert(sizeof(ChargeAttackComponent_C_PlayChargeControllerVibration) == 0x000050, "Wrong size on ChargeAttackComponent_C_PlayChargeControllerVibration");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, Type) == 0x000000, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::Type' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, Temp_byte_Variable) == 0x000001, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, Temp_object_Variable) == 0x000008, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, Temp_object_Variable_1) == 0x000010, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, Temp_object_Variable_2) == 0x000018, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, Temp_object_Variable_3) == 0x000020, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, Temp_object_Variable_4) == 0x000028, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, Temp_object_Variable_5) == 0x000030, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, CallFunc_IsControlAI_bAI) == 0x000038, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, K2Node_Select_Default) == 0x000040, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_PlayChargeControllerVibration, CallFunc_GetGameSystemManager_Manager) == 0x000048, "Member 'ChargeAttackComponent_C_PlayChargeControllerVibration::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.StopChargeControllerVibration
// 0x0008 (0x0008 - 0x0000)
struct ChargeAttackComponent_C_StopChargeControllerVibration final
{
public:
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_StopChargeControllerVibration) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_StopChargeControllerVibration");
static_assert(sizeof(ChargeAttackComponent_C_StopChargeControllerVibration) == 0x000008, "Wrong size on ChargeAttackComponent_C_StopChargeControllerVibration");
static_assert(offsetof(ChargeAttackComponent_C_StopChargeControllerVibration, CallFunc_GetGameSystemManager_Manager) == 0x000000, "Member 'ChargeAttackComponent_C_StopChargeControllerVibration::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.ResetFootIKCustomParam
// 0x0018 (0x0018 - 0x0000)
struct ChargeAttackComponent_C_ResetFootIKCustomParam final
{
public:
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_DisablePlayerFootIK_self_CastInput;       // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DisablePlayerFootIK_bDummy;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_ResetFootIKCustomParam) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_ResetFootIKCustomParam");
static_assert(sizeof(ChargeAttackComponent_C_ResetFootIKCustomParam) == 0x000018, "Wrong size on ChargeAttackComponent_C_ResetFootIKCustomParam");
static_assert(offsetof(ChargeAttackComponent_C_ResetFootIKCustomParam, CallFunc_DisablePlayerFootIK_self_CastInput) == 0x000000, "Member 'ChargeAttackComponent_C_ResetFootIKCustomParam::CallFunc_DisablePlayerFootIK_self_CastInput' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_ResetFootIKCustomParam, CallFunc_DisablePlayerFootIK_bDummy) == 0x000010, "Member 'ChargeAttackComponent_C_ResetFootIKCustomParam::CallFunc_DisablePlayerFootIK_bDummy' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.SpawnNexusDriveTelepoParticle
// 0x0080 (0x0080 - 0x0000)
struct ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle final
{
public:
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class INexusDriveInterface>  K2Node_DynamicCast_AsNexus_Drive_Interface;        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5701[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveNexusDriveSas_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5702[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle) == 0x000010, "Wrong alignment on ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle");
static_assert(sizeof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle) == 0x000080, "Wrong size on ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, CallFunc_GetSocketTransform_ReturnValue) == 0x000000, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, K2Node_DynamicCast_AsNexus_Drive_Interface) == 0x000030, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::K2Node_DynamicCast_AsNexus_Drive_Interface' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, CallFunc_BreakTransform_Location) == 0x000044, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, CallFunc_IsActiveNexusDriveSas_ReturnValue) == 0x000068, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::CallFunc_IsActiveNexusDriveSas_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000070, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'ChargeAttackComponent_C_SpawnNexusDriveTelepoParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.TelepoTimeDilationTick
// 0x0030 (0x0030 - 0x0000)
struct ChargeAttackComponent_C_TelepoTimeDilationTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5703[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5704[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_TelepoTimeDilationTick) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_TelepoTimeDilationTick");
static_assert(sizeof(ChargeAttackComponent_C_TelepoTimeDilationTick) == 0x000030, "Wrong size on ChargeAttackComponent_C_TelepoTimeDilationTick");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, DeltaSeconds) == 0x000000, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, Temp_int_Variable) == 0x000004, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000010, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, CallFunc_GetGameSystemManager_Manager) == 0x000018, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000024, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000028, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_TelepoTimeDilationTick, K2Node_SwitchInteger_CmpSuccess) == 0x00002C, "Member 'ChargeAttackComponent_C_TelepoTimeDilationTick::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.EndTelepoTimeDilation
// 0x0010 (0x0010 - 0x0000)
struct ChargeAttackComponent_C_EndTelepoTimeDilation final
{
public:
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChargeAttackComponent_C_EndTelepoTimeDilation) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_EndTelepoTimeDilation");
static_assert(sizeof(ChargeAttackComponent_C_EndTelepoTimeDilation) == 0x000010, "Wrong size on ChargeAttackComponent_C_EndTelepoTimeDilation");
static_assert(offsetof(ChargeAttackComponent_C_EndTelepoTimeDilation, CallFunc_GetGameSystemManager_Manager) == 0x000000, "Member 'ChargeAttackComponent_C_EndTelepoTimeDilation::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(ChargeAttackComponent_C_EndTelepoTimeDilation, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000008, "Member 'ChargeAttackComponent_C_EndTelepoTimeDilation::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");

// Function ChargeAttackComponent.ChargeAttackComponent_C.GetCurrentMontage
// 0x0008 (0x0008 - 0x0000)
struct ChargeAttackComponent_C_GetCurrentMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChargeAttackComponent_C_GetCurrentMontage) == 0x000008, "Wrong alignment on ChargeAttackComponent_C_GetCurrentMontage");
static_assert(sizeof(ChargeAttackComponent_C_GetCurrentMontage) == 0x000008, "Wrong size on ChargeAttackComponent_C_GetCurrentMontage");
static_assert(offsetof(ChargeAttackComponent_C_GetCurrentMontage, Montage) == 0x000000, "Member 'ChargeAttackComponent_C_GetCurrentMontage::Montage' has a wrong offset!");

}

