#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_BrainMap_Info_Parts_3

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_ui_BrainMap_Info_Parts_3.WB_ui_BrainMap_Info_Parts_3_C.ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3
// 0x0014 (0x0014 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_State;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3) == 0x000004, "Wrong alignment on WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3) == 0x000014, "Wrong size on WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3, EntryPoint) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3, K2Node_Event_State) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3, K2Node_Event_SubState) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WB_ui_BrainMap_Info_Parts_3_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_3::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_3.WB_ui_BrainMap_Info_Parts_3_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_BrainMap_Info_Parts_3_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_3_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_BrainMap_Info_Parts_3_C_UpdateState");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_3_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_BrainMap_Info_Parts_3_C_UpdateState");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_UpdateState, State) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_3_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_3_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_3_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_3.WB_ui_BrainMap_Info_Parts_3_C.SetBP
// 0x0040 (0x0040 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_3_C_SetBP final
{
public:
	int32                                         BpCurrent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BpSkill;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0020(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_3_C_SetBP) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_3_C_SetBP");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_3_C_SetBP) == 0x000040, "Wrong size on WB_ui_BrainMap_Info_Parts_3_C_SetBP");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBP, BpCurrent) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBP::BpCurrent' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBP, BpSkill) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBP::BpSkill' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBP, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBP::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBP, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000020, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBP::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBP, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_3.WB_ui_BrainMap_Info_Parts_3_C.SetBaseText
// 0x0088 (0x0088 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_3_C_SetBaseText final
{
public:
	class UDatabaseManager*                       _Manager;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_1;                    // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_2;                    // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0070(0x0018)()
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_3_C_SetBaseText");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText) == 0x000088, "Wrong size on WB_ui_BrainMap_Info_Parts_3_C_SetBaseText");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText, _Manager) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBaseText::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBaseText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBaseText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText, CallFunc_GetText_ReturnValue_1) == 0x000030, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBaseText::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000040, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBaseText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText, CallFunc_GetText_ReturnValue_2) == 0x000058, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBaseText::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText, CallFunc_GetDataBaseManager_Manager) == 0x000068, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBaseText::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetBaseText, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000070, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetBaseText::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_3.WB_ui_BrainMap_Info_Parts_3_C.SetAlreadyLearn
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_3_C_SetAlreadyLearn final
{
public:
	bool                                          IsAlreadyLearn;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_3_C_SetAlreadyLearn) == 0x000001, "Wrong alignment on WB_ui_BrainMap_Info_Parts_3_C_SetAlreadyLearn");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_3_C_SetAlreadyLearn) == 0x000001, "Wrong size on WB_ui_BrainMap_Info_Parts_3_C_SetAlreadyLearn");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetAlreadyLearn, IsAlreadyLearn) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetAlreadyLearn::IsAlreadyLearn' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_3.WB_ui_BrainMap_Info_Parts_3_C.SetEnableLearn
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_3_C_SetEnableLearn final
{
public:
	bool                                          IsEnableLearn;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_3_C_SetEnableLearn) == 0x000001, "Wrong alignment on WB_ui_BrainMap_Info_Parts_3_C_SetEnableLearn");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_3_C_SetEnableLearn) == 0x000001, "Wrong size on WB_ui_BrainMap_Info_Parts_3_C_SetEnableLearn");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_SetEnableLearn, IsEnableLearn) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_3_C_SetEnableLearn::IsEnableLearn' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_3.WB_ui_BrainMap_Info_Parts_3_C.StateNone
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_3_C_StateNone final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_3_C_StateNone) == 0x000004, "Wrong alignment on WB_ui_BrainMap_Info_Parts_3_C_StateNone");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_3_C_StateNone) == 0x000008, "Wrong size on WB_ui_BrainMap_Info_Parts_3_C_StateNone");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_StateNone, SubState) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_3_C_StateNone::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_StateNone, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_3_C_StateNone::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_3.WB_ui_BrainMap_Info_Parts_3_C.StateLoop
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_3_C_StateLoop final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_3_C_StateLoop) == 0x000004, "Wrong alignment on WB_ui_BrainMap_Info_Parts_3_C_StateLoop");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_3_C_StateLoop) == 0x000008, "Wrong size on WB_ui_BrainMap_Info_Parts_3_C_StateLoop");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_StateLoop, SubState) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_3_C_StateLoop::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_3_C_StateLoop, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_3_C_StateLoop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

