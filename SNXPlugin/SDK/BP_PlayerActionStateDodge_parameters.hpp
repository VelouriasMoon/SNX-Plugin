#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateDodge

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EPlayerTurnBackTransitionType_structs.hpp"
#include "EPlayerDodgeType_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.ExecuteUbergraph_BP_PlayerActionStateDodge
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93CF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerFixParamater_C*               CallFunc_GetPlayerFixParam_Param;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge");
static_assert(sizeof(BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge) == 0x000018, "Wrong size on BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge");
static_assert(offsetof(BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge, EntryPoint) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge, CallFunc_GetPlayerFixParam_Param) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge::CallFunc_GetPlayerFixParam_Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_ExecuteUbergraph_BP_PlayerActionStateDodge::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.RotateToTarget
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerActionStateDodge_C_RotateToTarget final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93D0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D1[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_RotateToTarget) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_RotateToTarget");
static_assert(sizeof(BP_PlayerActionStateDodge_C_RotateToTarget) == 0x000050, "Wrong size on BP_PlayerActionStateDodge_C_RotateToTarget");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000018, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_RotateToTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00004C, "Member 'BP_PlayerActionStateDodge_C_RotateToTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.CheckDodgeEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerActionStateDodge_C_CheckDodgeEnd final
{
public:
	bool                                          bEnd;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsASAnimPlayEnd_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_CheckDodgeEnd) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_CheckDodgeEnd");
static_assert(sizeof(BP_PlayerActionStateDodge_C_CheckDodgeEnd) == 0x000018, "Wrong size on BP_PlayerActionStateDodge_C_CheckDodgeEnd");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckDodgeEnd, bEnd) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_CheckDodgeEnd::bEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckDodgeEnd, TargetActor) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_CheckDodgeEnd::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckDodgeEnd, CallFunc_IsASAnimPlayEnd_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_CheckDodgeEnd::CallFunc_IsASAnimPlayEnd_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.Enter
// 0x01A8 (0x01A8 - 0x0000)
struct BP_PlayerActionStateDodge_C_Enter final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableSprintMove;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D3[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BASE_DODGE_DISTANCE;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LCalcDodgeDistance;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRotateDistance;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTargetDistance;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LStickDir;                                         // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LDotValue;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LForwardVector;                                    // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbNoInput;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D4[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               LDodgeRotate;                                      // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         LDodgeDistanceRate;                                // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetDir;                                        // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LInputDir;                                         // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Enter_ReturnValue;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D5[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCheckAcceptTime_Time;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SettingCheckParameter_bSuccess;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D6[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D7[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D8[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_IsActiveEnpcSAS_self_CastInput;           // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDodgeType                              Temp_byte_Variable;                                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93D9[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93DA[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDodgeType                              Temp_byte_Variable_1;                              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93DB[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93DC[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93DD[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDodgeType                              Temp_byte_Variable_2;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI_1;                        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAnimDir                                CallFunc_CalcDodgeAnimDir_AnimDir;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93DE[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_CalcDodgeAnimDir_Rotate;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93DF[0x2];                                     // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPrevStateIndex_ReturnValue;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerInAerial_ReturnValue;             // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93E0[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDodgeType                              Temp_byte_Variable_3;                              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93E1[0x2];                                     // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDodgeScale_DodgeScale;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93E2[0x1];                                     // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93E3[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93E4[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcWorldVector_ReturnValue;              // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDodgeType                              Temp_byte_Variable_4;                              // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93E5[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDodgeType                              Temp_byte_Variable_5;                              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDodgeType                              K2Node_Select_Default_1;                           // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93E6[0x5];                                     // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckHardenRestriction_dummy;             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_Enter) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_Enter");
static_assert(sizeof(BP_PlayerActionStateDodge_C_Enter) == 0x0001A8, "Wrong size on BP_PlayerActionStateDodge_C_Enter");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Param) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_Enter::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_Enter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, bEnableSprintMove) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_Enter::bEnableSprintMove' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, BASE_DODGE_DISTANCE) == 0x00000C, "Member 'BP_PlayerActionStateDodge_C_Enter::BASE_DODGE_DISTANCE' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LCalcDodgeDistance) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_Enter::LCalcDodgeDistance' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LRotateDistance) == 0x000014, "Member 'BP_PlayerActionStateDodge_C_Enter::LRotateDistance' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LTargetDistance) == 0x000018, "Member 'BP_PlayerActionStateDodge_C_Enter::LTargetDistance' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LStickDir) == 0x00001C, "Member 'BP_PlayerActionStateDodge_C_Enter::LStickDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LDotValue) == 0x000028, "Member 'BP_PlayerActionStateDodge_C_Enter::LDotValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LForwardVector) == 0x00002C, "Member 'BP_PlayerActionStateDodge_C_Enter::LForwardVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LbNoInput) == 0x000038, "Member 'BP_PlayerActionStateDodge_C_Enter::LbNoInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LDodgeRotate) == 0x00003C, "Member 'BP_PlayerActionStateDodge_C_Enter::LDodgeRotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LDodgeDistanceRate) == 0x000048, "Member 'BP_PlayerActionStateDodge_C_Enter::LDodgeDistanceRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LTargetDir) == 0x00004C, "Member 'BP_PlayerActionStateDodge_C_Enter::LTargetDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, LInputDir) == 0x000058, "Member 'BP_PlayerActionStateDodge_C_Enter::LInputDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Enter_ReturnValue) == 0x000064, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Enter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_IsControlAI_bAI) == 0x000068, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetCheckAcceptTime_Time) == 0x00006C, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetCheckAcceptTime_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_SettingCheckParameter_bSuccess) == 0x000070, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_SettingCheckParameter_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Less_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetPI_ReturnValue) == 0x000080, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, K2Node_MathExpression_ReturnValue) == 0x000084, "Member 'BP_PlayerActionStateDodge_C_Enter::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000088, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000091, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_IsActiveEnpcSAS_self_CastInput) == 0x000098, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_IsActiveEnpcSAS_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_IsActiveEnpcSAS_bActive) == 0x0000A8, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_IsActiveEnpcSAS_bActive' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Temp_byte_Variable) == 0x0000A9, "Member 'BP_PlayerActionStateDodge_C_Enter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000AC, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetPlayerID_self_CastInput) == 0x0000B8, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetPlayerID_ReturnValue) == 0x0000C8, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C9, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000CA, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000CB, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000CC, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Temp_byte_Variable_1) == 0x0000CD, "Member 'BP_PlayerActionStateDodge_C_Enter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetDebuggingManager_Manager) == 0x0000D0, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000DC, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetPlayerID_self_CastInput_1) == 0x0000E8, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetPlayerID_ReturnValue_1) == 0x0000F8, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000F9, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Temp_float_Variable) == 0x0000FC, "Member 'BP_PlayerActionStateDodge_C_Enter::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Temp_byte_Variable_2) == 0x000100, "Member 'BP_PlayerActionStateDodge_C_Enter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_IsControlAI_bAI_1) == 0x000101, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_IsControlAI_bAI_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_CalcDodgeAnimDir_AnimDir) == 0x000102, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_CalcDodgeAnimDir_AnimDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_CalcDodgeAnimDir_Rotate) == 0x000104, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_CalcDodgeAnimDir_Rotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000110, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00011C, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Temp_bool_Variable) == 0x000128, "Member 'BP_PlayerActionStateDodge_C_Enter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000129, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetPrevStateIndex_ReturnValue) == 0x00012C, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetPrevStateIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Conv_IntToByte_ReturnValue) == 0x000130, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetValidValue_ReturnValue) == 0x000131, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000132, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_IsPlayerInAerial_ReturnValue) == 0x000133, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_IsPlayerInAerial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000138, "Member 'BP_PlayerActionStateDodge_C_Enter::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BP_PlayerActionStateDodge_C_Enter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Temp_byte_Variable_3) == 0x000149, "Member 'BP_PlayerActionStateDodge_C_Enter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetDodgeScale_DodgeScale) == 0x00014C, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetDodgeScale_DodgeScale' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000150, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_BooleanOR_ReturnValue) == 0x000151, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000152, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, K2Node_Select_Default) == 0x000154, "Member 'BP_PlayerActionStateDodge_C_Enter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000158, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00015C, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_GetValidValue_ReturnValue_1) == 0x00015D, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_VSizeSquared_ReturnValue) == 0x000160, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000164, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_CalcWorldVector_ReturnValue) == 0x000168, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_CalcWorldVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Temp_byte_Variable_4) == 0x000174, "Member 'BP_PlayerActionStateDodge_C_Enter::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000178, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000188, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, Temp_byte_Variable_5) == 0x000189, "Member 'BP_PlayerActionStateDodge_C_Enter::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, K2Node_Select_Default_1) == 0x00018A, "Member 'BP_PlayerActionStateDodge_C_Enter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_SetLookAtEnable_self_CastInput) == 0x000190, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_SetLookAtEnable_bResult) == 0x0001A0, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Enter, CallFunc_CheckHardenRestriction_dummy) == 0x0001A1, "Member 'BP_PlayerActionStateDodge_C_Enter::CallFunc_CheckHardenRestriction_dummy' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.Update
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerActionStateDodge_C_Update final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPrevElapsedTime;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableActionDodge_bEnable;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93E7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93E8[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckJustDodge_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_1;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAnimKind                               Temp_byte_Variable;                                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDodgeEnd_bEnd;                       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAnimKind                               Temp_byte_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAnimKind                               K2Node_Select_Default;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsASAnimPlayEnd_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSprint_bSprint;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93E9[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProcess_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93EA[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Update_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_Update) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_Update");
static_assert(sizeof(BP_PlayerActionStateDodge_C_Update) == 0x000048, "Wrong size on BP_PlayerActionStateDodge_C_Update");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_Update::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, LPrevElapsedTime) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_Update::LPrevElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_IsEnableActionDodge_bEnable) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_IsEnableActionDodge_bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000020, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_IsOver_ReturnValue) == 0x000021, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_IsEnable_ReturnValue) == 0x000022, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_GetElapsedTime_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_IsOver_ReturnValue_1) == 0x00002C, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_CheckJustDodge_ReturnValue) == 0x00002D, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_CheckJustDodge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_IsEnable_ReturnValue_1) == 0x00002E, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_IsEnable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, Temp_byte_Variable) == 0x00002F, "Member 'BP_PlayerActionStateDodge_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_GetElapsedTime_ReturnValue_1) == 0x000030, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_GetElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_CheckDodgeEnd_bEnd) == 0x000034, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_CheckDodgeEnd_bEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, Temp_byte_Variable_1) == 0x000035, "Member 'BP_PlayerActionStateDodge_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, Temp_bool_Variable) == 0x000036, "Member 'BP_PlayerActionStateDodge_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, K2Node_Select_Default) == 0x000037, "Member 'BP_PlayerActionStateDodge_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_IsASAnimPlayEnd_ReturnValue) == 0x000038, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_IsASAnimPlayEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_CheckSprint_bSprint) == 0x000039, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_CheckSprint_bSprint' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_GetProcess_ReturnValue) == 0x00003C, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_GetProcess_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, K2Node_SwitchInteger_CmpSuccess) == 0x000040, "Member 'BP_PlayerActionStateDodge_C_Update::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Update, CallFunc_Update_ReturnValue) == 0x000044, "Member 'BP_PlayerActionStateDodge_C_Update::CallFunc_Update_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.Transition
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerActionStateDodge_C_Transition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EPlayerTurnBackTransitionType                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTurnBackTransitionType                 Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTurnBackTransitionType                 Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTurnBackTransitionType                 Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTurnBackTransitionType                 Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTurnBackTransitionType                 Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTurnBackTransitionType                 Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTurnBackTransitionType                 Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTurnBack_bTurnBack;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerTurnBackTransitionType                 K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Transition_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93EB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_Transition) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_Transition");
static_assert(sizeof(BP_PlayerActionStateDodge_C_Transition) == 0x000028, "Wrong size on BP_PlayerActionStateDodge_C_Transition");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_Transition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable) == 0x000001, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable_1) == 0x000002, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable_2) == 0x000003, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable_3) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable_4) == 0x000005, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable_5) == 0x000006, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable_6) == 0x000007, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable_7) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, Temp_byte_Variable_8) == 0x000009, "Member 'BP_PlayerActionStateDodge_C_Transition::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, CallFunc_CheckTurnBack_bTurnBack) == 0x00000A, "Member 'BP_PlayerActionStateDodge_C_Transition::CallFunc_CheckTurnBack_bTurnBack' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, K2Node_Select_Default) == 0x00000B, "Member 'BP_PlayerActionStateDodge_C_Transition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateDodge_C_Transition::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, CallFunc_Transition_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_Transition::CallFunc_Transition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, CallFunc_GetMovementComponent_ReturnValue) == 0x000018, "Member 'BP_PlayerActionStateDodge_C_Transition::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateDodge_C_Transition::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Transition, CallFunc_FTrunc_ReturnValue) == 0x000024, "Member 'BP_PlayerActionStateDodge_C_Transition::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.Exit
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerActionStateDodge_C_Exit final
{
public:
	int32                                         NextStateIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerActionKind                             LNextState;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Exit_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93EC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_SetCharacterVisibility_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCharacterVisibility_bDummy;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93ED[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93EE[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93EF[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F0[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsDodgeTargetRot_self_CastInput;          // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDodgeTargetRot_IsDodgeTargetRot;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_Exit) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_Exit");
static_assert(sizeof(BP_PlayerActionStateDodge_C_Exit) == 0x000090, "Wrong size on BP_PlayerActionStateDodge_C_Exit");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, NextStateIndex) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_Exit::NextStateIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_Exit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, LNextState) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_Exit::LNextState' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_Conv_IntToByte_ReturnValue) == 0x000009, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_GetValidValue_ReturnValue) == 0x00000A, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_IsControlAI_bAI) == 0x00000B, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_Exit_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_Exit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000013, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_SetCharacterVisibility_self_CastInput) == 0x000018, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_SetCharacterVisibility_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_SetCharacterVisibility_bDummy) == 0x000028, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_SetCharacterVisibility_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_GetPlayerID_self_CastInput) == 0x000030, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_GetPlayerID_ReturnValue) == 0x000040, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000041, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_SetLookAtEnable_self_CastInput) == 0x000048, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_SetLookAtEnable_bResult) == 0x000058, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_GetPlayerID_self_CastInput_1) == 0x000060, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_GetPlayerID_ReturnValue_1) == 0x000070, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000071, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000072, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000073, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000074, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000075, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_IsDodgeTargetRot_self_CastInput) == 0x000078, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_IsDodgeTargetRot_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_Exit, CallFunc_IsDodgeTargetRot_IsDodgeTargetRot) == 0x000088, "Member 'BP_PlayerActionStateDodge_C_Exit::CallFunc_IsDodgeTargetRot_IsDodgeTargetRot' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.IsDodgeDiagonally
// 0x0005 (0x0005 - 0x0000)
struct BP_PlayerActionStateDodge_C_IsDodgeDiagonally final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbEnable;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_IsDodgeDiagonally) == 0x000001, "Wrong alignment on BP_PlayerActionStateDodge_C_IsDodgeDiagonally");
static_assert(sizeof(BP_PlayerActionStateDodge_C_IsDodgeDiagonally) == 0x000005, "Wrong size on BP_PlayerActionStateDodge_C_IsDodgeDiagonally");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsDodgeDiagonally, bEnable) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_IsDodgeDiagonally::bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsDodgeDiagonally, LbEnable) == 0x000001, "Member 'BP_PlayerActionStateDodge_C_IsDodgeDiagonally::LbEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsDodgeDiagonally, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_PlayerActionStateDodge_C_IsDodgeDiagonally::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsDodgeDiagonally, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BP_PlayerActionStateDodge_C_IsDodgeDiagonally::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsDodgeDiagonally, CallFunc_IsControlAI_bAI) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_IsDodgeDiagonally::CallFunc_IsControlAI_bAI' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.IsCheckTurnBack
// 0x0003 (0x0003 - 0x0000)
struct BP_PlayerActionStateDodge_C_IsCheckTurnBack final
{
public:
	bool                                          bTurnBack;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_IsCheckTurnBack) == 0x000001, "Wrong alignment on BP_PlayerActionStateDodge_C_IsCheckTurnBack");
static_assert(sizeof(BP_PlayerActionStateDodge_C_IsCheckTurnBack) == 0x000003, "Wrong size on BP_PlayerActionStateDodge_C_IsCheckTurnBack");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsCheckTurnBack, bTurnBack) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_IsCheckTurnBack::bTurnBack' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsCheckTurnBack, CallFunc_IsControlAI_bAI) == 0x000001, "Member 'BP_PlayerActionStateDodge_C_IsCheckTurnBack::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsCheckTurnBack, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_PlayerActionStateDodge_C_IsCheckTurnBack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.SetInvalidDamage
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerActionStateDodge_C_SetInvalidDamage final
{
public:
	bool                                          bInvalid;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerAccessoryEffect_bEquip;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F1[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerAccessoryEffect_Param;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_SetInvalidDamage) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_SetInvalidDamage");
static_assert(sizeof(BP_PlayerActionStateDodge_C_SetInvalidDamage) == 0x000028, "Wrong size on BP_PlayerActionStateDodge_C_SetInvalidDamage");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, bInvalid) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::bInvalid' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, Temp_bool_Variable) == 0x000001, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, CallFunc_GetPlayerAccessoryEffect_bEquip) == 0x000002, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::CallFunc_GetPlayerAccessoryEffect_bEquip' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, CallFunc_GetPlayerAccessoryEffect_Param) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::CallFunc_GetPlayerAccessoryEffect_Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, K2Node_MathExpression_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, K2Node_Select_Default) == 0x00000C, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000020, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetInvalidDamage, CallFunc_SetInvalidDamage_Dummy) == 0x000021, "Member 'BP_PlayerActionStateDodge_C_SetInvalidDamage::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.SetSuperArmor
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerActionStateDodge_C_SetSuperArmor final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerAccessoryEffect_bEquip;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F2[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerAccessoryEffect_Param;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_SetSuperArmor) == 0x000008, "Wrong alignment on BP_PlayerActionStateDodge_C_SetSuperArmor");
static_assert(sizeof(BP_PlayerActionStateDodge_C_SetSuperArmor) == 0x000020, "Wrong size on BP_PlayerActionStateDodge_C_SetSuperArmor");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetSuperArmor, bEnable) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_SetSuperArmor::bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetSuperArmor, CallFunc_GetPlayerAccessoryEffect_bEquip) == 0x000001, "Member 'BP_PlayerActionStateDodge_C_SetSuperArmor::CallFunc_GetPlayerAccessoryEffect_bEquip' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetSuperArmor, CallFunc_GetPlayerAccessoryEffect_Param) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_SetSuperArmor::CallFunc_GetPlayerAccessoryEffect_Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetSuperArmor, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_SetSuperArmor::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_SetSuperArmor, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000018, "Member 'BP_PlayerActionStateDodge_C_SetSuperArmor::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.IsRotateToTarget
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerActionStateDodge_C_IsRotateToTarget final
{
public:
	struct FVector                                InInputDir;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InTargetDir;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InForwardDir;                                      // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bRotate;                                     // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F3[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LForwardDotValue;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LInputDotValue;                                    // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbRotate;                                          // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F4[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F5[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F6[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockTarget_IsLockTarget;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F7[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_IsRotateToTarget) == 0x000004, "Wrong alignment on BP_PlayerActionStateDodge_C_IsRotateToTarget");
static_assert(sizeof(BP_PlayerActionStateDodge_C_IsRotateToTarget) == 0x000050, "Wrong size on BP_PlayerActionStateDodge_C_IsRotateToTarget");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, InInputDir) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::InInputDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, InTargetDir) == 0x00000C, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::InTargetDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, InForwardDir) == 0x000018, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::InForwardDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, Param_bRotate) == 0x000024, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::Param_bRotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, LForwardDotValue) == 0x000028, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::LForwardDotValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, LInputDotValue) == 0x00002C, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::LInputDotValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, LbRotate) == 0x000030, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::LbRotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, CallFunc_DegCos_ReturnValue) == 0x000034, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, CallFunc_DegCos_ReturnValue_1) == 0x00003C, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, CallFunc_Dot_VectorVector_ReturnValue) == 0x000044, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, CallFunc_IsLockTarget_IsLockTarget) == 0x000048, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::CallFunc_IsLockTarget_IsLockTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_IsRotateToTarget, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x00004C, "Member 'BP_PlayerActionStateDodge_C_IsRotateToTarget::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.CheckSprint
// 0x0006 (0x0006 - 0x0000)
struct BP_PlayerActionStateDodge_C_CheckSprint final
{
public:
	bool                                          bSprint;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableActionSprint_bEnable;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLeftStickZero_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_CheckSprint) == 0x000001, "Wrong alignment on BP_PlayerActionStateDodge_C_CheckSprint");
static_assert(sizeof(BP_PlayerActionStateDodge_C_CheckSprint) == 0x000006, "Wrong size on BP_PlayerActionStateDodge_C_CheckSprint");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckSprint, bSprint) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_CheckSprint::bSprint' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckSprint, CallFunc_IsEnableActionSprint_bEnable) == 0x000001, "Member 'BP_PlayerActionStateDodge_C_CheckSprint::CallFunc_IsEnableActionSprint_bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckSprint, CallFunc_IsPlayerStatus_Result) == 0x000002, "Member 'BP_PlayerActionStateDodge_C_CheckSprint::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckSprint, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_PlayerActionStateDodge_C_CheckSprint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckSprint, CallFunc_IsLeftStickZero_ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_CheckSprint::CallFunc_IsLeftStickZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckSprint, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'BP_PlayerActionStateDodge_C_CheckSprint::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.CalcDodgeAnimDir
// 0x00F4 (0x00F4 - 0x0000)
struct BP_PlayerActionStateDodge_C_CalcDodgeAnimDir final
{
public:
	struct FVector                                InDodgeDir;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InForwardDir;                                      // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                AnimDir;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93F8[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotate;                                            // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         LIndex;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LAngle;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LRotate;                                           // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         LRightDot;                                         // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LForwardDot;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                LDir;                                              // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                Temp_byte_Variable;                                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAnimDir                                Temp_byte_Variable_1;                              // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93F9[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                Temp_byte_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93FA[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                Temp_byte_Variable_3;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAnimDir                                Temp_byte_Variable_4;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAnimDir                                K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93FB[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                Temp_byte_Variable_5;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93FC[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93FD[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                K2Node_Select_Default_1;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93FE[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93FF[0x1];                                     // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimDir                                K2Node_Select_Default_2;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9400[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_2;               // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_3;               // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9401[0x1];                                     // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir) == 0x000004, "Wrong alignment on BP_PlayerActionStateDodge_C_CalcDodgeAnimDir");
static_assert(sizeof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir) == 0x0000F4, "Wrong size on BP_PlayerActionStateDodge_C_CalcDodgeAnimDir");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, InDodgeDir) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::InDodgeDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, InForwardDir) == 0x00000C, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::InForwardDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, AnimDir) == 0x000018, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::AnimDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Rotate) == 0x00001C, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Rotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, LIndex) == 0x000028, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::LIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, LAngle) == 0x00002C, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::LAngle' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, LRotate) == 0x000030, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::LRotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, LRightDot) == 0x00003C, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::LRightDot' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, LForwardDot) == 0x000040, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::LForwardDot' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, LDir) == 0x000044, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::LDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_byte_Variable) == 0x000045, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_bool_Variable) == 0x000046, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_byte_Variable_1) == 0x000047, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00004C, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_byte_Variable_2) == 0x000054, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x000058, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_byte_Variable_3) == 0x00005C, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_bool_Variable_1) == 0x00005D, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_byte_Variable_4) == 0x00005E, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00005F, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, K2Node_SwitchInteger_CmpSuccess) == 0x000060, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, K2Node_Select_Default) == 0x000061, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_byte_Variable_5) == 0x000068, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_DegCos_ReturnValue) == 0x00006C, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000070, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_bool_Variable_2) == 0x000071, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_int_Variable) == 0x000074, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, K2Node_Select_Default_1) == 0x000078, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, Temp_bool_Variable_3) == 0x000082, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000084, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, K2Node_Select_Default_2) == 0x000090, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_MakeRotFromX_ReturnValue) == 0x000094, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_MakeRotFromX_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_ComposeRotators_ReturnValue) == 0x0000AC, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_ComposeRotators_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C4, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_MakeRotFromX_ReturnValue_2) == 0x0000D0, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_MakeRotFromX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_MakeRotFromX_ReturnValue_3) == 0x0000DC, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_MakeRotFromX_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0000E8, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000E9, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x0000EA, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000EC, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CalcDodgeAnimDir, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0000F0, "Member 'BP_PlayerActionStateDodge_C_CalcDodgeAnimDir::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerActionStateDodge.BP_PlayerActionStateDodge_C.CheckTurnBack
// 0x0044 (0x0044 - 0x0000)
struct BP_PlayerActionStateDodge_C_CheckTurnBack final
{
public:
	bool                                          bTurnBack;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9402[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LDotValue;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9403[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeftStickX_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeftStickY_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcWorldVector_ReturnValue;              // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateDodge_C_CheckTurnBack) == 0x000004, "Wrong alignment on BP_PlayerActionStateDodge_C_CheckTurnBack");
static_assert(sizeof(BP_PlayerActionStateDodge_C_CheckTurnBack) == 0x000044, "Wrong size on BP_PlayerActionStateDodge_C_CheckTurnBack");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, bTurnBack) == 0x000000, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::bTurnBack' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, LDotValue) == 0x000004, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::LDotValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_IsControlAI_bAI) == 0x000011, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_GetActorForwardVector_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_GetLeftStickX_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_GetLeftStickX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_GetLeftStickY_ReturnValue) == 0x000024, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_GetLeftStickY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_CalcWorldVector_ReturnValue) == 0x000034, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_CalcWorldVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDodge_C_CheckTurnBack, CallFunc_Dot_VectorVector_ReturnValue) == 0x000040, "Member 'BP_PlayerActionStateDodge_C_CheckTurnBack::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

}

