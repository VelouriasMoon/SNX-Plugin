#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RSGameModeBPInterface

#include "Basic.hpp"


namespace SDK::Params
{

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.OnLoadedLevel
// 0x0008 (0x0008 - 0x0000)
struct RSGameModeBPInterface_C_OnLoadedLevel final
{
public:
	class UObject*                                LoadedLevel;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RSGameModeBPInterface_C_OnLoadedLevel) == 0x000008, "Wrong alignment on RSGameModeBPInterface_C_OnLoadedLevel");
static_assert(sizeof(RSGameModeBPInterface_C_OnLoadedLevel) == 0x000008, "Wrong size on RSGameModeBPInterface_C_OnLoadedLevel");
static_assert(offsetof(RSGameModeBPInterface_C_OnLoadedLevel, LoadedLevel) == 0x000000, "Member 'RSGameModeBPInterface_C_OnLoadedLevel::LoadedLevel' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.OnUnloadedLevel
// 0x0008 (0x0008 - 0x0000)
struct RSGameModeBPInterface_C_OnUnloadedLevel final
{
public:
	class UObject*                                UnloadedLevel;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RSGameModeBPInterface_C_OnUnloadedLevel) == 0x000008, "Wrong alignment on RSGameModeBPInterface_C_OnUnloadedLevel");
static_assert(sizeof(RSGameModeBPInterface_C_OnUnloadedLevel) == 0x000008, "Wrong size on RSGameModeBPInterface_C_OnUnloadedLevel");
static_assert(offsetof(RSGameModeBPInterface_C_OnUnloadedLevel, UnloadedLevel) == 0x000000, "Member 'RSGameModeBPInterface_C_OnUnloadedLevel::UnloadedLevel' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.GetLeftPlayerBP
// 0x0008 (0x0008 - 0x0000)
struct RSGameModeBPInterface_C_GetLeftPlayerBP final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RSGameModeBPInterface_C_GetLeftPlayerBP) == 0x000008, "Wrong alignment on RSGameModeBPInterface_C_GetLeftPlayerBP");
static_assert(sizeof(RSGameModeBPInterface_C_GetLeftPlayerBP) == 0x000008, "Wrong size on RSGameModeBPInterface_C_GetLeftPlayerBP");
static_assert(offsetof(RSGameModeBPInterface_C_GetLeftPlayerBP, Player) == 0x000000, "Member 'RSGameModeBPInterface_C_GetLeftPlayerBP::Player' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.GetRightPlayerBP
// 0x0008 (0x0008 - 0x0000)
struct RSGameModeBPInterface_C_GetRightPlayerBP final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RSGameModeBPInterface_C_GetRightPlayerBP) == 0x000008, "Wrong alignment on RSGameModeBPInterface_C_GetRightPlayerBP");
static_assert(sizeof(RSGameModeBPInterface_C_GetRightPlayerBP) == 0x000008, "Wrong size on RSGameModeBPInterface_C_GetRightPlayerBP");
static_assert(offsetof(RSGameModeBPInterface_C_GetRightPlayerBP, Player) == 0x000000, "Member 'RSGameModeBPInterface_C_GetRightPlayerBP::Player' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.GetMainPlayerBP
// 0x0008 (0x0008 - 0x0000)
struct RSGameModeBPInterface_C_GetMainPlayerBP final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RSGameModeBPInterface_C_GetMainPlayerBP) == 0x000008, "Wrong alignment on RSGameModeBPInterface_C_GetMainPlayerBP");
static_assert(sizeof(RSGameModeBPInterface_C_GetMainPlayerBP) == 0x000008, "Wrong size on RSGameModeBPInterface_C_GetMainPlayerBP");
static_assert(offsetof(RSGameModeBPInterface_C_GetMainPlayerBP, Player) == 0x000000, "Member 'RSGameModeBPInterface_C_GetMainPlayerBP::Player' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.GetPlayersAll
// 0x0010 (0x0010 - 0x0000)
struct RSGameModeBPInterface_C_GetPlayersAll final
{
public:
	TArray<class ARSCharacterBase*>               Players;                                           // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(RSGameModeBPInterface_C_GetPlayersAll) == 0x000008, "Wrong alignment on RSGameModeBPInterface_C_GetPlayersAll");
static_assert(sizeof(RSGameModeBPInterface_C_GetPlayersAll) == 0x000010, "Wrong size on RSGameModeBPInterface_C_GetPlayersAll");
static_assert(offsetof(RSGameModeBPInterface_C_GetPlayersAll, Players) == 0x000000, "Member 'RSGameModeBPInterface_C_GetPlayersAll::Players' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.IsPersistentLevel
// 0x0010 (0x0010 - 0x0000)
struct RSGameModeBPInterface_C_IsPersistentLevel final
{
public:
	class UObject*                                Level;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPersistenceLevel;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RSGameModeBPInterface_C_IsPersistentLevel) == 0x000008, "Wrong alignment on RSGameModeBPInterface_C_IsPersistentLevel");
static_assert(sizeof(RSGameModeBPInterface_C_IsPersistentLevel) == 0x000010, "Wrong size on RSGameModeBPInterface_C_IsPersistentLevel");
static_assert(offsetof(RSGameModeBPInterface_C_IsPersistentLevel, Level) == 0x000000, "Member 'RSGameModeBPInterface_C_IsPersistentLevel::Level' has a wrong offset!");
static_assert(offsetof(RSGameModeBPInterface_C_IsPersistentLevel, IsPersistenceLevel) == 0x000008, "Member 'RSGameModeBPInterface_C_IsPersistentLevel::IsPersistenceLevel' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.IsLV_MainPersistent
// 0x0001 (0x0001 - 0x0000)
struct RSGameModeBPInterface_C_IsLV_MainPersistent final
{
public:
	bool                                          IsLV_MainPersistence;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RSGameModeBPInterface_C_IsLV_MainPersistent) == 0x000001, "Wrong alignment on RSGameModeBPInterface_C_IsLV_MainPersistent");
static_assert(sizeof(RSGameModeBPInterface_C_IsLV_MainPersistent) == 0x000001, "Wrong size on RSGameModeBPInterface_C_IsLV_MainPersistent");
static_assert(offsetof(RSGameModeBPInterface_C_IsLV_MainPersistent, IsLV_MainPersistence) == 0x000000, "Member 'RSGameModeBPInterface_C_IsLV_MainPersistent::IsLV_MainPersistence' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.SetPlayerAndEnemyGravity
// 0x0001 (0x0001 - 0x0000)
struct RSGameModeBPInterface_C_SetPlayerAndEnemyGravity final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RSGameModeBPInterface_C_SetPlayerAndEnemyGravity) == 0x000001, "Wrong alignment on RSGameModeBPInterface_C_SetPlayerAndEnemyGravity");
static_assert(sizeof(RSGameModeBPInterface_C_SetPlayerAndEnemyGravity) == 0x000001, "Wrong size on RSGameModeBPInterface_C_SetPlayerAndEnemyGravity");
static_assert(offsetof(RSGameModeBPInterface_C_SetPlayerAndEnemyGravity, Enable) == 0x000000, "Member 'RSGameModeBPInterface_C_SetPlayerAndEnemyGravity::Enable' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.IsDevelopmentBP
// 0x0001 (0x0001 - 0x0000)
struct RSGameModeBPInterface_C_IsDevelopmentBP final
{
public:
	bool                                          IsDevelopment;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RSGameModeBPInterface_C_IsDevelopmentBP) == 0x000001, "Wrong alignment on RSGameModeBPInterface_C_IsDevelopmentBP");
static_assert(sizeof(RSGameModeBPInterface_C_IsDevelopmentBP) == 0x000001, "Wrong size on RSGameModeBPInterface_C_IsDevelopmentBP");
static_assert(offsetof(RSGameModeBPInterface_C_IsDevelopmentBP, IsDevelopment) == 0x000000, "Member 'RSGameModeBPInterface_C_IsDevelopmentBP::IsDevelopment' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.IsGameFlowLevelBP
// 0x0001 (0x0001 - 0x0000)
struct RSGameModeBPInterface_C_IsGameFlowLevelBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RSGameModeBPInterface_C_IsGameFlowLevelBP) == 0x000001, "Wrong alignment on RSGameModeBPInterface_C_IsGameFlowLevelBP");
static_assert(sizeof(RSGameModeBPInterface_C_IsGameFlowLevelBP) == 0x000001, "Wrong size on RSGameModeBPInterface_C_IsGameFlowLevelBP");
static_assert(offsetof(RSGameModeBPInterface_C_IsGameFlowLevelBP, ReturnValue) == 0x000000, "Member 'RSGameModeBPInterface_C_IsGameFlowLevelBP::ReturnValue' has a wrong offset!");

// Function RSGameModeBPInterface.RSGameModeBPInterface_C.IsInitializedDev
// 0x0001 (0x0001 - 0x0000)
struct RSGameModeBPInterface_C_IsInitializedDev final
{
public:
	bool                                          IsInitialized;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RSGameModeBPInterface_C_IsInitializedDev) == 0x000001, "Wrong alignment on RSGameModeBPInterface_C_IsInitializedDev");
static_assert(sizeof(RSGameModeBPInterface_C_IsInitializedDev) == 0x000001, "Wrong size on RSGameModeBPInterface_C_IsInitializedDev");
static_assert(offsetof(RSGameModeBPInterface_C_IsInitializedDev, IsInitialized) == 0x000000, "Member 'RSGameModeBPInterface_C_IsInitializedDev::IsInitialized' has a wrong offset!");

}

