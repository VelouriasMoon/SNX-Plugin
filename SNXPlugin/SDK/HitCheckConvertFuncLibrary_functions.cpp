#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HitCheckConvertFuncLibrary

#include "Basic.hpp"

#include "HitCheckConvertFuncLibrary_classes.hpp"
#include "HitCheckConvertFuncLibrary_parameters.hpp"


namespace SDK
{

// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.ElementKindToC
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ElementKindBP                           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCElementKind                          Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::ElementKindToC(ElementKindBP In, class UObject* __WorldContext, EHCElementKind* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "ElementKindToC");

	Params::HitCheckConvertFuncLibrary_C_ElementKindToC Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.ConditionKindToC
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EConditionKindBP                        In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EConditionKind                          Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::ConditionKindToC(EConditionKindBP In, class UObject* __WorldContext, EConditionKind* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "ConditionKindToC");

	Params::HitCheckConvertFuncLibrary_C_ConditionKindToC Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.CollisionValueKindToC
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECollisionValueKindBP                   In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCCollisionValueKind                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::CollisionValueKindToC(ECollisionValueKindBP In, class UObject* __WorldContext, EHCCollisionValueKind* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "CollisionValueKindToC");

	Params::HitCheckConvertFuncLibrary_C_CollisionValueKindToC Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.DamageKindToC
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EDamageKindBP                           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCDamageKind                           Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::DamageKindToC(EDamageKindBP In, class UObject* __WorldContext, EHCDamageKind* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "DamageKindToC");

	Params::HitCheckConvertFuncLibrary_C_DamageKindToC Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.CollisionHitTeamToC
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECollisionHitTeamBP                     In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCCollisionHitTeam                     Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::CollisionHitTeamToC(ECollisionHitTeamBP In, class UObject* __WorldContext, EHCCollisionHitTeam* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "CollisionHitTeamToC");

	Params::HitCheckConvertFuncLibrary_C_CollisionHitTeamToC Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.CollisionCommonInfoToC
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCollisionCommonInfoBP           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCCollisionCommonInfo           Out                                                    (Parm, OutParm)

void UHitCheckConvertFuncLibrary_C::CollisionCommonInfoToC(struct FCollisionCommonInfoBP& In, class UObject* __WorldContext, struct FHCCollisionCommonInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "CollisionCommonInfoToC");

	Params::HitCheckConvertFuncLibrary_C_CollisionCommonInfoToC Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.ElementDataToC
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCollisionElementDataBP          In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCCollisionElementData          Out                                                    (Parm, OutParm, NoDestructor)

void UHitCheckConvertFuncLibrary_C::ElementDataToC(struct FCollisionElementDataBP& In, class UObject* __WorldContext, struct FHCCollisionElementData* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "ElementDataToC");

	Params::HitCheckConvertFuncLibrary_C_ElementDataToC Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.ConditionDataToC
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCollitionConditionDataBP        In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCCollisionConditionData        Out                                                    (Parm, OutParm, NoDestructor)

void UHitCheckConvertFuncLibrary_C::ConditionDataToC(struct FCollitionConditionDataBP& In, class UObject* __WorldContext, struct FHCCollisionConditionData* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "ConditionDataToC");

	Params::HitCheckConvertFuncLibrary_C_ConditionDataToC Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.CollisionValueDataToC
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCollisionValueDataBP            In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCCollisionValueData            Out                                                    (Parm, OutParm, NoDestructor)

void UHitCheckConvertFuncLibrary_C::CollisionValueDataToC(struct FCollisionValueDataBP& In, class UObject* __WorldContext, struct FHCCollisionValueData* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "CollisionValueDataToC");

	Params::HitCheckConvertFuncLibrary_C_CollisionValueDataToC Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.AttackCollisionInfoToC
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAttackCollisionInfoBP           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           AttackOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCAttackCollisionInfo           Out                                                    (Parm, OutParm)

void UHitCheckConvertFuncLibrary_C::AttackCollisionInfoToC(const struct FAttackCollisionInfoBP& In, class AActor* AttackOwner, class UObject* __WorldContext, struct FHCAttackCollisionInfo* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "AttackCollisionInfoToC");

	Params::HitCheckConvertFuncLibrary_C_AttackCollisionInfoToC Parms{};

	Parms.In = std::move(In);
	Parms.AttackOwner = AttackOwner;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.HitResultToBP
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCHitResult                     In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCommonHitResultBP               Out                                                    (Parm, OutParm, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::HitResultToBP(struct FHCHitResult& In, class UObject* __WorldContext, struct FCommonHitResultBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "HitResultToBP");

	Params::HitCheckConvertFuncLibrary_C_HitResultToBP Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.CollisionCommonInfoToBP
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCCollisionCommonInfo           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCollisionCommonInfoBP           Out                                                    (Parm, OutParm, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::CollisionCommonInfoToBP(struct FHCCollisionCommonInfo& In, class UObject* __WorldContext, struct FCollisionCommonInfoBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "CollisionCommonInfoToBP");

	Params::HitCheckConvertFuncLibrary_C_CollisionCommonInfoToBP Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.DamageKindToBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHCDamageKind                           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamageKindBP                           Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::DamageKindToBP(EHCDamageKind In, class UObject* __WorldContext, EDamageKindBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "DamageKindToBP");

	Params::HitCheckConvertFuncLibrary_C_DamageKindToBP Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.CollisionHitTeamToBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHCCollisionHitTeam                     In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECollisionHitTeamBP                     Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::CollisionHitTeamToBP(EHCCollisionHitTeam In, class UObject* __WorldContext, ECollisionHitTeamBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "CollisionHitTeamToBP");

	Params::HitCheckConvertFuncLibrary_C_CollisionHitTeamToBP Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.ElementKindToBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHCElementKind                          In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ElementKindBP                           Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::ElementKindToBP(EHCElementKind In, class UObject* __WorldContext, ElementKindBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "ElementKindToBP");

	Params::HitCheckConvertFuncLibrary_C_ElementKindToBP Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.ConditionKindToBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EConditionKind                          In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EConditionKindBP                        Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::ConditionKindToBP(EConditionKind In, class UObject* __WorldContext, EConditionKindBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "ConditionKindToBP");

	Params::HitCheckConvertFuncLibrary_C_ConditionKindToBP Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.CollisionValueKindToBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHCCollisionValueKind                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECollisionValueKindBP                   NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::CollisionValueKindToBP(EHCCollisionValueKind NewParam, class UObject* __WorldContext, ECollisionValueKindBP* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "CollisionValueKindToBP");

	Params::HitCheckConvertFuncLibrary_C_CollisionValueKindToBP Parms{};

	Parms.NewParam = NewParam;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.ElementDataToBP
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCCollisionElementData          In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCollisionElementDataBP          Out                                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::ElementDataToBP(struct FHCCollisionElementData& In, class UObject* __WorldContext, struct FCollisionElementDataBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "ElementDataToBP");

	Params::HitCheckConvertFuncLibrary_C_ElementDataToBP Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.ConditionDataToBP
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCCollisionConditionData        In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCollitionConditionDataBP        Out                                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::ConditionDataToBP(struct FHCCollisionConditionData& In, class UObject* __WorldContext, struct FCollitionConditionDataBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "ConditionDataToBP");

	Params::HitCheckConvertFuncLibrary_C_ConditionDataToBP Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.CollisionValueDataToBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCCollisionValueData            In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCollisionValueDataBP            Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::CollisionValueDataToBP(struct FHCCollisionValueData& In, class UObject* __WorldContext, struct FCollisionValueDataBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "CollisionValueDataToBP");

	Params::HitCheckConvertFuncLibrary_C_CollisionValueDataToBP Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.RuntimeDataToBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHCRuntimeData                   In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCollisionRumtimeDataBP          Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHitCheckConvertFuncLibrary_C::RuntimeDataToBP(struct FHCRuntimeData& In, class UObject* __WorldContext, struct FCollisionRumtimeDataBP* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "RuntimeDataToBP");

	Params::HitCheckConvertFuncLibrary_C_RuntimeDataToBP Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.HitResultToC
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCommonHitResultBP               In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCHitResult                     Out                                                    (Parm, OutParm, ContainsInstancedReference)

void UHitCheckConvertFuncLibrary_C::HitResultToC(struct FCommonHitResultBP& In, class UObject* __WorldContext, struct FHCHitResult* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "HitResultToC");

	Params::HitCheckConvertFuncLibrary_C_HitResultToC Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.RuntimeDataToC
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCollisionRumtimeDataBP          In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCRuntimeData                   Out                                                    (Parm, OutParm, NoDestructor)

void UHitCheckConvertFuncLibrary_C::RuntimeDataToC(struct FCollisionRumtimeDataBP& In, class UObject* __WorldContext, struct FHCRuntimeData* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "RuntimeDataToC");

	Params::HitCheckConvertFuncLibrary_C_RuntimeDataToC Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.GetSkillParameterTable
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UDataTable*                       Table                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               SkillParam                                             (Parm, OutParm)

void UHitCheckConvertFuncLibrary_C::GetSkillParameterTable(class UDataTable* Table, class FName Param_Name, class UObject* __WorldContext, struct FHCSkillCommonInfo* SkillParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "GetSkillParameterTable");

	Params::HitCheckConvertFuncLibrary_C_GetSkillParameterTable Parms{};

	Parms.Table = Table;
	Parms.Param_Name = Param_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SkillParam != nullptr)
		*SkillParam = std::move(Parms.SkillParam);
}


// Function HitCheckConvertFuncLibrary.HitCheckConvertFuncLibrary_C.GetSkillParameterTableWithReplace
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       OrgTable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SkillName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               SkillCommonInfo                                        (Parm, OutParm)

void UHitCheckConvertFuncLibrary_C::GetSkillParameterTableWithReplace(class UDataTable* OrgTable, class FName SkillName, class AActor* OwnerActor, class UObject* __WorldContext, struct FHCSkillCommonInfo* SkillCommonInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitCheckConvertFuncLibrary_C", "GetSkillParameterTableWithReplace");

	Params::HitCheckConvertFuncLibrary_C_GetSkillParameterTableWithReplace Parms{};

	Parms.OrgTable = OrgTable;
	Parms.SkillName = SkillName;
	Parms.OwnerActor = OwnerActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SkillCommonInfo != nullptr)
		*SkillCommonInfo = std::move(Parms.SkillCommonInfo);
}

}

