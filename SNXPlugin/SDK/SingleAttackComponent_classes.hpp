#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SingleAttackComponent

#include "Basic.hpp"

#include "EWeaponAttackAnimStopType_structs.hpp"
#include "Engine_structs.hpp"
#include "AttackComponentBaseBP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SingleAttackComponent.SingleAttackComponent_C
// 0x0050 (0x01E8 - 0x0198)
class USingleAttackComponent_C : public UAttackComponentBaseBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_SingleAttackComponent_C;            // 0x0198(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bInputAttack;                                      // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E4[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage;                                           // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlyingAttack;                                     // 0x01B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E5[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClaimantName;                                      // 0x01B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84E6[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           WeaponMontage;                                     // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReleaseButtonMode;                                // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E7[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ShortMontage;                                      // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ShortWeaponMontage;                                // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           UseMontage;                                        // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SingleAttackComponent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void InputButton(bool IsPressed, bool* Dummy);
	void ClearInputForSingleAttack(bool* Dummy);
	bool OnMontageBlendingOut(class UAnimMontage* Param_Montage, bool bInterrupted);
	bool ClearInput();
	bool CheckStartAttack(float DeltaTime);
	bool InputButtonByCombo(bool bPressed, bool bComboFirst);
	void EndAttack(bool* Dummy);
	void IsEndCondition(class UAnimMontage* Param_Montage, bool* bEnd);
	void GetWeaponAnimStopType(EWeaponAttackAnimStopType* Type);

	void IsStartSingleAttack(bool* IsStart) const;
	void GetCurrentMontage(class UAnimMontage** Param_Montage) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SingleAttackComponent_C">();
	}
	static class USingleAttackComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USingleAttackComponent_C>();
	}
};
static_assert(alignof(USingleAttackComponent_C) == 0x000008, "Wrong alignment on USingleAttackComponent_C");
static_assert(sizeof(USingleAttackComponent_C) == 0x0001E8, "Wrong size on USingleAttackComponent_C");
static_assert(offsetof(USingleAttackComponent_C, UberGraphFrame_SingleAttackComponent_C) == 0x000198, "Member 'USingleAttackComponent_C::UberGraphFrame_SingleAttackComponent_C' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, bInputAttack) == 0x0001A0, "Member 'USingleAttackComponent_C::bInputAttack' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, Montage) == 0x0001A8, "Member 'USingleAttackComponent_C::Montage' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, bFlyingAttack) == 0x0001B0, "Member 'USingleAttackComponent_C::bFlyingAttack' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, ClaimantName) == 0x0001B4, "Member 'USingleAttackComponent_C::ClaimantName' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, WeaponMontage) == 0x0001C0, "Member 'USingleAttackComponent_C::WeaponMontage' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, bReleaseButtonMode) == 0x0001C8, "Member 'USingleAttackComponent_C::bReleaseButtonMode' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, ShortMontage) == 0x0001D0, "Member 'USingleAttackComponent_C::ShortMontage' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, ShortWeaponMontage) == 0x0001D8, "Member 'USingleAttackComponent_C::ShortWeaponMontage' has a wrong offset!");
static_assert(offsetof(USingleAttackComponent_C, UseMontage) == 0x0001E0, "Member 'USingleAttackComponent_C::UseMontage' has a wrong offset!");

}

