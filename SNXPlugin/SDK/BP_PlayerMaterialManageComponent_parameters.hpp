#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerMaterialManageComponent

#include "Basic.hpp"

#include "EPlayerMaterialManageType_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FPlayerVectorMaterialManageData_structs.hpp"
#include "FPlayerMaterialManageCurveData_structs.hpp"
#include "FPlayerMaterialManageData_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.OnCompletedMaterialSetting__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_OnCompletedMaterialSetting__DelegateSignature final
{
public:
	EPlayerMaterialManageType                     Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_OnCompletedMaterialSetting__DelegateSignature) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_OnCompletedMaterialSetting__DelegateSignature");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_OnCompletedMaterialSetting__DelegateSignature) == 0x000001, "Wrong size on BP_PlayerMaterialManageComponent_C_OnCompletedMaterialSetting__DelegateSignature");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_OnCompletedMaterialSetting__DelegateSignature, Type) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_OnCompletedMaterialSetting__DelegateSignature::Type' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.ExecuteUbergraph_BP_PlayerMaterialManageComponent
// 0x000C (0x000C - 0x0000)
struct BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent) == 0x000004, "Wrong alignment on BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent) == 0x00000C, "Wrong size on BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent, EntryPoint) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent, K2Node_Event_EndPlayReason) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_ExecuteUbergraph_BP_PlayerMaterialManageComponent::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PlayerMaterialManageComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerMaterialManageComponent_C_ReceiveTick");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerMaterialManageComponent_C_ReceiveTick");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.Update
// 0x0128 (0x0128 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6369[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LRemoveIndex;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_636A[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_636B[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionLight_Action;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_636C[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_636D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_636E[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateVectorMaterial_bCompleted;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_636F[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerVectorMaterialManageData       CallFunc_UpdateVectorMaterial_UpdateDataParam;     // 0x0084(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6370[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateMaterialCurve_bCompleted;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6371[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerMaterialManageCurveData        CallFunc_UpdateMaterialCurve_UpdateData;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_5;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6372[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6373[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateScalarMaterial_bCompleted;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6374[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerMaterialManageData             CallFunc_UpdateScalarMaterial_UpdateData;          // 0x0104(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6375[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_Update) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_Update");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_Update) == 0x000128, "Wrong size on BP_PlayerMaterialManageComponent_C_Update");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, DeltaSeconds) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_Update::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, LRemoveIndex) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_Update::LRemoveIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Num_Variable_1) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Num_Variable_2) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Num_Variable_3) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Array_Index_Variable_3) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_IsActionLight_Action) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_IsActionLight_Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Not_PreBool_ReturnValue_1) == 0x000059, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Counter_Variable_3) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Less_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue_3) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000079, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Array_Index_Variable_4) == 0x00007C, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_UpdateVectorMaterial_bCompleted) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_UpdateVectorMaterial_bCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_UpdateVectorMaterial_UpdateDataParam) == 0x000084, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_UpdateVectorMaterial_UpdateDataParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Num_Variable_4) == 0x0000AC, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue_4) == 0x0000B0, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B4, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue_5) == 0x0000B8, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_UpdateMaterialCurve_bCompleted) == 0x0000BC, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_UpdateMaterialCurve_bCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_UpdateMaterialCurve_UpdateData) == 0x0000C0, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_UpdateMaterialCurve_UpdateData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Num_Variable_5) == 0x0000D8, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Num_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue_6) == 0x0000DC, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Counter_Variable_4) == 0x0000E4, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000E8, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000EC, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue_7) == 0x0000F0, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Array_Index_Variable_5) == 0x0000F4, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, Temp_int_Loop_Counter_Variable_5) == 0x0000F8, "Member 'BP_PlayerMaterialManageComponent_C_Update::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Array_Length_ReturnValue_8) == 0x0000FC, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_UpdateScalarMaterial_bCompleted) == 0x000100, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_UpdateScalarMaterial_bCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_UpdateScalarMaterial_UpdateData) == 0x000104, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_UpdateScalarMaterial_UpdateData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Less_IntInt_ReturnValue_5) == 0x00011C, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Update, CallFunc_Add_IntInt_ReturnValue_5) == 0x000120, "Member 'BP_PlayerMaterialManageComponent_C_Update::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.StartScalarMaterialDirection
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection final
{
public:
	EPlayerMaterialManageType                     Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6376[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartValue;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6377[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerMaterialManageData             K2Node_MakeStruct_FPlayerMaterialManageData;       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6378[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6379[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_637A[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_637B[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection) == 0x000004, "Wrong alignment on BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection) == 0x000058, "Wrong size on BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, Type) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::Type' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, StartValue) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::StartValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, EndValue) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::EndValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, Time) == 0x00000C, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, bPlayer) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, bWeapon) == 0x000011, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, bCable) == 0x000012, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, bCopy) == 0x000013, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, K2Node_MakeStruct_FPlayerMaterialManageData) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::K2Node_MakeStruct_FPlayerMaterialManageData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialDirection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.UpdateScalarMaterial
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial final
{
public:
	struct FFPlayerMaterialManageData             InData;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompleted;                                        // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_637C[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerMaterialManageData             UpdateData;                                        // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerMaterialManageData             LTempData;                                         // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LParamName;                                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LParamValue;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRate;                                             // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTime;                                             // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LElapsedTime;                                      // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbCompleted;                                       // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_637D[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerMaterialManageType                     Temp_byte_Variable;                                // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_637E[0x1];                                     // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_637F[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial) == 0x000004, "Wrong alignment on BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial) == 0x0000A8, "Wrong size on BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, InData) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::InData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, DeltaSeconds) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, bCompleted) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::bCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, UpdateData) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::UpdateData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, LTempData) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::LTempData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, LParamName) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::LParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, LParamValue) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::LParamValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, LRate) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::LRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, LTime) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::LTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, LElapsedTime) == 0x000064, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::LElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, LbCompleted) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::LbCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, Temp_name_Variable) == 0x00006C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, Temp_name_Variable_1) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, Temp_name_Variable_2) == 0x00007C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, Temp_name_Variable_3) == 0x000084, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x00008D, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, Temp_byte_Variable) == 0x00008E, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, K2Node_MathExpression_ReturnValue) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, K2Node_Select_Default) == 0x000094, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_PlayerMaterialManageComponent_C_UpdateScalarMaterial::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.StartScalarMaterialCurveDirection
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection final
{
public:
	EPlayerMaterialManageType                     Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6380[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerMaterialManageCurveData        K2Node_MakeStruct_FPlayerMaterialManageCurveData;  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6381[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6382[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6383[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6384[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection) == 0x000058, "Wrong size on BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, Type) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::Type' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, Curve) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, bPlayer) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, bWeapon) == 0x000011, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, bCable) == 0x000012, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, bCopy) == 0x000013, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, K2Node_MakeStruct_FPlayerMaterialManageCurveData) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::K2Node_MakeStruct_FPlayerMaterialManageCurveData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, Temp_bool_True_if_break_was_hit_Variable) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_StartScalarMaterialCurveDirection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SetMaterialScalarParameter
// 0x00E0 (0x00E0 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6385[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6386[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMaterialScalarParameterOther_ReturnValue; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6387[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerMaterialManageScalar            K2Node_MakeStruct_PlayerMaterialManageScalar;      // 0x005C(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6388[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6389[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetBrainCodeActorList_self_CastInput;     // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_638A[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetSASCodeActorList_self_CastInput;       // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_638B[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter) == 0x0000E0, "Wrong size on BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, ParamName) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Value) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, bPlayer) == 0x00000C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, bWeapon) == 0x00000D, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, bCable) == 0x00000E, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, bCopy) == 0x00000F, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, LCopyActor) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Array_Index_Variable_2) == 0x00003C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Loop_Num_Variable_2) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, K2Node_DynamicCast_AsPlayer_Interface) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_SetMaterialScalarParameterOther_ReturnValue) == 0x000059, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_SetMaterialScalarParameterOther_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_IsValid_ReturnValue) == 0x00005A, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, K2Node_MakeStruct_PlayerMaterialManageScalar) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::K2Node_MakeStruct_PlayerMaterialManageScalar' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_IsValid_ReturnValue_1) == 0x00006C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_GetBrainCodeActorList_self_CastInput) == 0x000088, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_GetBrainCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_GetBrainCodeActorList_CodeList) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_GetSASCodeActorList_self_CastInput) == 0x0000B0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_GetSASCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_GetSASCodeActorList_CodeList) == 0x0000C0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Array_Length_ReturnValue_2) == 0x0000D0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, Temp_int_Loop_Counter_Variable_2) == 0x0000D4, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarParameter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.UpdateMaterialCurve
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve final
{
public:
	struct FFPlayerMaterialManageCurveData        InData;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompleted;                                        // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_638C[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerMaterialManageCurveData        UpdateData;                                        // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerMaterialManageCurveData        LTempData;                                         // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LParam;                                            // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LCurrentTime;                                      // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbCompleted;                                       // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_638D[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerMaterialManageType                     Temp_byte_Variable;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_638E[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_638F[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve) == 0x0000A0, "Wrong size on BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, InData) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::InData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, DeltaSeconds) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, bCompleted) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::bCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, UpdateData) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::UpdateData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, LTempData) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::LTempData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, LParam) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::LParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, LCurrentTime) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::LCurrentTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, LbCompleted) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::LbCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, Temp_name_Variable) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, Temp_name_Variable_1) == 0x000064, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, Temp_name_Variable_2) == 0x00006C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, Temp_name_Variable_3) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, Temp_byte_Variable) == 0x00007C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, CallFunc_GetTimeRange_MinTime) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, CallFunc_GetTimeRange_MaxTime) == 0x000084, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, K2Node_Select_Default) == 0x00008C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, CallFunc_GetFloatValue_ReturnValue) == 0x000094, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_UpdateMaterialCurve::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SetMaterialVectorParameter
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Value;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x0017(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter) == 0x000030, "Wrong size on BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter, ParamName) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter, Value) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter, bPlayer) == 0x000014, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter, bWeapon) == 0x000015, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter, bCable) == 0x000016, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter, bCopy) == 0x000017, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter, LCopyActor) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVectorParameter::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.StartVectorMaterialDirection
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection final
{
public:
	EPlayerMaterialManageType                     Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6390[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartValue;                                        // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndParam;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6391[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerVectorMaterialManageData       K2Node_MakeStruct_FPlayerVectorMaterialManageData; // 0x0028(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6392[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6393[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6394[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection) == 0x000004, "Wrong alignment on BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection) == 0x000078, "Wrong size on BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, Type) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::Type' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, StartValue) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::StartValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, EndParam) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::EndParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, Time) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, bPlayer) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, bWeapon) == 0x000021, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, bCable) == 0x000022, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, bCopy) == 0x000023, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, K2Node_MakeStruct_FPlayerVectorMaterialManageData) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::K2Node_MakeStruct_FPlayerVectorMaterialManageData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000064, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection, CallFunc_BooleanAND_ReturnValue) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_StartVectorMaterialDirection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.UpdateVectorMaterial
// 0x00F8 (0x00F8 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial final
{
public:
	struct FFPlayerVectorMaterialManageData       InData;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompleted;                                        // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6395[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerVectorMaterialManageData       UpdateDataParam;                                   // 0x0030(0x0028)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerVectorMaterialManageData       LTempData;                                         // 0x0058(0x0028)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRate;                                             // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LElapsedTime;                                      // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTime;                                             // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbCompleted;                                       // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6396[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6397[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6398[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerMaterialManageType                     Temp_byte_Variable;                                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6399[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639A[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial) == 0x000004, "Wrong alignment on BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial) == 0x0000F8, "Wrong size on BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, InData) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::InData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, DeltaSeconds) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, bCompleted) == 0x00002C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::bCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, UpdateDataParam) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::UpdateDataParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, LTempData) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::LTempData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, LRate) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::LRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, LElapsedTime) == 0x000084, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::LElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, LTime) == 0x000088, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::LTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, LbCompleted) == 0x00008C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::LbCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, Temp_name_Variable) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, Temp_name_Variable_1) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, Temp_name_Variable_2) == 0x0000A4, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x0000AC, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, CallFunc_Ease_ReturnValue) == 0x0000B0, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, Temp_name_Variable_3) == 0x0000B4, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000BC, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C8, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D4, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, Temp_byte_Variable) == 0x0000E0, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, K2Node_Select_Default) == 0x0000E4, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_PlayerMaterialManageComponent_C_UpdateVectorMaterial::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.StartMaterialLight
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_StartMaterialLight final
{
public:
	ECharacterMaterialLightType                   MaterialLightType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_639B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterMaterialLightSetting         K2Node_MakeStruct_CharacterMaterialLightSetting;   // 0x0008(0x0058)()
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_StartMaterialLight) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_StartMaterialLight");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_StartMaterialLight) == 0x000070, "Wrong size on BP_PlayerMaterialManageComponent_C_StartMaterialLight");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartMaterialLight, MaterialLightType) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_StartMaterialLight::MaterialLightType' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartMaterialLight, K2Node_MakeStruct_CharacterMaterialLightSetting) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_StartMaterialLight::K2Node_MakeStruct_CharacterMaterialLightSetting' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartMaterialLight, CallFunc_IsEditor_ReturnValue) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_StartMaterialLight::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartMaterialLight, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000064, "Member 'BP_PlayerMaterialManageComponent_C_StartMaterialLight::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_StartMaterialLight, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_StartMaterialLight::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.Initialize
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_Initialize final
{
public:
	class UDataTable*                             TmpLightDataTable;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_SearchMaterialPreSkinFacialNormalSlots_MaterialSlots; // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639E[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_Initialize) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_Initialize");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_Initialize) == 0x000060, "Wrong size on BP_PlayerMaterialManageComponent_C_Initialize");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, TmpLightDataTable) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::TmpLightDataTable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, CallFunc_IsEditor_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, CallFunc_SearchMaterialPreSkinFacialNormalSlots_MaterialSlots) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::CallFunc_SearchMaterialPreSkinFacialNormalSlots_MaterialSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, CallFunc_LoadSoftObject_ReturnValue) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, K2Node_DynamicCast_AsData_Table) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000041, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, K2Node_DynamicCast_AsRSBattle_Player) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Initialize, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_Initialize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.UpdateLight
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_UpdateLight final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseEndCurve;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendRate;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63A0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterMaterialLight                LightData;                                         // 0x0018(0x0060)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A1[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A2[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A3[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_Select_Default;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_UpdateLight) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_UpdateLight");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_UpdateLight) == 0x0000A8, "Wrong size on BP_PlayerMaterialManageComponent_C_UpdateLight");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, DeltaSeconds) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, UseEndCurve) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::UseEndCurve' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, BlendRate) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::BlendRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, Curve) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, LightData) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::LightData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, Temp_bool_Variable) == 0x000078, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_GetTimeRange_MinTime) == 0x00007C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_GetTimeRange_MaxTime) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_Less_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_GetFloatValue_ReturnValue) == 0x000088, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_GetTimeRange_MinTime_1) == 0x00008C, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_GetTimeRange_MaxTime_1) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_IsValid_ReturnValue) == 0x000095, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, K2Node_Select_Default) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateLight, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000A4, "Member 'BP_PlayerMaterialManageComponent_C_UpdateLight::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.IsActionLight
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_IsActionLight final
{
public:
	bool                                          Action;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_IsActionLight) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_IsActionLight");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_IsActionLight) == 0x000004, "Wrong size on BP_PlayerMaterialManageComponent_C_IsActionLight");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_IsActionLight, Action) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_IsActionLight::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_IsActionLight, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PlayerMaterialManageComponent_C_IsActionLight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_IsActionLight, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_PlayerMaterialManageComponent_C_IsActionLight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_IsActionLight, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_PlayerMaterialManageComponent_C_IsActionLight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.InitializeLightDataTable
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_InitializeLightDataTable final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A4[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A5[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterMaterialLight                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0060)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_InitializeLightDataTable");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable) == 0x0000A8, "Wrong size on BP_PlayerMaterialManageComponent_C_InitializeLightDataTable");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, DataTable) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::DataTable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.EndMaterialLight
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_EndMaterialLight final
{
public:
	ECharacterMaterialLightType                   MaterialLightType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63A6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterMaterialLight                LightData;                                         // 0x0008(0x0060)(Edit, BlueprintVisible)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A7[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63A8[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_EndMaterialLight) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_EndMaterialLight");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_EndMaterialLight) == 0x000088, "Wrong size on BP_PlayerMaterialManageComponent_C_EndMaterialLight");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, MaterialLightType) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::MaterialLightType' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, LightData) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::LightData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00006C, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000078, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x00007C, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EndMaterialLight, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_EndMaterialLight::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SetMaterialLightParameter
// 0x0128 (0x0128 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63A9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterMaterialLightSetting         LightSetting;                                      // 0x0008(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FCharacterMaterialLightSettingVectorData MaterialVector;                                    // 0x0060(0x0018)(Edit, BlueprintVisible, NoDestructor)
	struct FCharacterMaterialLightSettingScalarData MaterialScalar;                                    // 0x0078(0x000C)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_63AA[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     TargetMaterial;                                    // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0090(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FCharacterMaterialLightSettingVectorData> VectorList;                                        // 0x00A0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FCharacterMaterialLightSettingScalarData> ScalarList;                                        // 0x00B0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         LowerRate;                                         // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpperRate;                                         // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63AB[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array_2;                          // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   K2Node_MakeArray_Array_3;                          // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter) == 0x000128, "Wrong size on BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, Rate) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, LightSetting) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::LightSetting' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, MaterialVector) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::MaterialVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, MaterialScalar) == 0x000078, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::MaterialScalar' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, TargetMaterial) == 0x000088, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::TargetMaterial' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, Materials) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::Materials' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, VectorList) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::VectorList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, ScalarList) == 0x0000B0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::ScalarList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, LowerRate) == 0x0000C0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::LowerRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, UpperRate) == 0x0000C4, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::UpperRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, CallFunc_FClamp_ReturnValue) == 0x0000EC, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, K2Node_MakeArray_Array_2) == 0x0000F8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, K2Node_MakeArray_Array_3) == 0x000108, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000118, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00011C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000120, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000124, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialLightParameter::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.ClearMaterialLightParameter
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter final
{
public:
	float                                         LowerRate;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpperRate;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCharacterMaterialLightSettingVectorData> K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FCharacterMaterialLightSettingScalarData> K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FCharacterMaterialLightSetting         K2Node_MakeStruct_CharacterMaterialLightSetting;   // 0x0028(0x0058)()
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter) == 0x000080, "Wrong size on BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter, LowerRate) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter::LowerRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter, UpperRate) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter::UpperRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter, K2Node_MakeArray_Array_1) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter, K2Node_MakeStruct_CharacterMaterialLightSetting) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_ClearMaterialLightParameter::K2Node_MakeStruct_CharacterMaterialLightSetting' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SetDriveModeMaterial
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial final
{
public:
	bool                                          EnableDrive;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63AC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerEmissionComponent_C*          PlayerEmissionComp;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63AD[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63AE[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63AF[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B0[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerEmissionComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B1[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B2[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial) == 0x000068, "Wrong size on BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, EnableDrive) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::EnableDrive' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, PlayerEmissionComp) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::PlayerEmissionComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, K2Node_DynamicCast_AsRSBattle_Character) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_PlayerMaterialManageComponent_C_SetDriveModeMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SwitchMaterial
// 0x00E8 (0x00E8 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SwitchMaterial final
{
public:
	class UMaterialInterface*                     NewMaterial;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ExcludeMaterialSlots;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Handle;                                            // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B3[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RestoreSwitchMaterial_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B4[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B5[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SwitchMaterialExclude_LayerID;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetBrainCodeActorList_self_CastInput;     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B6[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63B7[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetSASCodeActorList_self_CastInput;       // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_SwitchMaterialExclude_LayerID_1;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SwitchMaterialExclude_LayerID_2;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B8[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SwitchMaterialExclude_LayerID_3;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SwitchMaterial) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SwitchMaterial");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SwitchMaterial) == 0x0000E8, "Wrong size on BP_PlayerMaterialManageComponent_C_SwitchMaterial");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, NewMaterial) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::NewMaterial' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, ExcludeMaterialSlots) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::ExcludeMaterialSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, bPlayer) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, bWeapon) == 0x000019, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, bCable) == 0x00001A, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, bCopy) == 0x00001B, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Handle) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Handle' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, LCopyActor) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Loop_Num_Variable_1) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Loop_Num_Variable_2) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_RestoreSwitchMaterial_ReturnValue) == 0x000051, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_RestoreSwitchMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_SwitchMaterialExclude_LayerID) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_SwitchMaterialExclude_LayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_GetBrainCodeActorList_self_CastInput) == 0x000078, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_GetBrainCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_GetBrainCodeActorList_CodeList) == 0x000088, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Array_Index_Variable_2) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_GetSASCodeActorList_self_CastInput) == 0x0000A8, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_GetSASCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_GetSASCodeActorList_CodeList) == 0x0000B8, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_SwitchMaterialExclude_LayerID_1) == 0x0000C8, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_SwitchMaterialExclude_LayerID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_SwitchMaterialExclude_LayerID_2) == 0x0000CC, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_SwitchMaterialExclude_LayerID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Array_Length_ReturnValue_2) == 0x0000D0, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, Temp_int_Loop_Counter_Variable_2) == 0x0000D4, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_SwitchMaterialExclude_LayerID_3) == 0x0000DC, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_SwitchMaterialExclude_LayerID_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Array_Add_ReturnValue_1) == 0x0000E0, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SwitchMaterial, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E4, "Member 'BP_PlayerMaterialManageComponent_C_SwitchMaterial::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.RestoreSwitchMaterial
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial final
{
public:
	int32                                         Param_MaterialSwitchHandle;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OneFrameSetting;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63B9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_RestoreSwitchMaterial_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial) == 0x000028, "Wrong size on BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial, Param_MaterialSwitchHandle) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial::Param_MaterialSwitchHandle' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial, OneFrameSetting) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial::OneFrameSetting' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial, LCopyActor) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial, CallFunc_RestoreSwitchMaterial_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial::CallFunc_RestoreSwitchMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000021, "Member 'BP_PlayerMaterialManageComponent_C_RestoreSwitchMaterial::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.UpdateRestoreSwitch
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseEndCurve;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63BA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendRate;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63BB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterMaterialLight                LightData;                                         // 0x0018(0x0060)(Edit, BlueprintVisible)
	bool                                          CallFunc_RestoreSwitchMaterial_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch) == 0x000080, "Wrong size on BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch, DeltaSeconds) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch, UseEndCurve) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch::UseEndCurve' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch, BlendRate) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch::BlendRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch, Curve) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch::Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch, LightData) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch::LightData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch, CallFunc_RestoreSwitchMaterial_ReturnValue) == 0x000078, "Member 'BP_PlayerMaterialManageComponent_C_UpdateRestoreSwitch::CallFunc_RestoreSwitchMaterial_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SetMaterialVector4Parameter
// 0x00E0 (0x00E0 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63BC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63BD[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63BE[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerMaterialManageVector            K2Node_MakeStruct_PlayerMaterialManageVector;      // 0x0054(0x001C)(NoDestructor)
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetBrainCodeActorList_self_CastInput;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63BF[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetSASCodeActorList_self_CastInput;       // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C0[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter) == 0x0000E0, "Wrong size on BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, ParamName) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Value) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, bPlayer) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, bWeapon) == 0x000019, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, bCable) == 0x00001A, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, bCopy) == 0x00001B, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, LCopyActor) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Loop_Num_Variable_1) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Loop_Num_Variable_2) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, K2Node_MakeStruct_PlayerMaterialManageVector) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::K2Node_MakeStruct_PlayerMaterialManageVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_GetBrainCodeActorList_self_CastInput) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_GetBrainCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_GetBrainCodeActorList_CodeList) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Array_Index_Variable_2) == 0x0000A8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_GetSASCodeActorList_self_CastInput) == 0x0000B0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_GetSASCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_GetSASCodeActorList_CodeList) == 0x0000C0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Array_Length_ReturnValue_2) == 0x0000D0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, Temp_int_Loop_Counter_Variable_2) == 0x0000D4, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4Parameter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SetMaterialScalarArrayParameter
// 0x0108 (0x0108 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter final
{
public:
	TArray<class FName>                           ParamName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ParamMax;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C1[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C2[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C3[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C4[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerMaterialManageScalar            K2Node_MakeStruct_PlayerMaterialManageScalar;      // 0x0080(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C5[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C6[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetBrainCodeActorList_self_CastInput;     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetSASCodeActorList_self_CastInput;       // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C7[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter) == 0x000108, "Wrong size on BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, ParamName) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Value) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, bPlayer) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, bWeapon) == 0x000021, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, bCable) == 0x000022, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, bCopy) == 0x000023, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, ParamMax) == 0x000024, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::ParamMax' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, LCopyActor) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Num_Variable_1) == 0x00003C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Num_Variable_2) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Variable) == 0x00006C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Min_ReturnValue) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, K2Node_MakeStruct_PlayerMaterialManageScalar) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::K2Node_MakeStruct_PlayerMaterialManageScalar' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_GetBrainCodeActorList_self_CastInput) == 0x0000B0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_GetBrainCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_GetBrainCodeActorList_CodeList) == 0x0000C0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue_3) == 0x0000D0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Counter_Variable_2) == 0x0000D4, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_GetSASCodeActorList_self_CastInput) == 0x0000D8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_GetSASCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_GetSASCodeActorList_CodeList) == 0x0000E8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue_4) == 0x0000F8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000FC, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue_3) == 0x000100, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000104, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SetMaterialVector4ArrayParameter
// 0x0108 (0x0108 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter final
{
public:
	TArray<class FName>                           ParamName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bPlayer;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWeapon;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCable;                                            // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCopy;                                             // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ParamMax;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C8[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerMaterialManageVector            K2Node_MakeStruct_PlayerMaterialManageVector;      // 0x0074(0x001C)(NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63C9[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63CA[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetBrainCodeActorList_self_CastInput;     // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetSASCodeActorList_self_CastInput;       // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63CB[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63CC[0x2];                                     // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter) == 0x000108, "Wrong size on BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, ParamName) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Value) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, bPlayer) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::bPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, bWeapon) == 0x000021, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::bWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, bCable) == 0x000022, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::bCable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, bCopy) == 0x000023, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::bCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, ParamMax) == 0x000024, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::ParamMax' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, LCopyActor) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Array_Index_Variable_2) == 0x000044, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Loop_Num_Variable_1) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Min_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Variable) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, K2Node_MakeStruct_PlayerMaterialManageVector) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::K2Node_MakeStruct_PlayerMaterialManageVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_GetBrainCodeActorList_self_CastInput) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_GetBrainCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_GetBrainCodeActorList_CodeList) == 0x0000B0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_GetSASCodeActorList_self_CastInput) == 0x0000C0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_GetSASCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_GetSASCodeActorList_CodeList) == 0x0000D0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Array_Length_ReturnValue_3) == 0x0000E0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Array_Length_ReturnValue_4) == 0x0000E4, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Loop_Counter_Variable_1) == 0x0000E8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F0, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Loop_Num_Variable_2) == 0x0000F4, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, Temp_int_Loop_Counter_Variable_2) == 0x0000F8, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000FD, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter, CallFunc_Add_IntInt_ReturnValue_3) == 0x000100, "Member 'BP_PlayerMaterialManageComponent_C_SetMaterialVector4ArrayParameter::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.GetMaterialScalarParameter
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Find;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63CD[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerMaterialManageScalar            Value;                                             // 0x000C(0x0010)(Parm, OutParm, NoDestructor)
	uint8                                         Pad_63CE[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerMaterialManageScalar            CallFunc_Map_Find_Value;                           // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter) == 0x000040, "Wrong size on BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter, ParamName) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter, Find) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter::Find' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter, Value) == 0x00000C, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter, LCopyActor) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialScalarParameter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.GetMaterialVectorParameter
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Find;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63CF[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerMaterialManageVector            Value;                                             // 0x000C(0x001C)(Parm, OutParm, NoDestructor)
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerMaterialManageVector            CallFunc_Map_Find_Value;                           // 0x0030(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter) == 0x000050, "Wrong size on BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter, ParamName) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter, Find) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter::Find' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter, Value) == 0x00000C, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter, LCopyActor) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter, CallFunc_Map_Find_ReturnValue) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_GetMaterialVectorParameter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.ResetupMaterialParameter
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter final
{
public:
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D0[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPlayerMaterialManageVector>    CallFunc_Map_Values_Values;                        // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D1[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D2[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FPlayerMaterialManageScalar>    CallFunc_Map_Values_Values_1;                      // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter) == 0x000080, "Wrong size on BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, LCopyActor) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, Temp_int_Loop_Num_Variable_1) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Map_Values_Values) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Map_Keys_Keys_1) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Map_Values_Values_1) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_PlayerMaterialManageComponent_C_ResetupMaterialParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.DumpMaterialParameter
// 0x02E8 (0x02E8 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_DumpMaterialParameter final
{
public:
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D3[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D4[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D5[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D6[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FPlayerMaterialManageVector>    CallFunc_Map_Values_Values;                        // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FPlayerMaterialManageScalar>    CallFunc_Map_Values_Values_1;                      // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ColorToText_ReturnValue;             // 0x0108(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0160(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x01A0(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x01B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0210(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0260(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0270(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0288(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x02C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x02D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_DumpMaterialParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter) == 0x0002E8, "Wrong size on BP_PlayerMaterialManageComponent_C_DumpMaterialParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, LCopyActor) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, Temp_int_Loop_Num_Variable_1) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D8, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Map_Values_Values) == 0x0000E8, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Map_Values_Values_1) == 0x0000F8, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Conv_ColorToText_ReturnValue) == 0x000108, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Conv_ColorToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, K2Node_MakeStruct_FormatArgumentData_2) == 0x000160, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Conv_NameToText_ReturnValue) == 0x0001A0, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0001B8, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001D0, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, K2Node_MakeStruct_FormatArgumentData_4) == 0x000210, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, K2Node_MakeArray_Array_1) == 0x000250, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, K2Node_MakeArray_Array_2) == 0x000260, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Format_ReturnValue_1) == 0x000270, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Format_ReturnValue_2) == 0x000288, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0002A0, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0002B0, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Map_Keys_Keys) == 0x0002C0, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Map_Keys_Keys_1) == 0x0002D0, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Array_Length_ReturnValue) == 0x0002E0, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_DumpMaterialParameter, CallFunc_Array_Length_ReturnValue_1) == 0x0002E4, "Member 'BP_PlayerMaterialManageComponent_C_DumpMaterialParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.EventStart
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_EventStart final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_EventStart) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_EventStart");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_EventStart) == 0x000001, "Wrong size on BP_PlayerMaterialManageComponent_C_EventStart");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EventStart, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_EventStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.EventEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_EventEnd final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_EventEnd) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_EventEnd");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_EventEnd) == 0x000001, "Wrong size on BP_PlayerMaterialManageComponent_C_EventEnd");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_EventEnd, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_EventEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.InitializeLightMaterial
// 0x01B0 (0x01B0 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_InitializeLightMaterial final
{
public:
	TArray<struct FSkeletalMaterial>              SkelMaterials;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         MaterialIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SearchParamName;                                   // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D7[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              TargetMaterialConstant;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     TargetMaterial;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCharacterMaterialLightSettingVectorData> LightVector;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FCharacterMaterialLightSettingScalarData> LightScalar;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   VectorValues;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<float>                                 ScalarValues;                                      // 0x0060(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D8[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D9[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63DA[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63DB[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArrayOfLinearColor                    K2Node_MakeStruct_ArrayOfLinearColor;              // 0x00E0(0x0010)()
	struct FLinearColor                           CallFunc_GetRsVectorParameterValue_OutValue;       // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRsVectorParameterValue_ReturnValue;    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63DC[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63DD[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63DE[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              K2Node_DynamicCast_AsMaterial_Instance_Constant;   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63DF[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              K2Node_DynamicCast_AsMaterial_Instance_Constant_1; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E0[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfFloat                          K2Node_MakeStruct_ArrayOfFloat;                    // 0x0148(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E1[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRsScalarParameterValue_OutValue;       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRsScalarParameterValue_ReturnValue;    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E2[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63E3[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic_1;  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E4[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              K2Node_DynamicCast_AsMaterial_Instance_Constant_2; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E5[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              K2Node_DynamicCast_AsMaterial_Instance_Constant_3; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E6[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E7[0x2];                                     // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_InitializeLightMaterial");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial) == 0x0001B0, "Wrong size on BP_PlayerMaterialManageComponent_C_InitializeLightMaterial");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, SkelMaterials) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::SkelMaterials' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, MaterialIndex) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::MaterialIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, SearchParamName) == 0x000014, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::SearchParamName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, TargetMaterialConstant) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::TargetMaterialConstant' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, TargetMaterial) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::TargetMaterial' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, LightVector) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::LightVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, LightScalar) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::LightScalar' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, VectorValues) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::VectorValues' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, ScalarValues) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::ScalarValues' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Materials) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Materials' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Num_Variable) == 0x000084, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Counter_Variable_1) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Array_Index_Variable_1) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Counter_Variable_2) == 0x00009C, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Num_Variable_1) == 0x0000A4, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Num_Variable_2) == 0x0000A8, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AD, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Num_Variable_3) == 0x0000B0, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Array_Index_Variable_2) == 0x0000B4, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Counter_Variable_3) == 0x0000BC, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C0, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Array_Index_Variable_3) == 0x0000C4, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Num_Variable_4) == 0x0000C8, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000CC, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x0000D4, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_MakeStruct_ArrayOfLinearColor) == 0x0000E0, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_MakeStruct_ArrayOfLinearColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_GetRsVectorParameterValue_OutValue) == 0x0000F0, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_GetRsVectorParameterValue_OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_GetRsVectorParameterValue_ReturnValue) == 0x000100, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_GetRsVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000108, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_SelectColor_ReturnValue) == 0x000114, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_AsMaterial_Instance_Constant) == 0x000128, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_AsMaterial_Instance_Constant' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_AsMaterial_Instance_Constant_1) == 0x000138, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_AsMaterial_Instance_Constant_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Array_Length_ReturnValue_3) == 0x000144, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_MakeStruct_ArrayOfFloat) == 0x000148, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_MakeStruct_ArrayOfFloat' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Loop_Counter_Variable_4) == 0x000158, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Less_IntInt_ReturnValue_4) == 0x00015C, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Add_IntInt_ReturnValue_4) == 0x000160, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, Temp_int_Array_Index_Variable_4) == 0x000164, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_GetRsScalarParameterValue_OutValue) == 0x000168, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_GetRsScalarParameterValue_OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_GetRsScalarParameterValue_ReturnValue) == 0x00016C, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_GetRsScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_SelectFloat_ReturnValue) == 0x000170, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_AsMaterial_Instance_Dynamic_1) == 0x000178, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_AsMaterial_Instance_Dynamic_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_bSuccess_3) == 0x000180, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_AsMaterial_Instance_Constant_2) == 0x000188, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_AsMaterial_Instance_Constant_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_bSuccess_4) == 0x000190, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_AsMaterial_Instance_Constant_3) == 0x000198, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_AsMaterial_Instance_Constant_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, K2Node_DynamicCast_bSuccess_5) == 0x0001A0, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Array_Length_ReturnValue_4) == 0x0001A4, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_IsValid_ReturnValue) == 0x0001A8, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_IsValid_ReturnValue_1) == 0x0001A9, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeLightMaterial, CallFunc_Array_Length_ReturnValue_5) == 0x0001AC, "Member 'BP_PlayerMaterialManageComponent_C_InitializeLightMaterial::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.UpdatePreskinFacial
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial) == 0x000002, "Wrong size on BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerMaterialManageComponent_C_UpdatePreskinFacial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.PreChangeMesh
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_PreChangeMesh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_PreChangeMesh) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_PreChangeMesh");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_PreChangeMesh) == 0x000001, "Wrong size on BP_PlayerMaterialManageComponent_C_PreChangeMesh");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreChangeMesh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_PreChangeMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.PostChangeMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_PostChangeMesh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_SearchMaterialPreSkinFacialNormalSlots_MaterialSlots; // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_PostChangeMesh) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_PostChangeMesh");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_PostChangeMesh) == 0x000018, "Wrong size on BP_PlayerMaterialManageComponent_C_PostChangeMesh");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostChangeMesh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_PostChangeMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostChangeMesh, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerMaterialManageComponent_C_PostChangeMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostChangeMesh, CallFunc_SearchMaterialPreSkinFacialNormalSlots_MaterialSlots) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_PostChangeMesh::CallFunc_SearchMaterialPreSkinFacialNormalSlots_MaterialSlots' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.PostWeaponChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_PostWeaponChanged final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_PostWeaponChanged) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_PostWeaponChanged");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_PostWeaponChanged) == 0x000004, "Wrong size on BP_PlayerMaterialManageComponent_C_PostWeaponChanged");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostWeaponChanged, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_PostWeaponChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostWeaponChanged, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerMaterialManageComponent_C_PostWeaponChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostWeaponChanged, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_PlayerMaterialManageComponent_C_PostWeaponChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostWeaponChanged, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'BP_PlayerMaterialManageComponent_C_PostWeaponChanged::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.PreWeaponChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_PreWeaponChanged final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_PreWeaponChanged) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_PreWeaponChanged");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_PreWeaponChanged) == 0x000003, "Wrong size on BP_PlayerMaterialManageComponent_C_PreWeaponChanged");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreWeaponChanged, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_PreWeaponChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreWeaponChanged, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerMaterialManageComponent_C_PreWeaponChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreWeaponChanged, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_PlayerMaterialManageComponent_C_PreWeaponChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.CompleteRestoreSwitchMaterial
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E9[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63EA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63EB[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial) == 0x000030, "Wrong size on BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_PlayerMaterialManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.PostAttachmentChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_PostAttachmentChanged final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_PostAttachmentChanged) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_PostAttachmentChanged");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_PostAttachmentChanged) == 0x000004, "Wrong size on BP_PlayerMaterialManageComponent_C_PostAttachmentChanged");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostAttachmentChanged, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_PostAttachmentChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostAttachmentChanged, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerMaterialManageComponent_C_PostAttachmentChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostAttachmentChanged, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_PlayerMaterialManageComponent_C_PostAttachmentChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostAttachmentChanged, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'BP_PlayerMaterialManageComponent_C_PostAttachmentChanged::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.InitializeOptimize
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_InitializeOptimize final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63EC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_OptimizeSwitchMaterialPlayer_C*    K2Node_DynamicCast_AsBPC_Optimize_Switch_Material_Player; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_InitializeOptimize) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_InitializeOptimize");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_InitializeOptimize) == 0x000020, "Wrong size on BP_PlayerMaterialManageComponent_C_InitializeOptimize");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeOptimize, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_InitializeOptimize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeOptimize, CallFunc_AddActorComponent_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_InitializeOptimize::CallFunc_AddActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeOptimize, K2Node_DynamicCast_AsBPC_Optimize_Switch_Material_Player) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_InitializeOptimize::K2Node_DynamicCast_AsBPC_Optimize_Switch_Material_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeOptimize, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_InitializeOptimize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_InitializeOptimize, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_PlayerMaterialManageComponent_C_InitializeOptimize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.GetOptimizeMaterialSwitcher
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_GetOptimizeMaterialSwitcher final
{
public:
	class UBPC_OptimizeSwitchMaterial_C*          Param_OptimizeSwitchComp;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_GetOptimizeMaterialSwitcher) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_GetOptimizeMaterialSwitcher");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_GetOptimizeMaterialSwitcher) == 0x000008, "Wrong size on BP_PlayerMaterialManageComponent_C_GetOptimizeMaterialSwitcher");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_GetOptimizeMaterialSwitcher, Param_OptimizeSwitchComp) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_GetOptimizeMaterialSwitcher::Param_OptimizeSwitchComp' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.Finalize
// 0x0003 (0x0003 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_Finalize final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_Finalize) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_Finalize");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_Finalize) == 0x000003, "Wrong size on BP_PlayerMaterialManageComponent_C_Finalize");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Finalize, EndPlayReason) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_Finalize::EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Finalize, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_PlayerMaterialManageComponent_C_Finalize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_Finalize, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PlayerMaterialManageComponent_C_Finalize::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.PreCostumeChanged
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_PreCostumeChanged final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63ED[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_SearchMeshMaterialFromSlot_FindMaterial;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SearchMeshMaterialFromSlot_Index;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisibleMaterial_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_PreCostumeChanged");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged) == 0x000018, "Wrong size on BP_PlayerMaterialManageComponent_C_PreCostumeChanged");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_PreCostumeChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerMaterialManageComponent_C_PreCostumeChanged::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged, CallFunc_SearchMeshMaterialFromSlot_FindMaterial) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_PreCostumeChanged::CallFunc_SearchMeshMaterialFromSlot_FindMaterial' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged, CallFunc_SearchMeshMaterialFromSlot_Index) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_PreCostumeChanged::CallFunc_SearchMeshMaterialFromSlot_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged, CallFunc_IsVisibleMaterial_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialManageComponent_C_PreCostumeChanged::CallFunc_IsVisibleMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BP_PlayerMaterialManageComponent_C_PreCostumeChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged, CallFunc_IsValid_ReturnValue_1) == 0x000016, "Member 'BP_PlayerMaterialManageComponent_C_PreCostumeChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreCostumeChanged, CallFunc_IsValid_ReturnValue_2) == 0x000017, "Member 'BP_PlayerMaterialManageComponent_C_PreCostumeChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.PostCostumeChanged
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_PostCostumeChanged final
{
public:
	class ABP_SASCopyPlayerActor_C*               CopyActor;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63EE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SwitchMaterialExclude_LayerID;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63EF[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList_1;       // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63F0[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SwitchMaterialExclude_LayerID_1;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_PostCostumeChanged");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged) == 0x000078, "Wrong size on BP_PlayerMaterialManageComponent_C_PostCostumeChanged");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CopyActor) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_SwitchMaterialExclude_LayerID) == 0x000024, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_SwitchMaterialExclude_LayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, Temp_int_Loop_Num_Variable_1) == 0x00002C, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Less_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000038, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_GetCopyPlayerList_CopyPlayerList_1) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_GetCopyPlayerList_CopyPlayerList_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000064, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_SwitchMaterialExclude_LayerID_1) == 0x000068, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_SwitchMaterialExclude_LayerID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Array_Add_ReturnValue_1) == 0x00006C, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_IsValid_ReturnValue_1) == 0x000072, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_IsValid_ReturnValue_2) == 0x000073, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_IsValid_ReturnValue_3) == 0x000074, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_IsValid_ReturnValue_4) == 0x000075, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PostCostumeChanged, CallFunc_IsValid_ReturnValue_5) == 0x000076, "Member 'BP_PlayerMaterialManageComponent_C_PostCostumeChanged::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.SetWireNeonParameter
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_SetWireNeonParameter final
{
public:
	TArray<float>                                 ScalarValues;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           ScalarNames;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   VectorValues;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           VectorNames;                                       // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class ABP_SASCopyPlayerActor_C*               LCopyActor;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63F1[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F2[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_SearchMeshMaterialsFromSlot_FindMaterial; // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_SearchMeshMaterialsFromSlot_Index;        // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63F3[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_SearchMeshMaterialsFromSlot_FindMaterial_1; // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_SearchMeshMaterialsFromSlot_Index_1;      // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialManageComponent_C_SetWireNeonParameter");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter) == 0x0000B8, "Wrong size on BP_PlayerMaterialManageComponent_C_SetWireNeonParameter");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, ScalarValues) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::ScalarValues' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, ScalarNames) == 0x000010, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::ScalarNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, VectorValues) == 0x000020, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::VectorValues' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, VectorNames) == 0x000030, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::VectorNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, LCopyActor) == 0x000040, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::LCopyActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000060, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_SearchMeshMaterialsFromSlot_FindMaterial) == 0x000070, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_SearchMeshMaterialsFromSlot_FindMaterial' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_SearchMeshMaterialsFromSlot_Index) == 0x000080, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_SearchMeshMaterialsFromSlot_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_IsValid_ReturnValue_1) == 0x000095, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_SearchMeshMaterialsFromSlot_FindMaterial_1) == 0x000098, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_SearchMeshMaterialsFromSlot_FindMaterial_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_SetWireNeonParameter, CallFunc_SearchMeshMaterialsFromSlot_Index_1) == 0x0000A8, "Member 'BP_PlayerMaterialManageComponent_C_SetWireNeonParameter::CallFunc_SearchMeshMaterialsFromSlot_Index_1' has a wrong offset!");

// Function BP_PlayerMaterialManageComponent.BP_PlayerMaterialManageComponent_C.PreAttachmentChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_PlayerMaterialManageComponent_C_PreAttachmentChanged final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialManageComponent_C_PreAttachmentChanged) == 0x000001, "Wrong alignment on BP_PlayerMaterialManageComponent_C_PreAttachmentChanged");
static_assert(sizeof(BP_PlayerMaterialManageComponent_C_PreAttachmentChanged) == 0x000003, "Wrong size on BP_PlayerMaterialManageComponent_C_PreAttachmentChanged");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreAttachmentChanged, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialManageComponent_C_PreAttachmentChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreAttachmentChanged, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerMaterialManageComponent_C_PreAttachmentChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialManageComponent_C_PreAttachmentChanged, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_PlayerMaterialManageComponent_C_PreAttachmentChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

