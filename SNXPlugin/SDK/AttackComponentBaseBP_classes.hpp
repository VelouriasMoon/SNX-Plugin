#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AttackComponentBaseBP

#include "Basic.hpp"

#include "EWeaponAttackAnimStopType_structs.hpp"
#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "EHologramKind_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AttackComponentBaseBP.AttackComponentBaseBP_C
// 0x00A8 (0x0198 - 0x00F0)
class UAttackComponentBaseBP_C : public UAttackComponentBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ARSBattlePlayer_C*                      OwnerPlayer;                                       // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           SwordMatParamNames;                                // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bBranchFlag;                                       // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreCheckStartAttack;                           // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81ED[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, bool>                       TickEnableList;                                    // 0x0118(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	ERSAttackInputKind                            branchKind;                                        // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpperAttack;                                      // 0x0169(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWithCopy;                                         // 0x016A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCopyOff;                                          // 0x016B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         branchComboCount;                                  // 0x016C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBindMontageBlendingOut;                           // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFallMotion;                                       // 0x0171(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBindEventPlayerTick;                              // 0x0172(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreDriveSpeed;                                 // 0x0173(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECharacterHitPriority                         StoreCharacterHitPriority;                         // 0x0174(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStoreCharacterHitPriority;                        // 0x0175(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bComboCheck;                                       // 0x0176(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNotStopWeaponAnim;                                // 0x0177(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPlayWeaponAnim;                                   // 0x0178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInvalidCancelNotComboEnd;                         // 0x0179(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWeaponAttackAnimStopType                     PlayWeaponAnimStopType;                            // 0x017A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseCustomFootIKUpperHeight;                       // 0x017B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseCustomFootIKUnderHeight;                       // 0x017C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseCustomFootIKHeightDiff;                        // 0x017D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81EE[0x2];                                     // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CustomFootIKUpperHeight;                           // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomFootIKUnderHeight;                           // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomFootIKHeightDiff;                            // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomFootIKUpperHeightSlopeDown;                  // 0x018C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomFootIKUnderHeightSlopeDown;                  // 0x0190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomFootIKHeightDiffSlopeDown;                   // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AttackComponentBaseBP(int32 EntryPoint);
	void OnPlayerTickEvent(float DeltaSeconds);
	void UnbindEventPlayerTick();
	void BindOnPlayerTick();
	void ReceiveBeginPlay();
	void EventMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	void UnbindOnMontageBlendingOut();
	void BindOnMontageBlendingOut();
	void StartSwordFade(bool bin);
	void SetAttackState(int32 Param, class UAnimMontage* Montage, class UAnimMontage* WeaponMontage, bool bAddComboCount, EWeaponAttackAnimStopType WeaponAnimStopType);
	void SetBranchMode(bool bBranch);
	void SetIgnoreCheckStartAttack(bool bIgnore);
	void SpawnEffect(struct FFAttackEffectData& Data);
	void StopEffect(struct FFAttackEffectData& Data);
	void EndAttack(bool* Dummy);
	void EnableTick(class FName ClaimantName, bool bEnable);
	void PreSetAttackState(bool* bDummy);
	void CopyPlayMontage(class UAnimMontage* Montage);
	void CopyStopMontage();
	void IsNameCurrentSection(class FName SearchName, bool* IsMatch);
	void PlayHologramAnimation(EPlayerID PlayerId, class UAnimMontage* Montage, class UAnimMontage* WeaponMontage, bool bHologramRootMotion, int32 MotionIndex, EHologramKind HologramKind);
	void PlayAttackMontage(class UAnimMontage* AnimMontage, class UAnimMontage* UpperAnimMontage, class UAnimMontage* WeaponAnimMontage, float PlayRate, class FName SectionName, EWeaponAttackAnimStopType WeaponAnimStopType);
	void DoEndAttack(bool* bDummy);
	void DoPlayerTick(float DeltaSeconds, bool* bDummy);
	void ChangeCharacterCollisionPriority(ECharacterHitPriority Priority);
	void IsComboCheck(bool* bCombo);
	void ResetFootIKCustomParam();

	void IsReserve(bool* bReserve) const;
	void IsEnableAcceptInputAttack(bool* bEnable) const;
	void IsEnableAttack(bool* bEnable) const;
	void IsBranchMode(bool* Param_bBranchFlag) const;
	void IsIgnoreCheckStartAttack(bool* Param_bIgnoreCheckStartAttack) const;
	void GetCurrentMontage(class UAnimMontage** Montage) const;
	ERSAttackInputKind GetBranchComboAttackInputKind() const;
	int32 GetBranchComboCount() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AttackComponentBaseBP_C">();
	}
	static class UAttackComponentBaseBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAttackComponentBaseBP_C>();
	}
};
static_assert(alignof(UAttackComponentBaseBP_C) == 0x000008, "Wrong alignment on UAttackComponentBaseBP_C");
static_assert(sizeof(UAttackComponentBaseBP_C) == 0x000198, "Wrong size on UAttackComponentBaseBP_C");
static_assert(offsetof(UAttackComponentBaseBP_C, UberGraphFrame) == 0x0000F0, "Member 'UAttackComponentBaseBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, OwnerPlayer) == 0x0000F8, "Member 'UAttackComponentBaseBP_C::OwnerPlayer' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, SwordMatParamNames) == 0x000100, "Member 'UAttackComponentBaseBP_C::SwordMatParamNames' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bBranchFlag) == 0x000110, "Member 'UAttackComponentBaseBP_C::bBranchFlag' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bIgnoreCheckStartAttack) == 0x000111, "Member 'UAttackComponentBaseBP_C::bIgnoreCheckStartAttack' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, TickEnableList) == 0x000118, "Member 'UAttackComponentBaseBP_C::TickEnableList' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, branchKind) == 0x000168, "Member 'UAttackComponentBaseBP_C::branchKind' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bUpperAttack) == 0x000169, "Member 'UAttackComponentBaseBP_C::bUpperAttack' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bWithCopy) == 0x00016A, "Member 'UAttackComponentBaseBP_C::bWithCopy' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bCopyOff) == 0x00016B, "Member 'UAttackComponentBaseBP_C::bCopyOff' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, branchComboCount) == 0x00016C, "Member 'UAttackComponentBaseBP_C::branchComboCount' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bBindMontageBlendingOut) == 0x000170, "Member 'UAttackComponentBaseBP_C::bBindMontageBlendingOut' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bFallMotion) == 0x000171, "Member 'UAttackComponentBaseBP_C::bFallMotion' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bBindEventPlayerTick) == 0x000172, "Member 'UAttackComponentBaseBP_C::bBindEventPlayerTick' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bIgnoreDriveSpeed) == 0x000173, "Member 'UAttackComponentBaseBP_C::bIgnoreDriveSpeed' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, StoreCharacterHitPriority) == 0x000174, "Member 'UAttackComponentBaseBP_C::StoreCharacterHitPriority' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bStoreCharacterHitPriority) == 0x000175, "Member 'UAttackComponentBaseBP_C::bStoreCharacterHitPriority' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bComboCheck) == 0x000176, "Member 'UAttackComponentBaseBP_C::bComboCheck' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bNotStopWeaponAnim) == 0x000177, "Member 'UAttackComponentBaseBP_C::bNotStopWeaponAnim' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bPlayWeaponAnim) == 0x000178, "Member 'UAttackComponentBaseBP_C::bPlayWeaponAnim' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bInvalidCancelNotComboEnd) == 0x000179, "Member 'UAttackComponentBaseBP_C::bInvalidCancelNotComboEnd' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, PlayWeaponAnimStopType) == 0x00017A, "Member 'UAttackComponentBaseBP_C::PlayWeaponAnimStopType' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bUseCustomFootIKUpperHeight) == 0x00017B, "Member 'UAttackComponentBaseBP_C::bUseCustomFootIKUpperHeight' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bUseCustomFootIKUnderHeight) == 0x00017C, "Member 'UAttackComponentBaseBP_C::bUseCustomFootIKUnderHeight' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, bUseCustomFootIKHeightDiff) == 0x00017D, "Member 'UAttackComponentBaseBP_C::bUseCustomFootIKHeightDiff' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, CustomFootIKUpperHeight) == 0x000180, "Member 'UAttackComponentBaseBP_C::CustomFootIKUpperHeight' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, CustomFootIKUnderHeight) == 0x000184, "Member 'UAttackComponentBaseBP_C::CustomFootIKUnderHeight' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, CustomFootIKHeightDiff) == 0x000188, "Member 'UAttackComponentBaseBP_C::CustomFootIKHeightDiff' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, CustomFootIKUpperHeightSlopeDown) == 0x00018C, "Member 'UAttackComponentBaseBP_C::CustomFootIKUpperHeightSlopeDown' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, CustomFootIKUnderHeightSlopeDown) == 0x000190, "Member 'UAttackComponentBaseBP_C::CustomFootIKUnderHeightSlopeDown' has a wrong offset!");
static_assert(offsetof(UAttackComponentBaseBP_C, CustomFootIKHeightDiffSlopeDown) == 0x000194, "Member 'UAttackComponentBaseBP_C::CustomFootIKHeightDiffSlopeDown' has a wrong offset!");

}

