#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponBase

#include "Basic.hpp"

#include "ECharaExecuteNotifyKind_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_SASKind_structs.hpp"


namespace SDK::Params
{

// Function BP_WeaponBase.BP_WeaponBase_C.DispatchThrowHit__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_WeaponBase_C_DispatchThrowHit__DelegateSignature final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_DispatchThrowHit__DelegateSignature) == 0x000004, "Wrong alignment on BP_WeaponBase_C_DispatchThrowHit__DelegateSignature");
static_assert(sizeof(BP_WeaponBase_C_DispatchThrowHit__DelegateSignature) == 0x00000C, "Wrong size on BP_WeaponBase_C_DispatchThrowHit__DelegateSignature");
static_assert(offsetof(BP_WeaponBase_C_DispatchThrowHit__DelegateSignature, HitLocation) == 0x000000, "Member 'BP_WeaponBase_C_DispatchThrowHit__DelegateSignature::HitLocation' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ExecuteUbergraph_BP_WeaponBase
// 0x001C (0x001C - 0x0000)
struct BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8243[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8244[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_bDummy;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase) == 0x000004, "Wrong alignment on BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase");
static_assert(sizeof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase) == 0x00001C, "Wrong size on BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase");
static_assert(offsetof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase, EntryPoint) == 0x000000, "Member 'BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase, Temp_bool_Variable) == 0x000004, "Member 'BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase, CallFunc_GetActorDeltaSeconds_ReturnValue) == 0x00000C, "Member 'BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase::CallFunc_GetActorDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase, K2Node_Select_Default) == 0x000014, "Member 'BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase, CallFunc_Initialize_bDummy) == 0x000018, "Member 'BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase::CallFunc_Initialize_bDummy' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WeaponBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WeaponBase_C_ReceiveTick");
static_assert(sizeof(BP_WeaponBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_WeaponBase_C_ReceiveTick");
static_assert(offsetof(BP_WeaponBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WeaponBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.TakeBackOwner
// 0x0008 (0x0008 - 0x0000)
struct BP_WeaponBase_C_TakeBackOwner final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_TakeBackOwner) == 0x000004, "Wrong alignment on BP_WeaponBase_C_TakeBackOwner");
static_assert(sizeof(BP_WeaponBase_C_TakeBackOwner) == 0x000008, "Wrong size on BP_WeaponBase_C_TakeBackOwner");
static_assert(offsetof(BP_WeaponBase_C_TakeBackOwner, Time) == 0x000000, "Member 'BP_WeaponBase_C_TakeBackOwner::Time' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackOwner, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_WeaponBase_C_TakeBackOwner::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ThrowToPoint
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponBase_C_ThrowToPoint final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetPoint;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_ThrowToPoint) == 0x000004, "Wrong alignment on BP_WeaponBase_C_ThrowToPoint");
static_assert(sizeof(BP_WeaponBase_C_ThrowToPoint) == 0x000010, "Wrong size on BP_WeaponBase_C_ThrowToPoint");
static_assert(offsetof(BP_WeaponBase_C_ThrowToPoint, Speed) == 0x000000, "Member 'BP_WeaponBase_C_ThrowToPoint::Speed' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowToPoint, TargetPoint) == 0x000004, "Member 'BP_WeaponBase_C_ThrowToPoint::TargetPoint' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ThrowToTarget
// 0x0018 (0x0018 - 0x0000)
struct BP_WeaponBase_C_ThrowToTarget final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8245[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CheckHeightOnGround;                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_ThrowToTarget) == 0x000008, "Wrong alignment on BP_WeaponBase_C_ThrowToTarget");
static_assert(sizeof(BP_WeaponBase_C_ThrowToTarget) == 0x000018, "Wrong size on BP_WeaponBase_C_ThrowToTarget");
static_assert(offsetof(BP_WeaponBase_C_ThrowToTarget, Speed) == 0x000000, "Member 'BP_WeaponBase_C_ThrowToTarget::Speed' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowToTarget, TargetActor) == 0x000008, "Member 'BP_WeaponBase_C_ThrowToTarget::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowToTarget, CheckHeightOnGround) == 0x000010, "Member 'BP_WeaponBase_C_ThrowToTarget::CheckHeightOnGround' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowToTarget, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_WeaponBase_C_ThrowToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ThrowUpdate
// 0x0418 (0x0418 - 0x0000)
struct BP_WeaponBase_C_ThrowUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             LElement;                                          // 0x0004(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                LThrowPoint;                                       // 0x008C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LLength;                                           // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LSocketLocation;                                   // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LSpeed;                                            // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LDist;                                             // 0x00AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8246[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0174(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8247[0x2];                                     // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8248[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8249[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_824A[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_824B[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0258(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0268(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_824C[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0280(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_824D[0x2];                                     // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_824E[0x2];                                     // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x034C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_824F[0x3];                                     // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetThrowPoint_Point;                      // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromY_ReturnValue;                 // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_ThrowUpdate) == 0x000008, "Wrong alignment on BP_WeaponBase_C_ThrowUpdate");
static_assert(sizeof(BP_WeaponBase_C_ThrowUpdate) == 0x000418, "Wrong size on BP_WeaponBase_C_ThrowUpdate");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, DeltaTime) == 0x000000, "Member 'BP_WeaponBase_C_ThrowUpdate::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, LElement) == 0x000004, "Member 'BP_WeaponBase_C_ThrowUpdate::LElement' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, LThrowPoint) == 0x00008C, "Member 'BP_WeaponBase_C_ThrowUpdate::LThrowPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, LLength) == 0x000098, "Member 'BP_WeaponBase_C_ThrowUpdate::LLength' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, LSocketLocation) == 0x00009C, "Member 'BP_WeaponBase_C_ThrowUpdate::LSocketLocation' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, LSpeed) == 0x0000A8, "Member 'BP_WeaponBase_C_ThrowUpdate::LSpeed' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, LDist) == 0x0000AC, "Member 'BP_WeaponBase_C_ThrowUpdate::LDist' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BP_WeaponBase_C_ThrowUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_bBlockingHit) == 0x0000BC, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000BD, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_Time) == 0x0000C0, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_Distance) == 0x0000C4, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_Location) == 0x0000C8, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D4, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_Normal) == 0x0000E0, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_ImpactNormal) == 0x0000EC, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_HitBoneName) == 0x000110, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_HitItem) == 0x000118, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_FaceIndex) == 0x00011C, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_TraceStart) == 0x000120, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BreakHitResult_TraceEnd) == 0x00012C, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000138, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000144, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000150, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00015C, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Add_VectorVector_ReturnValue) == 0x000168, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000174, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0001FC, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001FD, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000200, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Normal_ReturnValue) == 0x00020C, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000218, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, K2Node_MakeArray_Array) == 0x000228, "Member 'BP_WeaponBase_C_ThrowUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_IsValid_ReturnValue) == 0x000238, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_VSize_ReturnValue) == 0x00023C, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000240, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000241, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_GetSocketLocation_ReturnValue) == 0x000244, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, K2Node_SwitchEnum_CmpSuccess) == 0x000250, "Member 'BP_WeaponBase_C_ThrowUpdate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, Temp_object_Variable) == 0x000258, "Member 'BP_WeaponBase_C_ThrowUpdate::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000268, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x000278, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, Temp_int_Loop_Counter_Variable) == 0x00027C, "Member 'BP_WeaponBase_C_ThrowUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Array_Get_Item) == 0x000280, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000308, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Array_Length_ReturnValue) == 0x00030C, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000310, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, Temp_bool_True_if_break_was_hit_Variable) == 0x000311, "Member 'BP_WeaponBase_C_ThrowUpdate::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000314, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x000320, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_BooleanAND_ReturnValue) == 0x000321, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Normal_ReturnValue_1) == 0x000324, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000330, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00033C, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000348, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x00034C, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x0003D4, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0003D8, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_GetThrowPoint_Point) == 0x0003E4, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_GetThrowPoint_Point' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003F0, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0003FC, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowUpdate, CallFunc_MakeRotFromY_ReturnValue) == 0x000408, "Member 'BP_WeaponBase_C_ThrowUpdate::CallFunc_MakeRotFromY_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ThrowStart
// 0x0028 (0x0028 - 0x0000)
struct BP_WeaponBase_C_ThrowStart final
{
public:
	EWeaponThrowType                              Param_ThrowType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8250[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CheckHeightOnGround;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8251[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAttachParentSocketName_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_ThrowStart) == 0x000008, "Wrong alignment on BP_WeaponBase_C_ThrowStart");
static_assert(sizeof(BP_WeaponBase_C_ThrowStart) == 0x000028, "Wrong size on BP_WeaponBase_C_ThrowStart");
static_assert(offsetof(BP_WeaponBase_C_ThrowStart, Param_ThrowType) == 0x000000, "Member 'BP_WeaponBase_C_ThrowStart::Param_ThrowType' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowStart, CheckHeightOnGround) == 0x000004, "Member 'BP_WeaponBase_C_ThrowStart::CheckHeightOnGround' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowStart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_WeaponBase_C_ThrowStart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowStart, CallFunc_GetAttachParent_ReturnValue) == 0x000018, "Member 'BP_WeaponBase_C_ThrowStart::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ThrowStart, CallFunc_GetAttachParentSocketName_ReturnValue) == 0x000020, "Member 'BP_WeaponBase_C_ThrowStart::CallFunc_GetAttachParentSocketName_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.Attach
// 0x00E0 (0x00E0 - 0x0000)
struct BP_WeaponBase_C_Attach final
{
public:
	class ARSBattlePlayer_C*                      Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8252[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetAttachTransform_Transform;             // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoAttachAfter_bDummy;                     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_Attach) == 0x000010, "Wrong alignment on BP_WeaponBase_C_Attach");
static_assert(sizeof(BP_WeaponBase_C_Attach) == 0x0000E0, "Wrong size on BP_WeaponBase_C_Attach");
static_assert(offsetof(BP_WeaponBase_C_Attach, Param_Owner) == 0x000000, "Member 'BP_WeaponBase_C_Attach::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_Attach, Component) == 0x000008, "Member 'BP_WeaponBase_C_Attach::Component' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_Attach, SocketName) == 0x000010, "Member 'BP_WeaponBase_C_Attach::SocketName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_Attach, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_WeaponBase_C_Attach::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_Attach, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_WeaponBase_C_Attach::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_Attach, CallFunc_GetAttachTransform_Transform) == 0x000020, "Member 'BP_WeaponBase_C_Attach::CallFunc_GetAttachTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_Attach, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000050, "Member 'BP_WeaponBase_C_Attach::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_Attach, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D8, "Member 'BP_WeaponBase_C_Attach::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_Attach, CallFunc_DoAttachAfter_bDummy) == 0x0000D9, "Member 'BP_WeaponBase_C_Attach::CallFunc_DoAttachAfter_bDummy' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ThrowEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_WeaponBase_C_ThrowEnd final
{
public:
	bool                                          bAttach;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_ThrowEnd) == 0x000001, "Wrong alignment on BP_WeaponBase_C_ThrowEnd");
static_assert(sizeof(BP_WeaponBase_C_ThrowEnd) == 0x000001, "Wrong size on BP_WeaponBase_C_ThrowEnd");
static_assert(offsetof(BP_WeaponBase_C_ThrowEnd, bAttach) == 0x000000, "Member 'BP_WeaponBase_C_ThrowEnd::bAttach' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.TakeBackUpdate
// 0x0190 (0x0190 - 0x0000)
struct BP_WeaponBase_C_TakeBackUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnd;                                              // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8253[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8254[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetAttachTransform_Transform;             // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8255[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_TakeBackUpdate) == 0x000010, "Wrong alignment on BP_WeaponBase_C_TakeBackUpdate");
static_assert(sizeof(BP_WeaponBase_C_TakeBackUpdate) == 0x000190, "Wrong size on BP_WeaponBase_C_TakeBackUpdate");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, DeltaTime) == 0x000000, "Member 'BP_WeaponBase_C_TakeBackUpdate::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, bEnd) == 0x000004, "Member 'BP_WeaponBase_C_TakeBackUpdate::bEnd' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_GetRate_ReturnValue) == 0x000008, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_GetSocketTransform_ReturnValue) == 0x000040, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_GetAttachTransform_Transform) == 0x000070, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_GetAttachTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_ComposeTransforms_ReturnValue) == 0x0000A0, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_TLerp_ReturnValue) == 0x0000D0, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_IsOver_ReturnValue) == 0x000100, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000104, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00018C, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_DoesSocketExist_ReturnValue) == 0x00018D, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_TakeBackUpdate, CallFunc_IsValid_ReturnValue) == 0x00018E, "Member 'BP_WeaponBase_C_TakeBackUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetBattleEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_WeaponBase_C_SetBattleEffect final
{
public:
	bool                                          bON;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESequencerDilationOwner                       Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESequencerDilationOwner                       Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESequencerDilationOwner                       K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8256[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_SetBattleEffect) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetBattleEffect");
static_assert(sizeof(BP_WeaponBase_C_SetBattleEffect) == 0x000018, "Wrong size on BP_WeaponBase_C_SetBattleEffect");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, bON) == 0x000000, "Member 'BP_WeaponBase_C_SetBattleEffect::bON' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, Temp_bool_Variable) == 0x000001, "Member 'BP_WeaponBase_C_SetBattleEffect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_WeaponBase_C_SetBattleEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_WeaponBase_C_SetBattleEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'BP_WeaponBase_C_SetBattleEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, Temp_byte_Variable) == 0x000005, "Member 'BP_WeaponBase_C_SetBattleEffect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, Temp_byte_Variable_1) == 0x000006, "Member 'BP_WeaponBase_C_SetBattleEffect::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, K2Node_Select_Default) == 0x000007, "Member 'BP_WeaponBase_C_SetBattleEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, CallFunc_IsValid_ReturnValue_2) == 0x000008, "Member 'BP_WeaponBase_C_SetBattleEffect::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, CallFunc_IsValid_ReturnValue_3) == 0x000009, "Member 'BP_WeaponBase_C_SetBattleEffect::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEffect, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_C_SetBattleEffect::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetWeaponVisibility
// 0x0030 (0x0030 - 0x0000)
struct BP_WeaponBase_C_SetWeaponVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8257[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8258[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_SetWeaponVisibility) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetWeaponVisibility");
static_assert(sizeof(BP_WeaponBase_C_SetWeaponVisibility) == 0x000030, "Wrong size on BP_WeaponBase_C_SetWeaponVisibility");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponVisibility, bVisible) == 0x000000, "Member 'BP_WeaponBase_C_SetWeaponVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WeaponBase_C_SetWeaponVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponVisibility, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_WeaponBase_C_SetWeaponVisibility::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponVisibility, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_WeaponBase_C_SetWeaponVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_C_SetWeaponVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponBase_C_SetWeaponVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponVisibility, CallFunc_GetExtraMesh_ExtraMesh) == 0x000018, "Member 'BP_WeaponBase_C_SetWeaponVisibility::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponVisibility, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_WeaponBase_C_SetWeaponVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.Initialize
// 0x0001 (0x0001 - 0x0000)
struct BP_WeaponBase_C_Initialize final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_Initialize) == 0x000001, "Wrong alignment on BP_WeaponBase_C_Initialize");
static_assert(sizeof(BP_WeaponBase_C_Initialize) == 0x000001, "Wrong size on BP_WeaponBase_C_Initialize");
static_assert(offsetof(BP_WeaponBase_C_Initialize, bDummy) == 0x000000, "Member 'BP_WeaponBase_C_Initialize::bDummy' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetMaterialColor_PsychicEmission
// 0x0098 (0x0098 - 0x0000)
struct BP_WeaponBase_C_SetMaterialColor_PsychicEmission final
{
public:
	float                                         R;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         G;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ClaimantName;                                      // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8259[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               LElement;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LIndex;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_825A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_825B[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_825C[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetMaterialColor_PsychicEmission");
static_assert(sizeof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission) == 0x000098, "Wrong size on BP_WeaponBase_C_SetMaterialColor_PsychicEmission");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, R) == 0x000000, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::R' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, G) == 0x000004, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::G' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, B) == 0x000008, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::B' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, ClaimantName) == 0x00000C, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, LElement) == 0x000018, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::LElement' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, LIndex) == 0x000020, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::LIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000034, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, K2Node_MakeStruct_LinearColor) == 0x000050, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, K2Node_MakeStruct_LinearColor_1) == 0x000060, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Array_Find_ReturnValue) == 0x000078, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, CallFunc_Array_LastIndex_ReturnValue) == 0x000084, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialColor_PsychicEmission, K2Node_MakeStruct_LinearColor_2) == 0x000088, "Member 'BP_WeaponBase_C_SetMaterialColor_PsychicEmission::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetMaterialAlpha_PsychicEmission
// 0x0070 (0x0070 - 0x0000)
struct BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ClaimantName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_825D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               LElement;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LIndex;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_825E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_825F[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8260[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission");
static_assert(sizeof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission) == 0x000070, "Wrong size on BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, Alpha) == 0x000000, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::Alpha' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, ClaimantName) == 0x000004, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, LElement) == 0x000010, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::LElement' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, LIndex) == 0x000018, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::LIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000030, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Array_Add_ReturnValue_1) == 0x00004C, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Array_Find_ReturnValue) == 0x000050, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, CallFunc_Array_LastIndex_ReturnValue) == 0x00005C, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission, K2Node_MakeStruct_LinearColor) == 0x000060, "Member 'BP_WeaponBase_C_SetMaterialAlpha_PsychicEmission::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ResetMaterialColor_PsychicEmission
// 0x0060 (0x0060 - 0x0000)
struct BP_WeaponBase_C_ResetMaterialColor_PsychicEmission final
{
public:
	class FName                                   ClaimantName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LElement;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8261[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8262[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8263[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission) == 0x000008, "Wrong alignment on BP_WeaponBase_C_ResetMaterialColor_PsychicEmission");
static_assert(sizeof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission) == 0x000060, "Wrong size on BP_WeaponBase_C_ResetMaterialColor_PsychicEmission");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, ClaimantName) == 0x000000, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, LElement) == 0x000008, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::LElement' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, Param_Index) == 0x000010, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x00001C, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, K2Node_MakeStruct_LinearColor) == 0x000044, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialColor_PsychicEmission, CallFunc_Array_Find_ReturnValue) == 0x00005C, "Member 'BP_WeaponBase_C_ResetMaterialColor_PsychicEmission::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ResetMaterialAlpha_PsychicEmission
// 0x0060 (0x0060 - 0x0000)
struct BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission final
{
public:
	class FName                                   ClaimantName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LElement;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8264[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8265[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission) == 0x000008, "Wrong alignment on BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission");
static_assert(sizeof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission) == 0x000060, "Wrong size on BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, ClaimantName) == 0x000000, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, LElement) == 0x000008, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::LElement' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, Param_Index) == 0x000010, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000020, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, K2Node_MakeStruct_LinearColor) == 0x00003C, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission, CallFunc_Array_Find_ReturnValue) == 0x000058, "Member 'BP_WeaponBase_C_ResetMaterialAlpha_PsychicEmission::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetWeaponMaterialScalarParameter
// 0x0058 (0x0058 - 0x0000)
struct BP_WeaponBase_C_SetWeaponMaterialScalarParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExtraMaterial;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8266[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8267[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_GetExtraMaterialInstanceArray_MaterialInstance; // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8268[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetWeaponMaterialScalarParameter");
static_assert(sizeof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter) == 0x000058, "Wrong size on BP_WeaponBase_C_SetWeaponMaterialScalarParameter");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, ParamName) == 0x000000, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, Value) == 0x000008, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, bExtraMaterial) == 0x00000C, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::bExtraMaterial' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, bDummy) == 0x00000D, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, CallFunc_GetExtraMaterialInstanceArray_MaterialInstance) == 0x000030, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::CallFunc_GetExtraMaterialInstanceArray_MaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetLoopAnim
// 0x0018 (0x0018 - 0x0000)
struct BP_WeaponBase_C_SetLoopAnim final
{
public:
	bool                                          bBattle;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8269[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_SetLoopAnim) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetLoopAnim");
static_assert(sizeof(BP_WeaponBase_C_SetLoopAnim) == 0x000018, "Wrong size on BP_WeaponBase_C_SetLoopAnim");
static_assert(offsetof(BP_WeaponBase_C_SetLoopAnim, bBattle) == 0x000000, "Member 'BP_WeaponBase_C_SetLoopAnim::bBattle' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetLoopAnim, Temp_bool_Variable) == 0x000001, "Member 'BP_WeaponBase_C_SetLoopAnim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetLoopAnim, K2Node_Select_Default) == 0x000008, "Member 'BP_WeaponBase_C_SetLoopAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetLoopAnim, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_C_SetLoopAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetTransAnim
// 0x0018 (0x0018 - 0x0000)
struct BP_WeaponBase_C_SetTransAnim final
{
public:
	bool                                          bBattle;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_826A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_SetTransAnim) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetTransAnim");
static_assert(sizeof(BP_WeaponBase_C_SetTransAnim) == 0x000018, "Wrong size on BP_WeaponBase_C_SetTransAnim");
static_assert(offsetof(BP_WeaponBase_C_SetTransAnim, bBattle) == 0x000000, "Member 'BP_WeaponBase_C_SetTransAnim::bBattle' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetTransAnim, Temp_bool_Variable) == 0x000001, "Member 'BP_WeaponBase_C_SetTransAnim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetTransAnim, K2Node_Select_Default) == 0x000008, "Member 'BP_WeaponBase_C_SetTransAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetTransAnim, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_C_SetTransAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetBattleEmission
// 0x0008 (0x0008 - 0x0000)
struct BP_WeaponBase_C_SetBattleEmission final
{
public:
	bool                                          Force_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Flag_in;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_826B[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lerp_time_in;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_SetBattleEmission) == 0x000004, "Wrong alignment on BP_WeaponBase_C_SetBattleEmission");
static_assert(sizeof(BP_WeaponBase_C_SetBattleEmission) == 0x000008, "Wrong size on BP_WeaponBase_C_SetBattleEmission");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEmission, Force_in) == 0x000000, "Member 'BP_WeaponBase_C_SetBattleEmission::Force_in' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEmission, Flag_in) == 0x000001, "Member 'BP_WeaponBase_C_SetBattleEmission::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetBattleEmission, Lerp_time_in) == 0x000004, "Member 'BP_WeaponBase_C_SetBattleEmission::Lerp_time_in' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.UpdateBattleEmission
// 0x0040 (0x0040 - 0x0000)
struct BP_WeaponBase_C_UpdateBattleEmission final
{
public:
	float                                         EmissionAlpha;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_826C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerFixParamater_C*               CallFunc_GetPlayerFixParam_Param;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_826D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_826E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_826F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_UpdateBattleEmission) == 0x000008, "Wrong alignment on BP_WeaponBase_C_UpdateBattleEmission");
static_assert(sizeof(BP_WeaponBase_C_UpdateBattleEmission) == 0x000040, "Wrong size on BP_WeaponBase_C_UpdateBattleEmission");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, EmissionAlpha) == 0x000000, "Member 'BP_WeaponBase_C_UpdateBattleEmission::EmissionAlpha' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_GetPlayerFixParam_Param) == 0x000008, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_GetPlayerFixParam_Param' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, Temp_bool_Variable) == 0x000010, "Member 'BP_WeaponBase_C_UpdateBattleEmission::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_SelectFloat_ReturnValue) == 0x000014, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_GetActorDeltaSeconds_ReturnValue) == 0x00002C, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_GetActorDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, K2Node_Select_Default) == 0x000034, "Member 'BP_WeaponBase_C_UpdateBattleEmission::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_UpdateBattleEmission, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_WeaponBase_C_UpdateBattleEmission::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetWeaponMaterialScalarArrayParameter
// 0x0068 (0x0068 - 0x0000)
struct BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter final
{
public:
	TArray<class FName>                           ParamName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bExtraMaterial;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8270[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8271[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_GetExtraMaterialInstanceArray_MaterialInstance; // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8272[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter");
static_assert(sizeof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter) == 0x000068, "Wrong size on BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, ParamName) == 0x000000, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, Value) == 0x000010, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, bExtraMaterial) == 0x000020, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::bExtraMaterial' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, bDummy) == 0x000021, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, Temp_int_Variable) == 0x000024, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, Temp_int_Variable_1) == 0x000028, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_GetExtraMaterialInstanceArray_MaterialInstance) == 0x000038, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_GetExtraMaterialInstanceArray_MaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_WeaponBase_C_SetWeaponMaterialScalarArrayParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetWeaponMaterialVectorParameter
// 0x0060 (0x0060 - 0x0000)
struct BP_WeaponBase_C_SetWeaponMaterialVectorParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExtraMaterial;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8273[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8274[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_GetExtraMaterialInstanceArray_MaterialInstance; // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8275[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetWeaponMaterialVectorParameter");
static_assert(sizeof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter) == 0x000060, "Wrong size on BP_WeaponBase_C_SetWeaponMaterialVectorParameter");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, ParameterName) == 0x000000, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, Color) == 0x000008, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::Color' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, bExtraMaterial) == 0x000018, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::bExtraMaterial' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, bDummy) == 0x000019, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, CallFunc_GetExtraMaterialInstanceArray_MaterialInstance) == 0x000038, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::CallFunc_GetExtraMaterialInstanceArray_MaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, Temp_int_Loop_Num_Variable_1) == 0x000054, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorParameter, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetWeaponMaterialVectorArrayParameter
// 0x0068 (0x0068 - 0x0000)
struct BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter final
{
public:
	TArray<class FName>                           ParameterName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   Color;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bExtraMaterial;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8276[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8277[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_GetExtraMaterialInstanceArray_MaterialInstance; // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8278[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter) == 0x000008, "Wrong alignment on BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter");
static_assert(sizeof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter) == 0x000068, "Wrong size on BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, ParameterName) == 0x000000, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, Color) == 0x000010, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::Color' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, bExtraMaterial) == 0x000020, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::bExtraMaterial' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, bDummy) == 0x000021, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, Temp_int_Variable) == 0x000024, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, Temp_int_Variable_1) == 0x00002C, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_GetExtraMaterialInstanceArray_MaterialInstance) == 0x000038, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_GetExtraMaterialInstanceArray_MaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_WeaponBase_C_SetWeaponMaterialVectorArrayParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetMaterial_Emissive
// 0x0008 (0x0008 - 0x0000)
struct BP_WeaponBase_C_SetMaterial_Emissive final
{
public:
	float                                         Emissive;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetWeaponMaterialScalarParameter_bDummy;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_SetMaterial_Emissive) == 0x000004, "Wrong alignment on BP_WeaponBase_C_SetMaterial_Emissive");
static_assert(sizeof(BP_WeaponBase_C_SetMaterial_Emissive) == 0x000008, "Wrong size on BP_WeaponBase_C_SetMaterial_Emissive");
static_assert(offsetof(BP_WeaponBase_C_SetMaterial_Emissive, Emissive) == 0x000000, "Member 'BP_WeaponBase_C_SetMaterial_Emissive::Emissive' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterial_Emissive, CallFunc_SetWeaponMaterialScalarParameter_bDummy) == 0x000004, "Member 'BP_WeaponBase_C_SetMaterial_Emissive::CallFunc_SetWeaponMaterialScalarParameter_bDummy' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetMaterial_EmissiveColor
// 0x0014 (0x0014 - 0x0000)
struct BP_WeaponBase_C_SetMaterial_EmissiveColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetWeaponMaterialVectorParameter_bDummy;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_SetMaterial_EmissiveColor) == 0x000004, "Wrong alignment on BP_WeaponBase_C_SetMaterial_EmissiveColor");
static_assert(sizeof(BP_WeaponBase_C_SetMaterial_EmissiveColor) == 0x000014, "Wrong size on BP_WeaponBase_C_SetMaterial_EmissiveColor");
static_assert(offsetof(BP_WeaponBase_C_SetMaterial_EmissiveColor, Color) == 0x000000, "Member 'BP_WeaponBase_C_SetMaterial_EmissiveColor::Color' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterial_EmissiveColor, CallFunc_SetWeaponMaterialVectorParameter_bDummy) == 0x000010, "Member 'BP_WeaponBase_C_SetMaterial_EmissiveColor::CallFunc_SetWeaponMaterialVectorParameter_bDummy' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetMaterial_EmissiveColorType
// 0x0018 (0x0018 - 0x0000)
struct BP_WeaponBase_C_SetMaterial_EmissiveColorType final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetWeaponMaterialScalarParameter_bDummy;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8279[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_SetMaterial_EmissiveColorType) == 0x000004, "Wrong alignment on BP_WeaponBase_C_SetMaterial_EmissiveColorType");
static_assert(sizeof(BP_WeaponBase_C_SetMaterial_EmissiveColorType) == 0x000018, "Wrong size on BP_WeaponBase_C_SetMaterial_EmissiveColorType");
static_assert(offsetof(BP_WeaponBase_C_SetMaterial_EmissiveColorType, SasKind) == 0x000000, "Member 'BP_WeaponBase_C_SetMaterial_EmissiveColorType::SasKind' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterial_EmissiveColorType, CallFunc_SetWeaponMaterialScalarParameter_bDummy) == 0x000001, "Member 'BP_WeaponBase_C_SetMaterial_EmissiveColorType::CallFunc_SetWeaponMaterialScalarParameter_bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterial_EmissiveColorType, CallFunc_Map_Find_Value) == 0x000004, "Member 'BP_WeaponBase_C_SetMaterial_EmissiveColorType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetMaterial_EmissiveColorType, CallFunc_Map_Find_ReturnValue) == 0x000014, "Member 'BP_WeaponBase_C_SetMaterial_EmissiveColorType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ResetMaterial_EmissiveColorType
// 0x0002 (0x0002 - 0x0000)
struct BP_WeaponBase_C_ResetMaterial_EmissiveColorType final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_ResetMaterial_EmissiveColorType) == 0x000001, "Wrong alignment on BP_WeaponBase_C_ResetMaterial_EmissiveColorType");
static_assert(sizeof(BP_WeaponBase_C_ResetMaterial_EmissiveColorType) == 0x000002, "Wrong size on BP_WeaponBase_C_ResetMaterial_EmissiveColorType");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterial_EmissiveColorType, SasKind) == 0x000000, "Member 'BP_WeaponBase_C_ResetMaterial_EmissiveColorType::SasKind' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterial_EmissiveColorType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_WeaponBase_C_ResetMaterial_EmissiveColorType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.SetWeaponTickEnabled
// 0x0018 (0x0018 - 0x0000)
struct BP_WeaponBase_C_SetWeaponTickEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_827A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClaimantName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_827B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_SetWeaponTickEnabled) == 0x000004, "Wrong alignment on BP_WeaponBase_C_SetWeaponTickEnabled");
static_assert(sizeof(BP_WeaponBase_C_SetWeaponTickEnabled) == 0x000018, "Wrong size on BP_WeaponBase_C_SetWeaponTickEnabled");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponTickEnabled, bEnabled) == 0x000000, "Member 'BP_WeaponBase_C_SetWeaponTickEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponTickEnabled, ClaimantName) == 0x000004, "Member 'BP_WeaponBase_C_SetWeaponTickEnabled::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponTickEnabled, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'BP_WeaponBase_C_SetWeaponTickEnabled::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponTickEnabled, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_C_SetWeaponTickEnabled::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_SetWeaponTickEnabled, CallFunc_Array_RemoveItem_ReturnValue) == 0x000014, "Member 'BP_WeaponBase_C_SetWeaponTickEnabled::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.GetExtraMaterialInstanceArray
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponBase_C_GetExtraMaterialInstanceArray final
{
public:
	TArray<class UMaterialInstanceDynamic*>       MaterialInstance;                                  // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_GetExtraMaterialInstanceArray) == 0x000008, "Wrong alignment on BP_WeaponBase_C_GetExtraMaterialInstanceArray");
static_assert(sizeof(BP_WeaponBase_C_GetExtraMaterialInstanceArray) == 0x000010, "Wrong size on BP_WeaponBase_C_GetExtraMaterialInstanceArray");
static_assert(offsetof(BP_WeaponBase_C_GetExtraMaterialInstanceArray, MaterialInstance) == 0x000000, "Member 'BP_WeaponBase_C_GetExtraMaterialInstanceArray::MaterialInstance' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.GetExtraMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponBase_C_GetExtraMesh final
{
public:
	TArray<class USkeletalMeshComponent*>         ExtraMesh;                                         // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_GetExtraMesh) == 0x000008, "Wrong alignment on BP_WeaponBase_C_GetExtraMesh");
static_assert(sizeof(BP_WeaponBase_C_GetExtraMesh) == 0x000010, "Wrong size on BP_WeaponBase_C_GetExtraMesh");
static_assert(offsetof(BP_WeaponBase_C_GetExtraMesh, ExtraMesh) == 0x000000, "Member 'BP_WeaponBase_C_GetExtraMesh::ExtraMesh' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.ResetMaterialInstanceArray
// 0x0030 (0x0030 - 0x0000)
struct BP_WeaponBase_C_ResetMaterialInstanceArray final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_CreateAllDynamicMaterialInstance_DMArray; // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_ResetMaterialInstanceArray) == 0x000008, "Wrong alignment on BP_WeaponBase_C_ResetMaterialInstanceArray");
static_assert(sizeof(BP_WeaponBase_C_ResetMaterialInstanceArray) == 0x000030, "Wrong size on BP_WeaponBase_C_ResetMaterialInstanceArray");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialInstanceArray, CallFunc_Array_Get_Item) == 0x000000, "Member 'BP_WeaponBase_C_ResetMaterialInstanceArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialInstanceArray, CallFunc_CreateAllDynamicMaterialInstance_DMArray) == 0x000008, "Member 'BP_WeaponBase_C_ResetMaterialInstanceArray::CallFunc_CreateAllDynamicMaterialInstance_DMArray' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialInstanceArray, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000018, "Member 'BP_WeaponBase_C_ResetMaterialInstanceArray::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_ResetMaterialInstanceArray, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'BP_WeaponBase_C_ResetMaterialInstanceArray::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.LoadMesh
// 0x0058 (0x0058 - 0x0000)
struct BP_WeaponBase_C_LoadMesh final
{
public:
	int32                                         InWeaponID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetMaterial;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_827C[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoLoadMeshAfter_bDummy;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_827D[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_827E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_827F[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh_1;                 // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_ResourceManager_C*                  CallFunc_GetResourceManager_ResourceManager;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadWeaponMesh_bDisableYuitoString;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_LoadMesh) == 0x000008, "Wrong alignment on BP_WeaponBase_C_LoadMesh");
static_assert(sizeof(BP_WeaponBase_C_LoadMesh) == 0x000058, "Wrong size on BP_WeaponBase_C_LoadMesh");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, InWeaponID) == 0x000000, "Member 'BP_WeaponBase_C_LoadMesh::InWeaponID' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, ResetMaterial) == 0x000004, "Member 'BP_WeaponBase_C_LoadMesh::ResetMaterial' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_WeaponBase_C_LoadMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_WeaponBase_C_LoadMesh::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_WeaponBase_C_LoadMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_DoLoadMeshAfter_bDummy) == 0x000014, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_DoLoadMeshAfter_bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_GetExtraMesh_ExtraMesh) == 0x000020, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_GetExtraMesh_ExtraMesh_1) == 0x000038, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_GetExtraMesh_ExtraMesh_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_GetResourceManager_ResourceManager) == 0x000048, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_GetResourceManager_ResourceManager' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_LoadMesh, CallFunc_LoadWeaponMesh_bDisableYuitoString) == 0x000050, "Member 'BP_WeaponBase_C_LoadMesh::CallFunc_LoadWeaponMesh_bDisableYuitoString' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.DoLoadMeshAfter
// 0x0002 (0x0002 - 0x0000)
struct BP_WeaponBase_C_DoLoadMeshAfter final
{
public:
	bool                                          bDisableStringWeapon;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_DoLoadMeshAfter) == 0x000001, "Wrong alignment on BP_WeaponBase_C_DoLoadMeshAfter");
static_assert(sizeof(BP_WeaponBase_C_DoLoadMeshAfter) == 0x000002, "Wrong size on BP_WeaponBase_C_DoLoadMeshAfter");
static_assert(offsetof(BP_WeaponBase_C_DoLoadMeshAfter, bDisableStringWeapon) == 0x000000, "Member 'BP_WeaponBase_C_DoLoadMeshAfter::bDisableStringWeapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_DoLoadMeshAfter, bDummy) == 0x000001, "Member 'BP_WeaponBase_C_DoLoadMeshAfter::bDummy' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.DoAttachAfter
// 0x0002 (0x0002 - 0x0000)
struct BP_WeaponBase_C_DoAttachAfter final
{
public:
	bool                                          bDisableStringWeapon;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_DoAttachAfter) == 0x000001, "Wrong alignment on BP_WeaponBase_C_DoAttachAfter");
static_assert(sizeof(BP_WeaponBase_C_DoAttachAfter) == 0x000002, "Wrong size on BP_WeaponBase_C_DoAttachAfter");
static_assert(offsetof(BP_WeaponBase_C_DoAttachAfter, bDisableStringWeapon) == 0x000000, "Member 'BP_WeaponBase_C_DoAttachAfter::bDisableStringWeapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_DoAttachAfter, bDummy) == 0x000001, "Member 'BP_WeaponBase_C_DoAttachAfter::bDummy' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.GetProxyRequestedPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_WeaponBase_C_GetProxyRequestedPlayer final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_GetProxyRequestedPlayer) == 0x000008, "Wrong alignment on BP_WeaponBase_C_GetProxyRequestedPlayer");
static_assert(sizeof(BP_WeaponBase_C_GetProxyRequestedPlayer) == 0x000008, "Wrong size on BP_WeaponBase_C_GetProxyRequestedPlayer");
static_assert(offsetof(BP_WeaponBase_C_GetProxyRequestedPlayer, Player) == 0x000000, "Member 'BP_WeaponBase_C_GetProxyRequestedPlayer::Player' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.GetProxyMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_WeaponBase_C_GetProxyMesh final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_C_GetProxyMesh) == 0x000008, "Wrong alignment on BP_WeaponBase_C_GetProxyMesh");
static_assert(sizeof(BP_WeaponBase_C_GetProxyMesh) == 0x000008, "Wrong size on BP_WeaponBase_C_GetProxyMesh");
static_assert(offsetof(BP_WeaponBase_C_GetProxyMesh, Mesh) == 0x000000, "Member 'BP_WeaponBase_C_GetProxyMesh::Mesh' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.CheckExecuteAnimNotifyCharacterKind
// 0x0020 (0x0020 - 0x0000)
struct BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind final
{
public:
	ECharaExecuteNotifyKind                       Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExecute;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8280[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AnimNotifyExecuteCheck_C> CallFunc_CheckExecuteAnimNotifyCharacterKind_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExecuteAnimNotifyCharacterKind_bExecute; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind) == 0x000008, "Wrong alignment on BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind");
static_assert(sizeof(BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind) == 0x000020, "Wrong size on BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind");
static_assert(offsetof(BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind, Kind) == 0x000000, "Member 'BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind::Kind' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind, bExecute) == 0x000001, "Member 'BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind::bExecute' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind, CallFunc_CheckExecuteAnimNotifyCharacterKind_self_CastInput) == 0x000008, "Member 'BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind::CallFunc_CheckExecuteAnimNotifyCharacterKind_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind, CallFunc_CheckExecuteAnimNotifyCharacterKind_bExecute) == 0x000018, "Member 'BP_WeaponBase_C_CheckExecuteAnimNotifyCharacterKind::CallFunc_CheckExecuteAnimNotifyCharacterKind_bExecute' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.GetThrowPoint
// 0x01F0 (0x01F0 - 0x0000)
struct BP_WeaponBase_C_GetThrowPoint final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8281[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LIgnoreActorArray;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      LObjectTypes;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector                                LDist;                                             // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LPoint;                                            // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8282[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8283[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8284[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8285[0x2];                                     // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWeakTargetPoint_Point;                 // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_GetThrowPoint) == 0x000008, "Wrong alignment on BP_WeaponBase_C_GetThrowPoint");
static_assert(sizeof(BP_WeaponBase_C_GetThrowPoint) == 0x0001F0, "Wrong size on BP_WeaponBase_C_GetThrowPoint");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, Point) == 0x000000, "Member 'BP_WeaponBase_C_GetThrowPoint::Point' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, LIgnoreActorArray) == 0x000010, "Member 'BP_WeaponBase_C_GetThrowPoint::LIgnoreActorArray' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, LObjectTypes) == 0x000020, "Member 'BP_WeaponBase_C_GetThrowPoint::LObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, LDist) == 0x000030, "Member 'BP_WeaponBase_C_GetThrowPoint::LDist' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, LPoint) == 0x00003C, "Member 'BP_WeaponBase_C_GetThrowPoint::LPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_WeaponBase_C_GetThrowPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_MakeVector_ReturnValue) == 0x000064, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000080, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000108, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x000109, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010A, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_Location) == 0x000114, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_Normal) == 0x00012C, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x000138, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_HitActor) == 0x000150, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_HitComponent) == 0x000158, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000160, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_HitItem) == 0x000168, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_FaceIndex) == 0x00016C, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_TraceStart) == 0x000170, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakHitResult_TraceEnd) == 0x00017C, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakVector_X_1) == 0x000194, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakVector_Y_1) == 0x000198, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_BreakVector_Z_1) == 0x00019C, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001A0, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001A4, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_MakeVector_ReturnValue_1) == 0x0001B0, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x0001BC, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x0001C8, "Member 'BP_WeaponBase_C_GetThrowPoint::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BP_WeaponBase_C_GetThrowPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_IsValid_ReturnValue) == 0x0001D9, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, CallFunc_GetWeakTargetPoint_Point) == 0x0001DC, "Member 'BP_WeaponBase_C_GetThrowPoint::CallFunc_GetWeakTargetPoint_Point' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetThrowPoint, K2Node_SwitchEnum_CmpSuccess) == 0x0001E8, "Member 'BP_WeaponBase_C_GetThrowPoint::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.GetAttachTransform
// 0x0060 (0x0060 - 0x0000)
struct BP_WeaponBase_C_GetAttachTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_GetAttachTransform) == 0x000010, "Wrong alignment on BP_WeaponBase_C_GetAttachTransform");
static_assert(sizeof(BP_WeaponBase_C_GetAttachTransform) == 0x000060, "Wrong size on BP_WeaponBase_C_GetAttachTransform");
static_assert(offsetof(BP_WeaponBase_C_GetAttachTransform, Transform) == 0x000000, "Member 'BP_WeaponBase_C_GetAttachTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_C_GetAttachTransform, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_WeaponBase_C_GetAttachTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase.BP_WeaponBase_C.IsThrowHit
// 0x0001 (0x0001 - 0x0000)
struct BP_WeaponBase_C_IsThrowHit final
{
public:
	bool                                          bHit;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_C_IsThrowHit) == 0x000001, "Wrong alignment on BP_WeaponBase_C_IsThrowHit");
static_assert(sizeof(BP_WeaponBase_C_IsThrowHit) == 0x000001, "Wrong size on BP_WeaponBase_C_IsThrowHit");
static_assert(offsetof(BP_WeaponBase_C_IsThrowHit, bHit) == 0x000000, "Member 'BP_WeaponBase_C_IsThrowHit::bHit' has a wrong offset!");

}

