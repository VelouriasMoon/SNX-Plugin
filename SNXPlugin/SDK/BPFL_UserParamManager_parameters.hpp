#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_UserParamManager

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BPFL_UserParamManager.BPFL_UserParamManager_C.KillEnemyForUserParam
// 0x03E8 (0x03E8 - 0x0000)
struct BPFL_UserParamManager_C_KillEnemyForUserParam final
{
public:
	class FName                                   EnemyName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCHitResult                           HcResult;                                          // 0x0008(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	bool                                          IsBoss;                                            // 0x01C8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A9[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x01D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     HoloPlayerID;                                      // 0x01D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89AA[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AttackOwner;                                       // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         brainCrashEnemyNames;                              // 0x01E8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          bBrainCrashMulti;                                  // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89AB[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UninqueObjName;                                    // 0x0200(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	EPsychicObjectUniqueType                      PshchicObjectUniqueEnd;                            // 0x0210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueType                      PshchicObjectUniqueStart;                          // 0x0211(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89AC[0x6];                                     // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Attacker;                                          // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	BattlePrototype::EPsychicObjectID             CheckIDEnumLoopEnd;                                // 0x0220(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	BattlePrototype::EPsychicObjectID             CheckIDEnumLoopStart;                              // 0x0221(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueType                      PoType;                                            // 0x0222(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89AD[0x5];                                     // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89AE[0x6];                                     // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    K2Node_DynamicCast_AsBP_Player_Manager;            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89AF[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainCrashManager_C*                CallFunc_GetBrainCrashManager_Manager;             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerHologram_C*                   CallFunc_GetHologramManageActor_hologramManageActor; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetHologramPlayerID_hologramPlayerID;     // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89B0[0x5];                                     // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCrashTargetEnemyGeneralNames_targetEnemyNames; // 0x0270(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_GetCrashTargetEnemyGeneralNames_targetNum; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCrashTargetEnemyGeneralNames_bGeneral; // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89B1[0x2];                                     // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89B2[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestParamManager*                     CallFunc_GetQuestParamManager_ReturnValue;         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHCSkillExtraType                             Temp_byte_Variable;                                // 0x02A2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89B3[0x1];                                     // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89B4[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89B5[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89B6[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89B7[0x2];                                     // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89B8[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerCopyInterface>  K2Node_DynamicCast_AsPlayer_Copy_Interface;        // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89B9[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerCopy_ReturnValue;                 // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDriveMode_bDrive;                       // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89BA[0x5];                                     // 0x031B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCopyPlayerActor_C*               K2Node_DynamicCast_AsBP_SASCopy_Player_Actor;      // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89BB[0x6];                                     // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDriveMode_bDrive_1;                     // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89BC[0x6];                                     // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerCopyInterface>  K2Node_DynamicCast_AsPlayer_Copy_Interface_1;      // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89BD[0x7];                                     // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_2;       // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerCopy_ReturnValue_1;               // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDriveMode_bDrive_2;                     // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0383(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89BE[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCopyPlayerActor_C*               K2Node_DynamicCast_AsBP_SASCopy_Player_Actor_1;    // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89BF[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_3;       // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDriveMode_bDrive_3;                     // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89C0[0x1];                                     // 0x03AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89C1[0x3];                                     // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectIdC_ReturnValue;        // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89C2[0x2];                                     // 0x03CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89C3[0x2];                                     // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KillEnemyDataForSubQuest_ReturnValue;     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89C4[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_UserParamManager_C_KillEnemyForUserParam) == 0x000008, "Wrong alignment on BPFL_UserParamManager_C_KillEnemyForUserParam");
static_assert(sizeof(BPFL_UserParamManager_C_KillEnemyForUserParam) == 0x0003E8, "Wrong size on BPFL_UserParamManager_C_KillEnemyForUserParam");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, EnemyName) == 0x000000, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::EnemyName' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, HcResult) == 0x000008, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::HcResult' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, IsBoss) == 0x0001C8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::IsBoss' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, __WorldContext) == 0x0001D0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, HoloPlayerID) == 0x0001D8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::HoloPlayerID' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, AttackOwner) == 0x0001E0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::AttackOwner' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, brainCrashEnemyNames) == 0x0001E8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::brainCrashEnemyNames' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, bBrainCrashMulti) == 0x0001F8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::bBrainCrashMulti' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, UninqueObjName) == 0x000200, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::UninqueObjName' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, PshchicObjectUniqueEnd) == 0x000210, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::PshchicObjectUniqueEnd' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, PshchicObjectUniqueStart) == 0x000211, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::PshchicObjectUniqueStart' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, Attacker) == 0x000218, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::Attacker' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CheckIDEnumLoopEnd) == 0x000220, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CheckIDEnumLoopEnd' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CheckIDEnumLoopStart) == 0x000221, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CheckIDEnumLoopStart' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, PoType) == 0x000222, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::PoType' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetPlayerManager_PlayerManager) == 0x000228, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000230, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000238, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue) == 0x000240, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue_1) == 0x000241, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsBP_Player_Manager) == 0x000248, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsBP_Player_Manager' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess) == 0x000250, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetBrainCrashManager_Manager) == 0x000258, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetBrainCrashManager_Manager' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetHologramManageActor_hologramManageActor) == 0x000260, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetHologramManageActor_hologramManageActor' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue_2) == 0x000268, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue_3) == 0x000269, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetHologramPlayerID_hologramPlayerID) == 0x00026A, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetHologramPlayerID_hologramPlayerID' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetCrashTargetEnemyGeneralNames_targetEnemyNames) == 0x000270, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetCrashTargetEnemyGeneralNames_targetEnemyNames' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetCrashTargetEnemyGeneralNames_targetNum) == 0x000280, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetCrashTargetEnemyGeneralNames_targetNum' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetCrashTargetEnemyGeneralNames_bGeneral) == 0x000284, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetCrashTargetEnemyGeneralNames_bGeneral' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Greater_IntInt_ReturnValue) == 0x000285, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetUserParamManager_UserParamManager) == 0x000288, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue_4) == 0x000290, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetQuestParamManager_ReturnValue) == 0x000298, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetQuestParamManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue_5) == 0x0002A0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue_6) == 0x0002A1, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, Temp_byte_Variable) == 0x0002A2, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, Temp_int_Variable) == 0x0002A4, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Conv_IntToByte_ReturnValue) == 0x0002A8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Array_Add_ReturnValue) == 0x0002AC, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetValidValue_ReturnValue) == 0x0002B0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Add_IntInt_ReturnValue) == 0x0002B4, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0002B8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, Temp_int_Variable_1) == 0x0002C8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0002CC, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002D0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetValidValue_ReturnValue_1) == 0x0002D4, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, Temp_bool_Variable) == 0x0002D5, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0002D8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Not_PreBool_ReturnValue) == 0x0002E8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsPlayer_Copy_Interface) == 0x0002F0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsPlayer_Copy_Interface' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_1) == 0x000300, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000308, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_2) == 0x000318, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsPlayerCopy_ReturnValue) == 0x000319, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsPlayerCopy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsDriveMode_bDrive) == 0x00031A, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsDriveMode_bDrive' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsBP_SASCopy_Player_Actor) == 0x000320, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsBP_SASCopy_Player_Actor' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_3) == 0x000328, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue_7) == 0x000329, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000330, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_4) == 0x000340, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsDriveMode_bDrive_1) == 0x000341, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsDriveMode_bDrive_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Conv_NameToString_ReturnValue) == 0x000348, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsPlayer_Copy_Interface_1) == 0x000358, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsPlayer_Copy_Interface_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_5) == 0x000368, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsBPI_Player_Interface_2) == 0x000370, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsBPI_Player_Interface_2' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_6) == 0x000380, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsPlayerCopy_ReturnValue_1) == 0x000381, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsPlayerCopy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsDriveMode_bDrive_2) == 0x000382, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsDriveMode_bDrive_2' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsValid_ReturnValue_8) == 0x000383, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsBP_SASCopy_Player_Actor_1) == 0x000388, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsBP_SASCopy_Player_Actor_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_7) == 0x000390, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsBPI_Player_Interface_3) == 0x000398, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsBPI_Player_Interface_3' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_8) == 0x0003A8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Contains_ReturnValue) == 0x0003A9, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_IsDriveMode_bDrive_3) == 0x0003AA, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_IsDriveMode_bDrive_3' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0003AC, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0003B0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0003B4, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x0003B8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, K2Node_DynamicCast_bSuccess_9) == 0x0003C8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_CheckPsychicObjectIdC_ReturnValue) == 0x0003C9, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_CheckPsychicObjectIdC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0003CC, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0003D0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_BooleanAND_ReturnValue) == 0x0003D1, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x0003D4, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_KillEnemyDataForSubQuest_ReturnValue) == 0x0003D8, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_KillEnemyDataForSubQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_Array_Find_ReturnValue) == 0x0003DC, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_KillEnemyForUserParam, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0003E0, "Member 'BPFL_UserParamManager_C_KillEnemyForUserParam::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_UserParamManager.BPFL_UserParamManager_C.CheckEquipAttachmentAble
// 0x0040 (0x0040 - 0x0000)
struct BPFL_UserParamManager_C_CheckEquipAttachmentAble final
{
public:
	int32                                         AttachmentId;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EquipOK;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89C6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewAttachmentID;                                   // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewID;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C7[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89C8[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeItemID_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeItemDataName_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemNum_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_UserParamManager_C_CheckEquipAttachmentAble) == 0x000008, "Wrong alignment on BPFL_UserParamManager_C_CheckEquipAttachmentAble");
static_assert(sizeof(BPFL_UserParamManager_C_CheckEquipAttachmentAble) == 0x000040, "Wrong size on BPFL_UserParamManager_C_CheckEquipAttachmentAble");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, AttachmentId) == 0x000000, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::AttachmentId' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, __WorldContext) == 0x000008, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, EquipOK) == 0x000010, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::EquipOK' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, NewAttachmentID) == 0x000014, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::NewAttachmentID' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, NewID) == 0x000018, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::NewID' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, CallFunc_GetUserParamManager_UserParamManager) == 0x000020, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, CallFunc_Greater_IntInt_ReturnValue) == 0x00002A, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, CallFunc_MakeItemID_ReturnValue) == 0x00002C, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::CallFunc_MakeItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, CallFunc_MakeItemDataName_ReturnValue) == 0x000030, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::CallFunc_MakeItemDataName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, CallFunc_GetItemNum_ReturnValue) == 0x000038, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::CallFunc_GetItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UserParamManager_C_CheckEquipAttachmentAble, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003C, "Member 'BPFL_UserParamManager_C_CheckEquipAttachmentAble::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

}

