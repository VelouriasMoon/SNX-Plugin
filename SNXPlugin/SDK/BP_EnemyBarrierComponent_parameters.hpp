#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyBarrierComponent

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.ExecuteUbergraph_BP_EnemyBarrierComponent
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent");
static_assert(sizeof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent) == 0x000030, "Wrong size on BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent, EntryPoint) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent, K2Node_Event_EndPlayReason) == 0x000018, "Member 'BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent, K2Node_DynamicCast_AsRSBattle_Player) == 0x000020, "Member 'BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EnemyBarrierComponent_C_ExecuteUbergraph_BP_EnemyBarrierComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyBarrierComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_EnemyBarrierComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_EnemyBarrierComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_EnemyBarrierComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyBarrierComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EnemyBarrierComponent_C_ReceiveTick");
static_assert(sizeof(BP_EnemyBarrierComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_EnemyBarrierComponent_C_ReceiveTick");
static_assert(offsetof(BP_EnemyBarrierComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.Start
// 0x0048 (0x0048 - 0x0000)
struct BP_EnemyBarrierComponent_C_Start final
{
public:
	class UClass*                                 L_BarrierClass;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAttachLocationOnly;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE4[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE5[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySoundAttachedRS_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE6[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_Start) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_Start");
static_assert(sizeof(BP_EnemyBarrierComponent_C_Start) == 0x000048, "Wrong size on BP_EnemyBarrierComponent_C_Start");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, L_BarrierClass) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_Start::L_BarrierClass' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, bAttachLocationOnly) == 0x000008, "Member 'BP_EnemyBarrierComponent_C_Start::bAttachLocationOnly' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_EnemyBarrierComponent_C_Start::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EnemyBarrierComponent_C_Start::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_EnemyBarrierComponent_C_Start::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000020, "Member 'BP_EnemyBarrierComponent_C_Start::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'BP_EnemyBarrierComponent_C_Start::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, CallFunc_PlaySoundAttachedRS_ReturnValue) == 0x000030, "Member 'BP_EnemyBarrierComponent_C_Start::CallFunc_PlaySoundAttachedRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_EnemyBarrierComponent_C_Start::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Start, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000040, "Member 'BP_EnemyBarrierComponent_C_Start::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.Update
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EnemyBarrierComponent_C_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LHitRotation;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_PsychicObjectBasic_C*               LObj;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE7[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_Update) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_Update");
static_assert(sizeof(BP_EnemyBarrierComponent_C_Update) == 0x0000B8, "Wrong size on BP_EnemyBarrierComponent_C_Update");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, DeltaSeconds) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_Update::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, LHitRotation) == 0x000004, "Member 'BP_EnemyBarrierComponent_C_Update::LHitRotation' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, LObj) == 0x000010, "Member 'BP_EnemyBarrierComponent_C_Update::LObj' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000018, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_GetCollisionEnabled_ReturnValue_1) == 0x000019, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_GetCollisionEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000028, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000B0, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000B1, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_EnemyBarrierComponent_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.Exit
// 0x0048 (0x0048 - 0x0000)
struct BP_EnemyBarrierComponent_C_Exit final
{
public:
	bool                                          IsDamage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               L_EffectRotation;                                  // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   L_AttachPointName;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE9[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FEA[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_Exit) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_Exit");
static_assert(sizeof(BP_EnemyBarrierComponent_C_Exit) == 0x000048, "Wrong size on BP_EnemyBarrierComponent_C_Exit");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, IsDamage) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_Exit::IsDamage' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, L_EffectRotation) == 0x000004, "Member 'BP_EnemyBarrierComponent_C_Exit::L_EffectRotation' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, L_AttachPointName) == 0x000010, "Member 'BP_EnemyBarrierComponent_C_Exit::L_AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'BP_EnemyBarrierComponent_C_Exit::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_IsValid_ReturnValue_2) == 0x00001B, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001C, "Member 'BP_EnemyBarrierComponent_C_Exit::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00001D, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_IsValid_ReturnValue_3) == 0x00001E, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000020, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000038, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Exit, CallFunc_IsValid_ReturnValue_4) == 0x000040, "Member 'BP_EnemyBarrierComponent_C_Exit::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.HitProcess
// 0x01C8 (0x01C8 - 0x0000)
struct BP_EnemyBarrierComponent_C_HitProcess final
{
public:
	class ABP_PsychicObjectBasic_C*               PsychicObj;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCHitResult                           Result_in;                                         // 0x0008(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_HitProcess) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_HitProcess");
static_assert(sizeof(BP_EnemyBarrierComponent_C_HitProcess) == 0x0001C8, "Wrong size on BP_EnemyBarrierComponent_C_HitProcess");
static_assert(offsetof(BP_EnemyBarrierComponent_C_HitProcess, PsychicObj) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_HitProcess::PsychicObj' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_HitProcess, Result_in) == 0x000008, "Member 'BP_EnemyBarrierComponent_C_HitProcess::Result_in' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.Initialize
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyBarrierComponent_C_Initialize final
{
public:
	class UCapsuleComponent*                      BarrierShape;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_Initialize) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_Initialize");
static_assert(sizeof(BP_EnemyBarrierComponent_C_Initialize) == 0x000018, "Wrong size on BP_EnemyBarrierComponent_C_Initialize");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Initialize, BarrierShape) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_Initialize::BarrierShape' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Initialize, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_EnemyBarrierComponent_C_Initialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EnemyBarrierComponent_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.LoadAsset
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EnemyBarrierComponent_C_LoadAsset final
{
public:
	class UClass*                                 L_BarrierClass;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEB[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEC[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UParticleSystem>> K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UParticleSystem>> K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UParticleSystem>         CallFunc_Array_Get_Item;                           // 0x0048(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UParticleSystem>         CallFunc_Array_Get_Item_1;                         // 0x0070(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FED[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEE[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEF[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF0[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_LoadAsset) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_LoadAsset");
static_assert(sizeof(BP_EnemyBarrierComponent_C_LoadAsset) == 0x0000E0, "Wrong size on BP_EnemyBarrierComponent_C_LoadAsset");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, L_BarrierClass) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::L_BarrierClass' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, K2Node_SwitchInteger_CmpSuccess_1) == 0x000024, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, K2Node_MakeArray_Array_1) == 0x000038, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x000098, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000A0, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, K2Node_DynamicCast_AsParticle_System) == 0x0000A8, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_1) == 0x0000B8, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0000C0, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, K2Node_DynamicCast_AsParticle_System_1) == 0x0000C8, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::K2Node_DynamicCast_AsParticle_System_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadAsset, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DD, "Member 'BP_EnemyBarrierComponent_C_LoadAsset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.IsBarrier
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyBarrierComponent_C_IsBarrier final
{
public:
	bool                                          Param_IsBarrier;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_IsBarrier) == 0x000001, "Wrong alignment on BP_EnemyBarrierComponent_C_IsBarrier");
static_assert(sizeof(BP_EnemyBarrierComponent_C_IsBarrier) == 0x000001, "Wrong size on BP_EnemyBarrierComponent_C_IsBarrier");
static_assert(offsetof(BP_EnemyBarrierComponent_C_IsBarrier, Param_IsBarrier) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_IsBarrier::Param_IsBarrier' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.BarrierCollisionHitNotify
// 0x0258 (0x0258 - 0x0000)
struct BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify final
{
public:
	struct FHCHitResult                           Result;                                            // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	EPlayerHitStopType                            L_HitStopType;                                     // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_IsObjAttack;                                     // 0x01C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF1[0x6];                                     // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_obj;                                             // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_EffectRotation;                                  // 0x01D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   L_AttachPointName;                                 // 0x01DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF2[0x2];                                     // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetActive_bActive;                        // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF3[0x3];                                     // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF4[0x2];                                     // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BulletBase_C*                       K2Node_DynamicCast_AsBP_Bullet_Base;               // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF5[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF6[0x5];                                     // 0x0233(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF7[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify");
static_assert(sizeof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify) == 0x000258, "Wrong size on BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, Result) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::Result' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, L_HitStopType) == 0x0001C0, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::L_HitStopType' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, L_IsObjAttack) == 0x0001C1, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::L_IsObjAttack' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, L_obj) == 0x0001C8, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::L_obj' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, L_EffectRotation) == 0x0001D0, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::L_EffectRotation' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, L_AttachPointName) == 0x0001DC, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::L_AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue) == 0x0001E4, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue_1) == 0x0001E5, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_MakeRotator_ReturnValue) == 0x0001E8, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_GetActive_bActive) == 0x0001F4, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_GetActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001F8, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000204, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue_2) == 0x000210, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue_3) == 0x000211, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue_4) == 0x000212, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue_5) == 0x000213, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue_6) == 0x000214, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue_7) == 0x000215, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, K2Node_DynamicCast_AsBP_Bullet_Base) == 0x000218, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::K2Node_DynamicCast_AsBP_Bullet_Base' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000228, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_IsValid_ReturnValue_8) == 0x000231, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, K2Node_SwitchEnum_CmpSuccess) == 0x000232, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000238, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_MakeRotFromX_ReturnValue) == 0x000240, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000250, "Member 'BP_EnemyBarrierComponent_C_BarrierCollisionHitNotify::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.CalcBarrierDamage
// 0x03E8 (0x03E8 - 0x0000)
struct BP_EnemyBarrierComponent_C_CalcBarrierDamage final
{
public:
	struct FHCHitResult                           Result;                                            // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	TArray<EHCSkillAttribute>                     L_Attribute;                                       // 0x01C0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FHCHitResult                           L_result;                                          // 0x01D0(0x01C0)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         L_Damage;                                          // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF8[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF9[0x3];                                     // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartDamageAnimFunc_Dummy;                // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FFA[0x2];                                     // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FFB[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FFC[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamageValue_ReturnValue;              // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_CalcBarrierDamage) == 0x000008, "Wrong alignment on BP_EnemyBarrierComponent_C_CalcBarrierDamage");
static_assert(sizeof(BP_EnemyBarrierComponent_C_CalcBarrierDamage) == 0x0003E8, "Wrong size on BP_EnemyBarrierComponent_C_CalcBarrierDamage");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, Result) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::Result' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, L_Attribute) == 0x0001C0, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::L_Attribute' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, L_result) == 0x0001D0, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::L_result' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, L_Damage) == 0x000390, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::L_Damage' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, Temp_bool_True_if_break_was_hit_Variable) == 0x000394, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, Temp_int_Array_Index_Variable) == 0x000398, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_Not_PreBool_ReturnValue) == 0x00039C, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, Temp_int_Loop_Num_Variable) == 0x0003A0, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_Array_Length_ReturnValue) == 0x0003A4, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003A8, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_IsValid_ReturnValue) == 0x0003A9, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_IsValid_ReturnValue_1) == 0x0003AA, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_StartDamageAnimFunc_Dummy) == 0x0003AB, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_StartDamageAnimFunc_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0003AC, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_FTrunc_ReturnValue) == 0x0003B0, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, Temp_int_Loop_Counter_Variable) == 0x0003B4, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, K2Node_SwitchEnum_CmpSuccess) == 0x0003B8, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_Less_IntInt_ReturnValue) == 0x0003B9, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_Add_IntInt_ReturnValue) == 0x0003BC, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_BooleanAND_ReturnValue) == 0x0003C0, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_GetOwner_ReturnValue) == 0x0003C8, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, K2Node_DynamicCast_AsRSBattle_Character) == 0x0003D0, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, K2Node_DynamicCast_bSuccess) == 0x0003D8, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_Subtract_IntInt_ReturnValue) == 0x0003DC, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_CalcDamageValue_ReturnValue) == 0x0003E0, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_CalcDamageValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_CalcBarrierDamage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0003E4, "Member 'BP_EnemyBarrierComponent_C_CalcBarrierDamage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.LoadBarrierActor
// 0x0070 (0x0070 - 0x0000)
struct BP_EnemyBarrierComponent_C_LoadBarrierActor final
{
public:
	class UClass*                                 L_BarrierClass;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FFD[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FFE[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ENPC_BarrierBase_C*                 K2Node_DynamicCast_AsBP_ENPC_Barrier_Base;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_LoadBarrierActor) == 0x000010, "Wrong alignment on BP_EnemyBarrierComponent_C_LoadBarrierActor");
static_assert(sizeof(BP_EnemyBarrierComponent_C_LoadBarrierActor) == 0x000070, "Wrong size on BP_EnemyBarrierComponent_C_LoadBarrierActor");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, L_BarrierClass) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::L_BarrierClass' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, K2Node_DynamicCast_AsBP_ENPC_Barrier_Base) == 0x000060, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::K2Node_DynamicCast_AsBP_ENPC_Barrier_Base' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_LoadBarrierActor, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_EnemyBarrierComponent_C_LoadBarrierActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.UpdateEmissive
// 0x000C (0x000C - 0x0000)
struct BP_EnemyBarrierComponent_C_UpdateEmissive final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FFF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_UpdateEmissive) == 0x000004, "Wrong alignment on BP_EnemyBarrierComponent_C_UpdateEmissive");
static_assert(sizeof(BP_EnemyBarrierComponent_C_UpdateEmissive) == 0x00000C, "Wrong size on BP_EnemyBarrierComponent_C_UpdateEmissive");
static_assert(offsetof(BP_EnemyBarrierComponent_C_UpdateEmissive, DeltaSec) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_UpdateEmissive::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_UpdateEmissive, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_EnemyBarrierComponent_C_UpdateEmissive::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_UpdateEmissive, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_EnemyBarrierComponent_C_UpdateEmissive::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.StartEmissive
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyBarrierComponent_C_StartEmissive final
{
public:
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_StartEmissive) == 0x000004, "Wrong alignment on BP_EnemyBarrierComponent_C_StartEmissive");
static_assert(sizeof(BP_EnemyBarrierComponent_C_StartEmissive) == 0x000018, "Wrong size on BP_EnemyBarrierComponent_C_StartEmissive");
static_assert(offsetof(BP_EnemyBarrierComponent_C_StartEmissive, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_StartEmissive::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_StartEmissive, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000004, "Member 'BP_EnemyBarrierComponent_C_StartEmissive::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_StartEmissive, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000010, "Member 'BP_EnemyBarrierComponent_C_StartEmissive::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyBarrierComponent_C_StartEmissive, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_EnemyBarrierComponent_C_StartEmissive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyBarrierComponent.BP_EnemyBarrierComponent_C.EndEmissive
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyBarrierComponent_C_EndEmissive final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyBarrierComponent_C_EndEmissive) == 0x000001, "Wrong alignment on BP_EnemyBarrierComponent_C_EndEmissive");
static_assert(sizeof(BP_EnemyBarrierComponent_C_EndEmissive) == 0x000001, "Wrong size on BP_EnemyBarrierComponent_C_EndEmissive");
static_assert(offsetof(BP_EnemyBarrierComponent_C_EndEmissive, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EnemyBarrierComponent_C_EndEmissive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

