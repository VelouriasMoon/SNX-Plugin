#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AimComponent

#include "Basic.hpp"

#include "BP_AimComponent_classes.hpp"
#include "BP_AimComponent_parameters.hpp"


namespace SDK
{

// Function BP_AimComponent.BP_AimComponent_C.ExecuteUbergraph_BP_AimComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AimComponent_C::ExecuteUbergraph_BP_AimComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "ExecuteUbergraph_BP_AimComponent");

	Params::BP_AimComponent_C_ExecuteUbergraph_BP_AimComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AimComponent.BP_AimComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AimComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "ReceiveTick");

	Params::BP_AimComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AimComponent.BP_AimComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AimComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AimComponent.BP_AimComponent_C.AimStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bAimWeak                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Param_LimitAngle                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AimComponent_C::AimStart(bool Param_bAimWeak, float Param_LimitAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "AimStart");

	Params::BP_AimComponent_C_AimStart Parms{};

	Parms.Param_bAimWeak = Param_bAimWeak;
	Parms.Param_LimitAngle = Param_LimitAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AimComponent.BP_AimComponent_C.AimEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AimComponent_C::AimEnd(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "AimEnd");

	Params::BP_AimComponent_C_AimEnd Parms{};

	Parms.bForce = bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AimComponent.BP_AimComponent_C.UpdateAim
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AimComponent_C::UpdateAim(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "UpdateAim");

	Params::BP_AimComponent_C_UpdateAim Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AimComponent.BP_AimComponent_C.EndCompleted
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_AimComponent_C::EndCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "EndCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AimComponent.BP_AimComponent_C.UpdateEnd
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AimComponent_C::UpdateEnd(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "UpdateEnd");

	Params::BP_AimComponent_C_UpdateEnd Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AimComponent.BP_AimComponent_C.SetAimRotator
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_AimComponent_C::SetAimRotator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "SetAimRotator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AimComponent.BP_AimComponent_C.getTargetActor
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AimComponent_C::GetTargetActor(class AActor** TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "getTargetActor");

	Params::BP_AimComponent_C_GetTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;
}


// Function BP_AimComponent.BP_AimComponent_C.GetAimBaseLocation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AimComponent_C::GetAimBaseLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "GetAimBaseLocation");

	Params::BP_AimComponent_C_GetAimBaseLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AimComponent.BP_AimComponent_C.GetAimPitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Pitch                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AimComponent_C::GetAimPitch(float* Pitch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "GetAimPitch");

	Params::BP_AimComponent_C_GetAimPitch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pitch != nullptr)
		*Pitch = Parms.Pitch;
}


// Function BP_AimComponent.BP_AimComponent_C.IsAim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bAim                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AimComponent_C::IsAim(bool* bAim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "IsAim");

	Params::BP_AimComponent_C_IsAim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAim != nullptr)
		*bAim = Parms.bAim;
}


// Function BP_AimComponent.BP_AimComponent_C.GetAimRotator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         Rotator                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AimComponent_C::GetAimRotator(struct FRotator* Rotator) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AimComponent_C", "GetAimRotator");

	Params::BP_AimComponent_C_GetAimRotator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotator != nullptr)
		*Rotator = std::move(Parms.Rotator);
}

}

