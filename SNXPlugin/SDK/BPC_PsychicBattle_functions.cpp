#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_PsychicBattle

#include "Basic.hpp"

#include "BPC_PsychicBattle_classes.hpp"
#include "BPC_PsychicBattle_parameters.hpp"


namespace SDK
{

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.OnFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::OnFinished__DelegateSignature(EPsychicBattleType PsychicBattleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "OnFinished__DelegateSignature");

	Params::BPC_PsychicBattle_C_OnFinished__DelegateSignature Parms{};

	Parms.PsychicBattleType = PsychicBattleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.OnStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::OnStart__DelegateSignature(EPsychicBattleType PsychicBattleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "OnStart__DelegateSignature");

	Params::BPC_PsychicBattle_C_OnStart__DelegateSignature Parms{};

	Parms.PsychicBattleType = PsychicBattleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.OnBattleStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::OnBattleStart__DelegateSignature(EPsychicBattleType PsychicBattleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "OnBattleStart__DelegateSignature");

	Params::BPC_PsychicBattle_C_OnBattleStart__DelegateSignature Parms{};

	Parms.PsychicBattleType = PsychicBattleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.OnBattleFinish__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Win                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::OnBattleFinish__DelegateSignature(EPsychicBattleType PsychicBattleType, bool Win)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "OnBattleFinish__DelegateSignature");

	Params::BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.Win = Win;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ExecuteUbergraph_BPC_PsychicBattle
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ExecuteUbergraph_BPC_PsychicBattle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ExecuteUbergraph_BPC_PsychicBattle");

	Params::BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PlayBatleObjectAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleAnimationPhaseType        BattlePhase                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::PlayBatleObjectAnimation(EPsychicBattleAnimationPhaseType BattlePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "PlayBatleObjectAnimation");

	Params::BPC_PsychicBattle_C_PlayBatleObjectAnimation Parms{};

	Parms.BattlePhase = BattlePhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ReceiveTick");

	Params::BPC_PsychicBattle_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ReceiveEndPlay");

	Params::BPC_PsychicBattle_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.Start
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::Start(EPsychicBattleType PsychicBattleType, class ARSBattleCharacter_C* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "Start");

	Params::BPC_PsychicBattle_C_Start Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedInitialize
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::ProtectedInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedFinalize
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ProtectedFinalize(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedFinalize");

	Params::BPC_PsychicBattle_C_ProtectedFinalize Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedOnFinishedSequencer
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::ProtectedOnFinishedSequencer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedOnFinishedSequencer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.LoadAsset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerID                               UserPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::LoadAsset(EPsychicBattleType PsychicBattleType, EPlayerID UserPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "LoadAsset");

	Params::BPC_PsychicBattle_C_LoadAsset Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.UserPlayerID = UserPlayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.GetParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPsychicBattleParameter          Parameter                                              (Parm, OutParm)

void UBPC_PsychicBattle_C::GetParameter(EPsychicBattleType PsychicBattleType, struct FPsychicBattleParameter* Parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "GetParameter");

	Params::BPC_PsychicBattle_C_GetParameter Parms{};

	Parms.PsychicBattleType = PsychicBattleType;

	UObject::ProcessEvent(Func, &Parms);

	if (Parameter != nullptr)
		*Parameter = std::move(Parms.Parameter);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedGetSequencerAsset
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerID                               UserPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class ULevelSequence>    LevelSequence                                          (Parm, OutParm, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ProtectedGetSequencerAsset(EPsychicBattleType PsychicBattleType, EPlayerID UserPlayerID, TSoftObjectPtr<class ULevelSequence>* LevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedGetSequencerAsset");

	Params::BPC_PsychicBattle_C_ProtectedGetSequencerAsset Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.UserPlayerID = UserPlayerID;

	UObject::ProcessEvent(Func, &Parms);

	if (LevelSequence != nullptr)
		*LevelSequence = Parms.LevelSequence;
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.Reset
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedGetLevelSequence
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerID                               UserPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULevelSequence*                   Asset                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ProtectedGetLevelSequence(EPsychicBattleType PsychicBattleType, EPlayerID UserPlayerID, class ULevelSequence** Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedGetLevelSequence");

	Params::BPC_PsychicBattle_C_ProtectedGetLevelSequence Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.UserPlayerID = UserPlayerID;

	UObject::ProcessEvent(Func, &Parms);

	if (Asset != nullptr)
		*Asset = Parms.Asset;
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedRestoreCharacter
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::ProtectedRestoreCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedRestoreCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventStartBattleSequence
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventStartBattleSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventStartBattleSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventEndBattleSequence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsWin                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::EventEndBattleSequence(bool IsWin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventEndBattleSequence");

	Params::BPC_PsychicBattle_C_EventEndBattleSequence Parms{};

	Parms.IsWin = IsWin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.SetBattleRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::SetBattleRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "SetBattleRate");

	Params::BPC_PsychicBattle_C_SetBattleRate Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventStartInputPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventStartInputPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventStartInputPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventStartInputEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventStartInputEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventStartInputEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.Finalize
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "Finalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventDamagePlayer
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventDamagePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventDamagePlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventDamageEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventDamageEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventDamageEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedEventStartInput
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ProtectedEventStartInput(class ARSCharacterBase* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedEventStartInput");

	Params::BPC_PsychicBattle_C_ProtectedEventStartInput Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedStartBinding
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSCharacterBase*                 Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BindingPlayer                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    BindingEnemy                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::ProtectedStartBinding(class ARSCharacterBase* Player, class ARSCharacterBase* Enemy, bool* BindingPlayer, bool* BindingEnemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedStartBinding");

	Params::BPC_PsychicBattle_C_ProtectedStartBinding Parms{};

	Parms.Player = Player;
	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);

	if (BindingPlayer != nullptr)
		*BindingPlayer = Parms.BindingPlayer;

	if (BindingEnemy != nullptr)
		*BindingEnemy = Parms.BindingEnemy;
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedOnWaitResult
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::ProtectedOnWaitResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedOnWaitResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedGetWinLoseShot
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerID                               UserPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             WinShotName                                            (Parm, OutParm)
// class FText                             LoseShotName                                           (Parm, OutParm)

void UBPC_PsychicBattle_C::ProtectedGetWinLoseShot(EPsychicBattleType PsychicBattleType, EPlayerID UserPlayerID, class FText* WinShotName, class FText* LoseShotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedGetWinLoseShot");

	Params::BPC_PsychicBattle_C_ProtectedGetWinLoseShot Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.UserPlayerID = UserPlayerID;

	UObject::ProcessEvent(Func, &Parms);

	if (WinShotName != nullptr)
		*WinShotName = std::move(Parms.WinShotName);

	if (LoseShotName != nullptr)
		*LoseShotName = std::move(Parms.LoseShotName);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.UpdateSequence
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::UpdateSequence(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "UpdateSequence");

	Params::BPC_PsychicBattle_C_UpdateSequence Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedOnSkipStart
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::ProtectedOnSkipStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedOnSkipStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedDamageInternal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 DamageActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSCharacterBase*                 AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ProtectedDamageInternal(class ARSCharacterBase* DamageActor, class ARSCharacterBase* AttackActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedDamageInternal");

	Params::BPC_PsychicBattle_C_ProtectedDamageInternal Parms{};

	Parms.DamageActor = DamageActor;
	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.UpdateSequenceCharacterTransform
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::UpdateSequenceCharacterTransform(class ARSCharacterBase* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "UpdateSequenceCharacterTransform");

	Params::BPC_PsychicBattle_C_UpdateSequenceCharacterTransform Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateStartSequencer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::PrivateStartSequencer(EPsychicBattleType PsychicBattleType, class ARSBattleCharacter_C* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "PrivateStartSequencer");

	Params::BPC_PsychicBattle_C_PrivateStartSequencer Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.CheckPlayStart
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::CheckPlayStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "CheckPlayStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventBattleAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventBattleAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventBattleAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivatePlayPhaseAnimation
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::PrivatePlayPhaseAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "PrivatePlayPhaseAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateStopBattleAnimation
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::PrivateStopBattleAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "PrivateStopBattleAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateOnFinishAnimation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     PlayMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Interrupted                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::PrivateOnFinishAnimation(class UAnimMontage* PlayMontage, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "PrivateOnFinishAnimation");

	Params::BPC_PsychicBattle_C_PrivateOnFinishAnimation Parms{};

	Parms.PlayMontage = PlayMontage;
	Parms.Interrupted = Interrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateLoadAssetElectricPole
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               UsePlayerID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::PrivateLoadAssetElectricPole(EPlayerID UsePlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "PrivateLoadAssetElectricPole");

	Params::BPC_PsychicBattle_C_PrivateLoadAssetElectricPole Parms{};

	Parms.UsePlayerID = UsePlayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.SetBattleParticle
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::SetBattleParticle(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "SetBattleParticle");

	Params::BPC_PsychicBattle_C_SetBattleParticle Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.SetPsychicObjectActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Param_PsychicObjectActor                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::SetPsychicObjectActor(class ABP_PsychicObjectBasic_C* Param_PsychicObjectActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "SetPsychicObjectActor");

	Params::BPC_PsychicBattle_C_SetPsychicObjectActor Parms{};

	Parms.Param_PsychicObjectActor = Param_PsychicObjectActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventEmitPoleParticle
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventEmitPoleParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventEmitPoleParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventChangePoleBreak
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventChangePoleBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventChangePoleBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedSetupPlayRangeMarkWait
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::ProtectedSetupPlayRangeMarkWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedSetupPlayRangeMarkWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedSetupPlayRangeMarkSkip
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::ProtectedSetupPlayRangeMarkSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedSetupPlayRangeMarkSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedSetupPlayRangeMarkInternal
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MarkName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    HasMark                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::ProtectedSetupPlayRangeMarkInternal(const class FString& MarkName, bool* HasMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedSetupPlayRangeMarkInternal");

	Params::BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal Parms{};

	Parms.MarkName = std::move(MarkName);

	UObject::ProcessEvent(Func, &Parms);

	if (HasMark != nullptr)
		*HasMark = Parms.HasMark;
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateSetBGActorsDither
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OneShot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::PrivateSetBGActorsDither(bool Visible, bool OneShot, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "PrivateSetBGActorsDither");

	Params::BPC_PsychicBattle_C_PrivateSetBGActorsDither Parms{};

	Parms.Visible = Visible;
	Parms.OneShot = OneShot;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateUpdateBGActorsDither
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::PrivateUpdateBGActorsDither(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "PrivateUpdateBGActorsDither");

	Params::BPC_PsychicBattle_C_PrivateUpdateBGActorsDither Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventBGActorVisible
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_PsychicBattle_C::EventBGActorVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "EventBGActorVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.IsPlaying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_Playing                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::IsPlaying(bool* Param_Playing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "IsPlaying");

	Params::BPC_PsychicBattle_C_IsPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Playing != nullptr)
		*Param_Playing = Parms.Param_Playing;
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedIsPlayerCh0100
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EPlayerID                               UserPlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ch0100                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::ProtectedIsPlayerCh0100(EPlayerID UserPlayerID, bool* Ch0100) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedIsPlayerCh0100");

	Params::BPC_PsychicBattle_C_ProtectedIsPlayerCh0100 Parms{};

	Parms.UserPlayerID = UserPlayerID;

	UObject::ProcessEvent(Func, &Parms);

	if (Ch0100 != nullptr)
		*Ch0100 = Parms.Ch0100;
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.IsBattleSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_Playing                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::IsBattleSequence(bool* Param_Playing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "IsBattleSequence");

	Params::BPC_PsychicBattle_C_IsBattleSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Playing != nullptr)
		*Param_Playing = Parms.Param_Playing;
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedGetLevelSequenceInternal
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ULevelSequence*>           AssetList                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class ULevelSequence*                   Asset                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PsychicBattle_C::ProtectedGetLevelSequenceInternal(EPsychicBattleType PsychicBattleType, TArray<class ULevelSequence*>& AssetList, class ULevelSequence** Asset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "ProtectedGetLevelSequenceInternal");

	Params::BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.AssetList = std::move(AssetList);

	UObject::ProcessEvent(Func, &Parms);

	AssetList = std::move(Parms.AssetList);

	if (Asset != nullptr)
		*Asset = Parms.Asset;
}


// Function BPC_PsychicBattle.BPC_PsychicBattle_C.IsInitialize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_Initialized                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PsychicBattle_C::IsInitialize(bool* Param_Initialized) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PsychicBattle_C", "IsInitialize");

	Params::BPC_PsychicBattle_C_IsInitialize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Initialized != nullptr)
		*Param_Initialized = Parms.Param_Initialized;
}

}

