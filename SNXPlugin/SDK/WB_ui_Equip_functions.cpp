#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Equip

#include "Basic.hpp"

#include "WB_ui_Equip_classes.hpp"
#include "WB_ui_Equip_parameters.hpp"


namespace SDK
{

// Function WB_ui_Equip.WB_ui_Equip_C.SetCharaID__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::SetCharaID__DelegateSignature(int32 CharaID, class UImage* Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetCharaID__DelegateSignature");

	Params::WB_ui_Equip_C_SetCharaID__DelegateSignature Parms{};

	Parms.CharaID = CharaID;
	Parms.Image = Image;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetScene__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIMain3DCharacterSceneID               SceneID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::SetScene__DelegateSignature(EUIMain3DCharacterSceneID SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetScene__DelegateSignature");

	Params::WB_ui_Equip_C_SetScene__DelegateSignature Parms{};

	Parms.SceneID = SceneID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetSelectEquip__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIMain3DEquipSelectID                  Select                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::SetSelectEquip__DelegateSignature(EUIMain3DEquipSelectID Select, int32 AttachmentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetSelectEquip__DelegateSignature");

	Params::WB_ui_Equip_C_SetSelectEquip__DelegateSignature Parms{};

	Parms.Select = Select;
	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.HideScene__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::HideScene__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "HideScene__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.StartViewMode__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::StartViewMode__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "StartViewMode__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.EndViewMode__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::EndViewMode__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "EndViewMode__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetCharaMoveMode__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CharaMoveFlag                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::SetCharaMoveMode__DelegateSignature(bool CharaMoveFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetCharaMoveMode__DelegateSignature");

	Params::WB_ui_Equip_C_SetCharaMoveMode__DelegateSignature Parms{};

	Parms.CharaMoveFlag = CharaMoveFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.ChangeSelectListCursor__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCostumeAttachment                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_CursorCategory                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::ChangeSelectListCursor__DelegateSignature(bool IsCostumeAttachment, int32 Param_CursorCategory, int32 SelectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "ChangeSelectListCursor__DelegateSignature");

	Params::WB_ui_Equip_C_ChangeSelectListCursor__DelegateSignature Parms{};

	Parms.IsCostumeAttachment = IsCostumeAttachment;
	Parms.Param_CursorCategory = Param_CursorCategory;
	Parms.SelectID = SelectID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetupEquipAllRequest__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetupEquipAllRequest__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetupEquipAllRequest__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetPopupMode__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPopup                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::SetPopupMode__DelegateSignature(bool IsPopup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetPopupMode__DelegateSignature");

	Params::WB_ui_Equip_C_SetPopupMode__DelegateSignature Parms{};

	Parms.IsPopup = IsPopup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.ChangeSelectListCursorAllAttachment__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attachment0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attachment1                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attachment2                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CameraIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::ChangeSelectListCursorAllAttachment__DelegateSignature(int32 Attachment0, int32 Attachment1, int32 Attachment2, int32 CameraIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "ChangeSelectListCursorAllAttachment__DelegateSignature");

	Params::WB_ui_Equip_C_ChangeSelectListCursorAllAttachment__DelegateSignature Parms{};

	Parms.Attachment0 = Attachment0;
	Parms.Attachment1 = Attachment1;
	Parms.Attachment2 = Attachment2;
	Parms.CameraIndex = CameraIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.ExecuteUbergraph_WB_ui_Equip
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::ExecuteUbergraph_WB_ui_Equip(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "ExecuteUbergraph_WB_ui_Equip");

	Params::WB_ui_Equip_C_ExecuteUbergraph_WB_ui_Equip Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_ui_Equip_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.­ãé¯¿üxž
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRedMouseArgument                Argument                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UUserWidget*                      PWidget                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::______x_(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "­ãé¯¿üxž");

	Params::WB_ui_Equip_C_______x_ Parms{};

	Parms.Argument = std::move(Argument);
	Parms.PWidget = PWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.µÖ¿ÖLR
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRedMouseArgument                Argument                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UUserWidget*                      PWidget                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::____LR(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "µÖ¿ÖLR");

	Params::WB_ui_Equip_C_____LR Parms{};

	Parms.Argument = std::move(Argument);
	Parms.PWidget = PWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.µÖ¿Ö
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRedMouseArgument                Argument                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UUserWidget*                      PWidget                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::____(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "µÖ¿Ö");

	Params::WB_ui_Equip_C_____ Parms{};

	Parms.Argument = std::move(Argument);
	Parms.PWidget = PWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::UpdateState(int32 State, int32 SubState, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateState");

	Params::WB_ui_Equip_C_UpdateState Parms{};

	Parms.State = State;
	Parms.SubState = SubState;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_ui_Equip_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "PreConstruct");

	Params::WB_ui_Equip_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.StateNone
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::StateNone(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "StateNone");

	Params::WB_ui_Equip_C_StateNone Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.StateOpen
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::StateOpen(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "StateOpen");

	Params::WB_ui_Equip_C_StateOpen Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.StateLoop
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::StateLoop(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "StateLoop");

	Params::WB_ui_Equip_C_StateLoop Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.StateClose
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::StateClose(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "StateClose");

	Params::WB_ui_Equip_C_StateClose Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetContentsChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsChange                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::SetContentsChange(bool IsChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetContentsChange");

	Params::WB_ui_Equip_C_SetContentsChange Parms{};

	Parms.IsChange = IsChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.isEndMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsEnd                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsEndMenu(bool* Param_IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "isEndMenu");

	Params::WB_ui_Equip_C_IsEndMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsEnd != nullptr)
		*Param_IsEnd = Parms.Param_IsEnd;
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateSelectChara
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateSelectChara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateSelectChara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateSelectEquip
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateSelectEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateSelectEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.DrawCurrentEquip
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableCursor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::DrawCurrentEquip(bool EnableCursor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "DrawCurrentEquip");

	Params::WB_ui_Equip_C_DrawCurrentEquip Parms{};

	Parms.EnableCursor = EnableCursor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetWeaponName
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetWeaponName(int32 ID, class FString* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetWeaponName");

	Params::WB_ui_Equip_C_GetWeaponName Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetAccessoryName
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetAccessoryName(int32 ID, class FString* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetAccessoryName");

	Params::WB_ui_Equip_C_GetAccessoryName Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateSelectItem
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateSelectItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateSelectItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateStatusCheck
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateStatusCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateStatusCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.CreateCheckItemList
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAccessory                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsWeaponSkin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::CreateCheckItemList(bool IsAccessory, bool IsWeaponSkin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "CreateCheckItemList");

	Params::WB_ui_Equip_C_CreateCheckItemList Parms{};

	Parms.IsAccessory = IsAccessory;
	Parms.IsWeaponSkin = IsWeaponSkin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetCurrentEquipParam
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetCurrentEquipParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetCurrentEquipParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetCurrentListParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetCurrentListParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetCurrentListParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetWeaponID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   BaseID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             WeaponId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetWeaponID(int32 BaseID, class FName* WeaponId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetWeaponID");

	Params::WB_ui_Equip_C_GetWeaponID Parms{};

	Parms.BaseID = BaseID;

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponId != nullptr)
		*WeaponId = Parms.WeaponId;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetAccessoryID
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   BaseID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AccessoryId                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetAccessoryID(int32 BaseID, class FName* AccessoryId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetAccessoryID");

	Params::WB_ui_Equip_C_GetAccessoryID Parms{};

	Parms.BaseID = BaseID;

	UObject::ProcessEvent(Func, &Parms);

	if (AccessoryId != nullptr)
		*AccessoryId = Parms.AccessoryId;
}


// Function WB_ui_Equip.WB_ui_Equip_C.Sub Equip Item Count
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEquip                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsUseSkin                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::Sub_Equip_Item_Count(class FName ID, bool IsEquip, bool IsUseSkin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "Sub Equip Item Count");

	Params::WB_ui_Equip_C_Sub_Equip_Item_Count Parms{};

	Parms.ID = ID;
	Parms.IsEquip = IsEquip;
	Parms.IsUseSkin = IsUseSkin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.EquipChangeAddItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::EquipChangeAddItem(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "EquipChangeAddItem");

	Params::WB_ui_Equip_C_EquipChangeAddItem Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.EquipChangeSubItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::EquipChangeSubItem(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "EquipChangeSubItem");

	Params::WB_ui_Equip_C_EquipChangeSubItem Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SwapCurrentItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SwapCurrentItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SwapCurrentItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetIDNumber
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BaseID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetIDNumber(class FName BaseID, int32* Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetIDNumber");

	Params::WB_ui_Equip_C_GetIDNumber Parms{};

	Parms.BaseID = BaseID;

	UObject::ProcessEvent(Func, &Parms);

	if (Number != nullptr)
		*Number = Parms.Number;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetCurrentEquipID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   IDValue                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetCurrentEquipID(class FName* ID, int32* IDValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetCurrentEquipID");

	Params::WB_ui_Equip_C_GetCurrentEquipID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;

	if (IDValue != nullptr)
		*IDValue = Parms.IDValue;
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetCurrentEquipID
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::SetCurrentEquipID(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetCurrentEquipID");

	Params::WB_ui_Equip_C_SetCurrentEquipID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateItemList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AddItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SubItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::UpdateItemList(class FName AddItem, class FName SubItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateItemList");

	Params::WB_ui_Equip_C_UpdateItemList Parms{};

	Parms.AddItem = AddItem;
	Parms.SubItem = SubItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.InitializeCommonParts
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       TextHelp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_ui_Guide_C*                   Guide                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::InitializeCommonParts(class UTextBlock* TextHelp, class UWB_ui_Guide_C* Guide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "InitializeCommonParts");

	Params::WB_ui_Equip_C_InitializeCommonParts Parms{};

	Parms.TextHelp = TextHelp;
	Parms.Guide = Guide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.StateLoopCostume
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::StateLoopCostume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "StateLoopCostume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetupTab
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetupTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetupTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.ChangeTab
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::ChangeTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "ChangeTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.InitSelectEquip
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UpdateCursor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::InitSelectEquip(bool UpdateCursor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "InitSelectEquip");

	Params::WB_ui_Equip_C_InitSelectEquip Parms{};

	Parms.UpdateCursor = UpdateCursor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SelectTab
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SelectTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SelectTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetCostumeID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   BaseID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CostumeId                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetCostumeID(int32 BaseID, class FName* CostumeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetCostumeID");

	Params::WB_ui_Equip_C_GetCostumeID Parms{};

	Parms.BaseID = BaseID;

	UObject::ProcessEvent(Func, &Parms);

	if (CostumeId != nullptr)
		*CostumeId = Parms.CostumeId;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetAttachmentID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   BaseID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttachmentId                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetAttachmentID(int32 BaseID, class FName* AttachmentId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetAttachmentID");

	Params::WB_ui_Equip_C_GetAttachmentID Parms{};

	Parms.BaseID = BaseID;

	UObject::ProcessEvent(Func, &Parms);

	if (AttachmentId != nullptr)
		*AttachmentId = Parms.AttachmentId;
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateViewer
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateViewer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateViewer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.ChangeViewer
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::ChangeViewer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "ChangeViewer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetupPlayerList
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetupPlayerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetupPlayerList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.ChangePlayerList
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::ChangePlayerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "ChangePlayerList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetupCharaIcon
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetupCharaIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetupCharaIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetCurrentEquipWeapon
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::SetCurrentEquipWeapon(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetCurrentEquipWeapon");

	Params::WB_ui_Equip_C_SetCurrentEquipWeapon Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetCurrentEquipCostume
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::SetCurrentEquipCostume(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetCurrentEquipCostume");

	Params::WB_ui_Equip_C_SetCurrentEquipCostume Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SelectTabUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SelectTabUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SelectTabUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.EquipCharaDecide
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::EquipCharaDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "EquipCharaDecide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.EquipCharaMouseSetUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::EquipCharaMouseSetUp(ESlateVisibility Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "EquipCharaMouseSetUp");

	Params::WB_ui_Equip_C_EquipCharaMouseSetUp Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetCharaInfo
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerInfo                      Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWB_ui_Equip_C::SetCharaInfo(const struct FPlayerInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetCharaInfo");

	Params::WB_ui_Equip_C_SetCharaInfo Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetUpdateCharaStatusDetail
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::SetUpdateCharaStatusDetail(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetUpdateCharaStatusDetail");

	Params::WB_ui_Equip_C_SetUpdateCharaStatusDetail Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetSelectPlayerInfo
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerInfo                      PlayerInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWB_ui_Equip_C::SetSelectPlayerInfo(const struct FPlayerInfo& PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetSelectPlayerInfo");

	Params::WB_ui_Equip_C_SetSelectPlayerInfo Parms{};

	Parms.PlayerInfo = std::move(PlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetItemInfo
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FItemDataCell                    ItemData                                               (Parm, OutParm)

void UWB_ui_Equip_C::GetItemInfo(class FName ItemName, struct FItemDataCell* ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetItemInfo");

	Params::WB_ui_Equip_C_GetItemInfo Parms{};

	Parms.ItemName = ItemName;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemData != nullptr)
		*ItemData = std::move(Parms.ItemData);
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetCalcPlayerParam
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NewItemID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EquipItemID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPlayerInfo                      NowPlayerInfo                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPlayerInfo                      NewPlayerData                                          (Parm, OutParm, NoDestructor)

void UWB_ui_Equip_C::GetCalcPlayerParam(class FName NewItemID, class FName EquipItemID, const struct FPlayerInfo& NowPlayerInfo, struct FPlayerInfo* NewPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetCalcPlayerParam");

	Params::WB_ui_Equip_C_GetCalcPlayerParam Parms{};

	Parms.NewItemID = NewItemID;
	Parms.EquipItemID = EquipItemID;
	Parms.NowPlayerInfo = std::move(NowPlayerInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (NewPlayerData != nullptr)
		*NewPlayerData = std::move(Parms.NewPlayerData);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetPlayerInfoComparison
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerInfo                      PlayerInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPlayerInfo                      NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWB_ui_Equip_C::SetPlayerInfoComparison(const struct FPlayerInfo& PlayerInfo, const struct FPlayerInfo& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetPlayerInfoComparison");

	Params::WB_ui_Equip_C_SetPlayerInfoComparison Parms{};

	Parms.PlayerInfo = std::move(PlayerInfo);
	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsCurrentEquipAttachment
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsAttachment                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsCurrentEquipAttachment(bool* Param_IsAttachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsCurrentEquipAttachment");

	Params::WB_ui_Equip_C_IsCurrentEquipAttachment Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsAttachment != nullptr)
		*Param_IsAttachment = Parms.Param_IsAttachment;
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetHelpMessage
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetHelpMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetHelpMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetupGuideWidget
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ViewFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RemoveFlag                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DetailFlag                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SortFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FilterFlag                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::SetupGuideWidget(bool ViewFlag, bool RemoveFlag, bool DetailFlag, bool SortFlag, bool FilterFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetupGuideWidget");

	Params::WB_ui_Equip_C_SetupGuideWidget Parms{};

	Parms.ViewFlag = ViewFlag;
	Parms.RemoveFlag = RemoveFlag;
	Parms.DetailFlag = DetailFlag;
	Parms.SortFlag = SortFlag;
	Parms.FilterFlag = FilterFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetEquipCategory
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EItemCategory                           Category                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetEquipCategory(int32 Type, int32 ID, EItemCategory* Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetEquipCategory");

	Params::WB_ui_Equip_C_GetEquipCategory Parms{};

	Parms.Type = Type;
	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Category != nullptr)
		*Category = Parms.Category;
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsSameCategory
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemCategory                           Category1                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EItemCategory                           Category2                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSame                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsSameCategory(EItemCategory Category1, EItemCategory Category2, bool* IsSame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsSameCategory");

	Params::WB_ui_Equip_C_IsSameCategory Parms{};

	Parms.Category1 = Category1;
	Parms.Category2 = Category2;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSame != nullptr)
		*IsSame = Parms.IsSame;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetEquipID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BaseID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetEquipID(int32 Type, int32 BaseID, class FName* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetEquipID");

	Params::WB_ui_Equip_C_GetEquipID Parms{};

	Parms.Type = Type;
	Parms.BaseID = BaseID;

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetEquipNum
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetEquipNum(int32 Type, int32 ID, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetEquipNum");

	Params::WB_ui_Equip_C_GetEquipNum Parms{};

	Parms.Type = Type;
	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetEquipNumWeapon
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetEquipNumWeapon(int32 ID, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetEquipNumWeapon");

	Params::WB_ui_Equip_C_GetEquipNumWeapon Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetEquipNumAccessory
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetEquipNumAccessory(int32 ID, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetEquipNumAccessory");

	Params::WB_ui_Equip_C_GetEquipNumAccessory Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetEquipNumCostume
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetEquipNumCostume(int32 ID, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetEquipNumCostume");

	Params::WB_ui_Equip_C_GetEquipNumCostume Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function WB_ui_Equip.WB_ui_Equip_C.GetEquipNumAttachment
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::GetEquipNumAttachment(int32 ID, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "GetEquipNumAttachment");

	Params::WB_ui_Equip_C_GetEquipNumAttachment Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function WB_ui_Equip.WB_ui_Equip_C.InitOpenMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::InitOpenMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "InitOpenMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.InitChangeTab
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::InitChangeTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "InitChangeTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.OpenItemList
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStartSelect                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::OpenItemList(bool IsStartSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "OpenItemList");

	Params::WB_ui_Equip_C_OpenItemList Parms{};

	Parms.IsStartSelect = IsStartSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetupLockSelectCharaList
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetupLockSelectCharaList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetupLockSelectCharaList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateLockChara
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateLockChara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateLockChara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateCurrentCharaInfo
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateCurrentCharaInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateCurrentCharaInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsAttachment
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemCategory                           CheckId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsAttachment                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsAttachment(EItemCategory CheckId, bool* Param_IsAttachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsAttachment");

	Params::WB_ui_Equip_C_IsAttachment Parms{};

	Parms.CheckId = CheckId;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsAttachment != nullptr)
		*Param_IsAttachment = Parms.Param_IsAttachment;
}


// Function WB_ui_Equip.WB_ui_Equip_C.IncSortIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsChange                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IncSortIndex(bool* IsChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IncSortIndex");

	Params::WB_ui_Equip_C_IncSortIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsChange != nullptr)
		*IsChange = Parms.IsChange;
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetupItemList
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOpenItemList                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::SetupItemList(bool IsOpenItemList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetupItemList");

	Params::WB_ui_Equip_C_SetupItemList Parms{};

	Parms.IsOpenItemList = IsOpenItemList;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsAttachmentCategoryAlreadyEquip
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPlayerInfo                      CharaInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// int32                                   SwapIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EItemCategory                           CheckCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAlreadyEquip                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsAttachmentCategoryAlreadyEquip(struct FPlayerInfo& CharaInfo, int32 SwapIndex, EItemCategory CheckCategory, bool* IsAlreadyEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsAttachmentCategoryAlreadyEquip");

	Params::WB_ui_Equip_C_IsAttachmentCategoryAlreadyEquip Parms{};

	Parms.CharaInfo = std::move(CharaInfo);
	Parms.SwapIndex = SwapIndex;
	Parms.CheckCategory = CheckCategory;

	UObject::ProcessEvent(Func, &Parms);

	CharaInfo = std::move(Parms.CharaInfo);

	if (IsAlreadyEquip != nullptr)
		*IsAlreadyEquip = Parms.IsAlreadyEquip;
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateCheckEquipChange
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateCheckEquipChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateCheckEquipChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateChangeEquip
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateChangeEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateChangeEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.StartCheck
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::StartCheck(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "StartCheck");

	Params::WB_ui_Equip_C_StartCheck Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Equip.WB_ui_Equip_C.RemoveSameAttachment
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BaseID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::RemoveSameAttachment(class FName& BaseID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "RemoveSameAttachment");

	Params::WB_ui_Equip_C_RemoveSameAttachment Parms{};

	Parms.BaseID = BaseID;

	UObject::ProcessEvent(Func, &Parms);

	BaseID = Parms.BaseID;
}


// Function WB_ui_Equip.WB_ui_Equip_C.StartWarning
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::StartWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "StartWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsCurrentEquipPlugin
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlugin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsCurrentEquipPlugin(bool* IsPlugin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsCurrentEquipPlugin");

	Params::WB_ui_Equip_C_IsCurrentEquipPlugin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlugin != nullptr)
		*IsPlugin = Parms.IsPlugin;
}


// Function WB_ui_Equip.WB_ui_Equip_C.RemoveSamePlugin
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BaseID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::RemoveSamePlugin(class FName& BaseID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "RemoveSamePlugin");

	Params::WB_ui_Equip_C_RemoveSamePlugin Parms{};

	Parms.BaseID = BaseID;

	UObject::ProcessEvent(Func, &Parms);

	BaseID = Parms.BaseID;
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateWarning
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateSortBackupIndex
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateSortBackupIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateSortBackupIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.Get Sort Backup Index
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Equip_C::Get_Sort_Backup_Index(int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "Get Sort Backup Index");

	Params::WB_ui_Equip_C_Get_Sort_Backup_Index Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsEnableAttachmentFilter
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemCategory                           CheckCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsEnableAttachmentFilter(EItemCategory CheckCategory, bool* IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsEnableAttachmentFilter");

	Params::WB_ui_Equip_C_IsEnableAttachmentFilter Parms{};

	Parms.CheckCategory = CheckCategory;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnable != nullptr)
		*IsEnable = Parms.IsEnable;
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsOnlyPlayer
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOnly                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsOnlyPlayer(class FName ItemId, bool* IsOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsOnlyPlayer");

	Params::WB_ui_Equip_C_IsOnlyPlayer Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (IsOnly != nullptr)
		*IsOnly = Parms.IsOnly;
}


// Function WB_ui_Equip.WB_ui_Equip_C.ChangeAttachment3DModel
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::ChangeAttachment3DModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "ChangeAttachment3DModel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsNPCLeaderUnableItem
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUnable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsNPCLeaderUnableItem(class FName ItemId, bool* IsUnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsNPCLeaderUnableItem");

	Params::WB_ui_Equip_C_IsNPCLeaderUnableItem Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUnable != nullptr)
		*IsUnable = Parms.IsUnable;
}


// Function WB_ui_Equip.WB_ui_Equip_C.SetupDefaultParts
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::SetupDefaultParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "SetupDefaultParts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.UpdateItemListCursor
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Equip_C::UpdateItemListCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "UpdateItemListCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Equip.WB_ui_Equip_C.IsCurrentEquipWeaponSkin
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsWeaponSkin                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Equip_C::IsCurrentEquipWeaponSkin(bool* IsWeaponSkin) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Equip_C", "IsCurrentEquipWeaponSkin");

	Params::WB_ui_Equip_C_IsCurrentEquipWeaponSkin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsWeaponSkin != nullptr)
		*IsWeaponSkin = Parms.IsWeaponSkin;
}

}

