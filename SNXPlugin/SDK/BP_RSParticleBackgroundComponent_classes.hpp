#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RSParticleBackgroundComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BP_RSParticleSystemComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C
// 0x00C0 (0x07D0 - 0x0710)
class UBP_RSParticleBackgroundComponent_C final : public UBP_RSParticleSystemComponent_C
{
public:
	uint8                                         Pad_7D59[0x5];                                     // 0x070B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_RSParticleBackgroundComponent_C; // 0x0710(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsStopAtST;                                        // 0x0718(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayAtGameStart;                                   // 0x0719(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReplayAtEventFinish;                               // 0x071A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseDistanceCulling;                                // 0x071B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D5A[0x4];                                     // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEffectBackgroundParameter             EmitterParameter;                                  // 0x0720(0x0060)(Edit, BlueprintVisible)
	struct FTimerHandle                           TimerHandle;                                       // 0x0780(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnTimeIndex;                                    // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D5B[0x4];                                     // 0x078C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 SpawnTimes;                                        // 0x0790(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, AdvancedDisplay, HasGetValueTypeHash)
	float                                         EndTime;                                           // 0x07A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRandomTransform;                                // 0x07A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_7D5C[0x3];                                     // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PlayEventName;                                     // 0x07A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FString>                         StopEventName;                                     // 0x07B8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          EventCulling;                                      // 0x07C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BrainFieldParticle;                                // 0x07C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_RSParticleBackgroundComponent(int32 EntryPoint);
	void EventOnSystemFinished(class UParticleSystemComponent* PSystem);
	void PlayCheckFlags();
	void ReceiveBeginPlay();
	void StopAndHideParticle();
	void StopParticle();
	void PlayParticle();
	void SetBGEmitterParameter(struct FEffectBackgroundParameter& Parameter);
	void PrivateStartBGEmitterLoop();
	void PrivateSpawnBGEmitterLoop();
	void PrivateEndBGEmitterLoop();
	void PrivateSetupTransform();
	void SetEventCulling(bool Culling);
	void PrivatePlayCheckFlags();
	void SetBrainFieldParticle(bool BrainField);

	void IsBrainFieldParticle(bool* BrainField) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RSParticleBackgroundComponent_C">();
	}
	static class UBP_RSParticleBackgroundComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RSParticleBackgroundComponent_C>();
	}
};
static_assert(alignof(UBP_RSParticleBackgroundComponent_C) == 0x000010, "Wrong alignment on UBP_RSParticleBackgroundComponent_C");
static_assert(sizeof(UBP_RSParticleBackgroundComponent_C) == 0x0007D0, "Wrong size on UBP_RSParticleBackgroundComponent_C");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, UberGraphFrame_BP_RSParticleBackgroundComponent_C) == 0x000710, "Member 'UBP_RSParticleBackgroundComponent_C::UberGraphFrame_BP_RSParticleBackgroundComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, IsStopAtST) == 0x000718, "Member 'UBP_RSParticleBackgroundComponent_C::IsStopAtST' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, PlayAtGameStart) == 0x000719, "Member 'UBP_RSParticleBackgroundComponent_C::PlayAtGameStart' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, ReplayAtEventFinish) == 0x00071A, "Member 'UBP_RSParticleBackgroundComponent_C::ReplayAtEventFinish' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, UseDistanceCulling) == 0x00071B, "Member 'UBP_RSParticleBackgroundComponent_C::UseDistanceCulling' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, EmitterParameter) == 0x000720, "Member 'UBP_RSParticleBackgroundComponent_C::EmitterParameter' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, TimerHandle) == 0x000780, "Member 'UBP_RSParticleBackgroundComponent_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, SpawnTimeIndex) == 0x000788, "Member 'UBP_RSParticleBackgroundComponent_C::SpawnTimeIndex' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, SpawnTimes) == 0x000790, "Member 'UBP_RSParticleBackgroundComponent_C::SpawnTimes' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, EndTime) == 0x0007A0, "Member 'UBP_RSParticleBackgroundComponent_C::EndTime' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, UseRandomTransform) == 0x0007A4, "Member 'UBP_RSParticleBackgroundComponent_C::UseRandomTransform' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, PlayEventName) == 0x0007A8, "Member 'UBP_RSParticleBackgroundComponent_C::PlayEventName' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, StopEventName) == 0x0007B8, "Member 'UBP_RSParticleBackgroundComponent_C::StopEventName' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, EventCulling) == 0x0007C8, "Member 'UBP_RSParticleBackgroundComponent_C::EventCulling' has a wrong offset!");
static_assert(offsetof(UBP_RSParticleBackgroundComponent_C, BrainFieldParticle) == 0x0007C9, "Member 'UBP_RSParticleBackgroundComponent_C::BrainFieldParticle' has a wrong offset!");

}

