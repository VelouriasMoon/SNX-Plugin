#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateAttack

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerActionStateAttack.BP_PlayerActionStateAttack_C.Enter
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerActionStateAttack_C_Enter final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Enter_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKindPrev_ReturnValue;  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStealthMode_ReturnValue;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9851[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9852[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPsychicComboLevel_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9853[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9854[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetPsychicEmissionInterface_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckHardenRestriction_dummy;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKind_ReturnValue;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9855[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBattleReady_bDummy;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateAttack_C_Enter) == 0x000008, "Wrong alignment on BP_PlayerActionStateAttack_C_Enter");
static_assert(sizeof(BP_PlayerActionStateAttack_C_Enter) == 0x000068, "Wrong size on BP_PlayerActionStateAttack_C_Enter");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, Param) == 0x000000, "Member 'BP_PlayerActionStateAttack_C_Enter::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateAttack_C_Enter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_Enter_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_Enter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_GetComboAttackInputKindPrev_ReturnValue) == 0x00000D, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_GetComboAttackInputKindPrev_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_IsStealthMode_ReturnValue) == 0x00000E, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_IsStealthMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000010, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000018, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_IsControlAI_bAI) == 0x000019, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_RandomFloatInRange_ReturnValue) == 0x00001C, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_GetPsychicComboLevel_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_GetPsychicComboLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000028, "Member 'BP_PlayerActionStateAttack_C_Enter::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerActionStateAttack_C_Enter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_SetPsychicEmissionInterface_self_CastInput) == 0x000038, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_SetPsychicEmissionInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'BP_PlayerActionStateAttack_C_Enter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_CheckHardenRestriction_dummy) == 0x000049, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_CheckHardenRestriction_dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_GetComboAttackInputKind_ReturnValue) == 0x00004A, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_GetComboAttackInputKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_SetLookAtEnable_self_CastInput) == 0x000050, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_SetLookAtEnable_bResult) == 0x000060, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Enter, CallFunc_SetBattleReady_bDummy) == 0x000061, "Member 'BP_PlayerActionStateAttack_C_Enter::CallFunc_SetBattleReady_bDummy' has a wrong offset!");

// Function BP_PlayerActionStateAttack.BP_PlayerActionStateAttack_C.Update
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerActionStateAttack_C_Update final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetActionStateObstructPsychic_bDummy;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9856[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAttacking_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9857[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Update_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateAttack_C_Update) == 0x000004, "Wrong alignment on BP_PlayerActionStateAttack_C_Update");
static_assert(sizeof(BP_PlayerActionStateAttack_C_Update) == 0x000018, "Wrong size on BP_PlayerActionStateAttack_C_Update");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Update, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateAttack_C_Update::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Update, CallFunc_SetActionStateObstructPsychic_bDummy) == 0x000004, "Member 'BP_PlayerActionStateAttack_C_Update::CallFunc_SetActionStateObstructPsychic_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_PlayerActionStateAttack_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Update, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x000008, "Member 'BP_PlayerActionStateAttack_C_Update::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Update, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateAttack_C_Update::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Update, CallFunc_IsAttacking_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateAttack_C_Update::CallFunc_IsAttacking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Update, CallFunc_Update_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateAttack_C_Update::CallFunc_Update_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateAttack.BP_PlayerActionStateAttack_C.Exit
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerActionStateAttack_C_Exit final
{
public:
	int32                                         NextStateIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerActionKind                             LNextState;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9858[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9859[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Exit_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_985A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_985B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetPsychicEmissionInterface_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_985C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateAttack_C_Exit) == 0x000008, "Wrong alignment on BP_PlayerActionStateAttack_C_Exit");
static_assert(sizeof(BP_PlayerActionStateAttack_C_Exit) == 0x000068, "Wrong size on BP_PlayerActionStateAttack_C_Exit");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, NextStateIndex) == 0x000000, "Member 'BP_PlayerActionStateAttack_C_Exit::NextStateIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateAttack_C_Exit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, LNextState) == 0x000008, "Member 'BP_PlayerActionStateAttack_C_Exit::LNextState' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000010, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_Conv_IntToByte_ReturnValue) == 0x000018, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_GetValidValue_ReturnValue) == 0x000019, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_Exit_ReturnValue) == 0x00001C, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_Exit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_IsControlAI_bAI) == 0x000020, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_IsPlayerStatus_Result) == 0x000021, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000022, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000023, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000028, "Member 'BP_PlayerActionStateAttack_C_Exit::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerActionStateAttack_C_Exit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_SetPsychicEmissionInterface_self_CastInput) == 0x000038, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_SetPsychicEmissionInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_IsPlayerStatus_Result_1) == 0x000048, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_IsPlayerStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_SetLookAtEnable_self_CastInput) == 0x000050, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_Exit, CallFunc_SetLookAtEnable_bResult) == 0x000060, "Member 'BP_PlayerActionStateAttack_C_Exit::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");

// Function BP_PlayerActionStateAttack.BP_PlayerActionStateAttack_C.SetSuperArmor
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerActionStateAttack_C_SetSuperArmor final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerAccessoryEffect_bEquip;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_985D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerAccessoryEffect_Param;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateAttack_C_SetSuperArmor) == 0x000008, "Wrong alignment on BP_PlayerActionStateAttack_C_SetSuperArmor");
static_assert(sizeof(BP_PlayerActionStateAttack_C_SetSuperArmor) == 0x000020, "Wrong size on BP_PlayerActionStateAttack_C_SetSuperArmor");
static_assert(offsetof(BP_PlayerActionStateAttack_C_SetSuperArmor, bEnable) == 0x000000, "Member 'BP_PlayerActionStateAttack_C_SetSuperArmor::bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_SetSuperArmor, CallFunc_GetPlayerAccessoryEffect_bEquip) == 0x000001, "Member 'BP_PlayerActionStateAttack_C_SetSuperArmor::CallFunc_GetPlayerAccessoryEffect_bEquip' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_SetSuperArmor, CallFunc_GetPlayerAccessoryEffect_Param) == 0x000004, "Member 'BP_PlayerActionStateAttack_C_SetSuperArmor::CallFunc_GetPlayerAccessoryEffect_Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_SetSuperArmor, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000008, "Member 'BP_PlayerActionStateAttack_C_SetSuperArmor::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_SetSuperArmor, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000018, "Member 'BP_PlayerActionStateAttack_C_SetSuperArmor::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");

// Function BP_PlayerActionStateAttack.BP_PlayerActionStateAttack_C.RootMotionSetting
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerActionStateAttack_C_RootMotionSetting final
{
public:
	bool                                          LbIgnoreRootMotion;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_985E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_985F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateAttack_C_RootMotionSetting) == 0x000008, "Wrong alignment on BP_PlayerActionStateAttack_C_RootMotionSetting");
static_assert(sizeof(BP_PlayerActionStateAttack_C_RootMotionSetting) == 0x000038, "Wrong size on BP_PlayerActionStateAttack_C_RootMotionSetting");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, LbIgnoreRootMotion) == 0x000000, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::LbIgnoreRootMotion' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000008, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000018, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, CallFunc_GetPlayerID_self_CastInput) == 0x000020, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, CallFunc_GetPlayerID_ReturnValue) == 0x000030, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000032, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, CallFunc_BooleanOR_ReturnValue) == 0x000033, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateAttack_C_RootMotionSetting, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'BP_PlayerActionStateAttack_C_RootMotionSetting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerActionStateAttack.BP_PlayerActionStateAttack_C.EnableUseRootMotion
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerActionStateAttack_C_EnableUseRootMotion final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateAttack_C_EnableUseRootMotion) == 0x000001, "Wrong alignment on BP_PlayerActionStateAttack_C_EnableUseRootMotion");
static_assert(sizeof(BP_PlayerActionStateAttack_C_EnableUseRootMotion) == 0x000001, "Wrong size on BP_PlayerActionStateAttack_C_EnableUseRootMotion");
static_assert(offsetof(BP_PlayerActionStateAttack_C_EnableUseRootMotion, bDummy) == 0x000000, "Member 'BP_PlayerActionStateAttack_C_EnableUseRootMotion::bDummy' has a wrong offset!");

// Function BP_PlayerActionStateAttack.BP_PlayerActionStateAttack_C.ResetUseRootMotion
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerActionStateAttack_C_ResetUseRootMotion final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateAttack_C_ResetUseRootMotion) == 0x000001, "Wrong alignment on BP_PlayerActionStateAttack_C_ResetUseRootMotion");
static_assert(sizeof(BP_PlayerActionStateAttack_C_ResetUseRootMotion) == 0x000001, "Wrong size on BP_PlayerActionStateAttack_C_ResetUseRootMotion");
static_assert(offsetof(BP_PlayerActionStateAttack_C_ResetUseRootMotion, bDummy) == 0x000000, "Member 'BP_PlayerActionStateAttack_C_ResetUseRootMotion::bDummy' has a wrong offset!");

}

