#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_PK_psychic_gauge_2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C
// 0x0068 (0x03F0 - 0x0388)
class UWB_ui_PK_psychic_gauge_2_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Change_2_1;                                        // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Change_1_2;                                        // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_2_out;                                     // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_2_in;                                      // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_2;                                         // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_1_out;                                     // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_1_in;                                      // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_1;                                         // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Psychic_gauge_3_base;                              // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Psychic_timer_base_4;                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_psychic_gauge;                                // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsTimerMode;                                       // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_PK_psychic_gauge_2(int32 EntryPoint);
	void OnInitialized();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void StateNone(int32 SubState);
	void StateOpen(int32 SubState);
	void StateLoop(int32 SubState);
	void StateLoopTimer(int32 SubState);
	void SetTimerModeFlag(bool Param_IsTimerMode);
	void StateClose(int32 SubState);
	void SetGaugeLevel(int32 Level);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_PK_psychic_gauge_2_C">();
	}
	static class UWB_ui_PK_psychic_gauge_2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_PK_psychic_gauge_2_C>();
	}
};
static_assert(alignof(UWB_ui_PK_psychic_gauge_2_C) == 0x000008, "Wrong alignment on UWB_ui_PK_psychic_gauge_2_C");
static_assert(sizeof(UWB_ui_PK_psychic_gauge_2_C) == 0x0003F0, "Wrong size on UWB_ui_PK_psychic_gauge_2_C");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_PK_psychic_gauge_2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Change_2_1) == 0x000390, "Member 'UWB_ui_PK_psychic_gauge_2_C::Change_2_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Change_1_2) == 0x000398, "Member 'UWB_ui_PK_psychic_gauge_2_C::Change_1_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Default_2_out) == 0x0003A0, "Member 'UWB_ui_PK_psychic_gauge_2_C::Default_2_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Default_2_in) == 0x0003A8, "Member 'UWB_ui_PK_psychic_gauge_2_C::Default_2_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Default_2) == 0x0003B0, "Member 'UWB_ui_PK_psychic_gauge_2_C::Default_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Default_1_out) == 0x0003B8, "Member 'UWB_ui_PK_psychic_gauge_2_C::Default_1_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Default_1_in) == 0x0003C0, "Member 'UWB_ui_PK_psychic_gauge_2_C::Default_1_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Default_1) == 0x0003C8, "Member 'UWB_ui_PK_psychic_gauge_2_C::Default_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Psychic_gauge_3_base) == 0x0003D0, "Member 'UWB_ui_PK_psychic_gauge_2_C::Psychic_gauge_3_base' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Psychic_timer_base_4) == 0x0003D8, "Member 'UWB_ui_PK_psychic_gauge_2_C::Psychic_timer_base_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, Size_psychic_gauge) == 0x0003E0, "Member 'UWB_ui_PK_psychic_gauge_2_C::Size_psychic_gauge' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_2_C, IsTimerMode) == 0x0003E8, "Member 'UWB_ui_PK_psychic_gauge_2_C::IsTimerMode' has a wrong offset!");

}

