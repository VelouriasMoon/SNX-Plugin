#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Notice_Quest

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_Notice_Quest.WB_ui_Notice_Quest_C
// 0x0078 (0x0400 - 0x0388)
class UWB_ui_Notice_Quest_C final : public UUINoticeQuest
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out;                                               // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_none;                                      // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Quest_Frame_1;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_Frame_2;                                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_Grow;                                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_mark;                                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_noise_1;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_noise_2;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_notice_quest_category_1;                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_notice_quest_title;                           // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         AddCnt;                                            // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ManualClose;                                       // 0x03F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E3[0x3];                                     // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DispTime;                                          // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QuestCategory;                                     // 0x03FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_Notice_Quest(int32 EntryPoint);
	void WidgetAnimationEvt_in_K2Node_WidgetAnimationEvent_0();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	bool OpenStartSubQuest(class FName QuestId, float Param_DispTime, bool Param_ManualClose);
	bool OpenStartBondsQuest(class FName QuestId, float Param_DispTime, bool Param_ManualClose);
	bool CloseStartSubQuest(class FName QuestId, float Param_DispTime, bool Param_ManualClose);
	bool CloseStartBondsQuest(class FName QuestId, float Param_DispTime, bool Param_ManualClose);
	void StateNone(int32 SubState, float DeltaSecond);
	void StateOpen(int32 SubState, float DeltaSecond);
	void StateLoop(int32 SubState, float DeltaSecond);
	void StateClose(int32 SubState, float DeltaSecond);
	void SetSubQuestText(class FName QuestId);
	void SetBondsQuestText(class FName QuestId);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_Notice_Quest_C">();
	}
	static class UWB_ui_Notice_Quest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_Notice_Quest_C>();
	}
};
static_assert(alignof(UWB_ui_Notice_Quest_C) == 0x000008, "Wrong alignment on UWB_ui_Notice_Quest_C");
static_assert(sizeof(UWB_ui_Notice_Quest_C) == 0x000400, "Wrong size on UWB_ui_Notice_Quest_C");
static_assert(offsetof(UWB_ui_Notice_Quest_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_Notice_Quest_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Out) == 0x000390, "Member 'UWB_ui_Notice_Quest_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, In) == 0x000398, "Member 'UWB_ui_Notice_Quest_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Default_none) == 0x0003A0, "Member 'UWB_ui_Notice_Quest_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Default) == 0x0003A8, "Member 'UWB_ui_Notice_Quest_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Quest_Frame_1) == 0x0003B0, "Member 'UWB_ui_Notice_Quest_C::Quest_Frame_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Quest_Frame_2) == 0x0003B8, "Member 'UWB_ui_Notice_Quest_C::Quest_Frame_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Quest_Grow) == 0x0003C0, "Member 'UWB_ui_Notice_Quest_C::Quest_Grow' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Quest_mark) == 0x0003C8, "Member 'UWB_ui_Notice_Quest_C::Quest_mark' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Quest_noise_1) == 0x0003D0, "Member 'UWB_ui_Notice_Quest_C::Quest_noise_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Quest_noise_2) == 0x0003D8, "Member 'UWB_ui_Notice_Quest_C::Quest_noise_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Text_notice_quest_category_1) == 0x0003E0, "Member 'UWB_ui_Notice_Quest_C::Text_notice_quest_category_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, Text_notice_quest_title) == 0x0003E8, "Member 'UWB_ui_Notice_Quest_C::Text_notice_quest_title' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, AddCnt) == 0x0003F0, "Member 'UWB_ui_Notice_Quest_C::AddCnt' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, ManualClose) == 0x0003F4, "Member 'UWB_ui_Notice_Quest_C::ManualClose' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, DispTime) == 0x0003F8, "Member 'UWB_ui_Notice_Quest_C::DispTime' has a wrong offset!");
static_assert(offsetof(UWB_ui_Notice_Quest_C, QuestCategory) == 0x0003FC, "Member 'UWB_ui_Notice_Quest_C::QuestCategory' has a wrong offset!");

}

