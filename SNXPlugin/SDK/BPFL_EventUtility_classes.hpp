#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_EventUtility

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_EventUtility.BPFL_EventUtility_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_EventUtility_C final : public UBlueprintFunctionLibrary
{
public:
	static void CheckProgressID(int32 MinProgressID, int32 MaxProgressID, class UObject* __WorldContext, bool* ReturnEnable1);
	static void CheckScenarioFlagList(TArray<struct FFScenarioFlagCheckData>& ScenarioFlagList, class UObject* __WorldContext, bool* ReturnBool);
	static class UClass* GetCharaAnimInstance(const class UObject* Object, class UObject* __WorldContext);
	static class UAnimationAsset* GetCharaFaceAnimMontage(const class UObject* Object, class UObject* __WorldContext);
	static class UAnimationAsset* GetCharaBodyAnimMontage(const class UObject* Object, class UObject* __WorldContext);
	static void CheckScenarioFlag(class FName& ScenarioFlag, class UObject* __WorldContext, bool* FlagValue);
	static void SetScenarioFlag(class FName& ScenarioFlag, bool Value, class UObject* __WorldContext);
	static void CheckScenarioFlagListC(TArray<struct FShowDestinationFlgCheck>& ScenarioFlagList, class UObject* __WorldContext, bool* ReturnBool);
	static void GetEventAttachedMesh(class AActor* Actor, class UObject* __WorldContext, class ARSBattlePlayer_C** Player, class ABP_MenuPlayerBase_C** MenuPlayer, class USkeletalMeshComponent** SkeletalMeshComp, class UPrimitiveComponent** PrimitiveComp);
	static void GetSequenceObjectBindingIDPlayer(class ARSLevelSequenceActor* Sequencer, const class FText& PlayerId, TArray<class FName>& ObjTags, bool AllowSuffixNo, class UObject* __WorldContext, TArray<struct FMovieSceneObjectBindingID>* BindingIds, bool* IsFind);
	static void GetSequenceObjectBindingIDWeapon(class ARSLevelSequenceActor* Sequencer, const class FText& WeaponId, TArray<class FName>& ObjTags, bool AllowSuffixNo, class UObject* __WorldContext, TArray<struct FMovieSceneObjectBindingID>* BindingIds, bool* IsFind, TArray<class FString>* BindingNames);
	static void GetSequenceObjectBindingIDInternal(class ARSLevelSequenceActor* Sequencer, TArray<class FText>& PerfectMatch, TArray<class FName>& ObjTags, TArray<class FText>& SuffixList, class UObject* __WorldContext, TArray<struct FMovieSceneObjectBindingID>* BindingIds, bool* IsFind, TArray<class FString>* BindingNames);
	static void CheckBondsProgressID(int32 MinBondsProgressID, int32 MaxBondsProgressID, EPlayerID HeroID, EPlayerID PartnerId, class UObject* __WorldContext, bool* ReturnEnable1);
	static void SetFrameParticleMIDArray(class URSParticleSystemComponentBase* ParticleComponent, TArray<class UMaterialInstanceDynamic*>& MIDArray, class UObject* __WorldContext);
	static void SetupCutSceneActorHideDither(float DeltaSeconds, bool DitherStart, float NowTime, float MaxTime, TArray<class AActor*>& IgnoreActors, bool TargetPlayer, bool TargetEnemy, bool TargetPsychicObject, bool TargetDeadEnpc, bool TargetSavePoint, class UObject* __WorldContext, float* UpdatedTime);
	static void SetupSequencerTimeDilationCounter(class ALevelSequenceActor* LevelSequenceActor, class UObject* __WorldContext);
	static void GetEventMesh(class AActor* Actor, class UObject* __WorldContext, class ARSBattlePlayer_C** Player, class ABP_MenuPlayerBase_C** MenuPlayer, class USkeletalMeshComponent** SkeletalMeshComp, class UPrimitiveComponent** PrimitiveComp);
	static void GetEventAttachedMeshWithSub(class AActor* SelfActor, TArray<class AActor*>& SubAttachParentActors, class UObject* __WorldContext, class ARSBattlePlayer_C** Player, class ABP_MenuPlayerBase_C** MenuPlayer, class USkeletalMeshComponent** SkeletalMeshComp, class UPrimitiveComponent** PrimitiveComp);
	static void SetupAttachParentWithSub(class AActor* SelfActor, TArray<class AActor*>& SubAttachParentActors, class FName SocketName, class UObject* __WorldContext, class AActor** Parent);
	static void Check_Mesh_Wire_Visible(class USkeletalMesh* SkeletalMesh, class UObject* __WorldContext, bool* IsWireVisible);
	static void SetupPPMaskParticle(bool Enable, class UObject* __WorldContext, TArray<class ABP_SequencerParticle_C*>* CustomSteniclActors, TArray<int32>* RestoreCustomStencil);
	static void RestorePPMaskParticle(TArray<class ABP_SequencerParticle_C*>& CustomSteniclActors, TArray<int32>& RestoreCustomStencil, class UObject* __WorldContext);
	static void CheckOverProgressID(int32 ProgressId, class UObject* __WorldContext, bool* ReturnEnable1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_EventUtility_C">();
	}
	static class UBPFL_EventUtility_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_EventUtility_C>();
	}
};
static_assert(alignof(UBPFL_EventUtility_C) == 0x000008, "Wrong alignment on UBPFL_EventUtility_C");
static_assert(sizeof(UBPFL_EventUtility_C) == 0x000028, "Wrong size on UBPFL_EventUtility_C");

}

