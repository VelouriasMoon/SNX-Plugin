#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotifyState_TimeDilation

#include "Basic.hpp"

#include "EAnimNotifyTimeDilationMode_structs.hpp"
#include "ECharaExecuteNotifyKind_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotifyState_TimeDilation.AnimNotifyState_TimeDilation_C
// 0x0018 (0x0048 - 0x0030)
class UAnimNotifyState_TimeDilation_C final : public UAnimNotifyState
{
public:
	class FString                                 ClaimantName;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         TimeDilation;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimNotifyTimeDilationMode                   TimeDilationMode;                                  // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaExecuteNotifyKind                       ExecuteKind;                                       // 0x0045(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDeadOnly;                                        // 0x0046(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;
	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotifyState_TimeDilation_C">();
	}
	static class UAnimNotifyState_TimeDilation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_TimeDilation_C>();
	}
};
static_assert(alignof(UAnimNotifyState_TimeDilation_C) == 0x000008, "Wrong alignment on UAnimNotifyState_TimeDilation_C");
static_assert(sizeof(UAnimNotifyState_TimeDilation_C) == 0x000048, "Wrong size on UAnimNotifyState_TimeDilation_C");
static_assert(offsetof(UAnimNotifyState_TimeDilation_C, ClaimantName) == 0x000030, "Member 'UAnimNotifyState_TimeDilation_C::ClaimantName' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimeDilation_C, TimeDilation) == 0x000040, "Member 'UAnimNotifyState_TimeDilation_C::TimeDilation' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimeDilation_C, TimeDilationMode) == 0x000044, "Member 'UAnimNotifyState_TimeDilation_C::TimeDilationMode' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimeDilation_C, ExecuteKind) == 0x000045, "Member 'UAnimNotifyState_TimeDilation_C::ExecuteKind' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimeDilation_C, IsDeadOnly) == 0x000046, "Member 'UAnimNotifyState_TimeDilation_C::IsDeadOnly' has a wrong offset!");

}

