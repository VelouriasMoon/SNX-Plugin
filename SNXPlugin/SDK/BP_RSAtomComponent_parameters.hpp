#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RSAtomComponent

#include "Basic.hpp"

#include "FSASCopyParam_structs.hpp"
#include "FSASStealthParam_structs.hpp"
#include "AcceleratorParam_structs.hpp"
#include "E_SASKind_structs.hpp"
#include "FSASCommand_structs.hpp"
#include "FSASTelepoParam_structs.hpp"
#include "FSASPsychicParam_structs.hpp"
#include "FSASMetalParam_structs.hpp"
#include "FSASSeeThroughParam_structs.hpp"
#include "Engine_structs.hpp"
#include "FSASFireParam_structs.hpp"
#include "FSASElectricParam_structs.hpp"


namespace SDK::Params
{

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.ExecuteUbergraph_BP_RSAtomComponent
// 0x02E0 (0x02E0 - 0x0000)
struct BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASTelepoParam                       K2Node_Event_param_15;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_17;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASTelepoParam                       K2Node_Event_param_14;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E4[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_16;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_8;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_13;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E5[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_15;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_12;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E6[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_14;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_7;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param_11;                             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E7[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_13;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param_10;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E8[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_12;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_6;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param_9;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E9[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_11;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param_8;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EA[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_10;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_5;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAcceleratorParam                      K2Node_Event_Parameter_1;                          // 0x0094(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner_9;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram_1;                          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EB[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAcceleratorParam                      K2Node_Event_Parameter;                            // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner_8;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_4;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram;                            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASSeeThroughParam                   K2Node_Event_param_7;                              // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EC[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_7;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_3;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIgnoreAccelerate_Ignore;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39ED[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E8(0x0018)()
	bool                                          CallFunc_IsIgnoreAccelerate_Ignore_1;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EE[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0108(0x0040)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0170(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0188(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01A0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0220(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFSASSeeThroughParam                   K2Node_Event_param_6;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EF[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_6;                              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0240(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_5;                              // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F0[0x6];                                     // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_5;                              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_2;                         // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_4;                              // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F1[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_4;                              // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_3;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F2[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_3;                              // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_1;                         // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_2;                              // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F3[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_2;                              // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param_1;                              // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F4[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_1;                              // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime;                           // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param;                                // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F5[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner;                                // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F6[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager_1;           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent");
static_assert(sizeof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent) == 0x0002E0, "Wrong size on BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, EntryPoint) == 0x000000, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_15) == 0x000010, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_15' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_17) == 0x000018, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_17' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_14) == 0x000021, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_14' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_16) == 0x000028, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_16' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime_8) == 0x000030, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime_8' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_13) == 0x000034, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_13' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_15) == 0x000038, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_15' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_12) == 0x000040, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_12' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_14) == 0x000048, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_14' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime_7) == 0x000050, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime_7' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_11) == 0x000054, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_11' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_13) == 0x000058, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_13' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_10) == 0x000060, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_10' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_12) == 0x000068, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_12' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime_6) == 0x000070, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime_6' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_9) == 0x000074, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_9' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_11) == 0x000078, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_11' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_8) == 0x000080, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_8' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_10) == 0x000088, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_10' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime_5) == 0x000090, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime_5' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Parameter_1) == 0x000094, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Parameter_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_9) == 0x0000A0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_9' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_bHologram_1) == 0x0000A8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_bHologram_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Parameter) == 0x0000AC, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Parameter' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_8) == 0x0000B8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_8' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime_4) == 0x0000C0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime_4' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_bHologram) == 0x0000C4, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_bHologram' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_7) == 0x0000C5, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_7' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_7) == 0x0000C8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_7' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime_3) == 0x0000D0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime_3' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_IsIgnoreAccelerate_Ignore) == 0x0000D4, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_IsIgnoreAccelerate_Ignore' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_GetDisplayName_ReturnValue) == 0x0000D8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_IsIgnoreAccelerate_Ignore_1) == 0x000100, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_IsIgnoreAccelerate_Ignore_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_MakeStruct_FormatArgumentData) == 0x000108, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_GetOwner_ReturnValue) == 0x000148, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_Conv_BoolToString_ReturnValue) == 0x000150, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_GetDisplayName_ReturnValue_1) == 0x000160, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000170, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000188, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001A0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001E0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_MakeArray_Array) == 0x000220, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_6) == 0x000230, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_6' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_6) == 0x000238, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_6' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_Format_ReturnValue) == 0x000240, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_Conv_TextToString_ReturnValue) == 0x000258, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_EndPlayReason) == 0x000268, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_5) == 0x000269, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_5' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_5) == 0x000270, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_5' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime_2) == 0x000278, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime_2' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_4) == 0x00027C, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_4' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_4) == 0x000280, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_4' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_3) == 0x000288, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_3' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_3) == 0x000290, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_3' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime_1) == 0x000298, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_2) == 0x00029C, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_2' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_2) == 0x0002A0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_2' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param_1) == 0x0002A8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner_1) == 0x0002B0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_RemainTime) == 0x0002B8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_RemainTime' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_param) == 0x0002BC, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_Owner) == 0x0002C0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, K2Node_Event_DeltaSeconds) == 0x0002C8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_GetSoundManager_SoundManager_1) == 0x0002D0, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_GetSoundManager_SoundManager_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent, CallFunc_IsValid_ReturnValue_1) == 0x0002D8, "Member 'BP_RSAtomComponent_C_ExecuteUbergraph_BP_RSAtomComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_RSAtomComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_RSAtomComponent_C_ReceiveTick");
static_assert(sizeof(BP_RSAtomComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_RSAtomComponent_C_ReceiveTick");
static_assert(offsetof(BP_RSAtomComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_RSAtomComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnElectricStart
// 0x0010 (0x0010 - 0x0000)
struct BP_RSAtomComponent_C_OnElectricStart final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnElectricStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnElectricStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnElectricStart) == 0x000010, "Wrong size on BP_RSAtomComponent_C_OnElectricStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnElectricStart, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnElectricStart::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnElectricStart, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnElectricStart::Owner' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnElectricEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_RSAtomComponent_C_OnElectricEnd final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnElectricEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnElectricEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnElectricEnd) == 0x000018, "Wrong size on BP_RSAtomComponent_C_OnElectricEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnElectricEnd, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnElectricEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnElectricEnd, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnElectricEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnElectricEnd, RemainTime) == 0x000010, "Member 'BP_RSAtomComponent_C_OnElectricEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnFireStart
// 0x0010 (0x0010 - 0x0000)
struct BP_RSAtomComponent_C_OnFireStart final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnFireStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnFireStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnFireStart) == 0x000010, "Wrong size on BP_RSAtomComponent_C_OnFireStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnFireStart, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnFireStart::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnFireStart, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnFireStart::Owner' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnFireEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_RSAtomComponent_C_OnFireEnd final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnFireEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnFireEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnFireEnd) == 0x000018, "Wrong size on BP_RSAtomComponent_C_OnFireEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnFireEnd, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnFireEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnFireEnd, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnFireEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnFireEnd, RemainTime) == 0x000010, "Member 'BP_RSAtomComponent_C_OnFireEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnMetalStart
// 0x0010 (0x0010 - 0x0000)
struct BP_RSAtomComponent_C_OnMetalStart final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnMetalStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnMetalStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnMetalStart) == 0x000010, "Wrong size on BP_RSAtomComponent_C_OnMetalStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnMetalStart, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnMetalStart::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnMetalStart, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnMetalStart::Owner' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnMetalEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_RSAtomComponent_C_OnMetalEnd final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnMetalEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnMetalEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnMetalEnd) == 0x000018, "Wrong size on BP_RSAtomComponent_C_OnMetalEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnMetalEnd, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnMetalEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnMetalEnd, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnMetalEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnMetalEnd, RemainTime) == 0x000010, "Member 'BP_RSAtomComponent_C_OnMetalEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_RSAtomComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_RSAtomComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_RSAtomComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_RSAtomComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_RSAtomComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_RSAtomComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnSeeThroughStart
// 0x0010 (0x0010 - 0x0000)
struct BP_RSAtomComponent_C_OnSeeThroughStart final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnSeeThroughStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnSeeThroughStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnSeeThroughStart) == 0x000010, "Wrong size on BP_RSAtomComponent_C_OnSeeThroughStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnSeeThroughStart, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnSeeThroughStart::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnSeeThroughStart, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnSeeThroughStart::Owner' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnSeeThroughEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_RSAtomComponent_C_OnSeeThroughEnd final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnSeeThroughEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnSeeThroughEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnSeeThroughEnd) == 0x000018, "Wrong size on BP_RSAtomComponent_C_OnSeeThroughEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnSeeThroughEnd, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnSeeThroughEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnSeeThroughEnd, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnSeeThroughEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnSeeThroughEnd, RemainTime) == 0x000010, "Member 'BP_RSAtomComponent_C_OnSeeThroughEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnAcceleratorEnd
// 0x0020 (0x0020 - 0x0000)
struct BP_RSAtomComponent_C_OnAcceleratorEnd final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_OnAcceleratorEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnAcceleratorEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnAcceleratorEnd) == 0x000020, "Wrong size on BP_RSAtomComponent_C_OnAcceleratorEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnAcceleratorEnd, Parameter) == 0x000000, "Member 'BP_RSAtomComponent_C_OnAcceleratorEnd::Parameter' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnAcceleratorEnd, Owner) == 0x000010, "Member 'BP_RSAtomComponent_C_OnAcceleratorEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnAcceleratorEnd, RemainTime) == 0x000018, "Member 'BP_RSAtomComponent_C_OnAcceleratorEnd::RemainTime' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnAcceleratorEnd, bHologram) == 0x00001C, "Member 'BP_RSAtomComponent_C_OnAcceleratorEnd::bHologram' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnAcceleratorStart
// 0x0020 (0x0020 - 0x0000)
struct BP_RSAtomComponent_C_OnAcceleratorStart final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A00[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_OnAcceleratorStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnAcceleratorStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnAcceleratorStart) == 0x000020, "Wrong size on BP_RSAtomComponent_C_OnAcceleratorStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnAcceleratorStart, Parameter) == 0x000000, "Member 'BP_RSAtomComponent_C_OnAcceleratorStart::Parameter' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnAcceleratorStart, Owner) == 0x000010, "Member 'BP_RSAtomComponent_C_OnAcceleratorStart::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnAcceleratorStart, bHologram) == 0x000018, "Member 'BP_RSAtomComponent_C_OnAcceleratorStart::bHologram' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnPsychicEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_RSAtomComponent_C_OnPsychicEnd final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A01[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnPsychicEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnPsychicEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnPsychicEnd) == 0x000018, "Wrong size on BP_RSAtomComponent_C_OnPsychicEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnPsychicEnd, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnPsychicEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnPsychicEnd, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnPsychicEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnPsychicEnd, RemainTime) == 0x000010, "Member 'BP_RSAtomComponent_C_OnPsychicEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnPsychicStart
// 0x0010 (0x0010 - 0x0000)
struct BP_RSAtomComponent_C_OnPsychicStart final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A02[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnPsychicStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnPsychicStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnPsychicStart) == 0x000010, "Wrong size on BP_RSAtomComponent_C_OnPsychicStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnPsychicStart, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnPsychicStart::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnPsychicStart, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnPsychicStart::Owner' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnCopyEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_RSAtomComponent_C_OnCopyEnd final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A03[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnCopyEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnCopyEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnCopyEnd) == 0x000018, "Wrong size on BP_RSAtomComponent_C_OnCopyEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnCopyEnd, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnCopyEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnCopyEnd, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnCopyEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnCopyEnd, RemainTime) == 0x000010, "Member 'BP_RSAtomComponent_C_OnCopyEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnCopyStart
// 0x0010 (0x0010 - 0x0000)
struct BP_RSAtomComponent_C_OnCopyStart final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A04[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnCopyStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnCopyStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnCopyStart) == 0x000010, "Wrong size on BP_RSAtomComponent_C_OnCopyStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnCopyStart, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnCopyStart::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnCopyStart, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnCopyStart::Owner' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnStealthEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_RSAtomComponent_C_OnStealthEnd final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A05[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnStealthEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnStealthEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnStealthEnd) == 0x000018, "Wrong size on BP_RSAtomComponent_C_OnStealthEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnStealthEnd, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnStealthEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnStealthEnd, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnStealthEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnStealthEnd, RemainTime) == 0x000010, "Member 'BP_RSAtomComponent_C_OnStealthEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnStealthStart
// 0x0010 (0x0010 - 0x0000)
struct BP_RSAtomComponent_C_OnStealthStart final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A06[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnStealthStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnStealthStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnStealthStart) == 0x000010, "Wrong size on BP_RSAtomComponent_C_OnStealthStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnStealthStart, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnStealthStart::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnStealthStart, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnStealthStart::Owner' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnTelepoEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_RSAtomComponent_C_OnTelepoEnd final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A07[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnTelepoEnd) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnTelepoEnd");
static_assert(sizeof(BP_RSAtomComponent_C_OnTelepoEnd) == 0x000018, "Wrong size on BP_RSAtomComponent_C_OnTelepoEnd");
static_assert(offsetof(BP_RSAtomComponent_C_OnTelepoEnd, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnTelepoEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnTelepoEnd, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnTelepoEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnTelepoEnd, RemainTime) == 0x000010, "Member 'BP_RSAtomComponent_C_OnTelepoEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.OnTelepoStart
// 0x0010 (0x0010 - 0x0000)
struct BP_RSAtomComponent_C_OnTelepoStart final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A08[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_OnTelepoStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_OnTelepoStart");
static_assert(sizeof(BP_RSAtomComponent_C_OnTelepoStart) == 0x000010, "Wrong size on BP_RSAtomComponent_C_OnTelepoStart");
static_assert(offsetof(BP_RSAtomComponent_C_OnTelepoStart, Param) == 0x000000, "Member 'BP_RSAtomComponent_C_OnTelepoStart::Param' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_OnTelepoStart, Owner) == 0x000008, "Member 'BP_RSAtomComponent_C_OnTelepoStart::Owner' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.InitializeOnAccelarate
// 0x0030 (0x0030 - 0x0000)
struct BP_RSAtomComponent_C_InitializeOnAccelarate final
{
public:
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPPlayerManagerInterface_C> K2Node_DynamicCast_AsBPPlayer_Manager_Interface;   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A09[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAcceleratorParam                      CallFunc_GetCommandAccelerator_Command;            // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommandAccelerator_isEnable;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_InitializeOnAccelarate) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_InitializeOnAccelarate");
static_assert(sizeof(BP_RSAtomComponent_C_InitializeOnAccelarate) == 0x000030, "Wrong size on BP_RSAtomComponent_C_InitializeOnAccelarate");
static_assert(offsetof(BP_RSAtomComponent_C_InitializeOnAccelarate, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_RSAtomComponent_C_InitializeOnAccelarate::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_InitializeOnAccelarate, K2Node_DynamicCast_AsBPPlayer_Manager_Interface) == 0x000008, "Member 'BP_RSAtomComponent_C_InitializeOnAccelarate::K2Node_DynamicCast_AsBPPlayer_Manager_Interface' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_InitializeOnAccelarate, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_RSAtomComponent_C_InitializeOnAccelarate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_InitializeOnAccelarate, CallFunc_GetCommandAccelerator_Command) == 0x00001C, "Member 'BP_RSAtomComponent_C_InitializeOnAccelarate::CallFunc_GetCommandAccelerator_Command' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_InitializeOnAccelarate, CallFunc_GetCommandAccelerator_isEnable) == 0x000028, "Member 'BP_RSAtomComponent_C_InitializeOnAccelarate::CallFunc_GetCommandAccelerator_isEnable' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.SAS_CommonStart
// 0x0038 (0x0038 - 0x0000)
struct BP_RSAtomComponent_C_SAS_CommonStart final
{
public:
	struct FFSASCommand                           SAS_Command;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_SAS_CommonStart) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_SAS_CommonStart");
static_assert(sizeof(BP_RSAtomComponent_C_SAS_CommonStart) == 0x000038, "Wrong size on BP_RSAtomComponent_C_SAS_CommonStart");
static_assert(offsetof(BP_RSAtomComponent_C_SAS_CommonStart, SAS_Command) == 0x000000, "Member 'BP_RSAtomComponent_C_SAS_CommonStart::SAS_Command' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_SAS_CommonStart, Dummy) == 0x000030, "Member 'BP_RSAtomComponent_C_SAS_CommonStart::Dummy' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.SAS_CommonEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_RSAtomComponent_C_SAS_CommonEnd final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancelSASCost;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0A[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemainTime;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSAtomComponent_C_SAS_CommonEnd) == 0x000004, "Wrong alignment on BP_RSAtomComponent_C_SAS_CommonEnd");
static_assert(sizeof(BP_RSAtomComponent_C_SAS_CommonEnd) == 0x000008, "Wrong size on BP_RSAtomComponent_C_SAS_CommonEnd");
static_assert(offsetof(BP_RSAtomComponent_C_SAS_CommonEnd, SAS_Kind) == 0x000000, "Member 'BP_RSAtomComponent_C_SAS_CommonEnd::SAS_Kind' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_SAS_CommonEnd, bCancelSASCost) == 0x000001, "Member 'BP_RSAtomComponent_C_SAS_CommonEnd::bCancelSASCost' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_SAS_CommonEnd, bDummy) == 0x000002, "Member 'BP_RSAtomComponent_C_SAS_CommonEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_SAS_CommonEnd, RemainTime) == 0x000004, "Member 'BP_RSAtomComponent_C_SAS_CommonEnd::RemainTime' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.IsIgnoreAccelerate
// 0x0020 (0x0020 - 0x0000)
struct BP_RSAtomComponent_C_IsIgnoreAccelerate final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwnerPlayer_IsPlayer;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwnerPlayer_IsPlayer_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_IsIgnoreAccelerate) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_IsIgnoreAccelerate");
static_assert(sizeof(BP_RSAtomComponent_C_IsIgnoreAccelerate) == 0x000020, "Wrong size on BP_RSAtomComponent_C_IsIgnoreAccelerate");
static_assert(offsetof(BP_RSAtomComponent_C_IsIgnoreAccelerate, Ignore) == 0x000000, "Member 'BP_RSAtomComponent_C_IsIgnoreAccelerate::Ignore' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsIgnoreAccelerate, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'BP_RSAtomComponent_C_IsIgnoreAccelerate::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsIgnoreAccelerate, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_RSAtomComponent_C_IsIgnoreAccelerate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsIgnoreAccelerate, CallFunc_IsOwnerPlayer_IsPlayer) == 0x000018, "Member 'BP_RSAtomComponent_C_IsIgnoreAccelerate::CallFunc_IsOwnerPlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsIgnoreAccelerate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BP_RSAtomComponent_C_IsIgnoreAccelerate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsIgnoreAccelerate, CallFunc_IsOwnerPlayer_IsPlayer_1) == 0x00001A, "Member 'BP_RSAtomComponent_C_IsIgnoreAccelerate::CallFunc_IsOwnerPlayer_IsPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsIgnoreAccelerate, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'BP_RSAtomComponent_C_IsIgnoreAccelerate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsIgnoreAccelerate, CallFunc_BooleanOR_ReturnValue_1) == 0x00001C, "Member 'BP_RSAtomComponent_C_IsIgnoreAccelerate::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.IsOwnerPlayer
// 0x0028 (0x0028 - 0x0000)
struct BP_RSAtomComponent_C_IsOwnerPlayer final
{
public:
	class UObject*                                Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayer;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAcceleratorValid_Valid;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_IsOwnerPlayer) == 0x000008, "Wrong alignment on BP_RSAtomComponent_C_IsOwnerPlayer");
static_assert(sizeof(BP_RSAtomComponent_C_IsOwnerPlayer) == 0x000028, "Wrong size on BP_RSAtomComponent_C_IsOwnerPlayer");
static_assert(offsetof(BP_RSAtomComponent_C_IsOwnerPlayer, Actor) == 0x000000, "Member 'BP_RSAtomComponent_C_IsOwnerPlayer::Actor' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsOwnerPlayer, IsPlayer) == 0x000008, "Member 'BP_RSAtomComponent_C_IsOwnerPlayer::IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsOwnerPlayer, K2Node_DynamicCast_AsBPI_SASInterface) == 0x000010, "Member 'BP_RSAtomComponent_C_IsOwnerPlayer::K2Node_DynamicCast_AsBPI_SASInterface' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsOwnerPlayer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_RSAtomComponent_C_IsOwnerPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsOwnerPlayer, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_RSAtomComponent_C_IsOwnerPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSAtomComponent_C_IsOwnerPlayer, CallFunc_IsAcceleratorValid_Valid) == 0x000022, "Member 'BP_RSAtomComponent_C_IsOwnerPlayer::CallFunc_IsAcceleratorValid_Valid' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.IsAcceleratorValid
// 0x0001 (0x0001 - 0x0000)
struct BP_RSAtomComponent_C_IsAcceleratorValid final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_IsAcceleratorValid) == 0x000001, "Wrong alignment on BP_RSAtomComponent_C_IsAcceleratorValid");
static_assert(sizeof(BP_RSAtomComponent_C_IsAcceleratorValid) == 0x000001, "Wrong size on BP_RSAtomComponent_C_IsAcceleratorValid");
static_assert(offsetof(BP_RSAtomComponent_C_IsAcceleratorValid, Valid) == 0x000000, "Member 'BP_RSAtomComponent_C_IsAcceleratorValid::Valid' has a wrong offset!");

// Function BP_RSAtomComponent.BP_RSAtomComponent_C.IsAccelerating
// 0x0001 (0x0001 - 0x0000)
struct BP_RSAtomComponent_C_IsAccelerating final
{
public:
	bool                                          Accelerating;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSAtomComponent_C_IsAccelerating) == 0x000001, "Wrong alignment on BP_RSAtomComponent_C_IsAccelerating");
static_assert(sizeof(BP_RSAtomComponent_C_IsAccelerating) == 0x000001, "Wrong size on BP_RSAtomComponent_C_IsAccelerating");
static_assert(offsetof(BP_RSAtomComponent_C_IsAccelerating, Accelerating) == 0x000000, "Member 'BP_RSAtomComponent_C_IsAccelerating::Accelerating' has a wrong offset!");

}

