#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_RenderScarManage

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ERenderTargetType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.ExecuteUbergraph_BPC_RenderScarManage
// 0x0028 (0x0028 - 0x0000)
struct BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D* NewTarget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3889[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage");
static_assert(sizeof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage) == 0x000028, "Wrong size on BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage");
static_assert(offsetof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage, EntryPoint) == 0x000000, "Member 'BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage, K2Node_Event_EndPlayReason) == 0x000014, "Member 'BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000015, "Member 'BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage, CallFunc_IsValid_ReturnValue) == 0x000016, "Member 'BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage, CallFunc_GetRenderTargetManager_Manager) == 0x000020, "Member 'BPC_RenderScarManage_C_ExecuteUbergraph_BPC_RenderScarManage::CallFunc_GetRenderTargetManager_Manager' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_RenderScarManage_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_RenderScarManage_C_ReceiveTick");
static_assert(sizeof(BPC_RenderScarManage_C_ReceiveTick) == 0x000004, "Wrong size on BPC_RenderScarManage_C_ReceiveTick");
static_assert(offsetof(BPC_RenderScarManage_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_RenderScarManage_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BPC_RenderScarManage_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BPC_RenderScarManage_C_ReceiveEndPlay");
static_assert(sizeof(BPC_RenderScarManage_C_ReceiveEndPlay) == 0x000001, "Wrong size on BPC_RenderScarManage_C_ReceiveEndPlay");
static_assert(offsetof(BPC_RenderScarManage_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BPC_RenderScarManage_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.Initialize
// 0x0140 (0x0140 - 0x0000)
struct BPC_RenderScarManage_C_Initialize final
{
public:
	class FString                                 IndexString;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         MaskNum;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388B[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ScarSceneCapture_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D* NewTarget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_388C[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388D[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388E[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_388F[0x2];                                     // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_Initialize) == 0x000010, "Wrong alignment on BPC_RenderScarManage_C_Initialize");
static_assert(sizeof(BPC_RenderScarManage_C_Initialize) == 0x000140, "Wrong size on BPC_RenderScarManage_C_Initialize");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, IndexString) == 0x000000, "Member 'BPC_RenderScarManage_C_Initialize::IndexString' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, MaskNum) == 0x000010, "Member 'BPC_RenderScarManage_C_Initialize::MaskNum' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'BPC_RenderScarManage_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_GetRenderTargetManager_Manager) == 0x000070, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_GetRenderTargetManager_Manager' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, Temp_bool_Variable) == 0x000078, "Member 'BPC_RenderScarManage_C_Initialize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_MakeLiteralString_ReturnValue) == 0x000080, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A0, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_MakeLiteralString_ReturnValue_1) == 0x0000B0, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_MakeLiteralString_ReturnValue_2) == 0x0000D0, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000E0, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000E8, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Array_Add_ReturnValue_1) == 0x0000F8, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0000FC, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_MakeLiteralByte_ReturnValue) == 0x000104, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Array_Add_ReturnValue_2) == 0x000108, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Subtract_IntInt_ReturnValue) == 0x00010C, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, Temp_int_Variable) == 0x000114, "Member 'BPC_RenderScarManage_C_Initialize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_LoadSoftObject_ReturnValue) == 0x000118, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Conv_IntToString_ReturnValue) == 0x000120, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, K2Node_DynamicCast_AsMaterial_Interface) == 0x000130, "Member 'BPC_RenderScarManage_C_Initialize::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BPC_RenderScarManage_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000139, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'BPC_RenderScarManage_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.GetMeshRenderMaterial
// 0x0008 (0x0008 - 0x0000)
struct BPC_RenderScarManage_C_GetMeshRenderMaterial final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_GetMeshRenderMaterial) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_GetMeshRenderMaterial");
static_assert(sizeof(BPC_RenderScarManage_C_GetMeshRenderMaterial) == 0x000008, "Wrong size on BPC_RenderScarManage_C_GetMeshRenderMaterial");
static_assert(offsetof(BPC_RenderScarManage_C_GetMeshRenderMaterial, Material) == 0x000000, "Member 'BPC_RenderScarManage_C_GetMeshRenderMaterial::Material' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.AddScarMatrix
// 0x0070 (0x0070 - 0x0000)
struct BPC_RenderScarManage_C_AddScarMatrix final
{
public:
	class UMeshComponent*                         RenderMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         BaseMesh;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusSideScale;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusFrontScale;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThicknessScale;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixForward;                                     // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixRight;                                       // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixUpper;                                       // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHDamageEffectType                            DamageEffectType;                                  // 0x004C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePriority;                                       // 0x004D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3890[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RedHandle;                                         // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3891[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3892[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_AddScarMatrix) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_AddScarMatrix");
static_assert(sizeof(BPC_RenderScarManage_C_AddScarMatrix) == 0x000070, "Wrong size on BPC_RenderScarManage_C_AddScarMatrix");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, RenderMesh) == 0x000000, "Member 'BPC_RenderScarManage_C_AddScarMatrix::RenderMesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, BaseMesh) == 0x000008, "Member 'BPC_RenderScarManage_C_AddScarMatrix::BaseMesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, RadiusSideScale) == 0x000010, "Member 'BPC_RenderScarManage_C_AddScarMatrix::RadiusSideScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, RadiusFrontScale) == 0x000014, "Member 'BPC_RenderScarManage_C_AddScarMatrix::RadiusFrontScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, ThicknessScale) == 0x000018, "Member 'BPC_RenderScarManage_C_AddScarMatrix::ThicknessScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, Location) == 0x00001C, "Member 'BPC_RenderScarManage_C_AddScarMatrix::Location' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, MatrixForward) == 0x000028, "Member 'BPC_RenderScarManage_C_AddScarMatrix::MatrixForward' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, MatrixRight) == 0x000034, "Member 'BPC_RenderScarManage_C_AddScarMatrix::MatrixRight' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, MatrixUpper) == 0x000040, "Member 'BPC_RenderScarManage_C_AddScarMatrix::MatrixUpper' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, DamageEffectType) == 0x00004C, "Member 'BPC_RenderScarManage_C_AddScarMatrix::DamageEffectType' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, UsePriority) == 0x00004D, "Member 'BPC_RenderScarManage_C_AddScarMatrix::UsePriority' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, Priority) == 0x000050, "Member 'BPC_RenderScarManage_C_AddScarMatrix::Priority' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, Handle) == 0x000054, "Member 'BPC_RenderScarManage_C_AddScarMatrix::Handle' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, RedHandle) == 0x000058, "Member 'BPC_RenderScarManage_C_AddScarMatrix::RedHandle' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BPC_RenderScarManage_C_AddScarMatrix::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, Temp_int_Variable) == 0x000060, "Member 'BPC_RenderScarManage_C_AddScarMatrix::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BPC_RenderScarManage_C_AddScarMatrix::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000068, "Member 'BPC_RenderScarManage_C_AddScarMatrix::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrix, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BPC_RenderScarManage_C_AddScarMatrix::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivatePostCapture
// 0x0001 (0x0001 - 0x0000)
struct BPC_RenderScarManage_C_PrivatePostCapture final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivatePostCapture) == 0x000001, "Wrong alignment on BPC_RenderScarManage_C_PrivatePostCapture");
static_assert(sizeof(BPC_RenderScarManage_C_PrivatePostCapture) == 0x000001, "Wrong size on BPC_RenderScarManage_C_PrivatePostCapture");
static_assert(offsetof(BPC_RenderScarManage_C_PrivatePostCapture, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivatePostCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateDebugDraw
// 0x0140 (0x0140 - 0x0000)
struct BPC_RenderScarManage_C_PrivateDebugDraw final
{
public:
	float                                         RadiusSide;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusFront;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixForward;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixRight;                                       // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixUpper;                                       // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FrontLower;                                        // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FrontUpper;                                        // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftLower;                                         // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightLower;                                        // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftUpper;                                         // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightUpper;                                        // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateDebugDraw) == 0x000004, "Wrong alignment on BPC_RenderScarManage_C_PrivateDebugDraw");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateDebugDraw) == 0x000140, "Wrong size on BPC_RenderScarManage_C_PrivateDebugDraw");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, RadiusSide) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::RadiusSide' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, RadiusFront) == 0x000004, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::RadiusFront' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, Thickness) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::Thickness' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, Location) == 0x00000C, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::Location' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, MatrixForward) == 0x000018, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::MatrixForward' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, MatrixRight) == 0x000024, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::MatrixRight' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, MatrixUpper) == 0x000030, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::MatrixUpper' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, FrontLower) == 0x00003C, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::FrontLower' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, FrontUpper) == 0x000048, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::FrontUpper' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, LeftLower) == 0x000054, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::LeftLower' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, RightLower) == 0x000060, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::RightLower' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, LeftUpper) == 0x00006C, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::LeftUpper' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, RightUpper) == 0x000078, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::RightUpper' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000084, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000094, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000A0, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Add_VectorVector_ReturnValue) == 0x0000AC, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000C8, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D4, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0000E0, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000EC, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0000F8, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000104, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000110, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00011C, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000128, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateDebugDraw, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000134, "Member 'BPC_RenderScarManage_C_PrivateDebugDraw::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateUpdate
// 0x0058 (0x0058 - 0x0000)
struct BPC_RenderScarManage_C_PrivateUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3893[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Target;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTick;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3894[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3895[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3896[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3897[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateUpdateTime_CalcTime;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PrivateUpdateTime_Finish;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3898[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3899[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMeshComponent*                   Temp_object_Variable;                              // 0x0050(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateUpdate) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateUpdate");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateUpdate) == 0x000058, "Wrong size on BPC_RenderScarManage_C_PrivateUpdate");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, DeltaSeconds) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateUpdate::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, Target) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateUpdate::Target' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, UseTick) == 0x000010, "Member 'BPC_RenderScarManage_C_PrivateUpdate::UseTick' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, Param_Index) == 0x000014, "Member 'BPC_RenderScarManage_C_PrivateUpdate::Param_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BPC_RenderScarManage_C_PrivateUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BPC_RenderScarManage_C_PrivateUpdate::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BPC_RenderScarManage_C_PrivateUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BPC_RenderScarManage_C_PrivateUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BPC_RenderScarManage_C_PrivateUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BPC_RenderScarManage_C_PrivateUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPC_RenderScarManage_C_PrivateUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, Temp_bool_Variable) == 0x000038, "Member 'BPC_RenderScarManage_C_PrivateUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, CallFunc_SelectFloat_ReturnValue) == 0x00003C, "Member 'BPC_RenderScarManage_C_PrivateUpdate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, CallFunc_PrivateUpdateTime_CalcTime) == 0x000040, "Member 'BPC_RenderScarManage_C_PrivateUpdate::CallFunc_PrivateUpdateTime_CalcTime' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, CallFunc_PrivateUpdateTime_Finish) == 0x000044, "Member 'BPC_RenderScarManage_C_PrivateUpdate::CallFunc_PrivateUpdateTime_Finish' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BPC_RenderScarManage_C_PrivateUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdate, Temp_object_Variable) == 0x000050, "Member 'BPC_RenderScarManage_C_PrivateUpdate::Temp_object_Variable' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateUpdateTime
// 0x0080 (0x0080 - 0x0000)
struct BPC_RenderScarManage_C_PrivateUpdateTime final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CalcTime;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Finish;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurveRateValue;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurveIntensityValue;                               // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389D[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateUpdateTime) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateUpdateTime");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateUpdateTime) == 0x000080, "Wrong size on BPC_RenderScarManage_C_PrivateUpdateTime");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, DeltaSeconds) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, Param_Index) == 0x000004, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::Param_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CalcTime) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CalcTime' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, Finish) == 0x00000C, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::Finish' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, Mesh) == 0x000010, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::Mesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CurveRateValue) == 0x000018, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CurveRateValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CurveIntensityValue) == 0x000024, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CurveIntensityValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, Time) == 0x000030, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::Time' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, K2Node_MakeArray_Array) == 0x000038, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CallFunc_Array_Get_Item) == 0x000050, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CallFunc_GetVectorValue_ReturnValue) == 0x00005C, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CallFunc_GetTimeRange_MinTime) == 0x000068, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CallFunc_GetTimeRange_MaxTime) == 0x00006C, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateTime, CallFunc_GetVectorValue_ReturnValue_1) == 0x000074, "Member 'BPC_RenderScarManage_C_PrivateUpdateTime::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateSetMeshScarRate
// 0x0090 (0x0090 - 0x0000)
struct BPC_RenderScarManage_C_PrivateSetMeshScarRate final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rate;                                              // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BranchRate;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorFloat_ReturnValue;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateSetMeshScarRate) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateSetMeshScarRate");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateSetMeshScarRate) == 0x000090, "Wrong size on BPC_RenderScarManage_C_PrivateSetMeshScarRate");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, Mesh) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::Mesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, Param_Index) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::Param_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, Rate) == 0x00000C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::Rate' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, BranchRate) == 0x000018, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::BranchRate' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_X) == 0x000020, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_Y) == 0x000024, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_Z) == 0x000028, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_FClamp_ReturnValue) == 0x00002C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_FClamp_ReturnValue_1) == 0x000030, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_X_1) == 0x000040, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_Y_1) == 0x000044, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00004C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_Subtract_VectorFloat_ReturnValue) == 0x00005C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_Subtract_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_X_2) == 0x000068, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_Y_2) == 0x00006C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_BreakVector_Z_2) == 0x000070, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_MakeVector_ReturnValue_1) == 0x000074, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarRate, CallFunc_SelectVector_ReturnValue) == 0x000080, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarRate::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateSetMeshScarTexture
// 0x00E8 (0x00E8 - 0x0000)
struct BPC_RenderScarManage_C_PrivateSetMeshScarTexture final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseScarTexture;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             IgnoreMaterial;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Apply;                                             // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Material;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Clear;                                             // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A1[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               SetTexture;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A2[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A3[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A4[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A5[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A6[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A7[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A8[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A9[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AA[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateSetMeshScarTexture");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture) == 0x0000E8, "Wrong size on BPC_RenderScarManage_C_PrivateSetMeshScarTexture");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Mesh) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Mesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Param_Index) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Param_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, UseScarTexture) == 0x00000C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::UseScarTexture' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, IgnoreMaterial) == 0x000010, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::IgnoreMaterial' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Apply) == 0x000020, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Apply' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Material) == 0x000028, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Material' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Clear) == 0x000030, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Clear' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, SetTexture) == 0x000038, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::SetTexture' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Materials) == 0x000040, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Materials' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_bool_True_if_break_was_hit_Variable) == 0x000050, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_object_Variable) == 0x000070, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_int_Loop_Num_Variable_1) == 0x000084, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000090, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Array_Find_ReturnValue) == 0x00009C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_GetMaterials_ReturnValue) == 0x0000A8, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, Temp_bool_Variable) == 0x0000B8, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C0, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D0, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, K2Node_Select_Default) == 0x0000D8, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarTexture, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarTexture::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateSetMeshScarIntensity
// 0x0018 (0x0018 - 0x0000)
struct BPC_RenderScarManage_C_PrivateSetMeshScarIntensity final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Intensity;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateSetMeshScarIntensity) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateSetMeshScarIntensity");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateSetMeshScarIntensity) == 0x000018, "Wrong size on BPC_RenderScarManage_C_PrivateSetMeshScarIntensity");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarIntensity, Mesh) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarIntensity::Mesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarIntensity, Param_Index) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarIntensity::Param_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetMeshScarIntensity, Intensity) == 0x00000C, "Member 'BPC_RenderScarManage_C_PrivateSetMeshScarIntensity::Intensity' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.SetupScarColor
// 0x00A8 (0x00A8 - 0x0000)
struct BPC_RenderScarManage_C_SetupScarColor final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillAttribute;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScarColorParam                        ColorParam;                                        // 0x000C(0x0040)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AB[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_2;   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_3;   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AC[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AD[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RenderScarManage_C_SetupScarColor) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_SetupScarColor");
static_assert(sizeof(BPC_RenderScarManage_C_SetupScarColor) == 0x0000A8, "Wrong size on BPC_RenderScarManage_C_SetupScarColor");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, Mesh) == 0x000000, "Member 'BPC_RenderScarManage_C_SetupScarColor::Mesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, SkillAttribute) == 0x000008, "Member 'BPC_RenderScarManage_C_SetupScarColor::SkillAttribute' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, ColorParam) == 0x00000C, "Member 'BPC_RenderScarManage_C_SetupScarColor::ColorParam' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_MakeLiteralByte_ReturnValue) == 0x00004C, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000050, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_BitShiftLeft_ReturnValue) == 0x000054, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000058, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000064, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_Conv_LinearColorToVector_ReturnValue_2) == 0x000070, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_Conv_LinearColorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_Conv_LinearColorToVector_ReturnValue_3) == 0x00007C, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_Conv_LinearColorToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000088, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00008C, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_BitShiftLeft_ReturnValue_1) == 0x000090, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_And_IntInt_ReturnValue) == 0x000094, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_And_IntInt_ReturnValue_1) == 0x00009C, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetupScarColor, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BPC_RenderScarManage_C_SetupScarColor::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.AddScarMatrixByIndex
// 0x0250 (0x0250 - 0x0000)
struct BPC_RenderScarManage_C_AddScarMatrixByIndex final
{
public:
	class UMeshComponent*                         RenderMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         BaseMesh;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusSideScale;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusFrontScale;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThicknessScale;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixForward;                                     // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixRight;                                       // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixUpper;                                       // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHDamageEffectType                            DamageEffectType;                                  // 0x004C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AE[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AF[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             IgnoreMaterial;                                    // 0x0058(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusFront;                                       // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusSide;                                        // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B0[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         BeforeTarget;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0090(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array_2;                          // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_SearchMeshMaterialsFromSlot_FindMaterial; // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_SearchMeshMaterialsFromSlot_Index;        // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B1[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B2[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x00F0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F4(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B3[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B4[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B5[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B6[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0138(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0170(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B7[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_3;                          // 0x0200(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_4;   // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   K2Node_MakeArray_Array_4;                          // 0x0240(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_AddScarMatrixByIndex) == 0x000010, "Wrong alignment on BPC_RenderScarManage_C_AddScarMatrixByIndex");
static_assert(sizeof(BPC_RenderScarManage_C_AddScarMatrixByIndex) == 0x000250, "Wrong size on BPC_RenderScarManage_C_AddScarMatrixByIndex");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, RenderMesh) == 0x000000, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::RenderMesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, BaseMesh) == 0x000008, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::BaseMesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, RadiusSideScale) == 0x000010, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::RadiusSideScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, RadiusFrontScale) == 0x000014, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::RadiusFrontScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, ThicknessScale) == 0x000018, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::ThicknessScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, Location) == 0x00001C, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::Location' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, MatrixForward) == 0x000028, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::MatrixForward' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, MatrixRight) == 0x000034, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::MatrixRight' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, MatrixUpper) == 0x000040, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::MatrixUpper' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, DamageEffectType) == 0x00004C, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::DamageEffectType' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, Param_Index) == 0x000050, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, IgnoreMaterial) == 0x000058, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::IgnoreMaterial' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, Thickness) == 0x000068, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::Thickness' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, RadiusFront) == 0x00006C, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::RadiusFront' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, RadiusSide) == 0x000070, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::RadiusSide' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, BeforeTarget) == 0x000078, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::BeforeTarget' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, K2Node_MakeArray_Array) == 0x000080, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, K2Node_MakeArray_Array_1) == 0x000090, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, K2Node_MakeArray_Array_2) == 0x0000A0, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_SearchMeshMaterialsFromSlot_FindMaterial) == 0x0000B0, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_SearchMeshMaterialsFromSlot_FindMaterial' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_SearchMeshMaterialsFromSlot_Index) == 0x0000C0, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_SearchMeshMaterialsFromSlot_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D1, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D4, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000DC, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000E0, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, Temp_float_Variable) == 0x0000F0, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, Temp_bool_Variable) == 0x0000F4, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000F8, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x00010C, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_IsValid_ReturnValue_1) == 0x00011C, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, K2Node_CreateDelegate_OutputDelegate) == 0x000120, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_IsValid_ReturnValue_2) == 0x000130, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000138, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000140, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000170, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001F8, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001FC, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, K2Node_MakeArray_Array_3) == 0x000200, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000210, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000220, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, CallFunc_Conv_VectorToLinearColor_ReturnValue_4) == 0x000230, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::CallFunc_Conv_VectorToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_AddScarMatrixByIndex, K2Node_MakeArray_Array_4) == 0x000240, "Member 'BPC_RenderScarManage_C_AddScarMatrixByIndex::K2Node_MakeArray_Array_4' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.SetForceRate
// 0x0024 (0x0024 - 0x0000)
struct BPC_RenderScarManage_C_SetForceRate final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateUpdateTime_CalcTime;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PrivateUpdateTime_Finish;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B8[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RenderScarManage_C_SetForceRate) == 0x000004, "Wrong alignment on BPC_RenderScarManage_C_SetForceRate");
static_assert(sizeof(BPC_RenderScarManage_C_SetForceRate) == 0x000024, "Wrong size on BPC_RenderScarManage_C_SetForceRate");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, Param_Index) == 0x000000, "Member 'BPC_RenderScarManage_C_SetForceRate::Param_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, Rate) == 0x000004, "Member 'BPC_RenderScarManage_C_SetForceRate::Rate' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, CallFunc_GetTimeRange_MinTime) == 0x000008, "Member 'BPC_RenderScarManage_C_SetForceRate::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, CallFunc_GetTimeRange_MaxTime) == 0x00000C, "Member 'BPC_RenderScarManage_C_SetForceRate::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, CallFunc_PrivateUpdateTime_CalcTime) == 0x000010, "Member 'BPC_RenderScarManage_C_SetForceRate::CallFunc_PrivateUpdateTime_CalcTime' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, CallFunc_PrivateUpdateTime_Finish) == 0x000014, "Member 'BPC_RenderScarManage_C_SetForceRate::CallFunc_PrivateUpdateTime_Finish' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BPC_RenderScarManage_C_SetForceRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BPC_RenderScarManage_C_SetForceRate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceRate, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BPC_RenderScarManage_C_SetForceRate::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.SetForceUseUpdate
// 0x0008 (0x0008 - 0x0000)
struct BPC_RenderScarManage_C_SetForceUseUpdate final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RenderScarManage_C_SetForceUseUpdate) == 0x000004, "Wrong alignment on BPC_RenderScarManage_C_SetForceUseUpdate");
static_assert(sizeof(BPC_RenderScarManage_C_SetForceUseUpdate) == 0x000008, "Wrong size on BPC_RenderScarManage_C_SetForceUseUpdate");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceUseUpdate, Param_Index) == 0x000000, "Member 'BPC_RenderScarManage_C_SetForceUseUpdate::Param_Index' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceUseUpdate, Use) == 0x000004, "Member 'BPC_RenderScarManage_C_SetForceUseUpdate::Use' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_SetForceUseUpdate, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000005, "Member 'BPC_RenderScarManage_C_SetForceUseUpdate::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateSetupRenderTarget
// 0x0030 (0x0030 - 0x0000)
struct BPC_RenderScarManage_C_PrivateSetupRenderTarget final
{
public:
	bool                                          ForceSetup;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NowEvent;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ERenderTargetType                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERenderTargetType                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutSceneEvent_IsCutSceneEvent;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38BA[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERenderTargetType                             K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38BB[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_RenderTarget;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateSetupRenderTarget) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateSetupRenderTarget");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateSetupRenderTarget) == 0x000030, "Wrong size on BPC_RenderScarManage_C_PrivateSetupRenderTarget");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, ForceSetup) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::ForceSetup' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, NowEvent) == 0x000001, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::NowEvent' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, Temp_byte_Variable) == 0x000002, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, Temp_byte_Variable_1) == 0x000003, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, CallFunc_GetEventManager_EventManager) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, CallFunc_IsCutSceneEvent_IsCutSceneEvent) == 0x000013, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::CallFunc_IsCutSceneEvent_IsCutSceneEvent' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, Temp_bool_Variable) == 0x000014, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, CallFunc_GetRenderTargetManager_Manager) == 0x000018, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::CallFunc_GetRenderTargetManager_Manager' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, K2Node_Select_Default) == 0x000020, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetupRenderTarget, CallFunc_GetRenderTarget_RenderTarget) == 0x000028, "Member 'BPC_RenderScarManage_C_PrivateSetupRenderTarget::CallFunc_GetRenderTarget_RenderTarget' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateSetRenderTargetTexture
// 0x0010 (0x0010 - 0x0000)
struct BPC_RenderScarManage_C_PrivateSetRenderTargetTexture final
{
public:
	class UTextureRenderTarget2D*                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateSetRenderTargetTexture) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateSetRenderTargetTexture");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateSetRenderTargetTexture) == 0x000010, "Wrong size on BPC_RenderScarManage_C_PrivateSetRenderTargetTexture");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetRenderTargetTexture, Target) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateSetRenderTargetTexture::Target' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateSetRenderTargetTexture, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateSetRenderTargetTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateResetRenderTarget
// 0x0018 (0x0018 - 0x0000)
struct BPC_RenderScarManage_C_PrivateResetRenderTarget final
{
public:
	ERenderTargetType                             RenderTargetType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38BC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 NewTarget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERenderTargetType                             Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERenderTargetType                             Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERenderTargetType                             K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateResetRenderTarget) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateResetRenderTarget");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateResetRenderTarget) == 0x000018, "Wrong size on BPC_RenderScarManage_C_PrivateResetRenderTarget");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateResetRenderTarget, RenderTargetType) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateResetRenderTarget::RenderTargetType' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateResetRenderTarget, NewTarget) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateResetRenderTarget::NewTarget' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateResetRenderTarget, Temp_bool_Variable) == 0x000010, "Member 'BPC_RenderScarManage_C_PrivateResetRenderTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateResetRenderTarget, Temp_byte_Variable) == 0x000011, "Member 'BPC_RenderScarManage_C_PrivateResetRenderTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateResetRenderTarget, Temp_byte_Variable_1) == 0x000012, "Member 'BPC_RenderScarManage_C_PrivateResetRenderTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateResetRenderTarget, K2Node_Select_Default) == 0x000013, "Member 'BPC_RenderScarManage_C_PrivateResetRenderTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateResetRenderTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'BPC_RenderScarManage_C_PrivateResetRenderTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateAddCache
// 0x0050 (0x0050 - 0x0000)
struct BPC_RenderScarManage_C_PrivateAddCache final
{
public:
	class UMeshComponent*                         RenderMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         BaseMesh;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusSideScale;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusFrontScale;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThicknessScale;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixForward;                                     // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixRight;                                       // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MatrixUpper;                                       // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHDamageEffectType                            DamageEffectType;                                  // 0x004C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateAddCache) == 0x000008, "Wrong alignment on BPC_RenderScarManage_C_PrivateAddCache");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateAddCache) == 0x000050, "Wrong size on BPC_RenderScarManage_C_PrivateAddCache");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, RenderMesh) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateAddCache::RenderMesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, BaseMesh) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateAddCache::BaseMesh' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, RadiusSideScale) == 0x000010, "Member 'BPC_RenderScarManage_C_PrivateAddCache::RadiusSideScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, RadiusFrontScale) == 0x000014, "Member 'BPC_RenderScarManage_C_PrivateAddCache::RadiusFrontScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, ThicknessScale) == 0x000018, "Member 'BPC_RenderScarManage_C_PrivateAddCache::ThicknessScale' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, Location) == 0x00001C, "Member 'BPC_RenderScarManage_C_PrivateAddCache::Location' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, MatrixForward) == 0x000028, "Member 'BPC_RenderScarManage_C_PrivateAddCache::MatrixForward' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, MatrixRight) == 0x000034, "Member 'BPC_RenderScarManage_C_PrivateAddCache::MatrixRight' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, MatrixUpper) == 0x000040, "Member 'BPC_RenderScarManage_C_PrivateAddCache::MatrixUpper' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateAddCache, DamageEffectType) == 0x00004C, "Member 'BPC_RenderScarManage_C_PrivateAddCache::DamageEffectType' has a wrong offset!");

// Function BPC_RenderScarManage.BPC_RenderScarManage_C.PrivateUpdateCache
// 0x000C (0x000C - 0x0000)
struct BPC_RenderScarManage_C_PrivateUpdateCache final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddScarMatrix_Handle;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RenderScarManage_C_PrivateUpdateCache) == 0x000004, "Wrong alignment on BPC_RenderScarManage_C_PrivateUpdateCache");
static_assert(sizeof(BPC_RenderScarManage_C_PrivateUpdateCache) == 0x00000C, "Wrong size on BPC_RenderScarManage_C_PrivateUpdateCache");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateCache, DeltaSeconds) == 0x000000, "Member 'BPC_RenderScarManage_C_PrivateUpdateCache::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateCache, CallFunc_AddScarMatrix_Handle) == 0x000004, "Member 'BPC_RenderScarManage_C_PrivateUpdateCache::CallFunc_AddScarMatrix_Handle' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateCache, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BPC_RenderScarManage_C_PrivateUpdateCache::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RenderScarManage_C_PrivateUpdateCache, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BPC_RenderScarManage_C_PrivateUpdateCache::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

