#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BgmComponent

#include "Basic.hpp"

#include "AcceleratorParam_structs.hpp"
#include "Engine_structs.hpp"
#include "FSASFireParam_structs.hpp"
#include "FSASElectricParam_structs.hpp"


namespace SDK::Params
{

// Function BP_BgmComponent.BP_BgmComponent_C.ExecuteUbergraph_BP_BgmComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAcceleratorParam                      K2Node_Event_Parameter_1;                          // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3C[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_5;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram_1;                          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3D[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAcceleratorParam                      K2Node_Event_Parameter;                            // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner_4;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_2;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram;                            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASFireParam                         K2Node_Event_param_3;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3E[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_3;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_1;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_2;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3F[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_2;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A40[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_1;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A41[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner;                                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent) == 0x000008, "Wrong alignment on BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent");
static_assert(sizeof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent) == 0x000090, "Wrong size on BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, EntryPoint) == 0x000000, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, CallFunc_GetSoundManager_SoundManager_1) == 0x000010, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::CallFunc_GetSoundManager_SoundManager_1' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_EndPlayReason) == 0x00001C, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_Parameter_1) == 0x000020, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_Parameter_1' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_Owner_5) == 0x000030, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_Owner_5' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_bHologram_1) == 0x000038, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_bHologram_1' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_Parameter) == 0x00003C, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_Parameter' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_Owner_4) == 0x000048, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_Owner_4' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_RemainTime_2) == 0x000050, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_RemainTime_2' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_bHologram) == 0x000054, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_bHologram' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_param_3) == 0x000055, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_param_3' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_Owner_3) == 0x000058, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_Owner_3' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_RemainTime_1) == 0x000060, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_RemainTime_1' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_param_2) == 0x000064, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_param_2' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_Owner_2) == 0x000068, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_Owner_2' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_param_1) == 0x000070, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_param_1' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_Owner_1) == 0x000078, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_Owner_1' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_RemainTime) == 0x000080, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_RemainTime' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_param) == 0x000084, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_param' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent, K2Node_Event_Owner) == 0x000088, "Member 'BP_BgmComponent_C_ExecuteUbergraph_BP_BgmComponent::K2Node_Event_Owner' has a wrong offset!");

// Function BP_BgmComponent.BP_BgmComponent_C.OnElectricStart
// 0x0010 (0x0010 - 0x0000)
struct BP_BgmComponent_C_OnElectricStart final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A42[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BgmComponent_C_OnElectricStart) == 0x000008, "Wrong alignment on BP_BgmComponent_C_OnElectricStart");
static_assert(sizeof(BP_BgmComponent_C_OnElectricStart) == 0x000010, "Wrong size on BP_BgmComponent_C_OnElectricStart");
static_assert(offsetof(BP_BgmComponent_C_OnElectricStart, Param) == 0x000000, "Member 'BP_BgmComponent_C_OnElectricStart::Param' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnElectricStart, Owner) == 0x000008, "Member 'BP_BgmComponent_C_OnElectricStart::Owner' has a wrong offset!");

// Function BP_BgmComponent.BP_BgmComponent_C.OnElectricEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_BgmComponent_C_OnElectricEnd final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A43[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BgmComponent_C_OnElectricEnd) == 0x000008, "Wrong alignment on BP_BgmComponent_C_OnElectricEnd");
static_assert(sizeof(BP_BgmComponent_C_OnElectricEnd) == 0x000018, "Wrong size on BP_BgmComponent_C_OnElectricEnd");
static_assert(offsetof(BP_BgmComponent_C_OnElectricEnd, Param) == 0x000000, "Member 'BP_BgmComponent_C_OnElectricEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnElectricEnd, Owner) == 0x000008, "Member 'BP_BgmComponent_C_OnElectricEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnElectricEnd, RemainTime) == 0x000010, "Member 'BP_BgmComponent_C_OnElectricEnd::RemainTime' has a wrong offset!");

// Function BP_BgmComponent.BP_BgmComponent_C.OnFireStart
// 0x0010 (0x0010 - 0x0000)
struct BP_BgmComponent_C_OnFireStart final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A44[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BgmComponent_C_OnFireStart) == 0x000008, "Wrong alignment on BP_BgmComponent_C_OnFireStart");
static_assert(sizeof(BP_BgmComponent_C_OnFireStart) == 0x000010, "Wrong size on BP_BgmComponent_C_OnFireStart");
static_assert(offsetof(BP_BgmComponent_C_OnFireStart, Param) == 0x000000, "Member 'BP_BgmComponent_C_OnFireStart::Param' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnFireStart, Owner) == 0x000008, "Member 'BP_BgmComponent_C_OnFireStart::Owner' has a wrong offset!");

// Function BP_BgmComponent.BP_BgmComponent_C.OnFireEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_BgmComponent_C_OnFireEnd final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A45[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BgmComponent_C_OnFireEnd) == 0x000008, "Wrong alignment on BP_BgmComponent_C_OnFireEnd");
static_assert(sizeof(BP_BgmComponent_C_OnFireEnd) == 0x000018, "Wrong size on BP_BgmComponent_C_OnFireEnd");
static_assert(offsetof(BP_BgmComponent_C_OnFireEnd, Param) == 0x000000, "Member 'BP_BgmComponent_C_OnFireEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnFireEnd, Owner) == 0x000008, "Member 'BP_BgmComponent_C_OnFireEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnFireEnd, RemainTime) == 0x000010, "Member 'BP_BgmComponent_C_OnFireEnd::RemainTime' has a wrong offset!");

// Function BP_BgmComponent.BP_BgmComponent_C.OnAcceleratorEnd
// 0x0020 (0x0020 - 0x0000)
struct BP_BgmComponent_C_OnAcceleratorEnd final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A46[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BgmComponent_C_OnAcceleratorEnd) == 0x000008, "Wrong alignment on BP_BgmComponent_C_OnAcceleratorEnd");
static_assert(sizeof(BP_BgmComponent_C_OnAcceleratorEnd) == 0x000020, "Wrong size on BP_BgmComponent_C_OnAcceleratorEnd");
static_assert(offsetof(BP_BgmComponent_C_OnAcceleratorEnd, Parameter) == 0x000000, "Member 'BP_BgmComponent_C_OnAcceleratorEnd::Parameter' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnAcceleratorEnd, Owner) == 0x000010, "Member 'BP_BgmComponent_C_OnAcceleratorEnd::Owner' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnAcceleratorEnd, RemainTime) == 0x000018, "Member 'BP_BgmComponent_C_OnAcceleratorEnd::RemainTime' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnAcceleratorEnd, bHologram) == 0x00001C, "Member 'BP_BgmComponent_C_OnAcceleratorEnd::bHologram' has a wrong offset!");

// Function BP_BgmComponent.BP_BgmComponent_C.OnAcceleratorStart
// 0x0020 (0x0020 - 0x0000)
struct BP_BgmComponent_C_OnAcceleratorStart final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A47[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BgmComponent_C_OnAcceleratorStart) == 0x000008, "Wrong alignment on BP_BgmComponent_C_OnAcceleratorStart");
static_assert(sizeof(BP_BgmComponent_C_OnAcceleratorStart) == 0x000020, "Wrong size on BP_BgmComponent_C_OnAcceleratorStart");
static_assert(offsetof(BP_BgmComponent_C_OnAcceleratorStart, Parameter) == 0x000000, "Member 'BP_BgmComponent_C_OnAcceleratorStart::Parameter' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnAcceleratorStart, Owner) == 0x000010, "Member 'BP_BgmComponent_C_OnAcceleratorStart::Owner' has a wrong offset!");
static_assert(offsetof(BP_BgmComponent_C_OnAcceleratorStart, bHologram) == 0x000018, "Member 'BP_BgmComponent_C_OnAcceleratorStart::bHologram' has a wrong offset!");

// Function BP_BgmComponent.BP_BgmComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_BgmComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BgmComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_BgmComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_BgmComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_BgmComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_BgmComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_BgmComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_BgmComponent.BP_BgmComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BgmComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BgmComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BgmComponent_C_ReceiveTick");
static_assert(sizeof(BP_BgmComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_BgmComponent_C_ReceiveTick");
static_assert(offsetof(BP_BgmComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BgmComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

