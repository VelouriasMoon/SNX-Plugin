#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PsychicComponentMain

#include "Basic.hpp"

#include "BP_PsychicComponentMain_classes.hpp"
#include "BP_PsychicComponentMain_parameters.hpp"


namespace SDK
{

// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetupComponentParam
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Meah_comp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   Aura_comp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   Shadow_comp                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Dir_comp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInertialMoveComponent_C*         Inertial_move_comp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Hit_primitive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Attack_primitive                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetupComponentParam(class UMeshComponent* Meah_comp, class UMeshComponent* Aura_comp, class UMeshComponent* Shadow_comp, class USceneComponent* Dir_comp, class UInertialMoveComponent_C* Inertial_move_comp, class UPrimitiveComponent* Hit_primitive, class UPrimitiveComponent* Attack_primitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetupComponentParam");

	Params::BP_PsychicComponentMain_C_SetupComponentParam Parms{};

	Parms.Meah_comp = Meah_comp;
	Parms.Aura_comp = Aura_comp;
	Parms.Shadow_comp = Shadow_comp;
	Parms.Dir_comp = Dir_comp;
	Parms.Inertial_move_comp = Inertial_move_comp;
	Parms.Hit_primitive = Hit_primitive;
	Parms.Attack_primitive = Attack_primitive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.Update
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_second                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::Update(float Delta_second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "Update");

	Params::BP_PsychicComponentMain_C_Update Parms{};

	Parms.Delta_second = Delta_second;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateThrowLinear
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::UpdateThrowLinear(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateThrowLinear");

	Params::BP_PsychicComponentMain_C_UpdateThrowLinear Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.StartMoveThrow
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::StartMoveThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "StartMoveThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CalcDirectionVectorToTarget
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPlayerTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNowRot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

struct FVector UBP_PsychicComponentMain_C::CalcDirectionVectorToTarget(bool bPlayerTarget, bool bNowRot, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CalcDirectionVectorToTarget");

	Params::BP_PsychicComponentMain_C_CalcDirectionVectorToTarget Parms{};

	Parms.bPlayerTarget = bPlayerTarget;
	Parms.bNowRot = bNowRot;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	return Parms.ReturnValue;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_TargetActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Force_throw                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_combo                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_ex_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_attach                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetAttackThrow(class AActor* Param_TargetActor, bool Force_throw, bool Psychic_combo, bool Psychic_ex_in, bool Check_attach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackThrow");

	Params::BP_PsychicComponentMain_C_SetAttackThrow Parms{};

	Parms.Param_TargetActor = Param_TargetActor;
	Parms.Force_throw = Force_throw;
	Parms.Psychic_combo = Psychic_combo;
	Parms.Psychic_ex_in = Psychic_ex_in;
	Parms.Check_attach = Check_attach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateGrabGauge
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::UpdateGrabGauge(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateGrabGauge");

	Params::BP_PsychicComponentMain_C_UpdateGrabGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::DebugDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateGrabMove
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateGrabMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateGrabMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.StartGrabMove
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bReload                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bCombo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::StartGrabMove(bool bForce, bool bReload, bool bCombo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "StartGrabMove");

	Params::BP_PsychicComponentMain_C_StartGrabMove Parms{};

	Parms.bForce = bForce;
	Parms.bReload = bReload;
	Parms.bCombo = bCombo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Return                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplayName(const class FString& Str_in, class FString* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayName");

	Params::BP_PsychicComponentMain_C_DebugDisplayName Parms{};

	Parms.Str_in = std::move(Str_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Return                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplayState(const class FString& Str_in, class FString* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayState");

	Params::BP_PsychicComponentMain_C_DebugDisplayState Parms{};

	Parms.Str_in = std::move(Str_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplaySearchInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Return                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplaySearchInfo(const class FString& Str, class FString* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplaySearchInfo");

	Params::BP_PsychicComponentMain_C_DebugDisplaySearchInfo Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Return                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplayDistance(const class FString& Str, class FString* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayDistance");

	Params::BP_PsychicComponentMain_C_DebugDisplayDistance Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Return                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplayPos(const class FString& Str, class FString* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayPos");

	Params::BP_PsychicComponentMain_C_DebugDisplayPos Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Return                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplayGauge(const class FString& Str, class FString* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayGauge");

	Params::BP_PsychicComponentMain_C_DebugDisplayGauge Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Grab_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetGrab(bool Flag_in, class ARsBattleHero_C* Grab_owner_in, int32 Grab_index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrab");

	Params::BP_PsychicComponentMain_C_SetGrab Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Grab_owner_in = Grab_owner_in;
	Parms.Grab_index_in = Grab_index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   Aura_comp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   Shadow_comp                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Dir_comp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInertialMoveComponent_C*         Inertial_move_comp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Hit_primitive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Attack_primitive                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// PsychicObjectID::EPsychicObjectID       PsychicObjectID_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_static                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_skeletal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::Initialize(class UMeshComponent* Mesh_comp, class UMeshComponent* Aura_comp, class UMeshComponent* Shadow_comp, class USceneComponent* Dir_comp, class UInertialMoveComponent_C* Inertial_move_comp, class UPrimitiveComponent* Hit_primitive, class UPrimitiveComponent* Attack_primitive, PsychicObjectID::EPsychicObjectID PsychicObjectID_in, bool Is_static, bool Is_skeletal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "Initialize");

	Params::BP_PsychicComponentMain_C_Initialize Parms{};

	Parms.Mesh_comp = Mesh_comp;
	Parms.Aura_comp = Aura_comp;
	Parms.Shadow_comp = Shadow_comp;
	Parms.Dir_comp = Dir_comp;
	Parms.Inertial_move_comp = Inertial_move_comp;
	Parms.Hit_primitive = Hit_primitive;
	Parms.Attack_primitive = Attack_primitive;
	Parms.PsychicObjectID_in = PsychicObjectID_in;
	Parms.Is_static = Is_static;
	Parms.Is_skeletal = Is_skeletal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayHit
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::DebugDisplayHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Return                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplayAttack(const class FString& Str, class FString* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayAttack");

	Params::BP_PsychicComponentMain_C_DebugDisplayAttack Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayArrow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::DebugDisplayArrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayArrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CanPsyAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::CanPsyAction(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CanPsyAction");

	Params::BP_PsychicComponentMain_C_CanPsyAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Set_time_limit_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetAttackParam(bool Flag_in, bool Set_time_limit_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackParam");

	Params::BP_PsychicComponentMain_C_SetAttackParam Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Set_time_limit_in = Set_time_limit_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetActiveComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetActiveComponent(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetActiveComponent");

	Params::BP_PsychicComponentMain_C_SetActiveComponent Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CalcDirectionVectorHoming
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Vector                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Rot                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::CalcDirectionVectorHoming(struct FVector* Vector, struct FVector* Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CalcDirectionVectorHoming");

	Params::BP_PsychicComponentMain_C_CalcDirectionVectorHoming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Vector != nullptr)
		*Vector = std::move(Parms.Vector);

	if (Rot != nullptr)
		*Rot = std::move(Parms.Rot);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateThrowCurve
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::UpdateThrowCurve(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateThrowCurve");

	Params::BP_PsychicComponentMain_C_UpdateThrowCurve Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateThrow
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateThrowSpeed
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::UpdateThrowSpeed(float DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateThrowSpeed");

	Params::BP_PsychicComponentMain_C_UpdateThrowSpeed Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateThrowRotate
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::UpdateThrowRotate(float DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateThrowRotate");

	Params::BP_PsychicComponentMain_C_UpdateThrowRotate Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isHoming
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsHoming(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isHoming");

	Params::BP_PsychicComponentMain_C_IsHoming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CheckHitBackGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Check_floor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_wall                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_celling                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::CheckHitBackGround(bool Check_floor, bool Check_wall, bool Check_celling, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CheckHitBackGround");

	Params::BP_PsychicComponentMain_C_CheckHitBackGround Parms{};

	Parms.Check_floor = Check_floor;
	Parms.Check_wall = Check_wall;
	Parms.Check_celling = Check_celling;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CheckThrowLimit
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::CheckThrowLimit(float InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CheckThrowLimit");

	Params::BP_PsychicComponentMain_C_CheckThrowLimit Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetImpactPos
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_PosImpact                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetImpactPos(struct FVector* Param_PosImpact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetImpactPos");

	Params::BP_PsychicComponentMain_C_GetImpactPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_PosImpact != nullptr)
		*Param_PosImpact = std::move(Parms.Param_PosImpact);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.decAttackCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DecAttackCount(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "decAttackCount");

	Params::BP_PsychicComponentMain_C_DecAttackCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetLiftUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetLiftUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetLiftUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateLiftUp
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDone                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::UpdateLiftUp(bool* bDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateLiftUp");

	Params::BP_PsychicComponentMain_C_UpdateLiftUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDone != nullptr)
		*bDone = Parms.bDone;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CheckGrabIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_GrabIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::CheckGrabIndex(int32 Param_GrabIndex, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CheckGrabIndex");

	Params::BP_PsychicComponentMain_C_CheckGrabIndex Parms{};

	Parms.Param_GrabIndex = Param_GrabIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.ReloadGrab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   New_grab_index                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCombo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::ReloadGrab(int32 New_grab_index, bool bCombo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "ReloadGrab");

	Params::BP_PsychicComponentMain_C_ReloadGrab Parms{};

	Parms.New_grab_index = New_grab_index;
	Parms.bCombo = bCombo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetVectorToCentre
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Vector                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetVectorToCentre(struct FVector* Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetVectorToCentre");

	Params::BP_PsychicComponentMain_C_GetVectorToCentre Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Vector != nullptr)
		*Vector = std::move(Parms.Vector);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.initParam
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force_clear                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::InitParam(bool Force_clear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "initParam");

	Params::BP_PsychicComponentMain_C_InitParam Parms{};

	Parms.Force_clear = Force_clear;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdatePosRot
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdatePosRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdatePosRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetAttachPos
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Grab_pos                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetAttachPos(struct FVector* Grab_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetAttachPos");

	Params::BP_PsychicComponentMain_C_GetAttachPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Grab_pos != nullptr)
		*Grab_pos = std::move(Parms.Grab_pos);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetGrabOwnerTarget
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetGrabOwnerTarget(class AActor** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetGrabOwnerTarget");

	Params::BP_PsychicComponentMain_C_GetGrabOwnerTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffectAura
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffectAura()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffectAura");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayAura
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Return                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplayAura(const class FString& Str, class FString* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayAura");

	Params::BP_PsychicComponentMain_C_DebugDisplayAura Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetPsychicDeltaSecond
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPsychicSpeed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGetRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Delta_second                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetPsychicDeltaSecond(bool bPsychicSpeed, bool bGetRate, float* Delta_second, float* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetPsychicDeltaSecond");

	Params::BP_PsychicComponentMain_C_GetPsychicDeltaSecond Parms{};

	Parms.bPsychicSpeed = bPsychicSpeed;
	Parms.bGetRate = bGetRate;

	UObject::ProcessEvent(Func, &Parms);

	if (Delta_second != nullptr)
		*Delta_second = Parms.Delta_second;

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrabMove
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetGrabMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrabMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEffectAttackOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// PsychicObjectAttackType::EPsychicObjectAttackTypeAttack_type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetEffectAttackOld(bool Flag, PsychicObjectAttackType::EPsychicObjectAttackType Attack_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEffectAttackOld");

	Params::BP_PsychicComponentMain_C_SetEffectAttackOld Parms{};

	Parms.Flag = Flag;
	Parms.Attack_type = Attack_type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEffectDestroy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetEffectDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEffectDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetDestroyMain
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    No_fade_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetDestroyMain(bool Force, bool No_fade_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetDestroyMain");

	Params::BP_PsychicComponentMain_C_SetDestroyMain Parms{};

	Parms.Force = Force;
	Parms.No_fade_in = No_fade_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateDestroy
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CalcDeltaSecond
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_second                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Calc_delta_second                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::CalcDeltaSecond(float Delta_second, float* Calc_delta_second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CalcDeltaSecond");

	Params::BP_PsychicComponentMain_C_CalcDeltaSecond Parms{};

	Parms.Delta_second = Delta_second;

	UObject::ProcessEvent(Func, &Parms);

	if (Calc_delta_second != nullptr)
		*Calc_delta_second = Parms.Calc_delta_second;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.AddForce
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::AddForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "AddForce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffectAttackOld
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffectAttackOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffectAttackOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.setAccelerateFilter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetAccelerateFilter(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "setAccelerateFilter");

	Params::BP_PsychicComponentMain_C_SetAccelerateFilter Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetOutline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetOutline(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetOutline");

	Params::BP_PsychicComponentMain_C_SetOutline Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CallLiftUpSE
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::CallLiftUpSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CallLiftUpSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateThrowSnapOld
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_second                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::UpdateThrowSnapOld(float Delta_second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateThrowSnapOld");

	Params::BP_PsychicComponentMain_C_UpdateThrowSnapOld Parms{};

	Parms.Delta_second = Delta_second;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetActionCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPress                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetActionCount(int32 Count, bool bPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetActionCount");

	Params::BP_PsychicComponentMain_C_SetActionCount Parms{};

	Parms.Count = Count;
	Parms.bPress = bPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdatePsychicDelta
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_second                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::UpdatePsychicDelta(float Delta_second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdatePsychicDelta");

	Params::BP_PsychicComponentMain_C_UpdatePsychicDelta Parms{};

	Parms.Delta_second = Delta_second;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CanThrow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::CanThrow(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CanThrow");

	Params::BP_PsychicComponentMain_C_CanThrow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitializeAura
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InitializeAura()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitializeAura");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitializeDataGroup
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InitializeDataGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitializeDataGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CallAttackSE
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForceThrow                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_bPsychicCombo                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::CallAttackSE(bool bForceThrow, bool Param_bPsychicCombo, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CallAttackSE");

	Params::BP_PsychicComponentMain_C_CallAttackSE Parms{};

	Parms.bForceThrow = bForceThrow;
	Parms.Param_bPsychicCombo = Param_bPsychicCombo;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsDestroy(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isDestroy");

	Params::BP_PsychicComponentMain_C_IsDestroy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrabStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Vec_start                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetGrabStart(bool bRight, const struct FVector& Vec_start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrabStart");

	Params::BP_PsychicComponentMain_C_SetGrabStart Parms{};

	Parms.bRight = bRight;
	Parms.Vec_start = std::move(Vec_start);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateGrabStart
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::UpdateGrabStart(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateGrabStart");

	Params::BP_PsychicComponentMain_C_UpdateGrabStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrabGauge
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetGrabGauge(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrabGauge");

	Params::BP_PsychicComponentMain_C_SetGrabGauge Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CallHitGroundSE
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::CallHitGroundSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CallHitGroundSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CallHitEnemySE
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::CallHitEnemySE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CallHitEnemySE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitializeSoundGroup
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InitializeSoundGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitializeSoundGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitializeGrabStart
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InitializeGrabStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitializeGrabStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CheckAttach
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::CheckAttach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CheckAttach");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttach
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAttach                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bForce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetAttach(bool bAttach, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttach");

	Params::BP_PsychicComponentMain_C_SetAttach Parms{};

	Parms.bAttach = bAttach;
	Parms.bForce = bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetSasAttributeOld
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Param_SasKind                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetSasAttributeOld(E_SASKind Param_SasKind, bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetSasAttributeOld");

	Params::BP_PsychicComponentMain_C_SetSasAttributeOld Parms{};

	Parms.Param_SasKind = Param_SasKind;
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackSkillInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               WorkSkillInfo                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FHCSkillCommonInfo               Return                                                 (Parm, OutParm)

void UBP_PsychicComponentMain_C::SetAttackSkillInfo(const struct FHCSkillCommonInfo& WorkSkillInfo, struct FHCSkillCommonInfo* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackSkillInfo");

	Params::BP_PsychicComponentMain_C_SetAttackSkillInfo Parms{};

	Parms.WorkSkillInfo = std::move(WorkSkillInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrabAttachMain
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetGrabAttachMain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrabAttachMain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEffectHitEnemyThrow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Check_background                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetEffectHitEnemyThrow(bool Check_background)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEffectHitEnemyThrow");

	Params::BP_PsychicComponentMain_C_SetEffectHitEnemyThrow Parms{};

	Parms.Check_background = Check_background;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetImpactPos
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impact_pos_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetImpactPos(const struct FVector& Impact_pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetImpactPos");

	Params::BP_PsychicComponentMain_C_SetImpactPos Parms{};

	Parms.Impact_pos_in = std::move(Impact_pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitializeDeform
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InitializeDeform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitializeDeform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetArrowDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetArrowDirection(struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetArrowDirection");

	Params::BP_PsychicComponentMain_C_GetArrowDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayDeform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::DebugDisplayDeform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayDeform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitializeDataTableOld
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// PsychicObjectID::EPsychicObjectID       PsychicObjectID_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::InitializeDataTableOld(PsychicObjectID::EPsychicObjectID PsychicObjectID_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitializeDataTableOld");

	Params::BP_PsychicComponentMain_C_InitializeDataTableOld Parms{};

	Parms.PsychicObjectID_in = PsychicObjectID_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CheckAttackAtrribute
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Attribute_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::CheckAttackAtrribute(E_SASKind Attribute_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CheckAttackAtrribute");

	Params::BP_PsychicComponentMain_C_CheckAttackAtrribute Parms{};

	Parms.Attribute_in = Attribute_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrabAttackAttributeOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetGrabAttackAttributeOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrabAttackAttributeOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackAttributeOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Attribute_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetAttackAttributeOld(E_SASKind Attribute_in, bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackAttributeOld");

	Params::BP_PsychicComponentMain_C_SetAttackAttributeOld Parms{};

	Parms.Attribute_in = Attribute_in;
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isHitBackground
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsHitBackground(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isHitBackground");

	Params::BP_PsychicComponentMain_C_IsHitBackground Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.convVectorToActorFrontVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          World_vector                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Actor_vector                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::ConvVectorToActorFrontVector(const struct FVector& World_vector, struct FVector* Actor_vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "convVectorToActorFrontVector");

	Params::BP_PsychicComponentMain_C_ConvVectorToActorFrontVector Parms{};

	Parms.World_vector = std::move(World_vector);

	UObject::ProcessEvent(Func, &Parms);

	if (Actor_vector != nullptr)
		*Actor_vector = std::move(Parms.Actor_vector);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetAttackPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Attack_pos                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetAttackPos(struct FVector* Attack_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetAttackPos");

	Params::BP_PsychicComponentMain_C_GetAttackPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_pos != nullptr)
		*Attack_pos = std::move(Parms.Attack_pos);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackThrowAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Throw_all_index                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Throw_all_angle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Throw_all_offset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackThrowAll(class AActor* Target_actor, int32 Throw_all_index, float Throw_all_angle, const struct FVector& Throw_all_offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackThrowAll");

	Params::BP_PsychicComponentMain_C_SetAttackThrowAll Parms{};

	Parms.Target_actor = Target_actor;
	Parms.Throw_all_index = Throw_all_index;
	Parms.Throw_all_angle = Throw_all_angle;
	Parms.Throw_all_offset = std::move(Throw_all_offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateThrowAll
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateThrowAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateThrowAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetCharacterHitCapsule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ARSBattleCharacter_C*             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCapsuleComponent*                Capsule                                                (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetCharacterHitCapsule(class ARSBattleCharacter_C* Character, class UCapsuleComponent** Capsule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetCharacterHitCapsule");

	Params::BP_PsychicComponentMain_C_GetCharacterHitCapsule Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Capsule != nullptr)
		*Capsule = Parms.Capsule;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetCharacterHitOrigin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ARSBattleCharacter_C*             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Capsule_pos                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetCharacterHitOrigin(class ARSBattleCharacter_C* Character, struct FVector* Capsule_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetCharacterHitOrigin");

	Params::BP_PsychicComponentMain_C_GetCharacterHitOrigin Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Capsule_pos != nullptr)
		*Capsule_pos = std::move(Parms.Capsule_pos);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CalcCharacterHitRadius
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ARSBattleCharacter_C*             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHorizontal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::CalcCharacterHitRadius(class ARSBattleCharacter_C* Character, bool bHorizontal, float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CalcCharacterHitRadius");

	Params::BP_PsychicComponentMain_C_CalcCharacterHitRadius Parms{};

	Parms.Character = Character;
	Parms.bHorizontal = bHorizontal;

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEffectAuraFlashOld
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetEffectAuraFlashOld(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEffectAuraFlashOld");

	Params::BP_PsychicComponentMain_C_SetEffectAuraFlashOld Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetBrainGrab
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   brain_index_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          brain_pos_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetBrainGrab(bool Flag_in, int32 brain_index_in, class ARsBattleHero_C* Grab_owner_in, const struct FVector& brain_pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetBrainGrab");

	Params::BP_PsychicComponentMain_C_SetBrainGrab Parms{};

	Parms.Flag_in = Flag_in;
	Parms.brain_index_in = brain_index_in;
	Parms.Grab_owner_in = Grab_owner_in;
	Parms.brain_pos_in = std::move(brain_pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateBrainFloatOld
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateBrainFloatOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateBrainFloatOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEffectAuraGrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Force_off                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Instance_on                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetEffectAuraGrow(bool Flag_in, bool Force_off, bool Instance_on)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEffectAuraGrow");

	Params::BP_PsychicComponentMain_C_SetEffectAuraGrow Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Force_off = Force_off;
	Parms.Instance_on = Instance_on;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetReloadGrab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Grab_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetReloadGrab(class ARsBattleHero_C* Grab_owner_in, int32 Grab_index_in, bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetReloadGrab");

	Params::BP_PsychicComponentMain_C_SetReloadGrab Parms{};

	Parms.Grab_owner_in = Grab_owner_in;
	Parms.Grab_index_in = Grab_index_in;
	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetRequestFromSearch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Request_index_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Grab_gauge_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetRequestFromSearch(int32 Request_index_in, float Grab_gauge_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetRequestFromSearch");

	Params::BP_PsychicComponentMain_C_SetRequestFromSearch Parms{};

	Parms.Request_index_in = Request_index_in;
	Parms.Grab_gauge_in = Grab_gauge_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetRequestFromBrain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Request_index_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetRequestFromBrain(int32 Request_index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetRequestFromBrain");

	Params::BP_PsychicComponentMain_C_SetRequestFromBrain Parms{};

	Parms.Request_index_in = Request_index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitializeBrainField
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Float_height_base_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Float_height_range_in                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::InitializeBrainField(float Float_height_base_in, float Float_height_range_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitializeBrainField");

	Params::BP_PsychicComponentMain_C_InitializeBrainField Parms{};

	Parms.Float_height_base_in = Float_height_base_in;
	Parms.Float_height_range_in = Float_height_range_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetUniqueGrab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Grab_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket_name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetUniqueGrab(bool Flag_in, class ARsBattleHero_C* Grab_owner_in, int32 Grab_index_in, class FName Socket_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetUniqueGrab");

	Params::BP_PsychicComponentMain_C_SetUniqueGrab Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Grab_owner_in = Grab_owner_in;
	Parms.Grab_index_in = Grab_index_in;
	Parms.Socket_name = Socket_name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetHitThrow
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetHitThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetHitThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateFacetsApparition
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateFacetsApparition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateFacetsApparition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetFacetApparition
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetFacetApparition(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetFacetApparition");

	Params::BP_PsychicComponentMain_C_SetFacetApparition Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetFacetApparitionMaterial
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Mesh_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Affect_pos_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Up_vec_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetFacetApparitionMaterial(class UPrimitiveComponent* Mesh_in, const struct FVector& Affect_pos_in, const struct FVector& Up_vec_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetFacetApparitionMaterial");

	Params::BP_PsychicComponentMain_C_SetFacetApparitionMaterial Parms{};

	Parms.Mesh_in = Mesh_in;
	Parms.Affect_pos_in = std::move(Affect_pos_in);
	Parms.Up_vec_in = std::move(Up_vec_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetBrainAppear
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetBrainAppear(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetBrainAppear");

	Params::BP_PsychicComponentMain_C_SetBrainAppear Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateBrainAppear
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateBrainAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateBrainAppear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetBrainAppearPosOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetBrainAppearPosOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetBrainAppearPosOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMIParameterFadeOut
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetMIParameterFadeOut(float Value_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMIParameterFadeOut");

	Params::BP_PsychicComponentMain_C_SetMIParameterFadeOut Parms{};

	Parms.Value_in = Value_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMIParameterAura
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetMIParameterAura(float Value_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMIParameterAura");

	Params::BP_PsychicComponentMain_C_SetMIParameterAura Parms{};

	Parms.Value_in = Value_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMIParameterEmission
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetMIParameterEmission(float Value_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMIParameterEmission");

	Params::BP_PsychicComponentMain_C_SetMIParameterEmission Parms{};

	Parms.Value_in = Value_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMIParameterDeformFlag
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetMIParameterDeformFlag(float Value_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMIParameterDeformFlag");

	Params::BP_PsychicComponentMain_C_SetMIParameterDeformFlag Parms{};

	Parms.Value_in = Value_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMIParameterImpactPos
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impact_pos_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetMIParameterImpactPos(const struct FVector& Impact_pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMIParameterImpactPos");

	Params::BP_PsychicComponentMain_C_SetMIParameterImpactPos Parms{};

	Parms.Impact_pos_in = std::move(Impact_pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetBrainFieldAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Wait_time_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetBrainFieldAttack(class ARsBattleHero_C* Grab_owner_in, float Wait_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetBrainFieldAttack");

	Params::BP_PsychicComponentMain_C_SetBrainFieldAttack Parms{};

	Parms.Grab_owner_in = Grab_owner_in;
	Parms.Wait_time_in = Wait_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateBrainFieldAttack
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateBrainFieldAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateBrainFieldAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isBrainCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsBrainCapture(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isBrainCapture");

	Params::BP_PsychicComponentMain_C_IsBrainCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetFade
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fade_out_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Fade_time_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetFade(bool Fade_out_in, float Fade_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetFade");

	Params::BP_PsychicComponentMain_C_SetFade Parms{};

	Parms.Fade_out_in = Fade_out_in;
	Parms.Fade_time_in = Fade_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffectFade
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffectFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffectFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isFadeFinish
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsFadeFinish(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isFadeFinish");

	Params::BP_PsychicComponentMain_C_IsFadeFinish Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isFadeProcessing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Flag                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsFadeProcessing(bool* Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isFadeProcessing");

	Params::BP_PsychicComponentMain_C_IsFadeProcessing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Flag != nullptr)
		*Flag = Parms.Flag;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetCollisionResponse
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECollisionResponse                      Response_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetCollisionResponse(ECollisionResponse Response_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetCollisionResponse");

	Params::BP_PsychicComponentMain_C_SetCollisionResponse Parms{};

	Parms.Response_in = Response_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEffectPsychicGaugeOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetEffectPsychicGaugeOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEffectPsychicGaugeOld");

	Params::BP_PsychicComponentMain_C_SetEffectPsychicGaugeOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffect
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetRegNo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Reg_no_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetRegNo(int32 Reg_no_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetRegNo");

	Params::BP_PsychicComponentMain_C_SetRegNo Parms{};

	Parms.Reg_no_in = Reg_no_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetRegNo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Reg_no_out                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetRegNo(int32* Reg_no_out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetRegNo");

	Params::BP_PsychicComponentMain_C_GetRegNo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Reg_no_out != nullptr)
		*Reg_no_out = Parms.Reg_no_out;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetPsyObjPosRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Root_pos                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Root_rot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Sweep                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Teleport                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetPsyObjPosRot(const struct FVector& Pos_in, const struct FRotator& Rot_in, bool Root_pos, bool Root_rot, bool Sweep, bool Teleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetPsyObjPosRot");

	Params::BP_PsychicComponentMain_C_SetPsyObjPosRot Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Rot_in = std::move(Rot_in);
	Parms.Root_pos = Root_pos;
	Parms.Root_rot = Root_rot;
	Parms.Sweep = Sweep;
	Parms.Teleport = Teleport;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.TerminateSound
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::TerminateSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "TerminateSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetNoReuse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetNoReuse(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetNoReuse");

	Params::BP_PsychicComponentMain_C_SetNoReuse Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isRequest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsRequest(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isRequest");

	Params::BP_PsychicComponentMain_C_IsRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitAreaChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Grab_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Grab_pos_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attack_count_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::InitAreaChange(int32 Grab_index_in, const struct FVector& Grab_pos_in, E_SASKind Sas_kind_in, int32 Attack_count_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitAreaChange");

	Params::BP_PsychicComponentMain_C_InitAreaChange Parms{};

	Parms.Grab_index_in = Grab_index_in;
	Parms.Grab_pos_in = std::move(Grab_pos_in);
	Parms.Sas_kind_in = Sas_kind_in;
	Parms.Attack_count_in = Attack_count_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Str_out                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDisplayIndex(const class FString& Str_in, class FString* Str_out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayIndex");

	Params::BP_PsychicComponentMain_C_DebugDisplayIndex Parms{};

	Parms.Str_in = std::move(Str_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Str_out != nullptr)
		*Str_out = std::move(Parms.Str_out);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetActivePsyObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetActivePsyObj(bool Flag_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetActivePsyObj");

	Params::BP_PsychicComponentMain_C_SetActivePsyObj Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isPsychicActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsPsychicActive(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isPsychicActive");

	Params::BP_PsychicComponentMain_C_IsPsychicActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrabSource
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetGrabSource(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrabSource");

	Params::BP_PsychicComponentMain_C_SetGrabSource Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetBrainFloatSwing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetBrainFloatSwing(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetBrainFloatSwing");

	Params::BP_PsychicComponentMain_C_SetBrainFloatSwing Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CheckAttackType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// PsychicObjectAttackType::EPsychicObjectAttackTypeAttack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::CheckAttackType(PsychicObjectAttackType::EPsychicObjectAttackType Attack_type_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CheckAttackType");

	Params::BP_PsychicComponentMain_C_CheckAttackType Parms{};

	Parms.Attack_type_in = Attack_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.PrintErrorString
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Err_str_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::PrintErrorString(const class FString& Err_str_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "PrintErrorString");

	Params::BP_PsychicComponentMain_C_PrintErrorString Parms{};

	Parms.Err_str_in = std::move(Err_str_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrabMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    No_adjust_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetGrabMesh(bool No_adjust_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrabMesh");

	Params::BP_PsychicComponentMain_C_SetGrabMesh Parms{};

	Parms.No_adjust_in = No_adjust_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetVisibilityPsyObj
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Mesh_only                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetVisibilityPsyObj(bool Flag_in, bool Mesh_only, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetVisibilityPsyObj");

	Params::BP_PsychicComponentMain_C_SetVisibilityPsyObj Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Mesh_only = Mesh_only;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetCollisionPsyObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_capsule                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetCollisionPsyObj(bool Flag_in, bool Is_capsule, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetCollisionPsyObj");

	Params::BP_PsychicComponentMain_C_SetCollisionPsyObj Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Is_capsule = Is_capsule;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetSasTeleport
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetSasTeleport(bool Flag_in, float Time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetSasTeleport");

	Params::BP_PsychicComponentMain_C_SetSasTeleport Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Time_in = Time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffectTeleport
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffectTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffectTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMIParameterTeleport
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetMIParameterTeleport(float Value_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMIParameterTeleport");

	Params::BP_PsychicComponentMain_C_SetMIParameterTeleport Parms{};

	Parms.Value_in = Value_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitializePsychicComponent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InitializePsychicComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitializePsychicComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetPsychicAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Psychic_combo_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Rwmove                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetPsychicAction(class AActor* Target_actor_in, bool Psychic_combo_in, bool* Rwmove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetPsychicAction");

	Params::BP_PsychicComponentMain_C_SetPsychicAction Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Psychic_combo_in = Psychic_combo_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Rwmove != nullptr)
		*Rwmove = Parms.Rwmove;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetAttackDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_swing_direction                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Attack_direction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetAttackDirection(bool Is_swing_direction, bool* Return, struct FVector* Attack_direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetAttackDirection");

	Params::BP_PsychicComponentMain_C_GetAttackDirection Parms{};

	Parms.Is_swing_direction = Is_swing_direction;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Attack_direction != nullptr)
		*Attack_direction = std::move(Parms.Attack_direction);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_enemy_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hit_background_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCHitResult                     Result_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FVector                          Eft_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetHit(bool Hit_enemy_in, bool Hit_background_in, const struct FHCHitResult& Result_in, const struct FVector& Eft_pos_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetHit");

	Params::BP_PsychicComponentMain_C_SetHit Parms{};

	Parms.Hit_enemy_in = Hit_enemy_in;
	Parms.Hit_background_in = Hit_background_in;
	Parms.Result_in = std::move(Result_in);
	Parms.Eft_pos_in = std::move(Eft_pos_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetHitEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_enemy_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hit_background_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Eft_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetHitEffect(bool Hit_enemy_in, bool Hit_background_in, const struct FVector& Eft_pos_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetHitEffect");

	Params::BP_PsychicComponentMain_C_SetHitEffect Parms{};

	Parms.Hit_enemy_in = Hit_enemy_in;
	Parms.Hit_background_in = Hit_background_in;
	Parms.Eft_pos_in = std::move(Eft_pos_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetAttackCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Throw_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPrimitiveComponent*              Attack_collision                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetAttackCollision(bool Throw_in, class UPrimitiveComponent** Attack_collision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetAttackCollision");

	Params::BP_PsychicComponentMain_C_GetAttackCollision Parms{};

	Parms.Throw_in = Throw_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_collision != nullptr)
		*Attack_collision = Parms.Attack_collision;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.RequestPsychicCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::RequestPsychicCombo(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "RequestPsychicCombo");

	Params::BP_PsychicComponentMain_C_RequestPsychicCombo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetAnimationLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetAnimationLength(float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetAnimationLength");

	Params::BP_PsychicComponentMain_C_GetAnimationLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetPsychicSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECollisionEnabled                       Mesh_collision_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Simulate_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Gravity_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetPsychicSimulatePhysics(ECollisionEnabled Mesh_collision_in, bool Simulate_in, bool Gravity_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetPsychicSimulatePhysics");

	Params::BP_PsychicComponentMain_C_SetPsychicSimulatePhysics Parms{};

	Parms.Mesh_collision_in = Mesh_collision_in;
	Parms.Simulate_in = Simulate_in;
	Parms.Gravity_in = Gravity_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetSasCopy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetSasCopy(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetSasCopy");

	Params::BP_PsychicComponentMain_C_SetSasCopy Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Psychic_combo_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_ex_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Set_time_limit_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetAttackInfo(class AActor* Target_actor_in, bool Psychic_combo_in, bool Psychic_ex_in, bool Set_time_limit_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackInfo");

	Params::BP_PsychicComponentMain_C_SetAttackInfo Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Psychic_combo_in = Psychic_combo_in;
	Parms.Psychic_ex_in = Psychic_ex_in;
	Parms.Set_time_limit_in = Set_time_limit_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAdjust
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAdjust(float Time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAdjust");

	Params::BP_PsychicComponentMain_C_SetAdjust Parms{};

	Parms.Time_in = Time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateAdjust
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateAdjust()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateAdjust");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAnimNotifyInputPsychic
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetAnimNotifyInputPsychic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAnimNotifyInputPsychic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAnimNotifyEnablePsychic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetAnimNotifyEnablePsychic(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAnimNotifyEnablePsychic");

	Params::BP_PsychicComponentMain_C_SetAnimNotifyEnablePsychic Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAnimNotifyReturnMove
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetAnimNotifyReturnMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAnimNotifyReturnMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USkeletalMeshComponent*           Skeletal_mesh_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackCollision(bool Flag_in, class USkeletalMeshComponent* Skeletal_mesh_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackCollision");

	Params::BP_PsychicComponentMain_C_SetAttackCollision Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Skeletal_mesh_in = Skeletal_mesh_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackCollisionParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPrimitiveComponent*              Attack_prim_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackCollisionParam(bool Flag_in, class UPrimitiveComponent* Attack_prim_in, class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackCollisionParam");

	Params::BP_PsychicComponentMain_C_SetAttackCollisionParam Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Attack_prim_in = Attack_prim_in;
	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.Finalize
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "Finalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetDispose
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Unique_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_brain_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetDispose(bool Is_Unique_in, bool Is_brain_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetDispose");

	Params::BP_PsychicComponentMain_C_SetDispose Parms{};

	Parms.Is_Unique_in = Is_Unique_in;
	Parms.Is_brain_in = Is_brain_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetHitSEOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_enemy_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hit_background_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetHitSEOld(bool Hit_enemy_in, bool Hit_background_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetHitSEOld");

	Params::BP_PsychicComponentMain_C_SetHitSEOld Parms{};

	Parms.Hit_enemy_in = Hit_enemy_in;
	Parms.Hit_background_in = Hit_background_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetPsychicActionNew
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// PsychicObjectAttackType::EPsychicObjectAttackTypeAttack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Psychic_combo_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_ex_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Remove                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetPsychicActionNew(PsychicObjectAttackType::EPsychicObjectAttackType Attack_type_in, class AActor* Target_actor_in, bool Psychic_combo_in, bool Psychic_ex_in, bool* Remove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetPsychicActionNew");

	Params::BP_PsychicComponentMain_C_SetPsychicActionNew Parms{};

	Parms.Attack_type_in = Attack_type_in;
	Parms.Target_actor_in = Target_actor_in;
	Parms.Psychic_combo_in = Psychic_combo_in;
	Parms.Psychic_ex_in = Psychic_ex_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Remove != nullptr)
		*Remove = Parms.Remove;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.isAllAttackEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsAllAttackEnable(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "isAllAttackEnable");

	Params::BP_PsychicComponentMain_C_IsAllAttackEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDisplayCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::DebugDisplayCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDisplayCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugDrawPrimitive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Prim_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Segment_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Thickness_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugDrawPrimitive(class UPrimitiveComponent* Prim_comp_in, int32 Segment_in, const struct FLinearColor& Color_in, float Duration_in, float Thickness_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugDrawPrimitive");

	Params::BP_PsychicComponentMain_C_DebugDrawPrimitive Parms{};

	Parms.Prim_comp_in = Prim_comp_in;
	Parms.Segment_in = Segment_in;
	Parms.Color_in = std::move(Color_in);
	Parms.Duration_in = Duration_in;
	Parms.Thickness_in = Thickness_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackCollisionSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetAttackCollisionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackCollisionSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetSas
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetSas(E_SASKind Sas_kind_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetSas");

	Params::BP_PsychicComponentMain_C_SetSas Parms{};

	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetSasEffectOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetSasEffectOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetSasEffectOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetSasStealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetSasStealth(bool Flag_in, float Time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetSasStealth");

	Params::BP_PsychicComponentMain_C_SetSasStealth Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Time_in = Time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffectStealth
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffectStealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffectStealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMIParameterStealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetMIParameterStealth(float Value_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMIParameterStealth");

	Params::BP_PsychicComponentMain_C_SetMIParameterStealth Parms{};

	Parms.Value_in = Value_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateSystem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_second_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::UpdateSystem(float Delta_second_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateSystem");

	Params::BP_PsychicComponentMain_C_UpdateSystem Parms{};

	Parms.Delta_second_in = Delta_second_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateMain
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateMain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateMain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdatePsychicComponent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdatePsychicComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdatePsychicComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetObjectSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsychicObjectSizeType                  Object_Size                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetObjectSize(EPsychicObjectSizeType* Object_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetObjectSize");

	Params::BP_PsychicComponentMain_C_GetObjectSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Object_Size != nullptr)
		*Object_Size = Parms.Object_Size;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.FinalizePsychicComponent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::FinalizePsychicComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "FinalizePsychicComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// PsychicObjectAttackType::EPsychicObjectAttackTypeAction_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackType(PsychicObjectAttackType::EPsychicObjectAttackType Action_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackType");

	Params::BP_PsychicComponentMain_C_SetAttackType Parms{};

	Parms.Action_type_in = Action_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetAttackAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// PsychicObjectAttackType::EPsychicObjectAttackTypeReturn                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetAttackAction(PsychicObjectAttackType::EPsychicObjectAttackType* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetAttackAction");

	Params::BP_PsychicComponentMain_C_GetAttackAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitCopyObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Src_psy_obj_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::InitCopyObj(class ABP_PsychicObjectBasic_C*& Src_psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitCopyObj");

	Params::BP_PsychicComponentMain_C_InitCopyObj Parms{};

	Parms.Src_psy_obj_in = Src_psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	Src_psy_obj_in = Parms.Src_psy_obj_in;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetCopyObjAppear
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetCopyObjAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetCopyObjAppear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateCopyObj
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateCopyObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateCopyObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.IsTickOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsTickOn(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "IsTickOn");

	Params::BP_PsychicComponentMain_C_IsTickOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.IsAttackDelay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Delay                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsAttackDelay(bool* Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "IsAttackDelay");

	Params::BP_PsychicComponentMain_C_IsAttackDelay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Delay != nullptr)
		*Delay = Parms.Delay;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackDelay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Delay_time_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackDelay(class ARsBattleHero_C* Grab_owner_in, float Delay_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackDelay");

	Params::BP_PsychicComponentMain_C_SetAttackDelay Parms{};

	Parms.Grab_owner_in = Grab_owner_in;
	Parms.Delay_time_in = Delay_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateAttackDelay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateAttackDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateAttackDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitTransferObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InitTransferObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitTransferObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetTransferObjectAppear
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetTransferObjectAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetTransferObjectAppear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffectTransfer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffectTransfer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffectTransfer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetCopyObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Copy_obj_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetCopyObject(class ABP_PsychicObjectBasic_C* Copy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetCopyObject");

	Params::BP_PsychicComponentMain_C_SetCopyObject Parms{};

	Parms.Copy_obj_in = Copy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffectCopy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffectCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffectCopy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetPsychicActionEnemy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// PsychicObjectAttackType::EPsychicObjectAttackTypeAttack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetPsychicActionEnemy(PsychicObjectAttackType::EPsychicObjectAttackType Attack_type_in, class AActor* Target_actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetPsychicActionEnemy");

	Params::BP_PsychicComponentMain_C_SetPsychicActionEnemy Parms{};

	Parms.Attack_type_in = Attack_type_in;
	Parms.Target_actor_in = Target_actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetPsychicActionCopy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetPsychicActionCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetPsychicActionCopy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetPsychicActionCommon
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetPsychicActionCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetPsychicActionCommon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetHitBarrier
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetHitBarrier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetHitBarrier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.IsCheckBackground
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsCheckBackground(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "IsCheckBackground");

	Params::BP_PsychicComponentMain_C_IsCheckBackground Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttachRush
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetAttachRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttachRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetPsychicObjectPosInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PosPrev                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PosNow                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetPsychicObjectPosInfo(struct FVector* PosPrev, struct FVector* PosNow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetPsychicObjectPosInfo");

	Params::BP_PsychicComponentMain_C_GetPsychicObjectPosInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PosPrev != nullptr)
		*PosPrev = std::move(Parms.PosPrev);

	if (PosNow != nullptr)
		*PosNow = std::move(Parms.PosNow);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetGrabCopy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetGrabCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetGrabCopy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetCollisionProfileOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCaptured                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetCollisionProfileOld(bool bCaptured)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetCollisionProfileOld");

	Params::BP_PsychicComponentMain_C_SetCollisionProfileOld Parms{};

	Parms.bCaptured = bCaptured;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.setEffectCopy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::SetEffectCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "setEffectCopy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMIParameterCopy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetMIParameterCopy(float Value_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMIParameterCopy");

	Params::BP_PsychicComponentMain_C_SetMIParameterCopy Parms{};

	Parms.Value_in = Value_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitPsychicCluster
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Core_psy_obj_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::InitPsychicCluster(class ABP_PsychicObjectBasic_C*& Core_psy_obj_in, int32 Index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitPsychicCluster");

	Params::BP_PsychicComponentMain_C_InitPsychicCluster Parms{};

	Parms.Core_psy_obj_in = Core_psy_obj_in;
	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);

	Core_psy_obj_in = Parms.Core_psy_obj_in;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.IsNewAttach
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsNewAttach(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "IsNewAttach");

	Params::BP_PsychicComponentMain_C_IsNewAttach Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitEnemyPsychicObjectMain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Owner_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::InitEnemyPsychicObjectMain(class ARSBattleCharacter_C* Owner_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitEnemyPsychicObjectMain");

	Params::BP_PsychicComponentMain_C_InitEnemyPsychicObjectMain Parms{};

	Parms.Owner_in = Owner_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.IsEnemyPsychicObjectOccupiedMain
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Occupied                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::IsEnemyPsychicObjectOccupiedMain(bool* Occupied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "IsEnemyPsychicObjectOccupiedMain");

	Params::BP_PsychicComponentMain_C_IsEnemyPsychicObjectOccupiedMain Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Occupied != nullptr)
		*Occupied = Parms.Occupied;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEnemyPsychicObjectActiveMain
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Obj_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetEnemyPsychicObjectActiveMain(bool Active_in, const struct FVector& Obj_pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEnemyPsychicObjectActiveMain");

	Params::BP_PsychicComponentMain_C_SetEnemyPsychicObjectActiveMain Parms{};

	Parms.Active_in = Active_in;
	Parms.Obj_pos_in = std::move(Obj_pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEnemyPsychicObjectThrowMain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Throw_speed_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetEnemyPsychicObjectThrowMain(class AActor* Target_actor_in, float Throw_speed_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEnemyPsychicObjectThrowMain");

	Params::BP_PsychicComponentMain_C_SetEnemyPsychicObjectThrowMain Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Throw_speed_in = Throw_speed_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InterceptAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Intercepter_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             New_target_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::InterceptAttack(class ARSBattleCharacter_C* Intercepter_in, class ARSBattleCharacter_C* New_target_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InterceptAttack");

	Params::BP_PsychicComponentMain_C_InterceptAttack Parms{};

	Parms.Intercepter_in = Intercepter_in;
	Parms.New_target_in = New_target_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetCameraShakeData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Camera_shake                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetCameraShakeData(class UClass** Camera_shake, float* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetCameraShakeData");

	Params::BP_PsychicComponentMain_C_GetCameraShakeData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera_shake != nullptr)
		*Camera_shake = Parms.Camera_shake;

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetDisplayName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           Param_Name                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetDisplayName(class FString* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetDisplayName");

	Params::BP_PsychicComponentMain_C_GetDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetSwingType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectAttackSwingType           Swing_type_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetSwingType(EPsychicObjectAttackSwingType Swing_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetSwingType");

	Params::BP_PsychicComponentMain_C_SetSwingType Parms{};

	Parms.Swing_type_in = Swing_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attack_count_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackCount(int32 Attack_count_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackCount");

	Params::BP_PsychicComponentMain_C_SetAttackCount Parms{};

	Parms.Attack_count_in = Attack_count_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetCopyObjUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetCopyObjUpdate(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetCopyObjUpdate");

	Params::BP_PsychicComponentMain_C_SetCopyObjUpdate Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.CheckPsychicObjectID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<BattlePrototype::EPsychicObjectID>Check_list_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::CheckPsychicObjectID(TArray<BattlePrototype::EPsychicObjectID>& Check_list_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "CheckPsychicObjectID");

	Params::BP_PsychicComponentMain_C_CheckPsychicObjectID Parms{};

	Parms.Check_list_in = std::move(Check_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Check_list_in = std::move(Parms.Check_list_in);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetPsychicObjectID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// BattlePrototype::EPsychicObjectID       Psychic_object_id                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetPsychicObjectID(BattlePrototype::EPsychicObjectID* Psychic_object_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetPsychicObjectID");

	Params::BP_PsychicComponentMain_C_GetPsychicObjectID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Psychic_object_id != nullptr)
		*Psychic_object_id = Parms.Psychic_object_id;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InitPsychicBulletOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InitPsychicBulletOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InitPsychicBulletOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackPsychicBulletOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Spread_angle_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackPsychicBulletOld(class ARsBattleHero_C* Grab_owner_in, class AActor* Target_actor_in, float Spread_angle_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackPsychicBulletOld");

	Params::BP_PsychicComponentMain_C_SetAttackPsychicBulletOld Parms{};

	Parms.Grab_owner_in = Grab_owner_in;
	Parms.Target_actor_in = Target_actor_in;
	Parms.Spread_angle_in = Spread_angle_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateEffectSasOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateEffectSasOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateEffectSasOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.LoadMaterialCurve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSPsychicCaptureMaterial         SPsychicCaptureMaterial                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UCurveVector*                     AsCurve_Vector                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::LoadMaterialCurve(const struct FSPsychicCaptureMaterial& SPsychicCaptureMaterial, class UCurveVector** AsCurve_Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "LoadMaterialCurve");

	Params::BP_PsychicComponentMain_C_LoadMaterialCurve Parms{};

	Parms.SPsychicCaptureMaterial = std::move(SPsychicCaptureMaterial);

	UObject::ProcessEvent(Func, &Parms);

	if (AsCurve_Vector != nullptr)
		*AsCurve_Vector = Parms.AsCurve_Vector;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetMaterialParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSPsychicCaptureMaterial         Material_param                                         (Parm, OutParm, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetMaterialParam(E_SASKind Sas_kind_in, struct FSPsychicCaptureMaterial* Material_param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetMaterialParam");

	Params::BP_PsychicComponentMain_C_GetMaterialParam Parms{};

	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Material_param != nullptr)
		*Material_param = std::move(Parms.Material_param);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.GetMaterialCurve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveVector*                     Material_curve                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::GetMaterialCurve(E_SASKind Sas_kind_in, class UCurveVector** Material_curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "GetMaterialCurve");

	Params::BP_PsychicComponentMain_C_GetMaterialCurve Parms{};

	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Material_curve != nullptr)
		*Material_curve = Parms.Material_curve;
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetPsychicActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetPsychicActive(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetPsychicActive");

	Params::BP_PsychicComponentMain_C_SetPsychicActive Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackThrowDirect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackThrowDirect(class ARsBattleHero_C* Grab_owner_in, class AActor* Target_actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackThrowDirect");

	Params::BP_PsychicComponentMain_C_SetAttackThrowDirect Parms{};

	Parms.Grab_owner_in = Grab_owner_in;
	Parms.Target_actor_in = Target_actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetLiftUpDirect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetLiftUpDirect(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetLiftUpDirect");

	Params::BP_PsychicComponentMain_C_SetLiftUpDirect Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.UpdateLiftUpDirect
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::UpdateLiftUpDirect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "UpdateLiftUpDirect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetAttackSkillInfoExtraType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EHCSkillExtraType>               Extra_type_list_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::SetAttackSkillInfoExtraType(TArray<EHCSkillExtraType>& Extra_type_list_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetAttackSkillInfoExtraType");

	Params::BP_PsychicComponentMain_C_SetAttackSkillInfoExtraType Parms{};

	Parms.Extra_type_list_in = std::move(Extra_type_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Extra_type_list_in = std::move(Parms.Extra_type_list_in);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetMaterialCaptureStartOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::SetMaterialCaptureStartOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetMaterialCaptureStartOld");

	Params::BP_PsychicComponentMain_C_SetMaterialCaptureStartOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.AddCaptureMeshList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::AddCaptureMeshList(class UMeshComponent* Mesh_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "AddCaptureMeshList");

	Params::BP_PsychicComponentMain_C_AddCaptureMeshList Parms{};

	Parms.Mesh_in = Mesh_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.SetEnemyPsychicObjectInfoMain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCCollisionCommonInfo           InCommonInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FHCSkillCommonInfo               InSkillInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_PsychicComponentMain_C::SetEnemyPsychicObjectInfoMain(const struct FHCCollisionCommonInfo& InCommonInfo, const struct FHCSkillCommonInfo& InSkillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "SetEnemyPsychicObjectInfoMain");

	Params::BP_PsychicComponentMain_C_SetEnemyPsychicObjectInfoMain Parms{};

	Parms.InCommonInfo = std::move(InCommonInfo);
	Parms.InSkillInfo = std::move(InSkillInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InterceptReserve
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InterceptReserve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InterceptReserve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.InterceptCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicComponentMain_C::InterceptCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "InterceptCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugPrintAbolishString
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Func_name_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PsychicComponentMain_C::DebugPrintAbolishString(const class FString& Func_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugPrintAbolishString");

	Params::BP_PsychicComponentMain_C_DebugPrintAbolishString Parms{};

	Parms.Func_name_in = std::move(Func_name_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicComponentMain.BP_PsychicComponentMain_C.DebugPrintCheckSimulate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Skip_screen_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicComponentMain_C::DebugPrintCheckSimulate(const class FString& Str_in, bool Skip_screen_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicComponentMain_C", "DebugPrintCheckSimulate");

	Params::BP_PsychicComponentMain_C_DebugPrintCheckSimulate Parms{};

	Parms.Str_in = std::move(Str_in);
	Parms.Skip_screen_in = Skip_screen_in;

	UObject::ProcessEvent(Func, &Parms);
}

}

