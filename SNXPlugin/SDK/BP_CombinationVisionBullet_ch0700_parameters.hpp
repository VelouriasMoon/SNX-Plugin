#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CombinationVisionBullet_ch0700

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AttackCollisionInfoBP_structs.hpp"


namespace SDK::Params
{

// Function BP_CombinationVisionBullet_ch0700.BP_CombinationVisionBullet_ch0700_C.OnAttackEnd
// 0x0002 (0x0002 - 0x0000)
struct BP_CombinationVisionBullet_ch0700_C_OnAttackEnd final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnAttackEnd_bDummy;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CombinationVisionBullet_ch0700_C_OnAttackEnd) == 0x000001, "Wrong alignment on BP_CombinationVisionBullet_ch0700_C_OnAttackEnd");
static_assert(sizeof(BP_CombinationVisionBullet_ch0700_C_OnAttackEnd) == 0x000002, "Wrong size on BP_CombinationVisionBullet_ch0700_C_OnAttackEnd");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_OnAttackEnd, bDummy) == 0x000000, "Member 'BP_CombinationVisionBullet_ch0700_C_OnAttackEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_OnAttackEnd, CallFunc_OnAttackEnd_bDummy) == 0x000001, "Member 'BP_CombinationVisionBullet_ch0700_C_OnAttackEnd::CallFunc_OnAttackEnd_bDummy' has a wrong offset!");

// Function BP_CombinationVisionBullet_ch0700.BP_CombinationVisionBullet_ch0700_C.SetBulletVisibility
// 0x0003 (0x0003 - 0x0000)
struct BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dunnmy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBulletVisibility_dunnmy;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility) == 0x000001, "Wrong alignment on BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility");
static_assert(sizeof(BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility) == 0x000003, "Wrong size on BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility, On) == 0x000000, "Member 'BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility::On' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility, Dunnmy) == 0x000001, "Member 'BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility::Dunnmy' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility, CallFunc_SetBulletVisibility_dunnmy) == 0x000002, "Member 'BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility::CallFunc_SetBulletVisibility_dunnmy' has a wrong offset!");

// Function BP_CombinationVisionBullet_ch0700.BP_CombinationVisionBullet_ch0700_C.Fire
// 0x00E8 (0x00E8 - 0x0000)
struct BP_CombinationVisionBullet_ch0700_C_Fire final
{
public:
	class AActor*                                 Param_AttackOwner;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_FirePoint;                                   // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Dir;                                               // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttackCollisionInfoBP                 Param_CollisionInfo;                               // 0x0020(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Param_bDisableImpactParticle;                      // 0x00E0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSuccess;                                          // 0x00E1(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Fire_bSuccess;                            // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CombinationVisionBullet_ch0700_C_Fire) == 0x000008, "Wrong alignment on BP_CombinationVisionBullet_ch0700_C_Fire");
static_assert(sizeof(BP_CombinationVisionBullet_ch0700_C_Fire) == 0x0000E8, "Wrong size on BP_CombinationVisionBullet_ch0700_C_Fire");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_Fire, Param_AttackOwner) == 0x000000, "Member 'BP_CombinationVisionBullet_ch0700_C_Fire::Param_AttackOwner' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_Fire, Param_FirePoint) == 0x000008, "Member 'BP_CombinationVisionBullet_ch0700_C_Fire::Param_FirePoint' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_Fire, Dir) == 0x000014, "Member 'BP_CombinationVisionBullet_ch0700_C_Fire::Dir' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_Fire, Param_CollisionInfo) == 0x000020, "Member 'BP_CombinationVisionBullet_ch0700_C_Fire::Param_CollisionInfo' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_Fire, Param_bDisableImpactParticle) == 0x0000E0, "Member 'BP_CombinationVisionBullet_ch0700_C_Fire::Param_bDisableImpactParticle' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_Fire, bSuccess) == 0x0000E1, "Member 'BP_CombinationVisionBullet_ch0700_C_Fire::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_Fire, CallFunc_Fire_bSuccess) == 0x0000E2, "Member 'BP_CombinationVisionBullet_ch0700_C_Fire::CallFunc_Fire_bSuccess' has a wrong offset!");

// Function BP_CombinationVisionBullet_ch0700.BP_CombinationVisionBullet_ch0700_C.SetEffectKnife
// 0x0020 (0x0020 - 0x0000)
struct BP_CombinationVisionBullet_ch0700_C_SetEffectKnife final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70F9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        L_effectKnife;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70FA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CombinationVisionBullet_ch0700_C_SetEffectKnife) == 0x000008, "Wrong alignment on BP_CombinationVisionBullet_ch0700_C_SetEffectKnife");
static_assert(sizeof(BP_CombinationVisionBullet_ch0700_C_SetEffectKnife) == 0x000020, "Wrong size on BP_CombinationVisionBullet_ch0700_C_SetEffectKnife");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_SetEffectKnife, Flag_in) == 0x000000, "Member 'BP_CombinationVisionBullet_ch0700_C_SetEffectKnife::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_SetEffectKnife, L_effectKnife) == 0x000008, "Member 'BP_CombinationVisionBullet_ch0700_C_SetEffectKnife::L_effectKnife' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_SetEffectKnife, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CombinationVisionBullet_ch0700_C_SetEffectKnife::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CombinationVisionBullet_ch0700_C_SetEffectKnife, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000018, "Member 'BP_CombinationVisionBullet_ch0700_C_SetEffectKnife::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

}

