#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerMaterialAccessorComponent

#include "Basic.hpp"

#include "FPlayerCableMaterialParameter_structs.hpp"
#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_LightHandSpiralMaterialParam_structs.hpp"
#include "S_HandLightMaterialParam_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.ExecuteUbergraph_BP_PlayerMaterialAccessorComponent
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_627B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Player_1;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_Player;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Event_PlayerMesh;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_627C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_No;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_627D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager_2; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent) == 0x000048, "Wrong size on BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, EntryPoint) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, K2Node_Event_Player_1) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, K2Node_Event_Player) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, K2Node_Event_PlayerMesh) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::K2Node_Event_PlayerMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, K2Node_Event_EndPlayReason) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, K2Node_CustomEvent_No) == 0x000024, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::K2Node_CustomEvent_No' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, K2Node_SwitchInteger_CmpSuccess) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager_1) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager_2) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager_2' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.OnCutinVibration
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_OnCutinVibration final
{
public:
	int32                                         No;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_OnCutinVibration) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_OnCutinVibration");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_OnCutinVibration) == 0x000004, "Wrong size on BP_PlayerMaterialAccessorComponent_C_OnCutinVibration");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_OnCutinVibration, No) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_OnCutinVibration::No' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PlayerMaterialAccessorComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetPlayerMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetPlayerMesh final
{
public:
	class USkeletalMeshComponent*                 PlayerMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetPlayerMesh) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetPlayerMesh");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetPlayerMesh) == 0x000008, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetPlayerMesh");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetPlayerMesh, PlayerMesh) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetPlayerMesh::PlayerMesh' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupDefaultParameter
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetupDefaultParameter final
{
public:
	class ACharacter*                             Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetupDefaultParameter");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultParameter) == 0x000008, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetupDefaultParameter");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultParameter, Param_Player) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupDefaultParameter::Param_Player' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetCable
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetCable final
{
public:
	class AActor*                                 Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetCable) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetCable");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetCable) == 0x000008, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetCable");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetCable, Param_Player) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetCable::Param_Player' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SearchPsychicFieldMaterial
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial) == 0x000010, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial, Target) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial::Target' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial, Mid) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial::Mid' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateLeftHandTable
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LightHandSpiralMaterialParam        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_627E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_HandLightMaterialParam              CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0040(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_627F[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HandLightMaterialParam              CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x005C(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable) == 0x000078, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, RowName) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::RowName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x00005C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000074, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHandTable::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupPlayerMesh
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh final
{
public:
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6280[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue_1;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6281[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue_2;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue_3;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue_4;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue_5;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue_6;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue_7;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh) == 0x000030, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_SetupMaterialBySlotName_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_SetupMaterialBySlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_SetupMaterialBySlotName_ReturnValue_1) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_SetupMaterialBySlotName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_IsValid_ReturnValue_1) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_SetupMaterialBySlotName_ReturnValue_2) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_SetupMaterialBySlotName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_SetupMaterialBySlotName_ReturnValue_3) == 0x00001C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_SetupMaterialBySlotName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_SetupMaterialBySlotName_ReturnValue_4) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_SetupMaterialBySlotName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_SetupMaterialBySlotName_ReturnValue_5) == 0x000024, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_SetupMaterialBySlotName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_SetupMaterialBySlotName_ReturnValue_6) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_SetupMaterialBySlotName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh, CallFunc_SetupMaterialBySlotName_ReturnValue_7) == 0x00002C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupPlayerMesh::CallFunc_SetupMaterialBySlotName_ReturnValue_7' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupDefaultParameter
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter final
{
public:
	class AActor*                                 Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetDefaultVectorParameterALL_OutParameters; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6282[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetDefaultVectorParameterALL_OutParameters_1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter) == 0x000060, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, Param_Player) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_GetDefaultVectorParameterALL_OutParameters) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_GetDefaultVectorParameterALL_OutParameters' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_VSizeSquared_ReturnValue) == 0x000024, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_GetDefaultVectorParameterALL_OutParameters_1) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_GetDefaultVectorParameterALL_OutParameters_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_BreakColor_R) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_BreakColor_G) == 0x000044, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_BreakColor_B) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_BreakColor_A) == 0x00004C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateLeftHand
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6283[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6284[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6285[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCanAnimOverrideSASColor_Enabled;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand) == 0x000070, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, Color) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::Color' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, Rate) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000029, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_FMax_ReturnValue) == 0x00002C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000034, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000044, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000054, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_GetCanAnimOverrideSASColor_Enabled) == 0x000069, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_GetCanAnimOverrideSASColor_Enabled' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateLeftHand::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateHood
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateHood final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateHood) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateHood");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateHood) == 0x000008, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateHood");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHood, Rate) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHood::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHood, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHood::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHood, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHood::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHood, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHood::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateMask
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateMask final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateMask) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateMask");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateMask) == 0x000008, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateMask");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateMask, Rate) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateMask::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateMask, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateMask::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateMask, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateMask::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateMask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateMask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateOutlineEmission
// 0x01B8 (0x01B8 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission final
{
public:
	struct FLinearColor                           NowColor;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FinalColor;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SumColor;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumEmission;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6286[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventPlayerMaterial_C*              K2Node_DynamicCast_AsBP_Event_Player_Material;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6287[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AddColorByRate_OutColor;                  // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_2;    // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CInterpTo_ReturnValue;                    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_2;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_2;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_2;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_2;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6288[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_3;    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AddColorByRate_OutColor_1;                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_3;                           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_3;                           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_3;                           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_3;                           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_4;    // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AddColorByRate_OutColor_2;                // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_5;    // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AddColorByRate_OutColor_3;                // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_6;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AddColorByRate_OutColor_4;                // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission) == 0x0001B8, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, NowColor) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::NowColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, FinalColor) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::FinalColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, SumColor) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::SumColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, SumEmission) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::SumEmission' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, Rate) == 0x000034, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, K2Node_DynamicCast_AsBP_Event_Player_Material) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::K2Node_DynamicCast_AsBP_Event_Player_Material' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000064, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_AddColorByRate_OutColor) == 0x000074, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_AddColorByRate_OutColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_GetVectorParameterValue_ReturnValue_2) == 0x000084, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_GetVectorParameterValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_R) == 0x000094, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_G) == 0x000098, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_B) == 0x00009C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_A) == 0x0000A0, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_R_1) == 0x0000A4, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_G_1) == 0x0000A8, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_B_1) == 0x0000AC, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_A_1) == 0x0000B0, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, K2Node_MathExpression_ReturnValue) == 0x0000B4, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_CInterpTo_ReturnValue) == 0x0000B8, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_CInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_FMax_ReturnValue) == 0x0000C8, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_R_2) == 0x0000CC, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_R_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_G_2) == 0x0000D0, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_G_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_B_2) == 0x0000D4, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_B_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_A_2) == 0x0000D8, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_A_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_MakeColor_ReturnValue) == 0x0000DC, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000EC, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_GetVectorParameterValue_ReturnValue_3) == 0x0000F0, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_GetVectorParameterValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_AddColorByRate_OutColor_1) == 0x000100, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_AddColorByRate_OutColor_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_FMax_ReturnValue_1) == 0x000110, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_FMax_ReturnValue_2) == 0x000114, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_FMax_ReturnValue_3) == 0x000118, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_FMax_ReturnValue_4) == 0x00011C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000120, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000124, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000128, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00012C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_R_3) == 0x000130, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_R_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_G_3) == 0x000134, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_G_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_B_3) == 0x000138, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_B_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_BreakColor_A_3) == 0x00013C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_BreakColor_A_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_MakeColor_ReturnValue_1) == 0x000140, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_GetVectorParameterValue_ReturnValue_4) == 0x000150, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_GetVectorParameterValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_AddColorByRate_OutColor_2) == 0x000160, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_AddColorByRate_OutColor_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_GetVectorParameterValue_ReturnValue_5) == 0x000170, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_GetVectorParameterValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_AddColorByRate_OutColor_3) == 0x000180, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_AddColorByRate_OutColor_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_GetVectorParameterValue_ReturnValue_6) == 0x000190, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_GetVectorParameterValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_AddColorByRate_OutColor_4) == 0x0001A0, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_AddColorByRate_OutColor_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001B0, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateOutlineEmission::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdatePsychicField
// 0x003C (0x003C - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField final
{
public:
	struct FLinearColor                           SumColor;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumEmission;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6289[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField) == 0x00003C, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField, SumColor) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField::SumColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField, SumEmission) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField::SumEmission' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField, Rate) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField, CallFunc_GetSocketLocation_ReturnValue) == 0x00001C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePsychicField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupShadowOffsetMapID
// 0x005C (0x005C - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID final
{
public:
	EMaterialShadowOffsetID                       ShadowOffsetID;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRestore;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMaterialAccessorSetupID                      Override;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_628A[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Mask;                                              // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_628B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_2;                  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_3;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID) == 0x00005C, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, ShadowOffsetID) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::ShadowOffsetID' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, IsRestore) == 0x000001, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::IsRestore' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, Override) == 0x000002, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::Override' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, Mask) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::Mask' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, CallFunc_MakeColor_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, CallFunc_MakeColor_ReturnValue_1) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, CallFunc_MakeColor_ReturnValue_2) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::CallFunc_MakeColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, CallFunc_MakeColor_ReturnValue_3) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::CallFunc_MakeColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateRestoreDefaultParameter
// 0x0168 (0x0168 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter final
{
public:
	class UMeshComponent*                         TargetMesh;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 TargetMeshComp;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class FName>                           ResetParameterNames;                               // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         MaterialLastIndex;                                 // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMaterialAccessorSetupID                      Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_628C[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_628D[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x0070(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_628E[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_3;                          // 0x0088(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_4;                          // 0x0098(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_5;                          // 0x00A8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_6;                          // 0x00B8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_7;                          // 0x00C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_8;                          // 0x00D8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_628F[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6290[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSeeThroughStencil_Stencil;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitFlagOff_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6291[0x2];                                     // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6292[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6293[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6294[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6295[0x2];                                     // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeeThroughStencil_Stencil_1;           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitFlagOff_ReturnValue_1;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6296[0x2];                                     // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMaterialAccessorSetupID                      Temp_byte_Variable_1;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMaterialAccessorSetupID                      K2Node_Select_Default;                             // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter) == 0x000168, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, TargetMesh) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, TargetMeshComp) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::TargetMeshComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, ResetParameterNames) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::ResetParameterNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, MaterialLastIndex) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::MaterialLastIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_byte_Variable) == 0x00002C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_bool_Variable) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array_1) == 0x000060, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array_2) == 0x000070, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Array_Add_ReturnValue_1) == 0x000080, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array_3) == 0x000088, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array_4) == 0x000098, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array_5) == 0x0000A8, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array_6) == 0x0000B8, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array_7) == 0x0000C8, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_MakeArray_Array_8) == 0x0000D8, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_IsValid_ReturnValue_1) == 0x0000E9, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_int_Loop_Num_Variable) == 0x0000EC, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_GetSeeThroughStencil_Stencil) == 0x0000F4, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_GetSeeThroughStencil_Stencil' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_BitFlagOff_ReturnValue) == 0x0000F8, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_BitFlagOff_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_IsValid_ReturnValue_2) == 0x0000FC, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_IsValid_ReturnValue_3) == 0x0000FD, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_int_Loop_Num_Variable_1) == 0x000100, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_int_Array_Index_Variable) == 0x000108, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_DynamicCast_AsRSBattle_Player) == 0x000110, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x000120, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000129, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00012C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_int_Array_Index_Variable_1) == 0x000130, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_GetSeeThroughStencil_Stencil_1) == 0x000134, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_GetSeeThroughStencil_Stencil_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_BitFlagOff_ReturnValue_1) == 0x000138, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_BitFlagOff_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00013C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_IsValid_ReturnValue_4) == 0x00013D, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000140, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000150, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, Temp_byte_Variable_1) == 0x000160, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_IsValid_ReturnValue_5) == 0x000161, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_Not_PreBool_ReturnValue) == 0x000162, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, CallFunc_BooleanAND_ReturnValue) == 0x000163, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter, K2Node_Select_Default) == 0x000164, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreDefaultParameter::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetShadowOffsetTexture
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture final
{
public:
	class UTexture2D*                             ShadowOffsetTexture;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture) == 0x000010, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture, ShadowOffsetTexture) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture::ShadowOffsetTexture' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateCables
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateCables final
{
public:
	struct FLinearColor                           SumColor;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumEmission;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6297[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateCables) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateCables");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateCables) == 0x000048, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateCables");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, SumColor) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::SumColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, SumEmission) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::SumEmission' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, Rate) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, Temp_int_Loop_Num_Variable) == 0x000024, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00002E, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002F, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCables, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateCablesOnce
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce final
{
public:
	struct FFPlayerCableMaterialParameter         CableRef;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FLinearColor                           SumColor;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumEmission;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6298[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce) == 0x000040, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce, CableRef) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce::CableRef' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce, SumColor) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce::SumColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce, SumEmission) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce::SumEmission' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce, Rate) == 0x000034, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000039, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.CreateCableParameter
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_CreateCableParameter final
{
public:
	TArray<class ABP_CableBase_C*>                CableArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFPlayerCableMaterialParameter> CableParameterArray;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TmpMesh;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Mask;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SumColor;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumEmission;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_CreateAllDynamicMaterialInstance_DMArray; // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6299[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerCableMaterialParameter         K2Node_MakeStruct_FPlayerCableMaterialParameter;   // 0x0078(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_CreateCableParameter");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter) == 0x0000A0, "Wrong size on BP_PlayerMaterialAccessorComponent_C_CreateCableParameter");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, CableArray) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::CableArray' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, CableParameterArray) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::CableParameterArray' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, TmpMesh) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::TmpMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, Mask) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::Mask' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, SumColor) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::SumColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, SumEmission) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::SumEmission' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, Rate) == 0x00004C, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, CallFunc_CreateAllDynamicMaterialInstance_DMArray) == 0x000060, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::CallFunc_CreateAllDynamicMaterialInstance_DMArray' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, K2Node_MakeStruct_FPlayerCableMaterialParameter) == 0x000078, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::K2Node_MakeStruct_FPlayerCableMaterialParameter' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CreateCableParameter, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_PlayerMaterialAccessorComponent_C_CreateCableParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupCableDefaultParameter
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter final
{
public:
	TArray<struct FFPlayerCableMaterialParameter> CableParameterArray;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       TmpMatArray;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FLinearColor                           Mask;                                              // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SumColor;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumEmission;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629A[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629B[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter) == 0x000080, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CableParameterArray) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CableParameterArray' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, TmpMatArray) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::TmpMatArray' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, Mask) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::Mask' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, SumColor) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::SumColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, SumEmission) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::SumEmission' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, Rate) == 0x000044, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, Temp_int_Loop_Num_Variable) == 0x000060, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000068, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, Temp_int_Loop_Num_Variable_1) == 0x000070, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter, CallFunc_FMax_ReturnValue) == 0x00007C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupCable
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable final
{
public:
	class AActor*                                 Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629E[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable) == 0x000060, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable, Param_Player) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable, CallFunc_GetBrainCodeActorList_CodeList) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable, CallFunc_GetSASCodeActorList_CodeList) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateInitialize
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateInitialize final
{
public:
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMACVariableVector>             K2Node_MakeArray_Array_3;                          // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_4;                          // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_5;                          // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_6;                          // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_7;                          // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_8;                          // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_9;                          // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_10;                         // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMACVariableFloat>              K2Node_MakeArray_Array_11;                         // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateInitialize");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize) == 0x0000C0, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateInitialize");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_1) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_2) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_3) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_4) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_5) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_6) == 0x000060, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_7) == 0x000070, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_8) == 0x000080, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_9) == 0x000090, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_10) == 0x0000A0, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_11) == 0x0000B0, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_11' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateUpdateMaterial
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EMaterialAccessorSetupID>              K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<EMaterialAccessorSetupID>              K2Node_MakeArray_Array_2;                          // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_3;                          // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A0[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial) == 0x000088, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, K2Node_MakeArray_Array_1) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, K2Node_MakeArray_Array_2) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, K2Node_MakeArray_Array_3) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000068, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000074, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateUpdateMaterial::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateSeeThroughPPMCancel
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel) == 0x000008, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel, Rate) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateSeeThroughPPMCancel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetOutlineEmissionNo
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo final
{
public:
	int32                                         No;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo) == 0x000088, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo, No) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo::No' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo, CallFunc_Format_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupDefaultSlots
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots final
{
public:
	bool                                          Assign;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotNo;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A2[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots) == 0x000010, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots, Assign) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots::Assign' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots, SlotNo) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots::SlotNo' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateStealth
// 0x001C (0x001C - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateStealth final
{
public:
	struct FLinearColor                           SumColor;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumEmission;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateStealth) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateStealth");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateStealth) == 0x00001C, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateStealth");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateStealth, SumColor) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateStealth::SumColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateStealth, SumEmission) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateStealth::SumEmission' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateStealth, Rate) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateStealth::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateStealth, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateStealth::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetStealthRate
// 0x0110 (0x0110 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetStealthRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetParameterValue;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetParameterName;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     StealthMaterial;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ExcludeSlots;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62A3[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A4[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62A5[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62A6[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  K2Node_DynamicCast_AsSkinned_Mesh_Component;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A7[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A8[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A9[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62AA[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SwitchMaterialExclude_LayerID;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62AB[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62AC[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62AD[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   K2Node_DynamicCast_AsBP_Menu_Player_Base;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RestoreSwitchMaterial_ReturnValue;        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62AE[0x1];                                     // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SwitchMaterialExclude_LayerID_1;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaterialStealthParam_StealthRate;      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaterialStealthParam_BaseMatVanish;    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMaterialStealthParam_IsStealthMat;     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62AF[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62B0[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B1[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetStealthRate");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate) == 0x000110, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetStealthRate");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Rate) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, TargetParameterValue) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::TargetParameterValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, TargetParameterName) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::TargetParameterName' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, StealthMaterial) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::StealthMaterial' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, ExcludeSlots) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::ExcludeSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_object_Variable) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Loop_Num_Variable) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Loop_Counter_Variable_2) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_object_Variable_1) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, K2Node_DynamicCast_AsSkinned_Mesh_Component) == 0x000068, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::K2Node_DynamicCast_AsSkinned_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Loop_Num_Variable_1) == 0x000074, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_bool_Variable) == 0x000084, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_SwitchMaterialExclude_LayerID) == 0x000090, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_SwitchMaterialExclude_LayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, K2Node_Select_Default) == 0x000098, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Loop_Num_Variable_2) == 0x0000A0, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A4, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000A8, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, K2Node_DynamicCast_AsBP_Menu_Player_Base) == 0x0000B8, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::K2Node_DynamicCast_AsBP_Menu_Player_Base' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_IsValid_ReturnValue_2) == 0x0000C1, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_RestoreSwitchMaterial_ReturnValue) == 0x0000C2, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_RestoreSwitchMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_MakeLiteralName_ReturnValue) == 0x0000C4, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_SwitchMaterialExclude_LayerID_1) == 0x0000CC, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_SwitchMaterialExclude_LayerID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0000D0, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_GetMaterialStealthParam_StealthRate) == 0x0000D8, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_GetMaterialStealthParam_StealthRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_GetMaterialStealthParam_BaseMatVanish) == 0x0000DC, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_GetMaterialStealthParam_BaseMatVanish' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_GetMaterialStealthParam_IsStealthMat) == 0x0000E0, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_GetMaterialStealthParam_IsStealthMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Array_Index_Variable_1) == 0x0000E4, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_IsValid_ReturnValue_3) == 0x0000E8, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, Temp_int_Array_Index_Variable_2) == 0x000108, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_IsValid_ReturnValue_4) == 0x00010C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetStealthRate, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00010D, "Member 'BP_PlayerMaterialAccessorComponent_C_SetStealthRate::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateCheckSwitchMaterial
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial final
{
public:
	class UMaterialInterface*                     Mateiral;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              CallFunc_GetBaseMaterial_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62B2[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial) == 0x000020, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, Mateiral) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::Mateiral' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, CallFunc_GetBaseMaterial_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::CallFunc_GetBaseMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000012, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000013, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, CallFunc_IsValid_ReturnValue_2) == 0x000015, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateCheckSwitchMaterial::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupRestoreExcludeParams
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams final
{
public:
	TArray<class FName>                           ExcludeList;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62B3[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x0038(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_3;                          // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams) == 0x000058, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams, ExcludeList) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams::ExcludeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams, K2Node_MakeArray_Array_1) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams, K2Node_MakeArray_Array_2) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams, K2Node_MakeArray_Array_3) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParams::K2Node_MakeArray_Array_3' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupRestoreExcludeParamsInternal
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal final
{
public:
	EMaterialAccessorSetupID                      ParamOverride;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ExcludeNames;                                      // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           OutParameterNames;                                 // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           ExcludeList;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal) == 0x000040, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal, ParamOverride) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal::ParamOverride' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal, ExcludeNames) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal::ExcludeNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal, OutParameterNames) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal::OutParameterNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal, ExcludeList) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal::ExcludeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.CopyMaterialParameter
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_CopyMaterialParameter final
{
public:
	class UBP_PlayerMaterialAccessorComponent_C*  SourceComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_CopyMaterialParameter) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_CopyMaterialParameter");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_CopyMaterialParameter) == 0x000008, "Wrong size on BP_PlayerMaterialAccessorComponent_C_CopyMaterialParameter");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_CopyMaterialParameter, SourceComponent) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_CopyMaterialParameter::SourceComponent' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateResetOutlineEmission
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission final
{
public:
	TArray<class FName>                           ExcludeList;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62B5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission) == 0x000038, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission, ExcludeList) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission::ExcludeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission, CallFunc_MakeColor_ReturnValue) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission, CallFunc_SelectColor_ReturnValue) == 0x000024, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateResetOutlineEmission::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateHologram1
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateHologram1 final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62B6[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateHologram1) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateHologram1");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateHologram1) == 0x000028, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateHologram1");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHologram1, Rate) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHologram1::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHologram1, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHologram1::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHologram1, CallFunc_Less_IntInt_ReturnValue) == 0x000005, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHologram1::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHologram1, CallFunc_SetupMaterialBySlotName_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHologram1::CallFunc_SetupMaterialBySlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHologram1, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHologram1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHologram1, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHologram1::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdatePlayerOptimize
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize final
{
public:
	TArray<float>                                 ParameterValues;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           ParameterNames;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize) == 0x000028, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize, ParameterValues) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize::ParameterValues' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize, ParameterNames) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize::ParameterNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimize::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdatePlayerOptimizeOnce
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce final
{
public:
	EMaterialAccessorSetupID                      Override;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMACVariableFloat                      ScalarParameter;                                   // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           ParameterNames;                                    // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 ParameterValues;                                   // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62B9[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce) == 0x000068, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, Override) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::Override' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, ScalarParameter) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::ScalarParameter' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, ParameterNames) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::ParameterNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, ParameterValues) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::ParameterValues' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, CallFunc_FMax_ReturnValue) == 0x000054, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce, CallFunc_Array_Add_ReturnValue_2) == 0x000064, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetOptimizeSwitcher
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher final
{
public:
	class UBPC_OptimizeSwitchMaterial_C*          InOptimizeSwitcher;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChildRef;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62BA[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNowSettingNo_SettingNo;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher) == 0x000018, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher, InOptimizeSwitcher) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher::InOptimizeSwitcher' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher, ChildRef) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher::ChildRef' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher, CallFunc_GetNowSettingNo_SettingNo) == 0x00000C, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher::CallFunc_GetNowSettingNo_SettingNo' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateRestoreOptimzieSwitcher
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62BB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ParameterValues;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UBP_PlayerMaterialManageComponent_C*    PlayerMaterialManage;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62BC[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62BD[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62BE[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62BF[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMaterialScalarParameter_Find;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C0[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerMaterialManageScalar            CallFunc_GetMaterialScalarParameter_Value;         // 0x0094(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C1[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher) == 0x0000C0, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Material) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Material' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, LastIndex) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::LastIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, ParameterValues) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::ParameterValues' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, PlayerMaterialManage) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::PlayerMaterialManage' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Temp_int_Variable) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000041, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Array_Length_ReturnValue_2) == 0x00004C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Temp_bool_Variable) == 0x000051, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Add_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Array_Length_ReturnValue_3) == 0x00005C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000060, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Temp_int_Loop_Num_Variable_1) == 0x00006C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_GetMaterial_ReturnValue) == 0x000070, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_GetNumMaterials_ReturnValue) == 0x00007C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x00008C, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_GetMaterialScalarParameter_Find) == 0x000090, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_GetMaterialScalarParameter_Find' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_GetMaterialScalarParameter_Value) == 0x000094, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_GetMaterialScalarParameter_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_Array_Length_ReturnValue_4) == 0x0000A4, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_SelectFloat_ReturnValue) == 0x0000A8, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000B0, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_IsValid_ReturnValue_2) == 0x0000BA, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher, CallFunc_IsValid_ReturnValue_3) == 0x0000BB, "Member 'BP_PlayerMaterialAccessorComponent_C_PrivateRestoreOptimzieSwitcher::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateHeightGradation
// 0x0098 (0x0098 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C3[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  K2Node_DynamicCast_AsSkinned_Mesh_Component;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C4[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C5[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_SearchMeshMaterialFromSlotName_ReturnValue; // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation) == 0x000098, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, Material) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::Material' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, Rate) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, K2Node_DynamicCast_AsSkinned_Mesh_Component) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::K2Node_DynamicCast_AsSkinned_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_SearchMeshMaterialFromSlotName_ReturnValue) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_SearchMeshMaterialFromSlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000058, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_BreakColor_R) == 0x000068, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_BreakColor_G) == 0x00006C, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_BreakColor_B) == 0x000070, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_BreakColor_A) == 0x000074, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_GetMaterial_ReturnValue) == 0x000078, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_MakeColor_ReturnValue) == 0x000080, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000094, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000095, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateHeightGradation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.AddRestoreExcludeParams
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_AddRestoreExcludeParams final
{
public:
	TArray<class FName>                           Params_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_AddRestoreExcludeParams) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_AddRestoreExcludeParams");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_AddRestoreExcludeParams) == 0x000010, "Wrong size on BP_PlayerMaterialAccessorComponent_C_AddRestoreExcludeParams");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_AddRestoreExcludeParams, Params_0) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_AddRestoreExcludeParams::Params_0' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateNPC
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateNPC final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C6[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANpcSkeletalMeshActor*                  K2Node_DynamicCast_AsNpc_Skeletal_Mesh_Actor;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateNPC) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateNPC");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateNPC) == 0x000020, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateNPC");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateNPC, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateNPC::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateNPC, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateNPC::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateNPC, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateNPC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateNPC, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateNPC::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateNPC, K2Node_DynamicCast_AsNpc_Skeletal_Mesh_Actor) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateNPC::K2Node_DynamicCast_AsNpc_Skeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateNPC, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateNPC::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetNPCMode
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetNPCMode final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetNPCMode) == 0x000001, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetNPCMode");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetNPCMode) == 0x000001, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetNPCMode");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetNPCMode, Enable) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetNPCMode::Enable' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateAmbientLight
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight final
{
public:
	TArray<struct FLinearColor>                   K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight) == 0x000028, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight, K2Node_MakeArray_Array_1) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateAmbientLight::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PreEndPlay
// 0x000C (0x000C - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_PreEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetNowSettingNo_SettingNo;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_PreEndPlay) == 0x000004, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_PreEndPlay");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_PreEndPlay) == 0x00000C, "Wrong size on BP_PlayerMaterialAccessorComponent_C_PreEndPlay");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PreEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_PreEndPlay::EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PreEndPlay, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PlayerMaterialAccessorComponent_C_PreEndPlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PreEndPlay, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_PlayerMaterialAccessorComponent_C_PreEndPlay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PreEndPlay, CallFunc_Less_IntInt_ReturnValue) == 0x000003, "Member 'BP_PlayerMaterialAccessorComponent_C_PreEndPlay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PreEndPlay, CallFunc_GetNowSettingNo_SettingNo) == 0x000004, "Member 'BP_PlayerMaterialAccessorComponent_C_PreEndPlay::CallFunc_GetNowSettingNo_SettingNo' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_PreEndPlay, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_PreEndPlay::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetFirstUpdateOnly
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly final
{
public:
	bool                                          FirstOnly;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaySimulate_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly) == 0x000001, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly) == 0x000002, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly, FirstOnly) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly::FirstOnly' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly, CallFunc_IsPlaySimulate_ReturnValue) == 0x000001, "Member 'BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly::CallFunc_IsPlaySimulate_ReturnValue' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupRestoreType
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_SetupRestoreType final
{
public:
	bool                                          InRestoreOverrideParameter;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InForceRestoreSASParameter;                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InRestoreMaterialReset;                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InRestoreMaterialAllSkip;                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_SetupRestoreType) == 0x000001, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_SetupRestoreType");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_SetupRestoreType) == 0x000004, "Wrong size on BP_PlayerMaterialAccessorComponent_C_SetupRestoreType");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupRestoreType, InRestoreOverrideParameter) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupRestoreType::InRestoreOverrideParameter' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupRestoreType, InForceRestoreSASParameter) == 0x000001, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupRestoreType::InForceRestoreSASParameter' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupRestoreType, InRestoreMaterialReset) == 0x000002, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupRestoreType::InRestoreMaterialReset' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_SetupRestoreType, InRestoreMaterialAllSkip) == 0x000003, "Member 'BP_PlayerMaterialAccessorComponent_C_SetupRestoreType::InRestoreMaterialAllSkip' has a wrong offset!");

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateCopy
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerMaterialAccessorComponent_C_UpdateCopy final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C7[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventCopyPlayer_C*                  K2Node_DynamicCast_AsBP_Event_Copy_Player;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   K2Node_DynamicCast_AsBP_Menu_Player_Base;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62C9[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62CA[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy) == 0x000008, "Wrong alignment on BP_PlayerMaterialAccessorComponent_C_UpdateCopy");
static_assert(sizeof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy) == 0x000050, "Wrong size on BP_PlayerMaterialAccessorComponent_C_UpdateCopy");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, OwnerActor) == 0x000000, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::OwnerActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000009, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, K2Node_DynamicCast_AsBP_Event_Copy_Player) == 0x000010, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::K2Node_DynamicCast_AsBP_Event_Copy_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, K2Node_DynamicCast_AsBP_Menu_Player_Base) == 0x000020, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::K2Node_DynamicCast_AsBP_Menu_Player_Base' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, K2Node_DynamicCast_AsRSBattle_Player) == 0x000030, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000048, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMaterialAccessorComponent_C_UpdateCopy, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000049, "Member 'BP_PlayerMaterialAccessorComponent_C_UpdateCopy::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

