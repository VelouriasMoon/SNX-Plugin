#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventPlayerHologram

#include "Basic.hpp"

#include "FHologramRestoreMeshesAndMaterials_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.ExecuteUbergraph_BP_EventPlayerHologram
// 0x0098 (0x0098 - 0x0000)
struct BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetEventMesh_Player;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_GetEventMesh_MenuPlayer;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetEventMesh_SkeletalMeshComp;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetEventMesh_PrimitiveComp;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Initialize_initialized;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4706[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventCopyPlayer_C*                  K2Node_DynamicCast_AsBP_Event_Copy_Player;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4707[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetEventAttachedMesh_Player;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_GetEventAttachedMesh_MenuPlayer;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetEventAttachedMesh_SkeletalMeshComp;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetEventAttachedMesh_PrimitiveComp;       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_initialized_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4708[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetEventMesh_Player_1;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_GetEventMesh_MenuPlayer_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetEventMesh_SkeletalMeshComp_1;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetEventMesh_PrimitiveComp_1;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_initialized_2;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram) == 0x000008, "Wrong alignment on BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram");
static_assert(sizeof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram) == 0x000098, "Wrong size on BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, EntryPoint) == 0x000000, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetAttachParentActor_ReturnValue) == 0x000008, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventMesh_Player) == 0x000010, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventMesh_Player' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventMesh_MenuPlayer) == 0x000018, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventMesh_MenuPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventMesh_SkeletalMeshComp) == 0x000020, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventMesh_SkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventMesh_PrimitiveComp) == 0x000028, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventMesh_PrimitiveComp' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_Initialize_initialized) == 0x000031, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_Initialize_initialized' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, K2Node_DynamicCast_AsBP_Event_Copy_Player) == 0x000038, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::K2Node_DynamicCast_AsBP_Event_Copy_Player' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventAttachedMesh_Player) == 0x000048, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventAttachedMesh_Player' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventAttachedMesh_MenuPlayer) == 0x000050, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventAttachedMesh_MenuPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventAttachedMesh_SkeletalMeshComp) == 0x000058, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventAttachedMesh_SkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventAttachedMesh_PrimitiveComp) == 0x000060, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventAttachedMesh_PrimitiveComp' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_Initialize_initialized_1) == 0x000068, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_Initialize_initialized_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventMesh_Player_1) == 0x000070, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventMesh_Player_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventMesh_MenuPlayer_1) == 0x000078, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventMesh_MenuPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventMesh_SkeletalMeshComp_1) == 0x000080, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventMesh_SkeletalMeshComp_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_GetEventMesh_PrimitiveComp_1) == 0x000088, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_GetEventMesh_PrimitiveComp_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_Initialize_initialized_2) == 0x000090, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_Initialize_initialized_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, K2Node_Event_EndPlayReason) == 0x000091, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_IsValid_ReturnValue_1) == 0x000092, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_IsValid_ReturnValue_2) == 0x000093, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram, CallFunc_IsValid_ReturnValue_3) == 0x000094, "Member 'BP_EventPlayerHologram_C_ExecuteUbergraph_BP_EventPlayerHologram::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_EventPlayerHologram_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventPlayerHologram_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_EventPlayerHologram_C_ReceiveEndPlay");
static_assert(sizeof(BP_EventPlayerHologram_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_EventPlayerHologram_C_ReceiveEndPlay");
static_assert(offsetof(BP_EventPlayerHologram_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_EventPlayerHologram_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EventPlayerHologram_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventPlayerHologram_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EventPlayerHologram_C_ReceiveTick");
static_assert(sizeof(BP_EventPlayerHologram_C_ReceiveTick) == 0x000004, "Wrong size on BP_EventPlayerHologram_C_ReceiveTick");
static_assert(offsetof(BP_EventPlayerHologram_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EventPlayerHologram_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.Initialize
// 0x0180 (0x0180 - 0x0000)
struct BP_EventPlayerHologram_C_Initialize final
{
public:
	class ARSBattlePlayer_C*                      BattlePlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   MenuPlayer;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCopyPlayer_C*                  CopyPlayer;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkelMeshWapon;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Initialized;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4709[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastIndex;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             _TempRestoreMaterials;                             // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          IsWeapon;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         MeshComp;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetInitialize;                                     // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470C[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470D[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470E[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470F[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFHologramRestoreMeshesAndMaterials    K2Node_MakeStruct_FHologramRestoreMeshesAndMaterials; // 0x00A0(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4710[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetMeshes_MeshComps;                      // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4711[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetMeshes_MeshComps_1;                    // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4712[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetMeshes_MeshComps_2;                    // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4713[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0130(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4714[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4715[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4716[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventPlayerHologram_C_Initialize) == 0x000008, "Wrong alignment on BP_EventPlayerHologram_C_Initialize");
static_assert(sizeof(BP_EventPlayerHologram_C_Initialize) == 0x000180, "Wrong size on BP_EventPlayerHologram_C_Initialize");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, BattlePlayer) == 0x000000, "Member 'BP_EventPlayerHologram_C_Initialize::BattlePlayer' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, MenuPlayer) == 0x000008, "Member 'BP_EventPlayerHologram_C_Initialize::MenuPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CopyPlayer) == 0x000010, "Member 'BP_EventPlayerHologram_C_Initialize::CopyPlayer' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, SkelMeshComp) == 0x000018, "Member 'BP_EventPlayerHologram_C_Initialize::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, SkelMeshWapon) == 0x000020, "Member 'BP_EventPlayerHologram_C_Initialize::SkelMeshWapon' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Initialized) == 0x000021, "Member 'BP_EventPlayerHologram_C_Initialize::Initialized' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, LastIndex) == 0x000024, "Member 'BP_EventPlayerHologram_C_Initialize::LastIndex' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, _TempRestoreMaterials) == 0x000028, "Member 'BP_EventPlayerHologram_C_Initialize::_TempRestoreMaterials' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, IsWeapon) == 0x000038, "Member 'BP_EventPlayerHologram_C_Initialize::IsWeapon' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, MeshComp) == 0x000040, "Member 'BP_EventPlayerHologram_C_Initialize::MeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, RetInitialize) == 0x000048, "Member 'BP_EventPlayerHologram_C_Initialize::RetInitialize' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Num_Variable_1) == 0x000060, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Num_Variable_2) == 0x00006C, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Counter_Variable_2) == 0x000078, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Counter_Variable_3) == 0x00007C, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Add_IntInt_ReturnValue_3) == 0x000084, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Array_Index_Variable_2) == 0x000088, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Num_Variable_3) == 0x00008C, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Less_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Num_Variable_4) == 0x000094, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Less_IntInt_ReturnValue_3) == 0x000098, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, K2Node_MakeStruct_FHologramRestoreMeshesAndMaterials) == 0x0000A0, "Member 'BP_EventPlayerHologram_C_Initialize::K2Node_MakeStruct_FHologramRestoreMeshesAndMaterials' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_GetNumMaterials_ReturnValue) == 0x0000B8, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Array_Index_Variable_3) == 0x0000BC, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Array_Index_Variable_4) == 0x0000C4, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_GetMeshes_MeshComps) == 0x0000D0, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_GetMeshes_MeshComps' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x0000E4, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_GetMeshes_MeshComps_1) == 0x0000E8, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_GetMeshes_MeshComps_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Add_ReturnValue_1) == 0x0000FC, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_IsValid_ReturnValue_1) == 0x000100, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Add_ReturnValue_2) == 0x000104, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_GetMeshes_MeshComps_2) == 0x000108, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_GetMeshes_MeshComps_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Length_ReturnValue_2) == 0x000118, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Loop_Counter_Variable_4) == 0x00011C, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Less_IntInt_ReturnValue_4) == 0x000120, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Add_IntInt_ReturnValue_4) == 0x000124, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Add_ReturnValue_3) == 0x000128, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Add_ReturnValue_4) == 0x00012C, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_GetOptionalMeshes_Meshes) == 0x000130, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Length_ReturnValue_3) == 0x000140, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_GetWeaponMeshes_Meshes) == 0x000148, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Length_ReturnValue_4) == 0x000158, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_IsValid_ReturnValue_2) == 0x00015C, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, Temp_int_Variable) == 0x000160, "Member 'BP_EventPlayerHologram_C_Initialize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_GetMaterial_ReturnValue) == 0x000168, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Array_Add_ReturnValue_5) == 0x000170, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_Add_IntInt_ReturnValue_5) == 0x000174, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_IsValid_ReturnValue_3) == 0x000178, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_Initialize, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000179, "Member 'BP_EventPlayerHologram_C_Initialize::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.UpdateMaterials
// 0x00E4 (0x00E4 - 0x0000)
struct BP_EventPlayerHologram_C_UpdateMaterials final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartMaxTime;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LoopMaxTime;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ColorValue;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurveValue;                                        // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4717[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4718[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4719[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471A[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471B[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_2;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471C[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471D[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime_2;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_2;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471E[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventPlayerHologram_C_UpdateMaterials) == 0x000004, "Wrong alignment on BP_EventPlayerHologram_C_UpdateMaterials");
static_assert(sizeof(BP_EventPlayerHologram_C_UpdateMaterials) == 0x0000E4, "Wrong size on BP_EventPlayerHologram_C_UpdateMaterials");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, DeltaSeconds) == 0x000000, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, StartTime) == 0x000004, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::StartTime' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, StartMaxTime) == 0x000008, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::StartMaxTime' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, LoopMaxTime) == 0x00000C, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::LoopMaxTime' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, ColorValue) == 0x000010, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::ColorValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CurveValue) == 0x000014, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CurveValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, Temp_float_Variable) == 0x000020, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, Temp_bool_Variable) == 0x000031, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetVectorValue_ReturnValue) == 0x000058, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, K2Node_Select_Default) == 0x000064, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_BreakVector_X_1) == 0x000068, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_BreakVector_Y_1) == 0x00006C, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_BreakVector_Z_1) == 0x000070, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, Temp_bool_Variable_1) == 0x000078, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetTimeRange_MinTime) == 0x00007C, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetTimeRange_MaxTime) == 0x000080, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_FMax_ReturnValue) == 0x000088, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetVectorValue_ReturnValue_1) == 0x00008C, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetVectorValue_ReturnValue_2) == 0x0000A0, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetVectorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000AC, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B0, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetTimeRange_MinTime_1) == 0x0000B4, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetTimeRange_MaxTime_1) == 0x0000B8, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, Temp_float_Variable_1) == 0x0000C0, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000C4, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_IsValid_ReturnValue_2) == 0x0000C8, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetTimeRange_MinTime_2) == 0x0000CC, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetTimeRange_MinTime_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_GetTimeRange_MaxTime_2) == 0x0000D0, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_GetTimeRange_MaxTime_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_IsValid_ReturnValue_3) == 0x0000D4, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000D8, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, K2Node_Select_Default_1) == 0x0000DC, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterials, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_EventPlayerHologram_C_UpdateMaterials::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.UpdateMaterialSAS
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EventPlayerHologram_C_UpdateMaterialSAS final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array_2;                          // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array_3;                          // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array_4;                          // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array_5;                          // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetMaterialParameterHologramDefaultLineColor_Color; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_2;                  // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventPlayerHologram_C_UpdateMaterialSAS) == 0x000008, "Wrong alignment on BP_EventPlayerHologram_C_UpdateMaterialSAS");
static_assert(sizeof(BP_EventPlayerHologram_C_UpdateMaterialSAS) == 0x0000C0, "Wrong size on BP_EventPlayerHologram_C_UpdateMaterialSAS");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, DeltaSeconds) == 0x000000, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, K2Node_MakeArray_Array_1) == 0x000018, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, K2Node_MakeArray_Array_2) == 0x000028, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, K2Node_MakeArray_Array_3) == 0x000038, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, K2Node_MakeArray_Array_4) == 0x000048, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, K2Node_MakeArray_Array_5) == 0x000058, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_GetMaterialParameterHologramDefaultLineColor_Color) == 0x000068, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_GetMaterialParameterHologramDefaultLineColor_Color' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_BreakColor_R) == 0x000078, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_BreakColor_G) == 0x00007C, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_BreakColor_B) == 0x000080, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_BreakColor_A) == 0x000084, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_MakeColor_ReturnValue) == 0x000088, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_MakeColor_ReturnValue_1) == 0x000098, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_MakeColor_ReturnValue_2) == 0x0000A8, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_MakeColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000B9, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_BooleanOR_ReturnValue) == 0x0000BA, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_BooleanOR_ReturnValue_1) == 0x0000BB, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0000BC, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_UpdateMaterialSAS, CallFunc_BooleanOR_ReturnValue_2) == 0x0000BD, "Member 'BP_EventPlayerHologram_C_UpdateMaterialSAS::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.EndPlayRestore
// 0x0078 (0x0078 - 0x0000)
struct BP_EventPlayerHologram_C_EndPlayRestore final
{
public:
	int32                                         LastIndex;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4720[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         TargetMesh;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4721[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4722[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4723[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4724[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventPlayerHologram_C_EndPlayRestore) == 0x000008, "Wrong alignment on BP_EventPlayerHologram_C_EndPlayRestore");
static_assert(sizeof(BP_EventPlayerHologram_C_EndPlayRestore) == 0x000078, "Wrong size on BP_EventPlayerHologram_C_EndPlayRestore");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, LastIndex) == 0x000000, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::LastIndex' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, TargetMesh) == 0x000008, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Loop_Num_Variable_1) == 0x000020, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Less_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Loop_Counter_Variable_2) == 0x000034, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Loop_Num_Variable_2) == 0x000040, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Less_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_IsValid_ReturnValue) == 0x000045, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Loop_Counter_Variable_3) == 0x00004C, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Add_IntInt_ReturnValue_3) == 0x000050, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Loop_Num_Variable_3) == 0x000054, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Less_IntInt_ReturnValue_3) == 0x00005C, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Array_Length_ReturnValue_2) == 0x000064, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, Temp_int_Array_Index_Variable_3) == 0x000068, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_Array_Length_ReturnValue_3) == 0x00006C, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_EndPlayRestore, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'BP_EventPlayerHologram_C_EndPlayRestore::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.InitializeOptimizer
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EventPlayerHologram_C_InitializeOptimizer final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4725[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkeletalMeshActor*                     SkelMeshActor;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Player;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4726[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   K2Node_DynamicCast_AsBP_Menu_Player_Base;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4727[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   K2Node_DynamicCast_AsBP_Menu_Player_Base_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4728[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   K2Node_DynamicCast_AsBP_Menu_Player_Base_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4729[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472A[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472B[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472C[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_1;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472D[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor_2;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472E[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472F[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_OptimizeSwitchMaterial_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4730[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4731[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_2;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_2;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventPlayerHologram_C_InitializeOptimizer) == 0x000008, "Wrong alignment on BP_EventPlayerHologram_C_InitializeOptimizer");
static_assert(sizeof(BP_EventPlayerHologram_C_InitializeOptimizer) == 0x0000F0, "Wrong size on BP_EventPlayerHologram_C_InitializeOptimizer");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, SkelMeshComp) == 0x000000, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, LastIndex) == 0x000008, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::LastIndex' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, SkelMeshActor) == 0x000010, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::SkelMeshActor' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, Player) == 0x000018, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::Player' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsBP_Menu_Player_Base) == 0x000028, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsBP_Menu_Player_Base' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsBP_Menu_Player_Base_1) == 0x000038, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsBP_Menu_Player_Base_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_GetAttachParentActor_ReturnValue) == 0x000048, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsBP_Menu_Player_Base_2) == 0x000050, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsBP_Menu_Player_Base_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_GetNumMaterials_ReturnValue) == 0x00005C, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsSkeletal_Mesh_Actor) == 0x000068, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsSkeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsSkeletal_Mesh_Actor_1) == 0x000078, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsSkeletal_Mesh_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess_4) == 0x000080, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_GetAttachParentActor_ReturnValue_1) == 0x000088, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_GetAttachParentActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, Temp_int_Variable) == 0x000090, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsSkeletal_Mesh_Actor_2) == 0x000098, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsSkeletal_Mesh_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess_5) == 0x0000A0, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_GetComponentByClass_ReturnValue) == 0x0000B0, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000B8, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess_6) == 0x0000C0, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x0000C8, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess_7) == 0x0000D0, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, CallFunc_GetAttachParentActor_ReturnValue_2) == 0x0000D8, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::CallFunc_GetAttachParentActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_AsRSBattle_Player_2) == 0x0000E0, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_AsRSBattle_Player_2' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_InitializeOptimizer, K2Node_DynamicCast_bSuccess_8) == 0x0000E8, "Member 'BP_EventPlayerHologram_C_InitializeOptimizer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.AddRestoreCustomDepth
// 0x0010 (0x0010 - 0x0000)
struct BP_EventPlayerHologram_C_AddRestoreCustomDepth final
{
public:
	class UMeshComponent*                         SkelMeshComp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventPlayerHologram_C_AddRestoreCustomDepth) == 0x000008, "Wrong alignment on BP_EventPlayerHologram_C_AddRestoreCustomDepth");
static_assert(sizeof(BP_EventPlayerHologram_C_AddRestoreCustomDepth) == 0x000010, "Wrong size on BP_EventPlayerHologram_C_AddRestoreCustomDepth");
static_assert(offsetof(BP_EventPlayerHologram_C_AddRestoreCustomDepth, SkelMeshComp) == 0x000000, "Member 'BP_EventPlayerHologram_C_AddRestoreCustomDepth::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_AddRestoreCustomDepth, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_EventPlayerHologram_C_AddRestoreCustomDepth::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_AddRestoreCustomDepth, CallFunc_Array_Add_ReturnValue_1) == 0x00000C, "Member 'BP_EventPlayerHologram_C_AddRestoreCustomDepth::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.SetOuterStartRateOffset
// 0x0004 (0x0004 - 0x0000)
struct BP_EventPlayerHologram_C_SetOuterStartRateOffset final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventPlayerHologram_C_SetOuterStartRateOffset) == 0x000004, "Wrong alignment on BP_EventPlayerHologram_C_SetOuterStartRateOffset");
static_assert(sizeof(BP_EventPlayerHologram_C_SetOuterStartRateOffset) == 0x000004, "Wrong size on BP_EventPlayerHologram_C_SetOuterStartRateOffset");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterStartRateOffset, Rate) == 0x000000, "Member 'BP_EventPlayerHologram_C_SetOuterStartRateOffset::Rate' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.SetOuterIsHologram
// 0x0028 (0x0028 - 0x0000)
struct BP_EventPlayerHologram_C_SetOuterIsHologram final
{
public:
	bool                                          IsHologram;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsWeapon;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4732[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         TargetMesh;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventPlayerHologram_C_SetOuterIsHologram) == 0x000008, "Wrong alignment on BP_EventPlayerHologram_C_SetOuterIsHologram");
static_assert(sizeof(BP_EventPlayerHologram_C_SetOuterIsHologram) == 0x000028, "Wrong size on BP_EventPlayerHologram_C_SetOuterIsHologram");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, IsHologram) == 0x000000, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::IsHologram' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, IsWeapon) == 0x000001, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::IsWeapon' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, TargetMesh) == 0x000008, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterIsHologram, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BP_EventPlayerHologram_C_SetOuterIsHologram::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventPlayerHologram.BP_EventPlayerHologram_C.SetOuterNoiseScaleOffset
// 0x0004 (0x0004 - 0x0000)
struct BP_EventPlayerHologram_C_SetOuterNoiseScaleOffset final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventPlayerHologram_C_SetOuterNoiseScaleOffset) == 0x000004, "Wrong alignment on BP_EventPlayerHologram_C_SetOuterNoiseScaleOffset");
static_assert(sizeof(BP_EventPlayerHologram_C_SetOuterNoiseScaleOffset) == 0x000004, "Wrong size on BP_EventPlayerHologram_C_SetOuterNoiseScaleOffset");
static_assert(offsetof(BP_EventPlayerHologram_C_SetOuterNoiseScaleOffset, Rate) == 0x000000, "Member 'BP_EventPlayerHologram_C_SetOuterNoiseScaleOffset::Rate' has a wrong offset!");

}

