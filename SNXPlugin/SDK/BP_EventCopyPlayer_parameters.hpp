#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventCopyPlayer

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_EventCopyPlayer.BP_EventCopyPlayer_C.ExecuteUbergraph_BP_EventCopyPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer) == 0x000004, "Wrong alignment on BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer");
static_assert(sizeof(BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer) == 0x000008, "Wrong size on BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer");
static_assert(offsetof(BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer, EntryPoint) == 0x000000, "Member 'BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_EventCopyPlayer_C_ExecuteUbergraph_BP_EventCopyPlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_EventCopyPlayer.BP_EventCopyPlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EventCopyPlayer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventCopyPlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EventCopyPlayer_C_ReceiveTick");
static_assert(sizeof(BP_EventCopyPlayer_C_ReceiveTick) == 0x000004, "Wrong size on BP_EventCopyPlayer_C_ReceiveTick");
static_assert(offsetof(BP_EventCopyPlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EventCopyPlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EventCopyPlayer.BP_EventCopyPlayer_C.UserConstructionScript
// 0x0006 (0x0006 - 0x0000)
struct BP_EventCopyPlayer_C_UserConstructionScript final
{
public:
	EPlayerID                                     CallFunc_GetPlayerID_PlayerID;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerID_PlayerID_1;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventCopyPlayer_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_EventCopyPlayer_C_UserConstructionScript");
static_assert(sizeof(BP_EventCopyPlayer_C_UserConstructionScript) == 0x000006, "Wrong size on BP_EventCopyPlayer_C_UserConstructionScript");
static_assert(offsetof(BP_EventCopyPlayer_C_UserConstructionScript, CallFunc_GetPlayerID_PlayerID) == 0x000000, "Member 'BP_EventCopyPlayer_C_UserConstructionScript::CallFunc_GetPlayerID_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_UserConstructionScript, CallFunc_GetPlayerID_PlayerID_1) == 0x000001, "Member 'BP_EventCopyPlayer_C_UserConstructionScript::CallFunc_GetPlayerID_PlayerID_1' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_EventCopyPlayer_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BP_EventCopyPlayer_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'BP_EventCopyPlayer_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000005, "Member 'BP_EventCopyPlayer_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");

// Function BP_EventCopyPlayer.BP_EventCopyPlayer_C.Initialize
// 0x0002 (0x0002 - 0x0000)
struct BP_EventCopyPlayer_C_Initialize final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventCopyPlayer_C_Initialize) == 0x000001, "Wrong alignment on BP_EventCopyPlayer_C_Initialize");
static_assert(sizeof(BP_EventCopyPlayer_C_Initialize) == 0x000002, "Wrong size on BP_EventCopyPlayer_C_Initialize");
static_assert(offsetof(BP_EventCopyPlayer_C_Initialize, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'BP_EventCopyPlayer_C_Initialize::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EventCopyPlayer_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventCopyPlayer.BP_EventCopyPlayer_C.UpdateMaterial
// 0x0028 (0x0028 - 0x0000)
struct BP_EventCopyPlayer_C_UpdateMaterial final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventCopyPlayer_C_UpdateMaterial) == 0x000008, "Wrong alignment on BP_EventCopyPlayer_C_UpdateMaterial");
static_assert(sizeof(BP_EventCopyPlayer_C_UpdateMaterial) == 0x000028, "Wrong size on BP_EventCopyPlayer_C_UpdateMaterial");
static_assert(offsetof(BP_EventCopyPlayer_C_UpdateMaterial, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_EventCopyPlayer_C_UpdateMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_UpdateMaterial, K2Node_MakeArray_Array_1) == 0x000010, "Member 'BP_EventCopyPlayer_C_UpdateMaterial::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EventCopyPlayer_C_UpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EventCopyPlayer_C_UpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

