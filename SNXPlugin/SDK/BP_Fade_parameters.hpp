#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Fade

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_Fade.BP_Fade_C.ExecuteUbergraph_BP_Fade
// 0x0040 (0x0040 - 0x0000)
struct BP_Fade_C_ExecuteUbergraph_BP_Fade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E33[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E34[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E35[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E36[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Fade_C_ExecuteUbergraph_BP_Fade) == 0x000008, "Wrong alignment on BP_Fade_C_ExecuteUbergraph_BP_Fade");
static_assert(sizeof(BP_Fade_C_ExecuteUbergraph_BP_Fade) == 0x000040, "Wrong size on BP_Fade_C_ExecuteUbergraph_BP_Fade");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, EntryPoint) == 0x000000, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, CallFunc_LoadSoftClass_ReturnValue) == 0x000008, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::CallFunc_LoadSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, Temp_bool_Variable) == 0x000010, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, K2Node_ClassDynamicCast_AsUser_Widget) == 0x000018, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, Temp_byte_Variable) == 0x000021, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, CallFunc_Create_ReturnValue) == 0x000028, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, Temp_byte_Variable_1) == 0x000030, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, K2Node_Select_Default) == 0x000031, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000034, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_ExecuteUbergraph_BP_Fade, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_Fade_C_ExecuteUbergraph_BP_Fade::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Fade.BP_Fade_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Fade_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Fade_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Fade_C_ReceiveTick");
static_assert(sizeof(BP_Fade_C_ReceiveTick) == 0x000004, "Wrong size on BP_Fade_C_ReceiveTick");
static_assert(offsetof(BP_Fade_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Fade_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Fade.BP_Fade_C.IsActive
// 0x0001 (0x0001 - 0x0000)
struct BP_Fade_C_IsActive final
{
public:
	bool                                          Param_Active;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Fade_C_IsActive) == 0x000001, "Wrong alignment on BP_Fade_C_IsActive");
static_assert(sizeof(BP_Fade_C_IsActive) == 0x000001, "Wrong size on BP_Fade_C_IsActive");
static_assert(offsetof(BP_Fade_C_IsActive, Param_Active) == 0x000000, "Member 'BP_Fade_C_IsActive::Param_Active' has a wrong offset!");

// Function BP_Fade.BP_Fade_C.Start
// 0x0014 (0x0014 - 0x0000)
struct BP_Fade_C_Start final
{
public:
	struct FLinearColor                           FadeColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_FadeTime;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Fade_C_Start) == 0x000004, "Wrong alignment on BP_Fade_C_Start");
static_assert(sizeof(BP_Fade_C_Start) == 0x000014, "Wrong size on BP_Fade_C_Start");
static_assert(offsetof(BP_Fade_C_Start, FadeColor) == 0x000000, "Member 'BP_Fade_C_Start::FadeColor' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_Start, Param_FadeTime) == 0x000010, "Member 'BP_Fade_C_Start::Param_FadeTime' has a wrong offset!");

// Function BP_Fade.BP_Fade_C.Close
// 0x0014 (0x0014 - 0x0000)
struct BP_Fade_C_Close final
{
public:
	struct FLinearColor                           FadeColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_FadeTime;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Fade_C_Close) == 0x000004, "Wrong alignment on BP_Fade_C_Close");
static_assert(sizeof(BP_Fade_C_Close) == 0x000014, "Wrong size on BP_Fade_C_Close");
static_assert(offsetof(BP_Fade_C_Close, FadeColor) == 0x000000, "Member 'BP_Fade_C_Close::FadeColor' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_Close, Param_FadeTime) == 0x000010, "Member 'BP_Fade_C_Close::Param_FadeTime' has a wrong offset!");

// Function BP_Fade.BP_Fade_C.UpdateFadeTime
// 0x0024 (0x0024 - 0x0000)
struct BP_Fade_C_UpdateFadeTime final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E37[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E38[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Fade_C_UpdateFadeTime) == 0x000004, "Wrong alignment on BP_Fade_C_UpdateFadeTime");
static_assert(sizeof(BP_Fade_C_UpdateFadeTime) == 0x000024, "Wrong size on BP_Fade_C_UpdateFadeTime");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, DeltaSeconds) == 0x000000, "Member 'BP_Fade_C_UpdateFadeTime::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Fade_C_UpdateFadeTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_Fade_C_UpdateFadeTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Fade.BP_Fade_C.IsAnimation
// 0x0001 (0x0001 - 0x0000)
struct BP_Fade_C_IsAnimation final
{
public:
	bool                                          Param_Active;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Fade_C_IsAnimation) == 0x000001, "Wrong alignment on BP_Fade_C_IsAnimation");
static_assert(sizeof(BP_Fade_C_IsAnimation) == 0x000001, "Wrong size on BP_Fade_C_IsAnimation");
static_assert(offsetof(BP_Fade_C_IsAnimation, Param_Active) == 0x000000, "Member 'BP_Fade_C_IsAnimation::Param_Active' has a wrong offset!");

}

