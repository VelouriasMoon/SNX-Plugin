#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_BrainTalk_DataBase

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_BrainTalk_DataBase_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetRowItem(class UDataTable* BrainTalkDataTable, int32 Param_Index, class UObject* __WorldContext, bool* IsSuccess, struct FBrainTalkData* RowItem);
	static void StartBrainTalk(class FName BrainTalkID, EBrainTalkCategory Category, bool IsEventCallEnable, bool IsGameOverCheck, class UObject* __WorldContext);
	static void EndBrainTalk(class UObject* __WorldContext);
	static void SetBrainTalk(int32 Param_Index, class UObject* __WorldContext, bool* IsSuccess);
	static void InitializeBrainTalk(const struct FBrainTalkMasterData& BrainTalkData, const struct FBrainTalk_CategoryDatatable& CategoryDatatable, class UObject* __WorldContext);
	static void PauseBrainTalk(bool IsPause, class UObject* __WorldContext);
	static void StopBrainTalk(bool IsOpenHold, bool IsLowerPriorityOnly, class UObject* __WorldContext);
	static void PauseBrainTalkAtStartTalkEventBefore(class UObject* __WorldContext);
	static void PauseBrainTalkAtEndTalkEventAfter(class UObject* __WorldContext);
	static void StartBrainTalk_Tag(const struct FBrainTalkBt_PlayInfo& PlayInfo, bool IsEventCallEnable, bool IsGameOverCheck, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_BrainTalk_DataBase_C">();
	}
	static class UBPFL_BrainTalk_DataBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_BrainTalk_DataBase_C>();
	}
};
static_assert(alignof(UBPFL_BrainTalk_DataBase_C) == 0x000008, "Wrong alignment on UBPFL_BrainTalk_DataBase_C");
static_assert(sizeof(UBPFL_BrainTalk_DataBase_C) == 0x000028, "Wrong size on UBPFL_BrainTalk_DataBase_C");

}

